;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert11.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1527 (vec 0))
  (let (%1528 (vec 1))
  (let (%1529 2.0)
  (let (%1530 (load-from-onnx-float32 768 768 "%1530"))
  (let (%1531 (load-from-onnx-float32 768 768 "%1531"))
  (let (%1532 (load-from-onnx-float32 768 768 "%1532"))
  (let (%1533 (vec 12))
  (let (%1534 (vec 64))
  (let (%1535 (vec 12))
  (let (%1536 (vec 64))
  (let (%1537 (vec 12))
  (let (%1538 (vec 64))
  (let (%1539 (vec 768))
  (let (%1540 (load-from-onnx-float32 768 768 "%1540"))
  (let (%1541 2.0)
  (let (%1542 (load-from-onnx-float32 768 3072 "%1542"))
  (let (%1543 (load-from-onnx-float32 3072 768 "%1543"))
  (let (%1544 2.0)
  (let (%1545 (load-from-onnx-float32 768 768 "%1545"))
  (let (%1546 (load-from-onnx-float32 768 768 "%1546"))
  (let (%1547 (load-from-onnx-float32 768 768 "%1547"))
  (let (%1548 (vec 12))
  (let (%1549 (vec 64))
  (let (%1550 (vec 12))
  (let (%1551 (vec 64))
  (let (%1552 (vec 12))
  (let (%1553 (vec 64))
  (let (%1554 (vec 768))
  (let (%1555 (load-from-onnx-float32 768 768 "%1555"))
  (let (%1556 2.0)
  (let (%1557 (load-from-onnx-float32 768 3072 "%1557"))
  (let (%1558 (load-from-onnx-float32 3072 768 "%1558"))
  (let (%1559 2.0)
  (let (%1560 (load-from-onnx-float32 768 768 "%1560"))
  (let (%1561 (load-from-onnx-float32 768 768 "%1561"))
  (let (%1562 (load-from-onnx-float32 768 768 "%1562"))
  (let (%1563 (vec 12))
  (let (%1564 (vec 64))
  (let (%1565 (vec 12))
  (let (%1566 (vec 64))
  (let (%1567 (vec 12))
  (let (%1568 (vec 64))
  (let (%1569 (vec 768))
  (let (%1570 (load-from-onnx-float32 768 768 "%1570"))
  (let (%1571 2.0)
  (let (%1572 (load-from-onnx-float32 768 3072 "%1572"))
  (let (%1573 (load-from-onnx-float32 3072 768 "%1573"))
  (let (%1574 2.0)
  (let (%1575 (load-from-onnx-float32 768 768 "%1575"))
  (let (%1576 (load-from-onnx-float32 768 768 "%1576"))
  (let (%1577 (load-from-onnx-float32 768 768 "%1577"))
  (let (%1578 (vec 12))
  (let (%1579 (vec 64))
  (let (%1580 (vec 12))
  (let (%1581 (vec 64))
  (let (%1582 (vec 12))
  (let (%1583 (vec 64))
  (let (%1584 (vec 768))
  (let (%1585 (load-from-onnx-float32 768 768 "%1585"))
  (let (%1586 2.0)
  (let (%1587 (load-from-onnx-float32 768 3072 "%1587"))
  (let (%1588 (load-from-onnx-float32 3072 768 "%1588"))
  (let (%1589 2.0)
  (let (%1590 (load-from-onnx-float32 768 768 "%1590"))
  (let (%1591 (load-from-onnx-float32 768 768 "%1591"))
  (let (%1592 (load-from-onnx-float32 768 768 "%1592"))
  (let (%1593 (vec 12))
  (let (%1594 (vec 64))
  (let (%1595 (vec 12))
  (let (%1596 (vec 64))
  (let (%1597 (vec 12))
  (let (%1598 (vec 64))
  (let (%1599 (vec 768))
  (let (%1600 (load-from-onnx-float32 768 768 "%1600"))
  (let (%1601 2.0)
  (let (%1602 (load-from-onnx-float32 768 3072 "%1602"))
  (let (%1603 (load-from-onnx-float32 3072 768 "%1603"))
  (let (%1604 2.0)
  (let (%1605 (load-from-onnx-float32 768 768 "%1605"))
  (let (%1606 (load-from-onnx-float32 768 768 "%1606"))
  (let (%1607 (load-from-onnx-float32 768 768 "%1607"))
  (let (%1608 (vec 12))
  (let (%1609 (vec 64))
  (let (%1610 (vec 12))
  (let (%1611 (vec 64))
  (let (%1612 (vec 12))
  (let (%1613 (vec 64))
  (let (%1614 (vec 768))
  (let (%1615 (load-from-onnx-float32 768 768 "%1615"))
  (let (%1616 2.0)
  (let (%1617 (load-from-onnx-float32 768 3072 "%1617"))
  (let (%1618 (load-from-onnx-float32 3072 768 "%1618"))
  (let (%1619 2.0)
  (let (%1620 (load-from-onnx-float32 768 768 "%1620"))
  (let (%1621 (load-from-onnx-float32 768 768 "%1621"))
  (let (%1622 (load-from-onnx-float32 768 768 "%1622"))
  (let (%1623 (vec 12))
  (let (%1624 (vec 64))
  (let (%1625 (vec 12))
  (let (%1626 (vec 64))
  (let (%1627 (vec 12))
  (let (%1628 (vec 64))
  (let (%1629 (vec 768))
  (let (%1630 (load-from-onnx-float32 768 768 "%1630"))
  (let (%1631 2.0)
  (let (%1632 (load-from-onnx-float32 768 3072 "%1632"))
  (let (%1633 (load-from-onnx-float32 3072 768 "%1633"))
  (let (%1634 2.0)
  (let (%1635 (load-from-onnx-float32 768 768 "%1635"))
  (let (%1636 (load-from-onnx-float32 768 768 "%1636"))
  (let (%1637 (load-from-onnx-float32 768 768 "%1637"))
  (let (%1638 (vec 12))
  (let (%1639 (vec 64))
  (let (%1640 (vec 12))
  (let (%1641 (vec 64))
  (let (%1642 (vec 12))
  (let (%1643 (vec 64))
  (let (%1644 (vec 768))
  (let (%1645 (load-from-onnx-float32 768 768 "%1645"))
  (let (%1646 2.0)
  (let (%1647 (load-from-onnx-float32 768 3072 "%1647"))
  (let (%1648 (load-from-onnx-float32 3072 768 "%1648"))
  (let (%1649 2.0)
  (let (%1650 (load-from-onnx-float32 768 768 "%1650"))
  (let (%1651 (load-from-onnx-float32 768 768 "%1651"))
  (let (%1652 (load-from-onnx-float32 768 768 "%1652"))
  (let (%1653 (vec 12))
  (let (%1654 (vec 64))
  (let (%1655 (vec 12))
  (let (%1656 (vec 64))
  (let (%1657 (vec 12))
  (let (%1658 (vec 64))
  (let (%1659 (vec 768))
  (let (%1660 (load-from-onnx-float32 768 768 "%1660"))
  (let (%1661 2.0)
  (let (%1662 (load-from-onnx-float32 768 3072 "%1662"))
  (let (%1663 (load-from-onnx-float32 3072 768 "%1663"))
  (let (%1664 2.0)
  (let (%1665 (load-from-onnx-float32 768 768 "%1665"))
  (let (%1666 (load-from-onnx-float32 768 768 "%1666"))
  (let (%1667 (load-from-onnx-float32 768 768 "%1667"))
  (let (%1668 (vec 12))
  (let (%1669 (vec 64))
  (let (%1670 (vec 12))
  (let (%1671 (vec 64))
  (let (%1672 (vec 12))
  (let (%1673 (vec 64))
  (let (%1674 (vec 768))
  (let (%1675 (load-from-onnx-float32 768 768 "%1675"))
  (let (%1676 2.0)
  (let (%1677 (load-from-onnx-float32 768 3072 "%1677"))
  (let (%1678 (load-from-onnx-float32 3072 768 "%1678"))
  (let (%1679 2.0)
  (let (%1680 (load-from-onnx-float32 768 768 "%1680"))
  (let (%1681 (load-from-onnx-float32 768 768 "%1681"))
  (let (%1682 (load-from-onnx-float32 768 768 "%1682"))
  (let (%1683 (vec 12))
  (let (%1684 (vec 64))
  (let (%1685 (vec 12))
  (let (%1686 (vec 64))
  (let (%1687 (vec 12))
  (let (%1688 (vec 64))
  (let (%1689 (vec 768))
  (let (%1690 (load-from-onnx-float32 768 768 "%1690"))
  (let (%1691 2.0)
  (let (%1692 (load-from-onnx-float32 768 3072 "%1692"))
  (let (%1693 (load-from-onnx-float32 3072 768 "%1693"))
  (let (%1694 2.0)
  (let (%1695 (load-from-onnx-float32 768 2 "%1695"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%187 (Unsqueeze attention_mask (vec 1)))
  (let (%188 (Unsqueeze %187 (vec 2)))
  (let (%189 (Cast_FLOAT %188))
  (let (%190 (Constant 1.0))
  (let (%191 (Sub %190 %189))
  (let (%192 (Constant -10000.0))
  (let (%193 (Mul %191 %192))
  (let (%194 (Shape input_ids))
  (let (%195 (Constant 1))
  (let (%196 (Gather %194 %195 0))
  (let (%200 (Unsqueeze %196 (vec 0)))
  (let (%202 (Constant (vec 1)))
  (let (%203 (Slice bert.embeddings.position_ids %1527 %200 %1528 %202))
  (let (%204 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%205 (Gather bert.embeddings.position_embeddings.weight %203 0))
  (let (%206 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%207 (Add %204 %205))
  (let (%208 (Add %207 %206))
  (let (%210 (ReduceMean %208 (vec -1) 1))
  (let (%211 (Sub %208 %210))
  (let (%212 (Cast_FLOAT %211))
  (let (%214 (Pow %212 %1529))
  (let (%215 (ReduceMean %214 (vec -1) 1))
  (let (%216 (Constant 9.999999960041972e-13))
  (let (%217 (Add %215 %216))
  (let (%218 (Sqrt %217))
  (let (%219 (Div %211 %218))
  (let (%220 (Mul %219 bert.embeddings.LayerNorm.weight))
  (let (%221 (Add %220 bert.embeddings.LayerNorm.bias))
  (let (%223 (MatMul %221 %1530))
  (let (%224 (Add %223 bert.encoder.layer.0.attention.self.query.bias))
  (let (%226 (MatMul %221 %1531))
  (let (%227 (Add %226 bert.encoder.layer.0.attention.self.key.bias))
  (let (%229 (MatMul %221 %1532))
  (let (%230 (Add %229 bert.encoder.layer.0.attention.self.value.bias))
  (let (%231 (Shape %224))
  (let (%232 (Constant 0))
  (let (%233 (Gather %231 %232 0))
  (let (%234 (Shape %224))
  (let (%235 (Constant 1))
  (let (%236 (Gather %234 %235 0))
  (let (%239 (Unsqueeze %233 (vec 0)))
  (let (%240 (Unsqueeze %236 (vec 0)))
  (let (%243 (Concat %239 %240 %1533 %1534 0))
  (let (%244 (Reshape %224 %243))
  (let (%245 (Transpose %244 (vec 0 2 1 3)))
  (let (%246 (Shape %227))
  (let (%247 (Constant 0))
  (let (%248 (Gather %246 %247 0))
  (let (%249 (Shape %227))
  (let (%250 (Constant 1))
  (let (%251 (Gather %249 %250 0))
  (let (%254 (Unsqueeze %248 (vec 0)))
  (let (%255 (Unsqueeze %251 (vec 0)))
  (let (%258 (Concat %254 %255 %1535 %1536 0))
  (let (%259 (Reshape %227 %258))
  (let (%260 (Shape %230))
  (let (%261 (Constant 0))
  (let (%262 (Gather %260 %261 0))
  (let (%263 (Shape %230))
  (let (%264 (Constant 1))
  (let (%265 (Gather %263 %264 0))
  (let (%268 (Unsqueeze %262 (vec 0)))
  (let (%269 (Unsqueeze %265 (vec 0)))
  (let (%272 (Concat %268 %269 %1537 %1538 0))
  (let (%273 (Reshape %230 %272))
  (let (%274 (Transpose %273 (vec 0 2 1 3)))
  (let (%275 (Transpose %259 (vec 0 2 3 1)))
  (let (%276 (MatMul %245 %275))
  (let (%277 (Constant 8.0))
  (let (%278 (Div %276 %277))
  (let (%279 (Add %278 %193))
  (let (%280 (Softmax %279 3))
  (let (%281 (MatMul %280 %274))
  (let (%282 (Transpose %281 (vec 0 2 1 3)))
  (let (%283 (Shape %282))
  (let (%284 (Constant 0))
  (let (%285 (Gather %283 %284 0))
  (let (%286 (Shape %282))
  (let (%287 (Constant 1))
  (let (%288 (Gather %286 %287 0))
  (let (%290 (Unsqueeze %285 (vec 0)))
  (let (%291 (Unsqueeze %288 (vec 0)))
  (let (%293 (Concat %290 %291 %1539 0))
  (let (%294 (Reshape %282 %293))
  (let (%296 (MatMul %294 %1540))
  (let (%297 (Add %296 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%298 (Add %297 %221))
  (let (%300 (ReduceMean %298 (vec -1) 1))
  (let (%301 (Sub %298 %300))
  (let (%302 (Cast_FLOAT %301))
  (let (%304 (Pow %302 %1541))
  (let (%305 (ReduceMean %304 (vec -1) 1))
  (let (%306 (Constant 9.999999960041972e-13))
  (let (%307 (Add %305 %306))
  (let (%308 (Sqrt %307))
  (let (%309 (Div %301 %308))
  (let (%310 (Mul %309 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%311 (Add %310 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%313 (MatMul %311 %1542))
  (let (%314 (Add %313 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%315 (Constant 1.4142135381698608))
  (let (%316 (Div %314 %315))
  (let (%317 (Erf %316))
  (let (%318 (Constant 1.0))
  (let (%319 (Add %317 %318))
  (let (%320 (Mul %314 %319))
  (let (%321 (Constant 0.5))
  (let (%322 (Mul %320 %321))
  (let (%324 (MatMul %322 %1543))
  (let (%325 (Add %324 bert.encoder.layer.0.output.dense.bias))
  (let (%326 (Add %325 %311))
  (let (%328 (ReduceMean %326 (vec -1) 1))
  (let (%329 (Sub %326 %328))
  (let (%330 (Cast_FLOAT %329))
  (let (%332 (Pow %330 %1544))
  (let (%333 (ReduceMean %332 (vec -1) 1))
  (let (%334 (Constant 9.999999960041972e-13))
  (let (%335 (Add %333 %334))
  (let (%336 (Sqrt %335))
  (let (%337 (Div %329 %336))
  (let (%338 (Mul %337 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%339 (Add %338 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%341 (MatMul %339 %1545))
  (let (%342 (Add %341 bert.encoder.layer.1.attention.self.query.bias))
  (let (%344 (MatMul %339 %1546))
  (let (%345 (Add %344 bert.encoder.layer.1.attention.self.key.bias))
  (let (%347 (MatMul %339 %1547))
  (let (%348 (Add %347 bert.encoder.layer.1.attention.self.value.bias))
  (let (%349 (Shape %342))
  (let (%350 (Constant 0))
  (let (%351 (Gather %349 %350 0))
  (let (%352 (Shape %342))
  (let (%353 (Constant 1))
  (let (%354 (Gather %352 %353 0))
  (let (%357 (Unsqueeze %351 (vec 0)))
  (let (%358 (Unsqueeze %354 (vec 0)))
  (let (%361 (Concat %357 %358 %1548 %1549 0))
  (let (%362 (Reshape %342 %361))
  (let (%363 (Transpose %362 (vec 0 2 1 3)))
  (let (%364 (Shape %345))
  (let (%365 (Constant 0))
  (let (%366 (Gather %364 %365 0))
  (let (%367 (Shape %345))
  (let (%368 (Constant 1))
  (let (%369 (Gather %367 %368 0))
  (let (%372 (Unsqueeze %366 (vec 0)))
  (let (%373 (Unsqueeze %369 (vec 0)))
  (let (%376 (Concat %372 %373 %1550 %1551 0))
  (let (%377 (Reshape %345 %376))
  (let (%378 (Shape %348))
  (let (%379 (Constant 0))
  (let (%380 (Gather %378 %379 0))
  (let (%381 (Shape %348))
  (let (%382 (Constant 1))
  (let (%383 (Gather %381 %382 0))
  (let (%386 (Unsqueeze %380 (vec 0)))
  (let (%387 (Unsqueeze %383 (vec 0)))
  (let (%390 (Concat %386 %387 %1552 %1553 0))
  (let (%391 (Reshape %348 %390))
  (let (%392 (Transpose %391 (vec 0 2 1 3)))
  (let (%393 (Transpose %377 (vec 0 2 3 1)))
  (let (%394 (MatMul %363 %393))
  (let (%395 (Constant 8.0))
  (let (%396 (Div %394 %395))
  (let (%397 (Add %396 %193))
  (let (%398 (Softmax %397 3))
  (let (%399 (MatMul %398 %392))
  (let (%400 (Transpose %399 (vec 0 2 1 3)))
  (let (%401 (Shape %400))
  (let (%402 (Constant 0))
  (let (%403 (Gather %401 %402 0))
  (let (%404 (Shape %400))
  (let (%405 (Constant 1))
  (let (%406 (Gather %404 %405 0))
  (let (%408 (Unsqueeze %403 (vec 0)))
  (let (%409 (Unsqueeze %406 (vec 0)))
  (let (%411 (Concat %408 %409 %1554 0))
  (let (%412 (Reshape %400 %411))
  (let (%414 (MatMul %412 %1555))
  (let (%415 (Add %414 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%416 (Add %415 %339))
  (let (%418 (ReduceMean %416 (vec -1) 1))
  (let (%419 (Sub %416 %418))
  (let (%420 (Cast_FLOAT %419))
  (let (%422 (Pow %420 %1556))
  (let (%423 (ReduceMean %422 (vec -1) 1))
  (let (%424 (Constant 9.999999960041972e-13))
  (let (%425 (Add %423 %424))
  (let (%426 (Sqrt %425))
  (let (%427 (Div %419 %426))
  (let (%428 (Mul %427 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%429 (Add %428 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%431 (MatMul %429 %1557))
  (let (%432 (Add %431 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%433 (Constant 1.4142135381698608))
  (let (%434 (Div %432 %433))
  (let (%435 (Erf %434))
  (let (%436 (Constant 1.0))
  (let (%437 (Add %435 %436))
  (let (%438 (Mul %432 %437))
  (let (%439 (Constant 0.5))
  (let (%440 (Mul %438 %439))
  (let (%442 (MatMul %440 %1558))
  (let (%443 (Add %442 bert.encoder.layer.1.output.dense.bias))
  (let (%444 (Add %443 %429))
  (let (%446 (ReduceMean %444 (vec -1) 1))
  (let (%447 (Sub %444 %446))
  (let (%448 (Cast_FLOAT %447))
  (let (%450 (Pow %448 %1559))
  (let (%451 (ReduceMean %450 (vec -1) 1))
  (let (%452 (Constant 9.999999960041972e-13))
  (let (%453 (Add %451 %452))
  (let (%454 (Sqrt %453))
  (let (%455 (Div %447 %454))
  (let (%456 (Mul %455 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%457 (Add %456 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%459 (MatMul %457 %1560))
  (let (%460 (Add %459 bert.encoder.layer.2.attention.self.query.bias))
  (let (%462 (MatMul %457 %1561))
  (let (%463 (Add %462 bert.encoder.layer.2.attention.self.key.bias))
  (let (%465 (MatMul %457 %1562))
  (let (%466 (Add %465 bert.encoder.layer.2.attention.self.value.bias))
  (let (%467 (Shape %460))
  (let (%468 (Constant 0))
  (let (%469 (Gather %467 %468 0))
  (let (%470 (Shape %460))
  (let (%471 (Constant 1))
  (let (%472 (Gather %470 %471 0))
  (let (%475 (Unsqueeze %469 (vec 0)))
  (let (%476 (Unsqueeze %472 (vec 0)))
  (let (%479 (Concat %475 %476 %1563 %1564 0))
  (let (%480 (Reshape %460 %479))
  (let (%481 (Transpose %480 (vec 0 2 1 3)))
  (let (%482 (Shape %463))
  (let (%483 (Constant 0))
  (let (%484 (Gather %482 %483 0))
  (let (%485 (Shape %463))
  (let (%486 (Constant 1))
  (let (%487 (Gather %485 %486 0))
  (let (%490 (Unsqueeze %484 (vec 0)))
  (let (%491 (Unsqueeze %487 (vec 0)))
  (let (%494 (Concat %490 %491 %1565 %1566 0))
  (let (%495 (Reshape %463 %494))
  (let (%496 (Shape %466))
  (let (%497 (Constant 0))
  (let (%498 (Gather %496 %497 0))
  (let (%499 (Shape %466))
  (let (%500 (Constant 1))
  (let (%501 (Gather %499 %500 0))
  (let (%504 (Unsqueeze %498 (vec 0)))
  (let (%505 (Unsqueeze %501 (vec 0)))
  (let (%508 (Concat %504 %505 %1567 %1568 0))
  (let (%509 (Reshape %466 %508))
  (let (%510 (Transpose %509 (vec 0 2 1 3)))
  (let (%511 (Transpose %495 (vec 0 2 3 1)))
  (let (%512 (MatMul %481 %511))
  (let (%513 (Constant 8.0))
  (let (%514 (Div %512 %513))
  (let (%515 (Add %514 %193))
  (let (%516 (Softmax %515 3))
  (let (%517 (MatMul %516 %510))
  (let (%518 (Transpose %517 (vec 0 2 1 3)))
  (let (%519 (Shape %518))
  (let (%520 (Constant 0))
  (let (%521 (Gather %519 %520 0))
  (let (%522 (Shape %518))
  (let (%523 (Constant 1))
  (let (%524 (Gather %522 %523 0))
  (let (%526 (Unsqueeze %521 (vec 0)))
  (let (%527 (Unsqueeze %524 (vec 0)))
  (let (%529 (Concat %526 %527 %1569 0))
  (let (%530 (Reshape %518 %529))
  (let (%532 (MatMul %530 %1570))
  (let (%533 (Add %532 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%534 (Add %533 %457))
  (let (%536 (ReduceMean %534 (vec -1) 1))
  (let (%537 (Sub %534 %536))
  (let (%538 (Cast_FLOAT %537))
  (let (%540 (Pow %538 %1571))
  (let (%541 (ReduceMean %540 (vec -1) 1))
  (let (%542 (Constant 9.999999960041972e-13))
  (let (%543 (Add %541 %542))
  (let (%544 (Sqrt %543))
  (let (%545 (Div %537 %544))
  (let (%546 (Mul %545 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%547 (Add %546 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%549 (MatMul %547 %1572))
  (let (%550 (Add %549 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%551 (Constant 1.4142135381698608))
  (let (%552 (Div %550 %551))
  (let (%553 (Erf %552))
  (let (%554 (Constant 1.0))
  (let (%555 (Add %553 %554))
  (let (%556 (Mul %550 %555))
  (let (%557 (Constant 0.5))
  (let (%558 (Mul %556 %557))
  (let (%560 (MatMul %558 %1573))
  (let (%561 (Add %560 bert.encoder.layer.2.output.dense.bias))
  (let (%562 (Add %561 %547))
  (let (%564 (ReduceMean %562 (vec -1) 1))
  (let (%565 (Sub %562 %564))
  (let (%566 (Cast_FLOAT %565))
  (let (%568 (Pow %566 %1574))
  (let (%569 (ReduceMean %568 (vec -1) 1))
  (let (%570 (Constant 9.999999960041972e-13))
  (let (%571 (Add %569 %570))
  (let (%572 (Sqrt %571))
  (let (%573 (Div %565 %572))
  (let (%574 (Mul %573 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%575 (Add %574 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%577 (MatMul %575 %1575))
  (let (%578 (Add %577 bert.encoder.layer.3.attention.self.query.bias))
  (let (%580 (MatMul %575 %1576))
  (let (%581 (Add %580 bert.encoder.layer.3.attention.self.key.bias))
  (let (%583 (MatMul %575 %1577))
  (let (%584 (Add %583 bert.encoder.layer.3.attention.self.value.bias))
  (let (%585 (Shape %578))
  (let (%586 (Constant 0))
  (let (%587 (Gather %585 %586 0))
  (let (%588 (Shape %578))
  (let (%589 (Constant 1))
  (let (%590 (Gather %588 %589 0))
  (let (%593 (Unsqueeze %587 (vec 0)))
  (let (%594 (Unsqueeze %590 (vec 0)))
  (let (%597 (Concat %593 %594 %1578 %1579 0))
  (let (%598 (Reshape %578 %597))
  (let (%599 (Transpose %598 (vec 0 2 1 3)))
  (let (%600 (Shape %581))
  (let (%601 (Constant 0))
  (let (%602 (Gather %600 %601 0))
  (let (%603 (Shape %581))
  (let (%604 (Constant 1))
  (let (%605 (Gather %603 %604 0))
  (let (%608 (Unsqueeze %602 (vec 0)))
  (let (%609 (Unsqueeze %605 (vec 0)))
  (let (%612 (Concat %608 %609 %1580 %1581 0))
  (let (%613 (Reshape %581 %612))
  (let (%614 (Shape %584))
  (let (%615 (Constant 0))
  (let (%616 (Gather %614 %615 0))
  (let (%617 (Shape %584))
  (let (%618 (Constant 1))
  (let (%619 (Gather %617 %618 0))
  (let (%622 (Unsqueeze %616 (vec 0)))
  (let (%623 (Unsqueeze %619 (vec 0)))
  (let (%626 (Concat %622 %623 %1582 %1583 0))
  (let (%627 (Reshape %584 %626))
  (let (%628 (Transpose %627 (vec 0 2 1 3)))
  (let (%629 (Transpose %613 (vec 0 2 3 1)))
  (let (%630 (MatMul %599 %629))
  (let (%631 (Constant 8.0))
  (let (%632 (Div %630 %631))
  (let (%633 (Add %632 %193))
  (let (%634 (Softmax %633 3))
  (let (%635 (MatMul %634 %628))
  (let (%636 (Transpose %635 (vec 0 2 1 3)))
  (let (%637 (Shape %636))
  (let (%638 (Constant 0))
  (let (%639 (Gather %637 %638 0))
  (let (%640 (Shape %636))
  (let (%641 (Constant 1))
  (let (%642 (Gather %640 %641 0))
  (let (%644 (Unsqueeze %639 (vec 0)))
  (let (%645 (Unsqueeze %642 (vec 0)))
  (let (%647 (Concat %644 %645 %1584 0))
  (let (%648 (Reshape %636 %647))
  (let (%650 (MatMul %648 %1585))
  (let (%651 (Add %650 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%652 (Add %651 %575))
  (let (%654 (ReduceMean %652 (vec -1) 1))
  (let (%655 (Sub %652 %654))
  (let (%656 (Cast_FLOAT %655))
  (let (%658 (Pow %656 %1586))
  (let (%659 (ReduceMean %658 (vec -1) 1))
  (let (%660 (Constant 9.999999960041972e-13))
  (let (%661 (Add %659 %660))
  (let (%662 (Sqrt %661))
  (let (%663 (Div %655 %662))
  (let (%664 (Mul %663 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%665 (Add %664 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%667 (MatMul %665 %1587))
  (let (%668 (Add %667 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%669 (Constant 1.4142135381698608))
  (let (%670 (Div %668 %669))
  (let (%671 (Erf %670))
  (let (%672 (Constant 1.0))
  (let (%673 (Add %671 %672))
  (let (%674 (Mul %668 %673))
  (let (%675 (Constant 0.5))
  (let (%676 (Mul %674 %675))
  (let (%678 (MatMul %676 %1588))
  (let (%679 (Add %678 bert.encoder.layer.3.output.dense.bias))
  (let (%680 (Add %679 %665))
  (let (%682 (ReduceMean %680 (vec -1) 1))
  (let (%683 (Sub %680 %682))
  (let (%684 (Cast_FLOAT %683))
  (let (%686 (Pow %684 %1589))
  (let (%687 (ReduceMean %686 (vec -1) 1))
  (let (%688 (Constant 9.999999960041972e-13))
  (let (%689 (Add %687 %688))
  (let (%690 (Sqrt %689))
  (let (%691 (Div %683 %690))
  (let (%692 (Mul %691 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%693 (Add %692 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%695 (MatMul %693 %1590))
  (let (%696 (Add %695 bert.encoder.layer.4.attention.self.query.bias))
  (let (%698 (MatMul %693 %1591))
  (let (%699 (Add %698 bert.encoder.layer.4.attention.self.key.bias))
  (let (%701 (MatMul %693 %1592))
  (let (%702 (Add %701 bert.encoder.layer.4.attention.self.value.bias))
  (let (%703 (Shape %696))
  (let (%704 (Constant 0))
  (let (%705 (Gather %703 %704 0))
  (let (%706 (Shape %696))
  (let (%707 (Constant 1))
  (let (%708 (Gather %706 %707 0))
  (let (%711 (Unsqueeze %705 (vec 0)))
  (let (%712 (Unsqueeze %708 (vec 0)))
  (let (%715 (Concat %711 %712 %1593 %1594 0))
  (let (%716 (Reshape %696 %715))
  (let (%717 (Transpose %716 (vec 0 2 1 3)))
  (let (%718 (Shape %699))
  (let (%719 (Constant 0))
  (let (%720 (Gather %718 %719 0))
  (let (%721 (Shape %699))
  (let (%722 (Constant 1))
  (let (%723 (Gather %721 %722 0))
  (let (%726 (Unsqueeze %720 (vec 0)))
  (let (%727 (Unsqueeze %723 (vec 0)))
  (let (%730 (Concat %726 %727 %1595 %1596 0))
  (let (%731 (Reshape %699 %730))
  (let (%732 (Shape %702))
  (let (%733 (Constant 0))
  (let (%734 (Gather %732 %733 0))
  (let (%735 (Shape %702))
  (let (%736 (Constant 1))
  (let (%737 (Gather %735 %736 0))
  (let (%740 (Unsqueeze %734 (vec 0)))
  (let (%741 (Unsqueeze %737 (vec 0)))
  (let (%744 (Concat %740 %741 %1597 %1598 0))
  (let (%745 (Reshape %702 %744))
  (let (%746 (Transpose %745 (vec 0 2 1 3)))
  (let (%747 (Transpose %731 (vec 0 2 3 1)))
  (let (%748 (MatMul %717 %747))
  (let (%749 (Constant 8.0))
  (let (%750 (Div %748 %749))
  (let (%751 (Add %750 %193))
  (let (%752 (Softmax %751 3))
  (let (%753 (MatMul %752 %746))
  (let (%754 (Transpose %753 (vec 0 2 1 3)))
  (let (%755 (Shape %754))
  (let (%756 (Constant 0))
  (let (%757 (Gather %755 %756 0))
  (let (%758 (Shape %754))
  (let (%759 (Constant 1))
  (let (%760 (Gather %758 %759 0))
  (let (%762 (Unsqueeze %757 (vec 0)))
  (let (%763 (Unsqueeze %760 (vec 0)))
  (let (%765 (Concat %762 %763 %1599 0))
  (let (%766 (Reshape %754 %765))
  (let (%768 (MatMul %766 %1600))
  (let (%769 (Add %768 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%770 (Add %769 %693))
  (let (%772 (ReduceMean %770 (vec -1) 1))
  (let (%773 (Sub %770 %772))
  (let (%774 (Cast_FLOAT %773))
  (let (%776 (Pow %774 %1601))
  (let (%777 (ReduceMean %776 (vec -1) 1))
  (let (%778 (Constant 9.999999960041972e-13))
  (let (%779 (Add %777 %778))
  (let (%780 (Sqrt %779))
  (let (%781 (Div %773 %780))
  (let (%782 (Mul %781 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%783 (Add %782 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%785 (MatMul %783 %1602))
  (let (%786 (Add %785 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%787 (Constant 1.4142135381698608))
  (let (%788 (Div %786 %787))
  (let (%789 (Erf %788))
  (let (%790 (Constant 1.0))
  (let (%791 (Add %789 %790))
  (let (%792 (Mul %786 %791))
  (let (%793 (Constant 0.5))
  (let (%794 (Mul %792 %793))
  (let (%796 (MatMul %794 %1603))
  (let (%797 (Add %796 bert.encoder.layer.4.output.dense.bias))
  (let (%798 (Add %797 %783))
  (let (%800 (ReduceMean %798 (vec -1) 1))
  (let (%801 (Sub %798 %800))
  (let (%802 (Cast_FLOAT %801))
  (let (%804 (Pow %802 %1604))
  (let (%805 (ReduceMean %804 (vec -1) 1))
  (let (%806 (Constant 9.999999960041972e-13))
  (let (%807 (Add %805 %806))
  (let (%808 (Sqrt %807))
  (let (%809 (Div %801 %808))
  (let (%810 (Mul %809 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%811 (Add %810 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%813 (MatMul %811 %1605))
  (let (%814 (Add %813 bert.encoder.layer.5.attention.self.query.bias))
  (let (%816 (MatMul %811 %1606))
  (let (%817 (Add %816 bert.encoder.layer.5.attention.self.key.bias))
  (let (%819 (MatMul %811 %1607))
  (let (%820 (Add %819 bert.encoder.layer.5.attention.self.value.bias))
  (let (%821 (Shape %814))
  (let (%822 (Constant 0))
  (let (%823 (Gather %821 %822 0))
  (let (%824 (Shape %814))
  (let (%825 (Constant 1))
  (let (%826 (Gather %824 %825 0))
  (let (%829 (Unsqueeze %823 (vec 0)))
  (let (%830 (Unsqueeze %826 (vec 0)))
  (let (%833 (Concat %829 %830 %1608 %1609 0))
  (let (%834 (Reshape %814 %833))
  (let (%835 (Transpose %834 (vec 0 2 1 3)))
  (let (%836 (Shape %817))
  (let (%837 (Constant 0))
  (let (%838 (Gather %836 %837 0))
  (let (%839 (Shape %817))
  (let (%840 (Constant 1))
  (let (%841 (Gather %839 %840 0))
  (let (%844 (Unsqueeze %838 (vec 0)))
  (let (%845 (Unsqueeze %841 (vec 0)))
  (let (%848 (Concat %844 %845 %1610 %1611 0))
  (let (%849 (Reshape %817 %848))
  (let (%850 (Shape %820))
  (let (%851 (Constant 0))
  (let (%852 (Gather %850 %851 0))
  (let (%853 (Shape %820))
  (let (%854 (Constant 1))
  (let (%855 (Gather %853 %854 0))
  (let (%858 (Unsqueeze %852 (vec 0)))
  (let (%859 (Unsqueeze %855 (vec 0)))
  (let (%862 (Concat %858 %859 %1612 %1613 0))
  (let (%863 (Reshape %820 %862))
  (let (%864 (Transpose %863 (vec 0 2 1 3)))
  (let (%865 (Transpose %849 (vec 0 2 3 1)))
  (let (%866 (MatMul %835 %865))
  (let (%867 (Constant 8.0))
  (let (%868 (Div %866 %867))
  (let (%869 (Add %868 %193))
  (let (%870 (Softmax %869 3))
  (let (%871 (MatMul %870 %864))
  (let (%872 (Transpose %871 (vec 0 2 1 3)))
  (let (%873 (Shape %872))
  (let (%874 (Constant 0))
  (let (%875 (Gather %873 %874 0))
  (let (%876 (Shape %872))
  (let (%877 (Constant 1))
  (let (%878 (Gather %876 %877 0))
  (let (%880 (Unsqueeze %875 (vec 0)))
  (let (%881 (Unsqueeze %878 (vec 0)))
  (let (%883 (Concat %880 %881 %1614 0))
  (let (%884 (Reshape %872 %883))
  (let (%886 (MatMul %884 %1615))
  (let (%887 (Add %886 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%888 (Add %887 %811))
  (let (%890 (ReduceMean %888 (vec -1) 1))
  (let (%891 (Sub %888 %890))
  (let (%892 (Cast_FLOAT %891))
  (let (%894 (Pow %892 %1616))
  (let (%895 (ReduceMean %894 (vec -1) 1))
  (let (%896 (Constant 9.999999960041972e-13))
  (let (%897 (Add %895 %896))
  (let (%898 (Sqrt %897))
  (let (%899 (Div %891 %898))
  (let (%900 (Mul %899 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%901 (Add %900 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%903 (MatMul %901 %1617))
  (let (%904 (Add %903 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%905 (Constant 1.4142135381698608))
  (let (%906 (Div %904 %905))
  (let (%907 (Erf %906))
  (let (%908 (Constant 1.0))
  (let (%909 (Add %907 %908))
  (let (%910 (Mul %904 %909))
  (let (%911 (Constant 0.5))
  (let (%912 (Mul %910 %911))
  (let (%914 (MatMul %912 %1618))
  (let (%915 (Add %914 bert.encoder.layer.5.output.dense.bias))
  (let (%916 (Add %915 %901))
  (let (%918 (ReduceMean %916 (vec -1) 1))
  (let (%919 (Sub %916 %918))
  (let (%920 (Cast_FLOAT %919))
  (let (%922 (Pow %920 %1619))
  (let (%923 (ReduceMean %922 (vec -1) 1))
  (let (%924 (Constant 9.999999960041972e-13))
  (let (%925 (Add %923 %924))
  (let (%926 (Sqrt %925))
  (let (%927 (Div %919 %926))
  (let (%928 (Mul %927 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%929 (Add %928 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%931 (MatMul %929 %1620))
  (let (%932 (Add %931 bert.encoder.layer.6.attention.self.query.bias))
  (let (%934 (MatMul %929 %1621))
  (let (%935 (Add %934 bert.encoder.layer.6.attention.self.key.bias))
  (let (%937 (MatMul %929 %1622))
  (let (%938 (Add %937 bert.encoder.layer.6.attention.self.value.bias))
  (let (%939 (Shape %932))
  (let (%940 (Constant 0))
  (let (%941 (Gather %939 %940 0))
  (let (%942 (Shape %932))
  (let (%943 (Constant 1))
  (let (%944 (Gather %942 %943 0))
  (let (%947 (Unsqueeze %941 (vec 0)))
  (let (%948 (Unsqueeze %944 (vec 0)))
  (let (%951 (Concat %947 %948 %1623 %1624 0))
  (let (%952 (Reshape %932 %951))
  (let (%953 (Transpose %952 (vec 0 2 1 3)))
  (let (%954 (Shape %935))
  (let (%955 (Constant 0))
  (let (%956 (Gather %954 %955 0))
  (let (%957 (Shape %935))
  (let (%958 (Constant 1))
  (let (%959 (Gather %957 %958 0))
  (let (%962 (Unsqueeze %956 (vec 0)))
  (let (%963 (Unsqueeze %959 (vec 0)))
  (let (%966 (Concat %962 %963 %1625 %1626 0))
  (let (%967 (Reshape %935 %966))
  (let (%968 (Shape %938))
  (let (%969 (Constant 0))
  (let (%970 (Gather %968 %969 0))
  (let (%971 (Shape %938))
  (let (%972 (Constant 1))
  (let (%973 (Gather %971 %972 0))
  (let (%976 (Unsqueeze %970 (vec 0)))
  (let (%977 (Unsqueeze %973 (vec 0)))
  (let (%980 (Concat %976 %977 %1627 %1628 0))
  (let (%981 (Reshape %938 %980))
  (let (%982 (Transpose %981 (vec 0 2 1 3)))
  (let (%983 (Transpose %967 (vec 0 2 3 1)))
  (let (%984 (MatMul %953 %983))
  (let (%985 (Constant 8.0))
  (let (%986 (Div %984 %985))
  (let (%987 (Add %986 %193))
  (let (%988 (Softmax %987 3))
  (let (%989 (MatMul %988 %982))
  (let (%990 (Transpose %989 (vec 0 2 1 3)))
  (let (%991 (Shape %990))
  (let (%992 (Constant 0))
  (let (%993 (Gather %991 %992 0))
  (let (%994 (Shape %990))
  (let (%995 (Constant 1))
  (let (%996 (Gather %994 %995 0))
  (let (%998 (Unsqueeze %993 (vec 0)))
  (let (%999 (Unsqueeze %996 (vec 0)))
  (let (%1001 (Concat %998 %999 %1629 0))
  (let (%1002 (Reshape %990 %1001))
  (let (%1004 (MatMul %1002 %1630))
  (let (%1005 (Add %1004 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1006 (Add %1005 %929))
  (let (%1008 (ReduceMean %1006 (vec -1) 1))
  (let (%1009 (Sub %1006 %1008))
  (let (%1010 (Cast_FLOAT %1009))
  (let (%1012 (Pow %1010 %1631))
  (let (%1013 (ReduceMean %1012 (vec -1) 1))
  (let (%1014 (Constant 9.999999960041972e-13))
  (let (%1015 (Add %1013 %1014))
  (let (%1016 (Sqrt %1015))
  (let (%1017 (Div %1009 %1016))
  (let (%1018 (Mul %1017 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1019 (Add %1018 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1021 (MatMul %1019 %1632))
  (let (%1022 (Add %1021 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1023 (Constant 1.4142135381698608))
  (let (%1024 (Div %1022 %1023))
  (let (%1025 (Erf %1024))
  (let (%1026 (Constant 1.0))
  (let (%1027 (Add %1025 %1026))
  (let (%1028 (Mul %1022 %1027))
  (let (%1029 (Constant 0.5))
  (let (%1030 (Mul %1028 %1029))
  (let (%1032 (MatMul %1030 %1633))
  (let (%1033 (Add %1032 bert.encoder.layer.6.output.dense.bias))
  (let (%1034 (Add %1033 %1019))
  (let (%1036 (ReduceMean %1034 (vec -1) 1))
  (let (%1037 (Sub %1034 %1036))
  (let (%1038 (Cast_FLOAT %1037))
  (let (%1040 (Pow %1038 %1634))
  (let (%1041 (ReduceMean %1040 (vec -1) 1))
  (let (%1042 (Constant 9.999999960041972e-13))
  (let (%1043 (Add %1041 %1042))
  (let (%1044 (Sqrt %1043))
  (let (%1045 (Div %1037 %1044))
  (let (%1046 (Mul %1045 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1047 (Add %1046 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1049 (MatMul %1047 %1635))
  (let (%1050 (Add %1049 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1052 (MatMul %1047 %1636))
  (let (%1053 (Add %1052 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1055 (MatMul %1047 %1637))
  (let (%1056 (Add %1055 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1057 (Shape %1050))
  (let (%1058 (Constant 0))
  (let (%1059 (Gather %1057 %1058 0))
  (let (%1060 (Shape %1050))
  (let (%1061 (Constant 1))
  (let (%1062 (Gather %1060 %1061 0))
  (let (%1065 (Unsqueeze %1059 (vec 0)))
  (let (%1066 (Unsqueeze %1062 (vec 0)))
  (let (%1069 (Concat %1065 %1066 %1638 %1639 0))
  (let (%1070 (Reshape %1050 %1069))
  (let (%1071 (Transpose %1070 (vec 0 2 1 3)))
  (let (%1072 (Shape %1053))
  (let (%1073 (Constant 0))
  (let (%1074 (Gather %1072 %1073 0))
  (let (%1075 (Shape %1053))
  (let (%1076 (Constant 1))
  (let (%1077 (Gather %1075 %1076 0))
  (let (%1080 (Unsqueeze %1074 (vec 0)))
  (let (%1081 (Unsqueeze %1077 (vec 0)))
  (let (%1084 (Concat %1080 %1081 %1640 %1641 0))
  (let (%1085 (Reshape %1053 %1084))
  (let (%1086 (Shape %1056))
  (let (%1087 (Constant 0))
  (let (%1088 (Gather %1086 %1087 0))
  (let (%1089 (Shape %1056))
  (let (%1090 (Constant 1))
  (let (%1091 (Gather %1089 %1090 0))
  (let (%1094 (Unsqueeze %1088 (vec 0)))
  (let (%1095 (Unsqueeze %1091 (vec 0)))
  (let (%1098 (Concat %1094 %1095 %1642 %1643 0))
  (let (%1099 (Reshape %1056 %1098))
  (let (%1100 (Transpose %1099 (vec 0 2 1 3)))
  (let (%1101 (Transpose %1085 (vec 0 2 3 1)))
  (let (%1102 (MatMul %1071 %1101))
  (let (%1103 (Constant 8.0))
  (let (%1104 (Div %1102 %1103))
  (let (%1105 (Add %1104 %193))
  (let (%1106 (Softmax %1105 3))
  (let (%1107 (MatMul %1106 %1100))
  (let (%1108 (Transpose %1107 (vec 0 2 1 3)))
  (let (%1109 (Shape %1108))
  (let (%1110 (Constant 0))
  (let (%1111 (Gather %1109 %1110 0))
  (let (%1112 (Shape %1108))
  (let (%1113 (Constant 1))
  (let (%1114 (Gather %1112 %1113 0))
  (let (%1116 (Unsqueeze %1111 (vec 0)))
  (let (%1117 (Unsqueeze %1114 (vec 0)))
  (let (%1119 (Concat %1116 %1117 %1644 0))
  (let (%1120 (Reshape %1108 %1119))
  (let (%1122 (MatMul %1120 %1645))
  (let (%1123 (Add %1122 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1124 (Add %1123 %1047))
  (let (%1126 (ReduceMean %1124 (vec -1) 1))
  (let (%1127 (Sub %1124 %1126))
  (let (%1128 (Cast_FLOAT %1127))
  (let (%1130 (Pow %1128 %1646))
  (let (%1131 (ReduceMean %1130 (vec -1) 1))
  (let (%1132 (Constant 9.999999960041972e-13))
  (let (%1133 (Add %1131 %1132))
  (let (%1134 (Sqrt %1133))
  (let (%1135 (Div %1127 %1134))
  (let (%1136 (Mul %1135 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1137 (Add %1136 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1139 (MatMul %1137 %1647))
  (let (%1140 (Add %1139 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1141 (Constant 1.4142135381698608))
  (let (%1142 (Div %1140 %1141))
  (let (%1143 (Erf %1142))
  (let (%1144 (Constant 1.0))
  (let (%1145 (Add %1143 %1144))
  (let (%1146 (Mul %1140 %1145))
  (let (%1147 (Constant 0.5))
  (let (%1148 (Mul %1146 %1147))
  (let (%1150 (MatMul %1148 %1648))
  (let (%1151 (Add %1150 bert.encoder.layer.7.output.dense.bias))
  (let (%1152 (Add %1151 %1137))
  (let (%1154 (ReduceMean %1152 (vec -1) 1))
  (let (%1155 (Sub %1152 %1154))
  (let (%1156 (Cast_FLOAT %1155))
  (let (%1158 (Pow %1156 %1649))
  (let (%1159 (ReduceMean %1158 (vec -1) 1))
  (let (%1160 (Constant 9.999999960041972e-13))
  (let (%1161 (Add %1159 %1160))
  (let (%1162 (Sqrt %1161))
  (let (%1163 (Div %1155 %1162))
  (let (%1164 (Mul %1163 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1165 (Add %1164 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1167 (MatMul %1165 %1650))
  (let (%1168 (Add %1167 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1170 (MatMul %1165 %1651))
  (let (%1171 (Add %1170 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1173 (MatMul %1165 %1652))
  (let (%1174 (Add %1173 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1175 (Shape %1168))
  (let (%1176 (Constant 0))
  (let (%1177 (Gather %1175 %1176 0))
  (let (%1178 (Shape %1168))
  (let (%1179 (Constant 1))
  (let (%1180 (Gather %1178 %1179 0))
  (let (%1183 (Unsqueeze %1177 (vec 0)))
  (let (%1184 (Unsqueeze %1180 (vec 0)))
  (let (%1187 (Concat %1183 %1184 %1653 %1654 0))
  (let (%1188 (Reshape %1168 %1187))
  (let (%1189 (Transpose %1188 (vec 0 2 1 3)))
  (let (%1190 (Shape %1171))
  (let (%1191 (Constant 0))
  (let (%1192 (Gather %1190 %1191 0))
  (let (%1193 (Shape %1171))
  (let (%1194 (Constant 1))
  (let (%1195 (Gather %1193 %1194 0))
  (let (%1198 (Unsqueeze %1192 (vec 0)))
  (let (%1199 (Unsqueeze %1195 (vec 0)))
  (let (%1202 (Concat %1198 %1199 %1655 %1656 0))
  (let (%1203 (Reshape %1171 %1202))
  (let (%1204 (Shape %1174))
  (let (%1205 (Constant 0))
  (let (%1206 (Gather %1204 %1205 0))
  (let (%1207 (Shape %1174))
  (let (%1208 (Constant 1))
  (let (%1209 (Gather %1207 %1208 0))
  (let (%1212 (Unsqueeze %1206 (vec 0)))
  (let (%1213 (Unsqueeze %1209 (vec 0)))
  (let (%1216 (Concat %1212 %1213 %1657 %1658 0))
  (let (%1217 (Reshape %1174 %1216))
  (let (%1218 (Transpose %1217 (vec 0 2 1 3)))
  (let (%1219 (Transpose %1203 (vec 0 2 3 1)))
  (let (%1220 (MatMul %1189 %1219))
  (let (%1221 (Constant 8.0))
  (let (%1222 (Div %1220 %1221))
  (let (%1223 (Add %1222 %193))
  (let (%1224 (Softmax %1223 3))
  (let (%1225 (MatMul %1224 %1218))
  (let (%1226 (Transpose %1225 (vec 0 2 1 3)))
  (let (%1227 (Shape %1226))
  (let (%1228 (Constant 0))
  (let (%1229 (Gather %1227 %1228 0))
  (let (%1230 (Shape %1226))
  (let (%1231 (Constant 1))
  (let (%1232 (Gather %1230 %1231 0))
  (let (%1234 (Unsqueeze %1229 (vec 0)))
  (let (%1235 (Unsqueeze %1232 (vec 0)))
  (let (%1237 (Concat %1234 %1235 %1659 0))
  (let (%1238 (Reshape %1226 %1237))
  (let (%1240 (MatMul %1238 %1660))
  (let (%1241 (Add %1240 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1242 (Add %1241 %1165))
  (let (%1244 (ReduceMean %1242 (vec -1) 1))
  (let (%1245 (Sub %1242 %1244))
  (let (%1246 (Cast_FLOAT %1245))
  (let (%1248 (Pow %1246 %1661))
  (let (%1249 (ReduceMean %1248 (vec -1) 1))
  (let (%1250 (Constant 9.999999960041972e-13))
  (let (%1251 (Add %1249 %1250))
  (let (%1252 (Sqrt %1251))
  (let (%1253 (Div %1245 %1252))
  (let (%1254 (Mul %1253 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1255 (Add %1254 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1257 (MatMul %1255 %1662))
  (let (%1258 (Add %1257 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1259 (Constant 1.4142135381698608))
  (let (%1260 (Div %1258 %1259))
  (let (%1261 (Erf %1260))
  (let (%1262 (Constant 1.0))
  (let (%1263 (Add %1261 %1262))
  (let (%1264 (Mul %1258 %1263))
  (let (%1265 (Constant 0.5))
  (let (%1266 (Mul %1264 %1265))
  (let (%1268 (MatMul %1266 %1663))
  (let (%1269 (Add %1268 bert.encoder.layer.8.output.dense.bias))
  (let (%1270 (Add %1269 %1255))
  (let (%1272 (ReduceMean %1270 (vec -1) 1))
  (let (%1273 (Sub %1270 %1272))
  (let (%1274 (Cast_FLOAT %1273))
  (let (%1276 (Pow %1274 %1664))
  (let (%1277 (ReduceMean %1276 (vec -1) 1))
  (let (%1278 (Constant 9.999999960041972e-13))
  (let (%1279 (Add %1277 %1278))
  (let (%1280 (Sqrt %1279))
  (let (%1281 (Div %1273 %1280))
  (let (%1282 (Mul %1281 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1283 (Add %1282 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1285 (MatMul %1283 %1665))
  (let (%1286 (Add %1285 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1288 (MatMul %1283 %1666))
  (let (%1289 (Add %1288 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1291 (MatMul %1283 %1667))
  (let (%1292 (Add %1291 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1293 (Shape %1286))
  (let (%1294 (Constant 0))
  (let (%1295 (Gather %1293 %1294 0))
  (let (%1296 (Shape %1286))
  (let (%1297 (Constant 1))
  (let (%1298 (Gather %1296 %1297 0))
  (let (%1301 (Unsqueeze %1295 (vec 0)))
  (let (%1302 (Unsqueeze %1298 (vec 0)))
  (let (%1305 (Concat %1301 %1302 %1668 %1669 0))
  (let (%1306 (Reshape %1286 %1305))
  (let (%1307 (Transpose %1306 (vec 0 2 1 3)))
  (let (%1308 (Shape %1289))
  (let (%1309 (Constant 0))
  (let (%1310 (Gather %1308 %1309 0))
  (let (%1311 (Shape %1289))
  (let (%1312 (Constant 1))
  (let (%1313 (Gather %1311 %1312 0))
  (let (%1316 (Unsqueeze %1310 (vec 0)))
  (let (%1317 (Unsqueeze %1313 (vec 0)))
  (let (%1320 (Concat %1316 %1317 %1670 %1671 0))
  (let (%1321 (Reshape %1289 %1320))
  (let (%1322 (Shape %1292))
  (let (%1323 (Constant 0))
  (let (%1324 (Gather %1322 %1323 0))
  (let (%1325 (Shape %1292))
  (let (%1326 (Constant 1))
  (let (%1327 (Gather %1325 %1326 0))
  (let (%1330 (Unsqueeze %1324 (vec 0)))
  (let (%1331 (Unsqueeze %1327 (vec 0)))
  (let (%1334 (Concat %1330 %1331 %1672 %1673 0))
  (let (%1335 (Reshape %1292 %1334))
  (let (%1336 (Transpose %1335 (vec 0 2 1 3)))
  (let (%1337 (Transpose %1321 (vec 0 2 3 1)))
  (let (%1338 (MatMul %1307 %1337))
  (let (%1339 (Constant 8.0))
  (let (%1340 (Div %1338 %1339))
  (let (%1341 (Add %1340 %193))
  (let (%1342 (Softmax %1341 3))
  (let (%1343 (MatMul %1342 %1336))
  (let (%1344 (Transpose %1343 (vec 0 2 1 3)))
  (let (%1345 (Shape %1344))
  (let (%1346 (Constant 0))
  (let (%1347 (Gather %1345 %1346 0))
  (let (%1348 (Shape %1344))
  (let (%1349 (Constant 1))
  (let (%1350 (Gather %1348 %1349 0))
  (let (%1352 (Unsqueeze %1347 (vec 0)))
  (let (%1353 (Unsqueeze %1350 (vec 0)))
  (let (%1355 (Concat %1352 %1353 %1674 0))
  (let (%1356 (Reshape %1344 %1355))
  (let (%1358 (MatMul %1356 %1675))
  (let (%1359 (Add %1358 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1360 (Add %1359 %1283))
  (let (%1362 (ReduceMean %1360 (vec -1) 1))
  (let (%1363 (Sub %1360 %1362))
  (let (%1364 (Cast_FLOAT %1363))
  (let (%1366 (Pow %1364 %1676))
  (let (%1367 (ReduceMean %1366 (vec -1) 1))
  (let (%1368 (Constant 9.999999960041972e-13))
  (let (%1369 (Add %1367 %1368))
  (let (%1370 (Sqrt %1369))
  (let (%1371 (Div %1363 %1370))
  (let (%1372 (Mul %1371 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1373 (Add %1372 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1375 (MatMul %1373 %1677))
  (let (%1376 (Add %1375 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1377 (Constant 1.4142135381698608))
  (let (%1378 (Div %1376 %1377))
  (let (%1379 (Erf %1378))
  (let (%1380 (Constant 1.0))
  (let (%1381 (Add %1379 %1380))
  (let (%1382 (Mul %1376 %1381))
  (let (%1383 (Constant 0.5))
  (let (%1384 (Mul %1382 %1383))
  (let (%1386 (MatMul %1384 %1678))
  (let (%1387 (Add %1386 bert.encoder.layer.9.output.dense.bias))
  (let (%1388 (Add %1387 %1373))
  (let (%1390 (ReduceMean %1388 (vec -1) 1))
  (let (%1391 (Sub %1388 %1390))
  (let (%1392 (Cast_FLOAT %1391))
  (let (%1394 (Pow %1392 %1679))
  (let (%1395 (ReduceMean %1394 (vec -1) 1))
  (let (%1396 (Constant 9.999999960041972e-13))
  (let (%1397 (Add %1395 %1396))
  (let (%1398 (Sqrt %1397))
  (let (%1399 (Div %1391 %1398))
  (let (%1400 (Mul %1399 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1401 (Add %1400 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1403 (MatMul %1401 %1680))
  (let (%1404 (Add %1403 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1406 (MatMul %1401 %1681))
  (let (%1407 (Add %1406 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1409 (MatMul %1401 %1682))
  (let (%1410 (Add %1409 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1411 (Shape %1404))
  (let (%1412 (Constant 0))
  (let (%1413 (Gather %1411 %1412 0))
  (let (%1414 (Shape %1404))
  (let (%1415 (Constant 1))
  (let (%1416 (Gather %1414 %1415 0))
  (let (%1419 (Unsqueeze %1413 (vec 0)))
  (let (%1420 (Unsqueeze %1416 (vec 0)))
  (let (%1423 (Concat %1419 %1420 %1683 %1684 0))
  (let (%1424 (Reshape %1404 %1423))
  (let (%1425 (Transpose %1424 (vec 0 2 1 3)))
  (let (%1426 (Shape %1407))
  (let (%1427 (Constant 0))
  (let (%1428 (Gather %1426 %1427 0))
  (let (%1429 (Shape %1407))
  (let (%1430 (Constant 1))
  (let (%1431 (Gather %1429 %1430 0))
  (let (%1434 (Unsqueeze %1428 (vec 0)))
  (let (%1435 (Unsqueeze %1431 (vec 0)))
  (let (%1438 (Concat %1434 %1435 %1685 %1686 0))
  (let (%1439 (Reshape %1407 %1438))
  (let (%1440 (Shape %1410))
  (let (%1441 (Constant 0))
  (let (%1442 (Gather %1440 %1441 0))
  (let (%1443 (Shape %1410))
  (let (%1444 (Constant 1))
  (let (%1445 (Gather %1443 %1444 0))
  (let (%1448 (Unsqueeze %1442 (vec 0)))
  (let (%1449 (Unsqueeze %1445 (vec 0)))
  (let (%1452 (Concat %1448 %1449 %1687 %1688 0))
  (let (%1453 (Reshape %1410 %1452))
  (let (%1454 (Transpose %1453 (vec 0 2 1 3)))
  (let (%1455 (Transpose %1439 (vec 0 2 3 1)))
  (let (%1456 (MatMul %1425 %1455))
  (let (%1457 (Constant 8.0))
  (let (%1458 (Div %1456 %1457))
  (let (%1459 (Add %1458 %193))
  (let (%1460 (Softmax %1459 3))
  (let (%1461 (MatMul %1460 %1454))
  (let (%1462 (Transpose %1461 (vec 0 2 1 3)))
  (let (%1463 (Shape %1462))
  (let (%1464 (Constant 0))
  (let (%1465 (Gather %1463 %1464 0))
  (let (%1466 (Shape %1462))
  (let (%1467 (Constant 1))
  (let (%1468 (Gather %1466 %1467 0))
  (let (%1470 (Unsqueeze %1465 (vec 0)))
  (let (%1471 (Unsqueeze %1468 (vec 0)))
  (let (%1473 (Concat %1470 %1471 %1689 0))
  (let (%1474 (Reshape %1462 %1473))
  (let (%1476 (MatMul %1474 %1690))
  (let (%1477 (Add %1476 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1478 (Add %1477 %1401))
  (let (%1480 (ReduceMean %1478 (vec -1) 1))
  (let (%1481 (Sub %1478 %1480))
  (let (%1482 (Cast_FLOAT %1481))
  (let (%1484 (Pow %1482 %1691))
  (let (%1485 (ReduceMean %1484 (vec -1) 1))
  (let (%1486 (Constant 9.999999960041972e-13))
  (let (%1487 (Add %1485 %1486))
  (let (%1488 (Sqrt %1487))
  (let (%1489 (Div %1481 %1488))
  (let (%1490 (Mul %1489 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1491 (Add %1490 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1493 (MatMul %1491 %1692))
  (let (%1494 (Add %1493 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1495 (Constant 1.4142135381698608))
  (let (%1496 (Div %1494 %1495))
  (let (%1497 (Erf %1496))
  (let (%1498 (Constant 1.0))
  (let (%1499 (Add %1497 %1498))
  (let (%1500 (Mul %1494 %1499))
  (let (%1501 (Constant 0.5))
  (let (%1502 (Mul %1500 %1501))
  (let (%1504 (MatMul %1502 %1693))
  (let (%1505 (Add %1504 bert.encoder.layer.10.output.dense.bias))
  (let (%1506 (Add %1505 %1491))
  (let (%1508 (ReduceMean %1506 (vec -1) 1))
  (let (%1509 (Sub %1506 %1508))
  (let (%1510 (Cast_FLOAT %1509))
  (let (%1512 (Pow %1510 %1694))
  (let (%1513 (ReduceMean %1512 (vec -1) 1))
  (let (%1514 (Constant 9.999999960041972e-13))
  (let (%1515 (Add %1513 %1514))
  (let (%1516 (Sqrt %1515))
  (let (%1517 (Div %1509 %1516))
  (let (%1518 (Mul %1517 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1519 (Add %1518 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1521 (MatMul %1519 %1695))
  (let (%1522 (Add %1521 qa_outputs.bias))
  (let ((%1523 %1524) (Split %1522 (vec 1 1) -1))
  (let (output_0 (Squeeze %1523 (vec -1)))
  (let (output_1 (Squeeze %1524 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

