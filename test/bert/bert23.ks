;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert23.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%3135 (vec 0))
  (let (%3136 (vec 1))
  (let (%3137 2.0)
  (let (%3138 (load-from-onnx-float32 768 768 "%3138"))
  (let (%3139 (load-from-onnx-float32 768 768 "%3139"))
  (let (%3140 (load-from-onnx-float32 768 768 "%3140"))
  (let (%3141 (vec 12))
  (let (%3142 (vec 64))
  (let (%3143 (vec 12))
  (let (%3144 (vec 64))
  (let (%3145 (vec 12))
  (let (%3146 (vec 64))
  (let (%3147 (vec 768))
  (let (%3148 (load-from-onnx-float32 768 768 "%3148"))
  (let (%3149 2.0)
  (let (%3150 (load-from-onnx-float32 768 3072 "%3150"))
  (let (%3151 (load-from-onnx-float32 3072 768 "%3151"))
  (let (%3152 2.0)
  (let (%3153 (load-from-onnx-float32 768 768 "%3153"))
  (let (%3154 (load-from-onnx-float32 768 768 "%3154"))
  (let (%3155 (load-from-onnx-float32 768 768 "%3155"))
  (let (%3156 (vec 12))
  (let (%3157 (vec 64))
  (let (%3158 (vec 12))
  (let (%3159 (vec 64))
  (let (%3160 (vec 12))
  (let (%3161 (vec 64))
  (let (%3162 (vec 768))
  (let (%3163 (load-from-onnx-float32 768 768 "%3163"))
  (let (%3164 2.0)
  (let (%3165 (load-from-onnx-float32 768 3072 "%3165"))
  (let (%3166 (load-from-onnx-float32 3072 768 "%3166"))
  (let (%3167 2.0)
  (let (%3168 (load-from-onnx-float32 768 768 "%3168"))
  (let (%3169 (load-from-onnx-float32 768 768 "%3169"))
  (let (%3170 (load-from-onnx-float32 768 768 "%3170"))
  (let (%3171 (vec 12))
  (let (%3172 (vec 64))
  (let (%3173 (vec 12))
  (let (%3174 (vec 64))
  (let (%3175 (vec 12))
  (let (%3176 (vec 64))
  (let (%3177 (vec 768))
  (let (%3178 (load-from-onnx-float32 768 768 "%3178"))
  (let (%3179 2.0)
  (let (%3180 (load-from-onnx-float32 768 3072 "%3180"))
  (let (%3181 (load-from-onnx-float32 3072 768 "%3181"))
  (let (%3182 2.0)
  (let (%3183 (load-from-onnx-float32 768 768 "%3183"))
  (let (%3184 (load-from-onnx-float32 768 768 "%3184"))
  (let (%3185 (load-from-onnx-float32 768 768 "%3185"))
  (let (%3186 (vec 12))
  (let (%3187 (vec 64))
  (let (%3188 (vec 12))
  (let (%3189 (vec 64))
  (let (%3190 (vec 12))
  (let (%3191 (vec 64))
  (let (%3192 (vec 768))
  (let (%3193 (load-from-onnx-float32 768 768 "%3193"))
  (let (%3194 2.0)
  (let (%3195 (load-from-onnx-float32 768 3072 "%3195"))
  (let (%3196 (load-from-onnx-float32 3072 768 "%3196"))
  (let (%3197 2.0)
  (let (%3198 (load-from-onnx-float32 768 768 "%3198"))
  (let (%3199 (load-from-onnx-float32 768 768 "%3199"))
  (let (%3200 (load-from-onnx-float32 768 768 "%3200"))
  (let (%3201 (vec 12))
  (let (%3202 (vec 64))
  (let (%3203 (vec 12))
  (let (%3204 (vec 64))
  (let (%3205 (vec 12))
  (let (%3206 (vec 64))
  (let (%3207 (vec 768))
  (let (%3208 (load-from-onnx-float32 768 768 "%3208"))
  (let (%3209 2.0)
  (let (%3210 (load-from-onnx-float32 768 3072 "%3210"))
  (let (%3211 (load-from-onnx-float32 3072 768 "%3211"))
  (let (%3212 2.0)
  (let (%3213 (load-from-onnx-float32 768 768 "%3213"))
  (let (%3214 (load-from-onnx-float32 768 768 "%3214"))
  (let (%3215 (load-from-onnx-float32 768 768 "%3215"))
  (let (%3216 (vec 12))
  (let (%3217 (vec 64))
  (let (%3218 (vec 12))
  (let (%3219 (vec 64))
  (let (%3220 (vec 12))
  (let (%3221 (vec 64))
  (let (%3222 (vec 768))
  (let (%3223 (load-from-onnx-float32 768 768 "%3223"))
  (let (%3224 2.0)
  (let (%3225 (load-from-onnx-float32 768 3072 "%3225"))
  (let (%3226 (load-from-onnx-float32 3072 768 "%3226"))
  (let (%3227 2.0)
  (let (%3228 (load-from-onnx-float32 768 768 "%3228"))
  (let (%3229 (load-from-onnx-float32 768 768 "%3229"))
  (let (%3230 (load-from-onnx-float32 768 768 "%3230"))
  (let (%3231 (vec 12))
  (let (%3232 (vec 64))
  (let (%3233 (vec 12))
  (let (%3234 (vec 64))
  (let (%3235 (vec 12))
  (let (%3236 (vec 64))
  (let (%3237 (vec 768))
  (let (%3238 (load-from-onnx-float32 768 768 "%3238"))
  (let (%3239 2.0)
  (let (%3240 (load-from-onnx-float32 768 3072 "%3240"))
  (let (%3241 (load-from-onnx-float32 3072 768 "%3241"))
  (let (%3242 2.0)
  (let (%3243 (load-from-onnx-float32 768 768 "%3243"))
  (let (%3244 (load-from-onnx-float32 768 768 "%3244"))
  (let (%3245 (load-from-onnx-float32 768 768 "%3245"))
  (let (%3246 (vec 12))
  (let (%3247 (vec 64))
  (let (%3248 (vec 12))
  (let (%3249 (vec 64))
  (let (%3250 (vec 12))
  (let (%3251 (vec 64))
  (let (%3252 (vec 768))
  (let (%3253 (load-from-onnx-float32 768 768 "%3253"))
  (let (%3254 2.0)
  (let (%3255 (load-from-onnx-float32 768 3072 "%3255"))
  (let (%3256 (load-from-onnx-float32 3072 768 "%3256"))
  (let (%3257 2.0)
  (let (%3258 (load-from-onnx-float32 768 768 "%3258"))
  (let (%3259 (load-from-onnx-float32 768 768 "%3259"))
  (let (%3260 (load-from-onnx-float32 768 768 "%3260"))
  (let (%3261 (vec 12))
  (let (%3262 (vec 64))
  (let (%3263 (vec 12))
  (let (%3264 (vec 64))
  (let (%3265 (vec 12))
  (let (%3266 (vec 64))
  (let (%3267 (vec 768))
  (let (%3268 (load-from-onnx-float32 768 768 "%3268"))
  (let (%3269 2.0)
  (let (%3270 (load-from-onnx-float32 768 3072 "%3270"))
  (let (%3271 (load-from-onnx-float32 3072 768 "%3271"))
  (let (%3272 2.0)
  (let (%3273 (load-from-onnx-float32 768 768 "%3273"))
  (let (%3274 (load-from-onnx-float32 768 768 "%3274"))
  (let (%3275 (load-from-onnx-float32 768 768 "%3275"))
  (let (%3276 (vec 12))
  (let (%3277 (vec 64))
  (let (%3278 (vec 12))
  (let (%3279 (vec 64))
  (let (%3280 (vec 12))
  (let (%3281 (vec 64))
  (let (%3282 (vec 768))
  (let (%3283 (load-from-onnx-float32 768 768 "%3283"))
  (let (%3284 2.0)
  (let (%3285 (load-from-onnx-float32 768 3072 "%3285"))
  (let (%3286 (load-from-onnx-float32 3072 768 "%3286"))
  (let (%3287 2.0)
  (let (%3288 (load-from-onnx-float32 768 768 "%3288"))
  (let (%3289 (load-from-onnx-float32 768 768 "%3289"))
  (let (%3290 (load-from-onnx-float32 768 768 "%3290"))
  (let (%3291 (vec 12))
  (let (%3292 (vec 64))
  (let (%3293 (vec 12))
  (let (%3294 (vec 64))
  (let (%3295 (vec 12))
  (let (%3296 (vec 64))
  (let (%3297 (vec 768))
  (let (%3298 (load-from-onnx-float32 768 768 "%3298"))
  (let (%3299 2.0)
  (let (%3300 (load-from-onnx-float32 768 3072 "%3300"))
  (let (%3301 (load-from-onnx-float32 3072 768 "%3301"))
  (let (%3302 2.0)
  (let (%3303 (load-from-onnx-float32 768 768 "%3303"))
  (let (%3304 (load-from-onnx-float32 768 768 "%3304"))
  (let (%3305 (load-from-onnx-float32 768 768 "%3305"))
  (let (%3306 (vec 12))
  (let (%3307 (vec 64))
  (let (%3308 (vec 12))
  (let (%3309 (vec 64))
  (let (%3310 (vec 12))
  (let (%3311 (vec 64))
  (let (%3312 (vec 768))
  (let (%3313 (load-from-onnx-float32 768 768 "%3313"))
  (let (%3314 2.0)
  (let (%3315 (load-from-onnx-float32 768 3072 "%3315"))
  (let (%3316 (load-from-onnx-float32 3072 768 "%3316"))
  (let (%3317 2.0)
  (let (%3318 (load-from-onnx-float32 768 768 "%3318"))
  (let (%3319 (load-from-onnx-float32 768 768 "%3319"))
  (let (%3320 (load-from-onnx-float32 768 768 "%3320"))
  (let (%3321 (vec 12))
  (let (%3322 (vec 64))
  (let (%3323 (vec 12))
  (let (%3324 (vec 64))
  (let (%3325 (vec 12))
  (let (%3326 (vec 64))
  (let (%3327 (vec 768))
  (let (%3328 (load-from-onnx-float32 768 768 "%3328"))
  (let (%3329 2.0)
  (let (%3330 (load-from-onnx-float32 768 3072 "%3330"))
  (let (%3331 (load-from-onnx-float32 3072 768 "%3331"))
  (let (%3332 2.0)
  (let (%3333 (load-from-onnx-float32 768 768 "%3333"))
  (let (%3334 (load-from-onnx-float32 768 768 "%3334"))
  (let (%3335 (load-from-onnx-float32 768 768 "%3335"))
  (let (%3336 (vec 12))
  (let (%3337 (vec 64))
  (let (%3338 (vec 12))
  (let (%3339 (vec 64))
  (let (%3340 (vec 12))
  (let (%3341 (vec 64))
  (let (%3342 (vec 768))
  (let (%3343 (load-from-onnx-float32 768 768 "%3343"))
  (let (%3344 2.0)
  (let (%3345 (load-from-onnx-float32 768 3072 "%3345"))
  (let (%3346 (load-from-onnx-float32 3072 768 "%3346"))
  (let (%3347 2.0)
  (let (%3348 (load-from-onnx-float32 768 768 "%3348"))
  (let (%3349 (load-from-onnx-float32 768 768 "%3349"))
  (let (%3350 (load-from-onnx-float32 768 768 "%3350"))
  (let (%3351 (vec 12))
  (let (%3352 (vec 64))
  (let (%3353 (vec 12))
  (let (%3354 (vec 64))
  (let (%3355 (vec 12))
  (let (%3356 (vec 64))
  (let (%3357 (vec 768))
  (let (%3358 (load-from-onnx-float32 768 768 "%3358"))
  (let (%3359 2.0)
  (let (%3360 (load-from-onnx-float32 768 3072 "%3360"))
  (let (%3361 (load-from-onnx-float32 3072 768 "%3361"))
  (let (%3362 2.0)
  (let (%3363 (load-from-onnx-float32 768 768 "%3363"))
  (let (%3364 (load-from-onnx-float32 768 768 "%3364"))
  (let (%3365 (load-from-onnx-float32 768 768 "%3365"))
  (let (%3366 (vec 12))
  (let (%3367 (vec 64))
  (let (%3368 (vec 12))
  (let (%3369 (vec 64))
  (let (%3370 (vec 12))
  (let (%3371 (vec 64))
  (let (%3372 (vec 768))
  (let (%3373 (load-from-onnx-float32 768 768 "%3373"))
  (let (%3374 2.0)
  (let (%3375 (load-from-onnx-float32 768 3072 "%3375"))
  (let (%3376 (load-from-onnx-float32 3072 768 "%3376"))
  (let (%3377 2.0)
  (let (%3378 (load-from-onnx-float32 768 768 "%3378"))
  (let (%3379 (load-from-onnx-float32 768 768 "%3379"))
  (let (%3380 (load-from-onnx-float32 768 768 "%3380"))
  (let (%3381 (vec 12))
  (let (%3382 (vec 64))
  (let (%3383 (vec 12))
  (let (%3384 (vec 64))
  (let (%3385 (vec 12))
  (let (%3386 (vec 64))
  (let (%3387 (vec 768))
  (let (%3388 (load-from-onnx-float32 768 768 "%3388"))
  (let (%3389 2.0)
  (let (%3390 (load-from-onnx-float32 768 3072 "%3390"))
  (let (%3391 (load-from-onnx-float32 3072 768 "%3391"))
  (let (%3392 2.0)
  (let (%3393 (load-from-onnx-float32 768 768 "%3393"))
  (let (%3394 (load-from-onnx-float32 768 768 "%3394"))
  (let (%3395 (load-from-onnx-float32 768 768 "%3395"))
  (let (%3396 (vec 12))
  (let (%3397 (vec 64))
  (let (%3398 (vec 12))
  (let (%3399 (vec 64))
  (let (%3400 (vec 12))
  (let (%3401 (vec 64))
  (let (%3402 (vec 768))
  (let (%3403 (load-from-onnx-float32 768 768 "%3403"))
  (let (%3404 2.0)
  (let (%3405 (load-from-onnx-float32 768 3072 "%3405"))
  (let (%3406 (load-from-onnx-float32 3072 768 "%3406"))
  (let (%3407 2.0)
  (let (%3408 (load-from-onnx-float32 768 768 "%3408"))
  (let (%3409 (load-from-onnx-float32 768 768 "%3409"))
  (let (%3410 (load-from-onnx-float32 768 768 "%3410"))
  (let (%3411 (vec 12))
  (let (%3412 (vec 64))
  (let (%3413 (vec 12))
  (let (%3414 (vec 64))
  (let (%3415 (vec 12))
  (let (%3416 (vec 64))
  (let (%3417 (vec 768))
  (let (%3418 (load-from-onnx-float32 768 768 "%3418"))
  (let (%3419 2.0)
  (let (%3420 (load-from-onnx-float32 768 3072 "%3420"))
  (let (%3421 (load-from-onnx-float32 3072 768 "%3421"))
  (let (%3422 2.0)
  (let (%3423 (load-from-onnx-float32 768 768 "%3423"))
  (let (%3424 (load-from-onnx-float32 768 768 "%3424"))
  (let (%3425 (load-from-onnx-float32 768 768 "%3425"))
  (let (%3426 (vec 12))
  (let (%3427 (vec 64))
  (let (%3428 (vec 12))
  (let (%3429 (vec 64))
  (let (%3430 (vec 12))
  (let (%3431 (vec 64))
  (let (%3432 (vec 768))
  (let (%3433 (load-from-onnx-float32 768 768 "%3433"))
  (let (%3434 2.0)
  (let (%3435 (load-from-onnx-float32 768 3072 "%3435"))
  (let (%3436 (load-from-onnx-float32 3072 768 "%3436"))
  (let (%3437 2.0)
  (let (%3438 (load-from-onnx-float32 768 768 "%3438"))
  (let (%3439 (load-from-onnx-float32 768 768 "%3439"))
  (let (%3440 (load-from-onnx-float32 768 768 "%3440"))
  (let (%3441 (vec 12))
  (let (%3442 (vec 64))
  (let (%3443 (vec 12))
  (let (%3444 (vec 64))
  (let (%3445 (vec 12))
  (let (%3446 (vec 64))
  (let (%3447 (vec 768))
  (let (%3448 (load-from-onnx-float32 768 768 "%3448"))
  (let (%3449 2.0)
  (let (%3450 (load-from-onnx-float32 768 3072 "%3450"))
  (let (%3451 (load-from-onnx-float32 3072 768 "%3451"))
  (let (%3452 2.0)
  (let (%3453 (load-from-onnx-float32 768 768 "%3453"))
  (let (%3454 (load-from-onnx-float32 768 768 "%3454"))
  (let (%3455 (load-from-onnx-float32 768 768 "%3455"))
  (let (%3456 (vec 12))
  (let (%3457 (vec 64))
  (let (%3458 (vec 12))
  (let (%3459 (vec 64))
  (let (%3460 (vec 12))
  (let (%3461 (vec 64))
  (let (%3462 (vec 768))
  (let (%3463 (load-from-onnx-float32 768 768 "%3463"))
  (let (%3464 2.0)
  (let (%3465 (load-from-onnx-float32 768 3072 "%3465"))
  (let (%3466 (load-from-onnx-float32 3072 768 "%3466"))
  (let (%3467 2.0)
  (let (%3468 (load-from-onnx-float32 768 768 "%3468"))
  (let (%3469 (load-from-onnx-float32 768 768 "%3469"))
  (let (%3470 (load-from-onnx-float32 768 768 "%3470"))
  (let (%3471 (vec 12))
  (let (%3472 (vec 64))
  (let (%3473 (vec 12))
  (let (%3474 (vec 64))
  (let (%3475 (vec 12))
  (let (%3476 (vec 64))
  (let (%3477 (vec 768))
  (let (%3478 (load-from-onnx-float32 768 768 "%3478"))
  (let (%3479 2.0)
  (let (%3480 (load-from-onnx-float32 768 3072 "%3480"))
  (let (%3481 (load-from-onnx-float32 3072 768 "%3481"))
  (let (%3482 2.0)
  (let (%3483 (load-from-onnx-float32 768 2 "%3483"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.key.bias"))
  (let (bert.encoder.layer.18.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.query.bias"))
  (let (bert.encoder.layer.18.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.value.bias"))
  (let (bert.encoder.layer.18.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.18.intermediate.dense.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.key.bias"))
  (let (bert.encoder.layer.19.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.query.bias"))
  (let (bert.encoder.layer.19.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.value.bias"))
  (let (bert.encoder.layer.19.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.19.intermediate.dense.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.key.bias"))
  (let (bert.encoder.layer.20.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.query.bias"))
  (let (bert.encoder.layer.20.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.value.bias"))
  (let (bert.encoder.layer.20.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.20.intermediate.dense.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.dense.bias"))
  (let (bert.encoder.layer.21.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.21.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.21.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.dense.bias"))
  (let (bert.encoder.layer.21.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.key.bias"))
  (let (bert.encoder.layer.21.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.query.bias"))
  (let (bert.encoder.layer.21.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.value.bias"))
  (let (bert.encoder.layer.21.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.21.intermediate.dense.bias"))
  (let (bert.encoder.layer.21.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.output.LayerNorm.bias"))
  (let (bert.encoder.layer.21.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.21.output.LayerNorm.weight"))
  (let (bert.encoder.layer.21.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.output.dense.bias"))
  (let (bert.encoder.layer.22.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.22.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.22.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.output.dense.bias"))
  (let (bert.encoder.layer.22.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.self.key.bias"))
  (let (bert.encoder.layer.22.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.self.query.bias"))
  (let (bert.encoder.layer.22.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.attention.self.value.bias"))
  (let (bert.encoder.layer.22.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.22.intermediate.dense.bias"))
  (let (bert.encoder.layer.22.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.output.LayerNorm.bias"))
  (let (bert.encoder.layer.22.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.22.output.LayerNorm.weight"))
  (let (bert.encoder.layer.22.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.22.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%379 (Unsqueeze attention_mask (vec 1)))
  (let (%380 (Unsqueeze %379 (vec 2)))
  (let (%381 (Cast_FLOAT %380))
  (let (%382 (Constant 1.0))
  (let (%383 (Sub %382 %381))
  (let (%384 (Constant -10000.0))
  (let (%385 (Mul %383 %384))
  (let (%386 (Shape input_ids))
  (let (%387 (Constant 1))
  (let (%388 (Gather %386 %387 0))
  (let (%392 (Unsqueeze %388 (vec 0)))
  (let (%394 (Constant (vec 1)))
  (let (%395 (Slice bert.embeddings.position_ids %3135 %392 %3136 %394))
  (let (%396 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%397 (Gather bert.embeddings.position_embeddings.weight %395 0))
  (let (%398 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%399 (Add %396 %397))
  (let (%400 (Add %399 %398))
  (let (%402 (ReduceMean %400 (vec -1) 1))
  (let (%403 (Sub %400 %402))
  (let (%404 (Cast_FLOAT %403))
  (let (%406 (Pow %404 %3137))
  (let (%407 (ReduceMean %406 (vec -1) 1))
  (let (%408 (Constant 9.999999960041972e-13))
  (let (%409 (Add %407 %408))
  (let (%410 (Sqrt %409))
  (let (%411 (Div %403 %410))
  (let (%412 (Mul %411 bert.embeddings.LayerNorm.weight))
  (let (%413 (Add %412 bert.embeddings.LayerNorm.bias))
  (let (%415 (MatMul %413 %3138))
  (let (%416 (Add %415 bert.encoder.layer.0.attention.self.query.bias))
  (let (%418 (MatMul %413 %3139))
  (let (%419 (Add %418 bert.encoder.layer.0.attention.self.key.bias))
  (let (%421 (MatMul %413 %3140))
  (let (%422 (Add %421 bert.encoder.layer.0.attention.self.value.bias))
  (let (%423 (Shape %416))
  (let (%424 (Constant 0))
  (let (%425 (Gather %423 %424 0))
  (let (%426 (Shape %416))
  (let (%427 (Constant 1))
  (let (%428 (Gather %426 %427 0))
  (let (%431 (Unsqueeze %425 (vec 0)))
  (let (%432 (Unsqueeze %428 (vec 0)))
  (let (%435 (Concat %431 %432 %3141 %3142 0))
  (let (%436 (Reshape %416 %435))
  (let (%437 (Transpose %436 (vec 0 2 1 3)))
  (let (%438 (Shape %419))
  (let (%439 (Constant 0))
  (let (%440 (Gather %438 %439 0))
  (let (%441 (Shape %419))
  (let (%442 (Constant 1))
  (let (%443 (Gather %441 %442 0))
  (let (%446 (Unsqueeze %440 (vec 0)))
  (let (%447 (Unsqueeze %443 (vec 0)))
  (let (%450 (Concat %446 %447 %3143 %3144 0))
  (let (%451 (Reshape %419 %450))
  (let (%452 (Shape %422))
  (let (%453 (Constant 0))
  (let (%454 (Gather %452 %453 0))
  (let (%455 (Shape %422))
  (let (%456 (Constant 1))
  (let (%457 (Gather %455 %456 0))
  (let (%460 (Unsqueeze %454 (vec 0)))
  (let (%461 (Unsqueeze %457 (vec 0)))
  (let (%464 (Concat %460 %461 %3145 %3146 0))
  (let (%465 (Reshape %422 %464))
  (let (%466 (Transpose %465 (vec 0 2 1 3)))
  (let (%467 (Transpose %451 (vec 0 2 3 1)))
  (let (%468 (MatMul %437 %467))
  (let (%469 (Constant 8.0))
  (let (%470 (Div %468 %469))
  (let (%471 (Add %470 %385))
  (let (%472 (Softmax %471 3))
  (let (%473 (MatMul %472 %466))
  (let (%474 (Transpose %473 (vec 0 2 1 3)))
  (let (%475 (Shape %474))
  (let (%476 (Constant 0))
  (let (%477 (Gather %475 %476 0))
  (let (%478 (Shape %474))
  (let (%479 (Constant 1))
  (let (%480 (Gather %478 %479 0))
  (let (%482 (Unsqueeze %477 (vec 0)))
  (let (%483 (Unsqueeze %480 (vec 0)))
  (let (%485 (Concat %482 %483 %3147 0))
  (let (%486 (Reshape %474 %485))
  (let (%488 (MatMul %486 %3148))
  (let (%489 (Add %488 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%490 (Add %489 %413))
  (let (%492 (ReduceMean %490 (vec -1) 1))
  (let (%493 (Sub %490 %492))
  (let (%494 (Cast_FLOAT %493))
  (let (%496 (Pow %494 %3149))
  (let (%497 (ReduceMean %496 (vec -1) 1))
  (let (%498 (Constant 9.999999960041972e-13))
  (let (%499 (Add %497 %498))
  (let (%500 (Sqrt %499))
  (let (%501 (Div %493 %500))
  (let (%502 (Mul %501 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%503 (Add %502 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%505 (MatMul %503 %3150))
  (let (%506 (Add %505 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%507 (Constant 1.4142135381698608))
  (let (%508 (Div %506 %507))
  (let (%509 (Erf %508))
  (let (%510 (Constant 1.0))
  (let (%511 (Add %509 %510))
  (let (%512 (Mul %506 %511))
  (let (%513 (Constant 0.5))
  (let (%514 (Mul %512 %513))
  (let (%516 (MatMul %514 %3151))
  (let (%517 (Add %516 bert.encoder.layer.0.output.dense.bias))
  (let (%518 (Add %517 %503))
  (let (%520 (ReduceMean %518 (vec -1) 1))
  (let (%521 (Sub %518 %520))
  (let (%522 (Cast_FLOAT %521))
  (let (%524 (Pow %522 %3152))
  (let (%525 (ReduceMean %524 (vec -1) 1))
  (let (%526 (Constant 9.999999960041972e-13))
  (let (%527 (Add %525 %526))
  (let (%528 (Sqrt %527))
  (let (%529 (Div %521 %528))
  (let (%530 (Mul %529 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%531 (Add %530 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%533 (MatMul %531 %3153))
  (let (%534 (Add %533 bert.encoder.layer.1.attention.self.query.bias))
  (let (%536 (MatMul %531 %3154))
  (let (%537 (Add %536 bert.encoder.layer.1.attention.self.key.bias))
  (let (%539 (MatMul %531 %3155))
  (let (%540 (Add %539 bert.encoder.layer.1.attention.self.value.bias))
  (let (%541 (Shape %534))
  (let (%542 (Constant 0))
  (let (%543 (Gather %541 %542 0))
  (let (%544 (Shape %534))
  (let (%545 (Constant 1))
  (let (%546 (Gather %544 %545 0))
  (let (%549 (Unsqueeze %543 (vec 0)))
  (let (%550 (Unsqueeze %546 (vec 0)))
  (let (%553 (Concat %549 %550 %3156 %3157 0))
  (let (%554 (Reshape %534 %553))
  (let (%555 (Transpose %554 (vec 0 2 1 3)))
  (let (%556 (Shape %537))
  (let (%557 (Constant 0))
  (let (%558 (Gather %556 %557 0))
  (let (%559 (Shape %537))
  (let (%560 (Constant 1))
  (let (%561 (Gather %559 %560 0))
  (let (%564 (Unsqueeze %558 (vec 0)))
  (let (%565 (Unsqueeze %561 (vec 0)))
  (let (%568 (Concat %564 %565 %3158 %3159 0))
  (let (%569 (Reshape %537 %568))
  (let (%570 (Shape %540))
  (let (%571 (Constant 0))
  (let (%572 (Gather %570 %571 0))
  (let (%573 (Shape %540))
  (let (%574 (Constant 1))
  (let (%575 (Gather %573 %574 0))
  (let (%578 (Unsqueeze %572 (vec 0)))
  (let (%579 (Unsqueeze %575 (vec 0)))
  (let (%582 (Concat %578 %579 %3160 %3161 0))
  (let (%583 (Reshape %540 %582))
  (let (%584 (Transpose %583 (vec 0 2 1 3)))
  (let (%585 (Transpose %569 (vec 0 2 3 1)))
  (let (%586 (MatMul %555 %585))
  (let (%587 (Constant 8.0))
  (let (%588 (Div %586 %587))
  (let (%589 (Add %588 %385))
  (let (%590 (Softmax %589 3))
  (let (%591 (MatMul %590 %584))
  (let (%592 (Transpose %591 (vec 0 2 1 3)))
  (let (%593 (Shape %592))
  (let (%594 (Constant 0))
  (let (%595 (Gather %593 %594 0))
  (let (%596 (Shape %592))
  (let (%597 (Constant 1))
  (let (%598 (Gather %596 %597 0))
  (let (%600 (Unsqueeze %595 (vec 0)))
  (let (%601 (Unsqueeze %598 (vec 0)))
  (let (%603 (Concat %600 %601 %3162 0))
  (let (%604 (Reshape %592 %603))
  (let (%606 (MatMul %604 %3163))
  (let (%607 (Add %606 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%608 (Add %607 %531))
  (let (%610 (ReduceMean %608 (vec -1) 1))
  (let (%611 (Sub %608 %610))
  (let (%612 (Cast_FLOAT %611))
  (let (%614 (Pow %612 %3164))
  (let (%615 (ReduceMean %614 (vec -1) 1))
  (let (%616 (Constant 9.999999960041972e-13))
  (let (%617 (Add %615 %616))
  (let (%618 (Sqrt %617))
  (let (%619 (Div %611 %618))
  (let (%620 (Mul %619 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%621 (Add %620 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%623 (MatMul %621 %3165))
  (let (%624 (Add %623 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%625 (Constant 1.4142135381698608))
  (let (%626 (Div %624 %625))
  (let (%627 (Erf %626))
  (let (%628 (Constant 1.0))
  (let (%629 (Add %627 %628))
  (let (%630 (Mul %624 %629))
  (let (%631 (Constant 0.5))
  (let (%632 (Mul %630 %631))
  (let (%634 (MatMul %632 %3166))
  (let (%635 (Add %634 bert.encoder.layer.1.output.dense.bias))
  (let (%636 (Add %635 %621))
  (let (%638 (ReduceMean %636 (vec -1) 1))
  (let (%639 (Sub %636 %638))
  (let (%640 (Cast_FLOAT %639))
  (let (%642 (Pow %640 %3167))
  (let (%643 (ReduceMean %642 (vec -1) 1))
  (let (%644 (Constant 9.999999960041972e-13))
  (let (%645 (Add %643 %644))
  (let (%646 (Sqrt %645))
  (let (%647 (Div %639 %646))
  (let (%648 (Mul %647 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%649 (Add %648 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%651 (MatMul %649 %3168))
  (let (%652 (Add %651 bert.encoder.layer.2.attention.self.query.bias))
  (let (%654 (MatMul %649 %3169))
  (let (%655 (Add %654 bert.encoder.layer.2.attention.self.key.bias))
  (let (%657 (MatMul %649 %3170))
  (let (%658 (Add %657 bert.encoder.layer.2.attention.self.value.bias))
  (let (%659 (Shape %652))
  (let (%660 (Constant 0))
  (let (%661 (Gather %659 %660 0))
  (let (%662 (Shape %652))
  (let (%663 (Constant 1))
  (let (%664 (Gather %662 %663 0))
  (let (%667 (Unsqueeze %661 (vec 0)))
  (let (%668 (Unsqueeze %664 (vec 0)))
  (let (%671 (Concat %667 %668 %3171 %3172 0))
  (let (%672 (Reshape %652 %671))
  (let (%673 (Transpose %672 (vec 0 2 1 3)))
  (let (%674 (Shape %655))
  (let (%675 (Constant 0))
  (let (%676 (Gather %674 %675 0))
  (let (%677 (Shape %655))
  (let (%678 (Constant 1))
  (let (%679 (Gather %677 %678 0))
  (let (%682 (Unsqueeze %676 (vec 0)))
  (let (%683 (Unsqueeze %679 (vec 0)))
  (let (%686 (Concat %682 %683 %3173 %3174 0))
  (let (%687 (Reshape %655 %686))
  (let (%688 (Shape %658))
  (let (%689 (Constant 0))
  (let (%690 (Gather %688 %689 0))
  (let (%691 (Shape %658))
  (let (%692 (Constant 1))
  (let (%693 (Gather %691 %692 0))
  (let (%696 (Unsqueeze %690 (vec 0)))
  (let (%697 (Unsqueeze %693 (vec 0)))
  (let (%700 (Concat %696 %697 %3175 %3176 0))
  (let (%701 (Reshape %658 %700))
  (let (%702 (Transpose %701 (vec 0 2 1 3)))
  (let (%703 (Transpose %687 (vec 0 2 3 1)))
  (let (%704 (MatMul %673 %703))
  (let (%705 (Constant 8.0))
  (let (%706 (Div %704 %705))
  (let (%707 (Add %706 %385))
  (let (%708 (Softmax %707 3))
  (let (%709 (MatMul %708 %702))
  (let (%710 (Transpose %709 (vec 0 2 1 3)))
  (let (%711 (Shape %710))
  (let (%712 (Constant 0))
  (let (%713 (Gather %711 %712 0))
  (let (%714 (Shape %710))
  (let (%715 (Constant 1))
  (let (%716 (Gather %714 %715 0))
  (let (%718 (Unsqueeze %713 (vec 0)))
  (let (%719 (Unsqueeze %716 (vec 0)))
  (let (%721 (Concat %718 %719 %3177 0))
  (let (%722 (Reshape %710 %721))
  (let (%724 (MatMul %722 %3178))
  (let (%725 (Add %724 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%726 (Add %725 %649))
  (let (%728 (ReduceMean %726 (vec -1) 1))
  (let (%729 (Sub %726 %728))
  (let (%730 (Cast_FLOAT %729))
  (let (%732 (Pow %730 %3179))
  (let (%733 (ReduceMean %732 (vec -1) 1))
  (let (%734 (Constant 9.999999960041972e-13))
  (let (%735 (Add %733 %734))
  (let (%736 (Sqrt %735))
  (let (%737 (Div %729 %736))
  (let (%738 (Mul %737 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%739 (Add %738 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%741 (MatMul %739 %3180))
  (let (%742 (Add %741 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%743 (Constant 1.4142135381698608))
  (let (%744 (Div %742 %743))
  (let (%745 (Erf %744))
  (let (%746 (Constant 1.0))
  (let (%747 (Add %745 %746))
  (let (%748 (Mul %742 %747))
  (let (%749 (Constant 0.5))
  (let (%750 (Mul %748 %749))
  (let (%752 (MatMul %750 %3181))
  (let (%753 (Add %752 bert.encoder.layer.2.output.dense.bias))
  (let (%754 (Add %753 %739))
  (let (%756 (ReduceMean %754 (vec -1) 1))
  (let (%757 (Sub %754 %756))
  (let (%758 (Cast_FLOAT %757))
  (let (%760 (Pow %758 %3182))
  (let (%761 (ReduceMean %760 (vec -1) 1))
  (let (%762 (Constant 9.999999960041972e-13))
  (let (%763 (Add %761 %762))
  (let (%764 (Sqrt %763))
  (let (%765 (Div %757 %764))
  (let (%766 (Mul %765 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%767 (Add %766 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%769 (MatMul %767 %3183))
  (let (%770 (Add %769 bert.encoder.layer.3.attention.self.query.bias))
  (let (%772 (MatMul %767 %3184))
  (let (%773 (Add %772 bert.encoder.layer.3.attention.self.key.bias))
  (let (%775 (MatMul %767 %3185))
  (let (%776 (Add %775 bert.encoder.layer.3.attention.self.value.bias))
  (let (%777 (Shape %770))
  (let (%778 (Constant 0))
  (let (%779 (Gather %777 %778 0))
  (let (%780 (Shape %770))
  (let (%781 (Constant 1))
  (let (%782 (Gather %780 %781 0))
  (let (%785 (Unsqueeze %779 (vec 0)))
  (let (%786 (Unsqueeze %782 (vec 0)))
  (let (%789 (Concat %785 %786 %3186 %3187 0))
  (let (%790 (Reshape %770 %789))
  (let (%791 (Transpose %790 (vec 0 2 1 3)))
  (let (%792 (Shape %773))
  (let (%793 (Constant 0))
  (let (%794 (Gather %792 %793 0))
  (let (%795 (Shape %773))
  (let (%796 (Constant 1))
  (let (%797 (Gather %795 %796 0))
  (let (%800 (Unsqueeze %794 (vec 0)))
  (let (%801 (Unsqueeze %797 (vec 0)))
  (let (%804 (Concat %800 %801 %3188 %3189 0))
  (let (%805 (Reshape %773 %804))
  (let (%806 (Shape %776))
  (let (%807 (Constant 0))
  (let (%808 (Gather %806 %807 0))
  (let (%809 (Shape %776))
  (let (%810 (Constant 1))
  (let (%811 (Gather %809 %810 0))
  (let (%814 (Unsqueeze %808 (vec 0)))
  (let (%815 (Unsqueeze %811 (vec 0)))
  (let (%818 (Concat %814 %815 %3190 %3191 0))
  (let (%819 (Reshape %776 %818))
  (let (%820 (Transpose %819 (vec 0 2 1 3)))
  (let (%821 (Transpose %805 (vec 0 2 3 1)))
  (let (%822 (MatMul %791 %821))
  (let (%823 (Constant 8.0))
  (let (%824 (Div %822 %823))
  (let (%825 (Add %824 %385))
  (let (%826 (Softmax %825 3))
  (let (%827 (MatMul %826 %820))
  (let (%828 (Transpose %827 (vec 0 2 1 3)))
  (let (%829 (Shape %828))
  (let (%830 (Constant 0))
  (let (%831 (Gather %829 %830 0))
  (let (%832 (Shape %828))
  (let (%833 (Constant 1))
  (let (%834 (Gather %832 %833 0))
  (let (%836 (Unsqueeze %831 (vec 0)))
  (let (%837 (Unsqueeze %834 (vec 0)))
  (let (%839 (Concat %836 %837 %3192 0))
  (let (%840 (Reshape %828 %839))
  (let (%842 (MatMul %840 %3193))
  (let (%843 (Add %842 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%844 (Add %843 %767))
  (let (%846 (ReduceMean %844 (vec -1) 1))
  (let (%847 (Sub %844 %846))
  (let (%848 (Cast_FLOAT %847))
  (let (%850 (Pow %848 %3194))
  (let (%851 (ReduceMean %850 (vec -1) 1))
  (let (%852 (Constant 9.999999960041972e-13))
  (let (%853 (Add %851 %852))
  (let (%854 (Sqrt %853))
  (let (%855 (Div %847 %854))
  (let (%856 (Mul %855 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%857 (Add %856 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%859 (MatMul %857 %3195))
  (let (%860 (Add %859 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%861 (Constant 1.4142135381698608))
  (let (%862 (Div %860 %861))
  (let (%863 (Erf %862))
  (let (%864 (Constant 1.0))
  (let (%865 (Add %863 %864))
  (let (%866 (Mul %860 %865))
  (let (%867 (Constant 0.5))
  (let (%868 (Mul %866 %867))
  (let (%870 (MatMul %868 %3196))
  (let (%871 (Add %870 bert.encoder.layer.3.output.dense.bias))
  (let (%872 (Add %871 %857))
  (let (%874 (ReduceMean %872 (vec -1) 1))
  (let (%875 (Sub %872 %874))
  (let (%876 (Cast_FLOAT %875))
  (let (%878 (Pow %876 %3197))
  (let (%879 (ReduceMean %878 (vec -1) 1))
  (let (%880 (Constant 9.999999960041972e-13))
  (let (%881 (Add %879 %880))
  (let (%882 (Sqrt %881))
  (let (%883 (Div %875 %882))
  (let (%884 (Mul %883 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%885 (Add %884 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%887 (MatMul %885 %3198))
  (let (%888 (Add %887 bert.encoder.layer.4.attention.self.query.bias))
  (let (%890 (MatMul %885 %3199))
  (let (%891 (Add %890 bert.encoder.layer.4.attention.self.key.bias))
  (let (%893 (MatMul %885 %3200))
  (let (%894 (Add %893 bert.encoder.layer.4.attention.self.value.bias))
  (let (%895 (Shape %888))
  (let (%896 (Constant 0))
  (let (%897 (Gather %895 %896 0))
  (let (%898 (Shape %888))
  (let (%899 (Constant 1))
  (let (%900 (Gather %898 %899 0))
  (let (%903 (Unsqueeze %897 (vec 0)))
  (let (%904 (Unsqueeze %900 (vec 0)))
  (let (%907 (Concat %903 %904 %3201 %3202 0))
  (let (%908 (Reshape %888 %907))
  (let (%909 (Transpose %908 (vec 0 2 1 3)))
  (let (%910 (Shape %891))
  (let (%911 (Constant 0))
  (let (%912 (Gather %910 %911 0))
  (let (%913 (Shape %891))
  (let (%914 (Constant 1))
  (let (%915 (Gather %913 %914 0))
  (let (%918 (Unsqueeze %912 (vec 0)))
  (let (%919 (Unsqueeze %915 (vec 0)))
  (let (%922 (Concat %918 %919 %3203 %3204 0))
  (let (%923 (Reshape %891 %922))
  (let (%924 (Shape %894))
  (let (%925 (Constant 0))
  (let (%926 (Gather %924 %925 0))
  (let (%927 (Shape %894))
  (let (%928 (Constant 1))
  (let (%929 (Gather %927 %928 0))
  (let (%932 (Unsqueeze %926 (vec 0)))
  (let (%933 (Unsqueeze %929 (vec 0)))
  (let (%936 (Concat %932 %933 %3205 %3206 0))
  (let (%937 (Reshape %894 %936))
  (let (%938 (Transpose %937 (vec 0 2 1 3)))
  (let (%939 (Transpose %923 (vec 0 2 3 1)))
  (let (%940 (MatMul %909 %939))
  (let (%941 (Constant 8.0))
  (let (%942 (Div %940 %941))
  (let (%943 (Add %942 %385))
  (let (%944 (Softmax %943 3))
  (let (%945 (MatMul %944 %938))
  (let (%946 (Transpose %945 (vec 0 2 1 3)))
  (let (%947 (Shape %946))
  (let (%948 (Constant 0))
  (let (%949 (Gather %947 %948 0))
  (let (%950 (Shape %946))
  (let (%951 (Constant 1))
  (let (%952 (Gather %950 %951 0))
  (let (%954 (Unsqueeze %949 (vec 0)))
  (let (%955 (Unsqueeze %952 (vec 0)))
  (let (%957 (Concat %954 %955 %3207 0))
  (let (%958 (Reshape %946 %957))
  (let (%960 (MatMul %958 %3208))
  (let (%961 (Add %960 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%962 (Add %961 %885))
  (let (%964 (ReduceMean %962 (vec -1) 1))
  (let (%965 (Sub %962 %964))
  (let (%966 (Cast_FLOAT %965))
  (let (%968 (Pow %966 %3209))
  (let (%969 (ReduceMean %968 (vec -1) 1))
  (let (%970 (Constant 9.999999960041972e-13))
  (let (%971 (Add %969 %970))
  (let (%972 (Sqrt %971))
  (let (%973 (Div %965 %972))
  (let (%974 (Mul %973 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%975 (Add %974 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%977 (MatMul %975 %3210))
  (let (%978 (Add %977 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%979 (Constant 1.4142135381698608))
  (let (%980 (Div %978 %979))
  (let (%981 (Erf %980))
  (let (%982 (Constant 1.0))
  (let (%983 (Add %981 %982))
  (let (%984 (Mul %978 %983))
  (let (%985 (Constant 0.5))
  (let (%986 (Mul %984 %985))
  (let (%988 (MatMul %986 %3211))
  (let (%989 (Add %988 bert.encoder.layer.4.output.dense.bias))
  (let (%990 (Add %989 %975))
  (let (%992 (ReduceMean %990 (vec -1) 1))
  (let (%993 (Sub %990 %992))
  (let (%994 (Cast_FLOAT %993))
  (let (%996 (Pow %994 %3212))
  (let (%997 (ReduceMean %996 (vec -1) 1))
  (let (%998 (Constant 9.999999960041972e-13))
  (let (%999 (Add %997 %998))
  (let (%1000 (Sqrt %999))
  (let (%1001 (Div %993 %1000))
  (let (%1002 (Mul %1001 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%1003 (Add %1002 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%1005 (MatMul %1003 %3213))
  (let (%1006 (Add %1005 bert.encoder.layer.5.attention.self.query.bias))
  (let (%1008 (MatMul %1003 %3214))
  (let (%1009 (Add %1008 bert.encoder.layer.5.attention.self.key.bias))
  (let (%1011 (MatMul %1003 %3215))
  (let (%1012 (Add %1011 bert.encoder.layer.5.attention.self.value.bias))
  (let (%1013 (Shape %1006))
  (let (%1014 (Constant 0))
  (let (%1015 (Gather %1013 %1014 0))
  (let (%1016 (Shape %1006))
  (let (%1017 (Constant 1))
  (let (%1018 (Gather %1016 %1017 0))
  (let (%1021 (Unsqueeze %1015 (vec 0)))
  (let (%1022 (Unsqueeze %1018 (vec 0)))
  (let (%1025 (Concat %1021 %1022 %3216 %3217 0))
  (let (%1026 (Reshape %1006 %1025))
  (let (%1027 (Transpose %1026 (vec 0 2 1 3)))
  (let (%1028 (Shape %1009))
  (let (%1029 (Constant 0))
  (let (%1030 (Gather %1028 %1029 0))
  (let (%1031 (Shape %1009))
  (let (%1032 (Constant 1))
  (let (%1033 (Gather %1031 %1032 0))
  (let (%1036 (Unsqueeze %1030 (vec 0)))
  (let (%1037 (Unsqueeze %1033 (vec 0)))
  (let (%1040 (Concat %1036 %1037 %3218 %3219 0))
  (let (%1041 (Reshape %1009 %1040))
  (let (%1042 (Shape %1012))
  (let (%1043 (Constant 0))
  (let (%1044 (Gather %1042 %1043 0))
  (let (%1045 (Shape %1012))
  (let (%1046 (Constant 1))
  (let (%1047 (Gather %1045 %1046 0))
  (let (%1050 (Unsqueeze %1044 (vec 0)))
  (let (%1051 (Unsqueeze %1047 (vec 0)))
  (let (%1054 (Concat %1050 %1051 %3220 %3221 0))
  (let (%1055 (Reshape %1012 %1054))
  (let (%1056 (Transpose %1055 (vec 0 2 1 3)))
  (let (%1057 (Transpose %1041 (vec 0 2 3 1)))
  (let (%1058 (MatMul %1027 %1057))
  (let (%1059 (Constant 8.0))
  (let (%1060 (Div %1058 %1059))
  (let (%1061 (Add %1060 %385))
  (let (%1062 (Softmax %1061 3))
  (let (%1063 (MatMul %1062 %1056))
  (let (%1064 (Transpose %1063 (vec 0 2 1 3)))
  (let (%1065 (Shape %1064))
  (let (%1066 (Constant 0))
  (let (%1067 (Gather %1065 %1066 0))
  (let (%1068 (Shape %1064))
  (let (%1069 (Constant 1))
  (let (%1070 (Gather %1068 %1069 0))
  (let (%1072 (Unsqueeze %1067 (vec 0)))
  (let (%1073 (Unsqueeze %1070 (vec 0)))
  (let (%1075 (Concat %1072 %1073 %3222 0))
  (let (%1076 (Reshape %1064 %1075))
  (let (%1078 (MatMul %1076 %3223))
  (let (%1079 (Add %1078 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1080 (Add %1079 %1003))
  (let (%1082 (ReduceMean %1080 (vec -1) 1))
  (let (%1083 (Sub %1080 %1082))
  (let (%1084 (Cast_FLOAT %1083))
  (let (%1086 (Pow %1084 %3224))
  (let (%1087 (ReduceMean %1086 (vec -1) 1))
  (let (%1088 (Constant 9.999999960041972e-13))
  (let (%1089 (Add %1087 %1088))
  (let (%1090 (Sqrt %1089))
  (let (%1091 (Div %1083 %1090))
  (let (%1092 (Mul %1091 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1093 (Add %1092 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1095 (MatMul %1093 %3225))
  (let (%1096 (Add %1095 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1097 (Constant 1.4142135381698608))
  (let (%1098 (Div %1096 %1097))
  (let (%1099 (Erf %1098))
  (let (%1100 (Constant 1.0))
  (let (%1101 (Add %1099 %1100))
  (let (%1102 (Mul %1096 %1101))
  (let (%1103 (Constant 0.5))
  (let (%1104 (Mul %1102 %1103))
  (let (%1106 (MatMul %1104 %3226))
  (let (%1107 (Add %1106 bert.encoder.layer.5.output.dense.bias))
  (let (%1108 (Add %1107 %1093))
  (let (%1110 (ReduceMean %1108 (vec -1) 1))
  (let (%1111 (Sub %1108 %1110))
  (let (%1112 (Cast_FLOAT %1111))
  (let (%1114 (Pow %1112 %3227))
  (let (%1115 (ReduceMean %1114 (vec -1) 1))
  (let (%1116 (Constant 9.999999960041972e-13))
  (let (%1117 (Add %1115 %1116))
  (let (%1118 (Sqrt %1117))
  (let (%1119 (Div %1111 %1118))
  (let (%1120 (Mul %1119 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1121 (Add %1120 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1123 (MatMul %1121 %3228))
  (let (%1124 (Add %1123 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1126 (MatMul %1121 %3229))
  (let (%1127 (Add %1126 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1129 (MatMul %1121 %3230))
  (let (%1130 (Add %1129 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1131 (Shape %1124))
  (let (%1132 (Constant 0))
  (let (%1133 (Gather %1131 %1132 0))
  (let (%1134 (Shape %1124))
  (let (%1135 (Constant 1))
  (let (%1136 (Gather %1134 %1135 0))
  (let (%1139 (Unsqueeze %1133 (vec 0)))
  (let (%1140 (Unsqueeze %1136 (vec 0)))
  (let (%1143 (Concat %1139 %1140 %3231 %3232 0))
  (let (%1144 (Reshape %1124 %1143))
  (let (%1145 (Transpose %1144 (vec 0 2 1 3)))
  (let (%1146 (Shape %1127))
  (let (%1147 (Constant 0))
  (let (%1148 (Gather %1146 %1147 0))
  (let (%1149 (Shape %1127))
  (let (%1150 (Constant 1))
  (let (%1151 (Gather %1149 %1150 0))
  (let (%1154 (Unsqueeze %1148 (vec 0)))
  (let (%1155 (Unsqueeze %1151 (vec 0)))
  (let (%1158 (Concat %1154 %1155 %3233 %3234 0))
  (let (%1159 (Reshape %1127 %1158))
  (let (%1160 (Shape %1130))
  (let (%1161 (Constant 0))
  (let (%1162 (Gather %1160 %1161 0))
  (let (%1163 (Shape %1130))
  (let (%1164 (Constant 1))
  (let (%1165 (Gather %1163 %1164 0))
  (let (%1168 (Unsqueeze %1162 (vec 0)))
  (let (%1169 (Unsqueeze %1165 (vec 0)))
  (let (%1172 (Concat %1168 %1169 %3235 %3236 0))
  (let (%1173 (Reshape %1130 %1172))
  (let (%1174 (Transpose %1173 (vec 0 2 1 3)))
  (let (%1175 (Transpose %1159 (vec 0 2 3 1)))
  (let (%1176 (MatMul %1145 %1175))
  (let (%1177 (Constant 8.0))
  (let (%1178 (Div %1176 %1177))
  (let (%1179 (Add %1178 %385))
  (let (%1180 (Softmax %1179 3))
  (let (%1181 (MatMul %1180 %1174))
  (let (%1182 (Transpose %1181 (vec 0 2 1 3)))
  (let (%1183 (Shape %1182))
  (let (%1184 (Constant 0))
  (let (%1185 (Gather %1183 %1184 0))
  (let (%1186 (Shape %1182))
  (let (%1187 (Constant 1))
  (let (%1188 (Gather %1186 %1187 0))
  (let (%1190 (Unsqueeze %1185 (vec 0)))
  (let (%1191 (Unsqueeze %1188 (vec 0)))
  (let (%1193 (Concat %1190 %1191 %3237 0))
  (let (%1194 (Reshape %1182 %1193))
  (let (%1196 (MatMul %1194 %3238))
  (let (%1197 (Add %1196 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1198 (Add %1197 %1121))
  (let (%1200 (ReduceMean %1198 (vec -1) 1))
  (let (%1201 (Sub %1198 %1200))
  (let (%1202 (Cast_FLOAT %1201))
  (let (%1204 (Pow %1202 %3239))
  (let (%1205 (ReduceMean %1204 (vec -1) 1))
  (let (%1206 (Constant 9.999999960041972e-13))
  (let (%1207 (Add %1205 %1206))
  (let (%1208 (Sqrt %1207))
  (let (%1209 (Div %1201 %1208))
  (let (%1210 (Mul %1209 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1211 (Add %1210 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1213 (MatMul %1211 %3240))
  (let (%1214 (Add %1213 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1215 (Constant 1.4142135381698608))
  (let (%1216 (Div %1214 %1215))
  (let (%1217 (Erf %1216))
  (let (%1218 (Constant 1.0))
  (let (%1219 (Add %1217 %1218))
  (let (%1220 (Mul %1214 %1219))
  (let (%1221 (Constant 0.5))
  (let (%1222 (Mul %1220 %1221))
  (let (%1224 (MatMul %1222 %3241))
  (let (%1225 (Add %1224 bert.encoder.layer.6.output.dense.bias))
  (let (%1226 (Add %1225 %1211))
  (let (%1228 (ReduceMean %1226 (vec -1) 1))
  (let (%1229 (Sub %1226 %1228))
  (let (%1230 (Cast_FLOAT %1229))
  (let (%1232 (Pow %1230 %3242))
  (let (%1233 (ReduceMean %1232 (vec -1) 1))
  (let (%1234 (Constant 9.999999960041972e-13))
  (let (%1235 (Add %1233 %1234))
  (let (%1236 (Sqrt %1235))
  (let (%1237 (Div %1229 %1236))
  (let (%1238 (Mul %1237 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1239 (Add %1238 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1241 (MatMul %1239 %3243))
  (let (%1242 (Add %1241 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1244 (MatMul %1239 %3244))
  (let (%1245 (Add %1244 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1247 (MatMul %1239 %3245))
  (let (%1248 (Add %1247 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1249 (Shape %1242))
  (let (%1250 (Constant 0))
  (let (%1251 (Gather %1249 %1250 0))
  (let (%1252 (Shape %1242))
  (let (%1253 (Constant 1))
  (let (%1254 (Gather %1252 %1253 0))
  (let (%1257 (Unsqueeze %1251 (vec 0)))
  (let (%1258 (Unsqueeze %1254 (vec 0)))
  (let (%1261 (Concat %1257 %1258 %3246 %3247 0))
  (let (%1262 (Reshape %1242 %1261))
  (let (%1263 (Transpose %1262 (vec 0 2 1 3)))
  (let (%1264 (Shape %1245))
  (let (%1265 (Constant 0))
  (let (%1266 (Gather %1264 %1265 0))
  (let (%1267 (Shape %1245))
  (let (%1268 (Constant 1))
  (let (%1269 (Gather %1267 %1268 0))
  (let (%1272 (Unsqueeze %1266 (vec 0)))
  (let (%1273 (Unsqueeze %1269 (vec 0)))
  (let (%1276 (Concat %1272 %1273 %3248 %3249 0))
  (let (%1277 (Reshape %1245 %1276))
  (let (%1278 (Shape %1248))
  (let (%1279 (Constant 0))
  (let (%1280 (Gather %1278 %1279 0))
  (let (%1281 (Shape %1248))
  (let (%1282 (Constant 1))
  (let (%1283 (Gather %1281 %1282 0))
  (let (%1286 (Unsqueeze %1280 (vec 0)))
  (let (%1287 (Unsqueeze %1283 (vec 0)))
  (let (%1290 (Concat %1286 %1287 %3250 %3251 0))
  (let (%1291 (Reshape %1248 %1290))
  (let (%1292 (Transpose %1291 (vec 0 2 1 3)))
  (let (%1293 (Transpose %1277 (vec 0 2 3 1)))
  (let (%1294 (MatMul %1263 %1293))
  (let (%1295 (Constant 8.0))
  (let (%1296 (Div %1294 %1295))
  (let (%1297 (Add %1296 %385))
  (let (%1298 (Softmax %1297 3))
  (let (%1299 (MatMul %1298 %1292))
  (let (%1300 (Transpose %1299 (vec 0 2 1 3)))
  (let (%1301 (Shape %1300))
  (let (%1302 (Constant 0))
  (let (%1303 (Gather %1301 %1302 0))
  (let (%1304 (Shape %1300))
  (let (%1305 (Constant 1))
  (let (%1306 (Gather %1304 %1305 0))
  (let (%1308 (Unsqueeze %1303 (vec 0)))
  (let (%1309 (Unsqueeze %1306 (vec 0)))
  (let (%1311 (Concat %1308 %1309 %3252 0))
  (let (%1312 (Reshape %1300 %1311))
  (let (%1314 (MatMul %1312 %3253))
  (let (%1315 (Add %1314 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1316 (Add %1315 %1239))
  (let (%1318 (ReduceMean %1316 (vec -1) 1))
  (let (%1319 (Sub %1316 %1318))
  (let (%1320 (Cast_FLOAT %1319))
  (let (%1322 (Pow %1320 %3254))
  (let (%1323 (ReduceMean %1322 (vec -1) 1))
  (let (%1324 (Constant 9.999999960041972e-13))
  (let (%1325 (Add %1323 %1324))
  (let (%1326 (Sqrt %1325))
  (let (%1327 (Div %1319 %1326))
  (let (%1328 (Mul %1327 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1329 (Add %1328 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1331 (MatMul %1329 %3255))
  (let (%1332 (Add %1331 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1333 (Constant 1.4142135381698608))
  (let (%1334 (Div %1332 %1333))
  (let (%1335 (Erf %1334))
  (let (%1336 (Constant 1.0))
  (let (%1337 (Add %1335 %1336))
  (let (%1338 (Mul %1332 %1337))
  (let (%1339 (Constant 0.5))
  (let (%1340 (Mul %1338 %1339))
  (let (%1342 (MatMul %1340 %3256))
  (let (%1343 (Add %1342 bert.encoder.layer.7.output.dense.bias))
  (let (%1344 (Add %1343 %1329))
  (let (%1346 (ReduceMean %1344 (vec -1) 1))
  (let (%1347 (Sub %1344 %1346))
  (let (%1348 (Cast_FLOAT %1347))
  (let (%1350 (Pow %1348 %3257))
  (let (%1351 (ReduceMean %1350 (vec -1) 1))
  (let (%1352 (Constant 9.999999960041972e-13))
  (let (%1353 (Add %1351 %1352))
  (let (%1354 (Sqrt %1353))
  (let (%1355 (Div %1347 %1354))
  (let (%1356 (Mul %1355 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1357 (Add %1356 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1359 (MatMul %1357 %3258))
  (let (%1360 (Add %1359 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1362 (MatMul %1357 %3259))
  (let (%1363 (Add %1362 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1365 (MatMul %1357 %3260))
  (let (%1366 (Add %1365 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1367 (Shape %1360))
  (let (%1368 (Constant 0))
  (let (%1369 (Gather %1367 %1368 0))
  (let (%1370 (Shape %1360))
  (let (%1371 (Constant 1))
  (let (%1372 (Gather %1370 %1371 0))
  (let (%1375 (Unsqueeze %1369 (vec 0)))
  (let (%1376 (Unsqueeze %1372 (vec 0)))
  (let (%1379 (Concat %1375 %1376 %3261 %3262 0))
  (let (%1380 (Reshape %1360 %1379))
  (let (%1381 (Transpose %1380 (vec 0 2 1 3)))
  (let (%1382 (Shape %1363))
  (let (%1383 (Constant 0))
  (let (%1384 (Gather %1382 %1383 0))
  (let (%1385 (Shape %1363))
  (let (%1386 (Constant 1))
  (let (%1387 (Gather %1385 %1386 0))
  (let (%1390 (Unsqueeze %1384 (vec 0)))
  (let (%1391 (Unsqueeze %1387 (vec 0)))
  (let (%1394 (Concat %1390 %1391 %3263 %3264 0))
  (let (%1395 (Reshape %1363 %1394))
  (let (%1396 (Shape %1366))
  (let (%1397 (Constant 0))
  (let (%1398 (Gather %1396 %1397 0))
  (let (%1399 (Shape %1366))
  (let (%1400 (Constant 1))
  (let (%1401 (Gather %1399 %1400 0))
  (let (%1404 (Unsqueeze %1398 (vec 0)))
  (let (%1405 (Unsqueeze %1401 (vec 0)))
  (let (%1408 (Concat %1404 %1405 %3265 %3266 0))
  (let (%1409 (Reshape %1366 %1408))
  (let (%1410 (Transpose %1409 (vec 0 2 1 3)))
  (let (%1411 (Transpose %1395 (vec 0 2 3 1)))
  (let (%1412 (MatMul %1381 %1411))
  (let (%1413 (Constant 8.0))
  (let (%1414 (Div %1412 %1413))
  (let (%1415 (Add %1414 %385))
  (let (%1416 (Softmax %1415 3))
  (let (%1417 (MatMul %1416 %1410))
  (let (%1418 (Transpose %1417 (vec 0 2 1 3)))
  (let (%1419 (Shape %1418))
  (let (%1420 (Constant 0))
  (let (%1421 (Gather %1419 %1420 0))
  (let (%1422 (Shape %1418))
  (let (%1423 (Constant 1))
  (let (%1424 (Gather %1422 %1423 0))
  (let (%1426 (Unsqueeze %1421 (vec 0)))
  (let (%1427 (Unsqueeze %1424 (vec 0)))
  (let (%1429 (Concat %1426 %1427 %3267 0))
  (let (%1430 (Reshape %1418 %1429))
  (let (%1432 (MatMul %1430 %3268))
  (let (%1433 (Add %1432 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1434 (Add %1433 %1357))
  (let (%1436 (ReduceMean %1434 (vec -1) 1))
  (let (%1437 (Sub %1434 %1436))
  (let (%1438 (Cast_FLOAT %1437))
  (let (%1440 (Pow %1438 %3269))
  (let (%1441 (ReduceMean %1440 (vec -1) 1))
  (let (%1442 (Constant 9.999999960041972e-13))
  (let (%1443 (Add %1441 %1442))
  (let (%1444 (Sqrt %1443))
  (let (%1445 (Div %1437 %1444))
  (let (%1446 (Mul %1445 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1447 (Add %1446 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1449 (MatMul %1447 %3270))
  (let (%1450 (Add %1449 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1451 (Constant 1.4142135381698608))
  (let (%1452 (Div %1450 %1451))
  (let (%1453 (Erf %1452))
  (let (%1454 (Constant 1.0))
  (let (%1455 (Add %1453 %1454))
  (let (%1456 (Mul %1450 %1455))
  (let (%1457 (Constant 0.5))
  (let (%1458 (Mul %1456 %1457))
  (let (%1460 (MatMul %1458 %3271))
  (let (%1461 (Add %1460 bert.encoder.layer.8.output.dense.bias))
  (let (%1462 (Add %1461 %1447))
  (let (%1464 (ReduceMean %1462 (vec -1) 1))
  (let (%1465 (Sub %1462 %1464))
  (let (%1466 (Cast_FLOAT %1465))
  (let (%1468 (Pow %1466 %3272))
  (let (%1469 (ReduceMean %1468 (vec -1) 1))
  (let (%1470 (Constant 9.999999960041972e-13))
  (let (%1471 (Add %1469 %1470))
  (let (%1472 (Sqrt %1471))
  (let (%1473 (Div %1465 %1472))
  (let (%1474 (Mul %1473 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1475 (Add %1474 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1477 (MatMul %1475 %3273))
  (let (%1478 (Add %1477 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1480 (MatMul %1475 %3274))
  (let (%1481 (Add %1480 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1483 (MatMul %1475 %3275))
  (let (%1484 (Add %1483 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1485 (Shape %1478))
  (let (%1486 (Constant 0))
  (let (%1487 (Gather %1485 %1486 0))
  (let (%1488 (Shape %1478))
  (let (%1489 (Constant 1))
  (let (%1490 (Gather %1488 %1489 0))
  (let (%1493 (Unsqueeze %1487 (vec 0)))
  (let (%1494 (Unsqueeze %1490 (vec 0)))
  (let (%1497 (Concat %1493 %1494 %3276 %3277 0))
  (let (%1498 (Reshape %1478 %1497))
  (let (%1499 (Transpose %1498 (vec 0 2 1 3)))
  (let (%1500 (Shape %1481))
  (let (%1501 (Constant 0))
  (let (%1502 (Gather %1500 %1501 0))
  (let (%1503 (Shape %1481))
  (let (%1504 (Constant 1))
  (let (%1505 (Gather %1503 %1504 0))
  (let (%1508 (Unsqueeze %1502 (vec 0)))
  (let (%1509 (Unsqueeze %1505 (vec 0)))
  (let (%1512 (Concat %1508 %1509 %3278 %3279 0))
  (let (%1513 (Reshape %1481 %1512))
  (let (%1514 (Shape %1484))
  (let (%1515 (Constant 0))
  (let (%1516 (Gather %1514 %1515 0))
  (let (%1517 (Shape %1484))
  (let (%1518 (Constant 1))
  (let (%1519 (Gather %1517 %1518 0))
  (let (%1522 (Unsqueeze %1516 (vec 0)))
  (let (%1523 (Unsqueeze %1519 (vec 0)))
  (let (%1526 (Concat %1522 %1523 %3280 %3281 0))
  (let (%1527 (Reshape %1484 %1526))
  (let (%1528 (Transpose %1527 (vec 0 2 1 3)))
  (let (%1529 (Transpose %1513 (vec 0 2 3 1)))
  (let (%1530 (MatMul %1499 %1529))
  (let (%1531 (Constant 8.0))
  (let (%1532 (Div %1530 %1531))
  (let (%1533 (Add %1532 %385))
  (let (%1534 (Softmax %1533 3))
  (let (%1535 (MatMul %1534 %1528))
  (let (%1536 (Transpose %1535 (vec 0 2 1 3)))
  (let (%1537 (Shape %1536))
  (let (%1538 (Constant 0))
  (let (%1539 (Gather %1537 %1538 0))
  (let (%1540 (Shape %1536))
  (let (%1541 (Constant 1))
  (let (%1542 (Gather %1540 %1541 0))
  (let (%1544 (Unsqueeze %1539 (vec 0)))
  (let (%1545 (Unsqueeze %1542 (vec 0)))
  (let (%1547 (Concat %1544 %1545 %3282 0))
  (let (%1548 (Reshape %1536 %1547))
  (let (%1550 (MatMul %1548 %3283))
  (let (%1551 (Add %1550 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1552 (Add %1551 %1475))
  (let (%1554 (ReduceMean %1552 (vec -1) 1))
  (let (%1555 (Sub %1552 %1554))
  (let (%1556 (Cast_FLOAT %1555))
  (let (%1558 (Pow %1556 %3284))
  (let (%1559 (ReduceMean %1558 (vec -1) 1))
  (let (%1560 (Constant 9.999999960041972e-13))
  (let (%1561 (Add %1559 %1560))
  (let (%1562 (Sqrt %1561))
  (let (%1563 (Div %1555 %1562))
  (let (%1564 (Mul %1563 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1565 (Add %1564 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1567 (MatMul %1565 %3285))
  (let (%1568 (Add %1567 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1569 (Constant 1.4142135381698608))
  (let (%1570 (Div %1568 %1569))
  (let (%1571 (Erf %1570))
  (let (%1572 (Constant 1.0))
  (let (%1573 (Add %1571 %1572))
  (let (%1574 (Mul %1568 %1573))
  (let (%1575 (Constant 0.5))
  (let (%1576 (Mul %1574 %1575))
  (let (%1578 (MatMul %1576 %3286))
  (let (%1579 (Add %1578 bert.encoder.layer.9.output.dense.bias))
  (let (%1580 (Add %1579 %1565))
  (let (%1582 (ReduceMean %1580 (vec -1) 1))
  (let (%1583 (Sub %1580 %1582))
  (let (%1584 (Cast_FLOAT %1583))
  (let (%1586 (Pow %1584 %3287))
  (let (%1587 (ReduceMean %1586 (vec -1) 1))
  (let (%1588 (Constant 9.999999960041972e-13))
  (let (%1589 (Add %1587 %1588))
  (let (%1590 (Sqrt %1589))
  (let (%1591 (Div %1583 %1590))
  (let (%1592 (Mul %1591 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1593 (Add %1592 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1595 (MatMul %1593 %3288))
  (let (%1596 (Add %1595 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1598 (MatMul %1593 %3289))
  (let (%1599 (Add %1598 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1601 (MatMul %1593 %3290))
  (let (%1602 (Add %1601 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1603 (Shape %1596))
  (let (%1604 (Constant 0))
  (let (%1605 (Gather %1603 %1604 0))
  (let (%1606 (Shape %1596))
  (let (%1607 (Constant 1))
  (let (%1608 (Gather %1606 %1607 0))
  (let (%1611 (Unsqueeze %1605 (vec 0)))
  (let (%1612 (Unsqueeze %1608 (vec 0)))
  (let (%1615 (Concat %1611 %1612 %3291 %3292 0))
  (let (%1616 (Reshape %1596 %1615))
  (let (%1617 (Transpose %1616 (vec 0 2 1 3)))
  (let (%1618 (Shape %1599))
  (let (%1619 (Constant 0))
  (let (%1620 (Gather %1618 %1619 0))
  (let (%1621 (Shape %1599))
  (let (%1622 (Constant 1))
  (let (%1623 (Gather %1621 %1622 0))
  (let (%1626 (Unsqueeze %1620 (vec 0)))
  (let (%1627 (Unsqueeze %1623 (vec 0)))
  (let (%1630 (Concat %1626 %1627 %3293 %3294 0))
  (let (%1631 (Reshape %1599 %1630))
  (let (%1632 (Shape %1602))
  (let (%1633 (Constant 0))
  (let (%1634 (Gather %1632 %1633 0))
  (let (%1635 (Shape %1602))
  (let (%1636 (Constant 1))
  (let (%1637 (Gather %1635 %1636 0))
  (let (%1640 (Unsqueeze %1634 (vec 0)))
  (let (%1641 (Unsqueeze %1637 (vec 0)))
  (let (%1644 (Concat %1640 %1641 %3295 %3296 0))
  (let (%1645 (Reshape %1602 %1644))
  (let (%1646 (Transpose %1645 (vec 0 2 1 3)))
  (let (%1647 (Transpose %1631 (vec 0 2 3 1)))
  (let (%1648 (MatMul %1617 %1647))
  (let (%1649 (Constant 8.0))
  (let (%1650 (Div %1648 %1649))
  (let (%1651 (Add %1650 %385))
  (let (%1652 (Softmax %1651 3))
  (let (%1653 (MatMul %1652 %1646))
  (let (%1654 (Transpose %1653 (vec 0 2 1 3)))
  (let (%1655 (Shape %1654))
  (let (%1656 (Constant 0))
  (let (%1657 (Gather %1655 %1656 0))
  (let (%1658 (Shape %1654))
  (let (%1659 (Constant 1))
  (let (%1660 (Gather %1658 %1659 0))
  (let (%1662 (Unsqueeze %1657 (vec 0)))
  (let (%1663 (Unsqueeze %1660 (vec 0)))
  (let (%1665 (Concat %1662 %1663 %3297 0))
  (let (%1666 (Reshape %1654 %1665))
  (let (%1668 (MatMul %1666 %3298))
  (let (%1669 (Add %1668 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1670 (Add %1669 %1593))
  (let (%1672 (ReduceMean %1670 (vec -1) 1))
  (let (%1673 (Sub %1670 %1672))
  (let (%1674 (Cast_FLOAT %1673))
  (let (%1676 (Pow %1674 %3299))
  (let (%1677 (ReduceMean %1676 (vec -1) 1))
  (let (%1678 (Constant 9.999999960041972e-13))
  (let (%1679 (Add %1677 %1678))
  (let (%1680 (Sqrt %1679))
  (let (%1681 (Div %1673 %1680))
  (let (%1682 (Mul %1681 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1683 (Add %1682 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1685 (MatMul %1683 %3300))
  (let (%1686 (Add %1685 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1687 (Constant 1.4142135381698608))
  (let (%1688 (Div %1686 %1687))
  (let (%1689 (Erf %1688))
  (let (%1690 (Constant 1.0))
  (let (%1691 (Add %1689 %1690))
  (let (%1692 (Mul %1686 %1691))
  (let (%1693 (Constant 0.5))
  (let (%1694 (Mul %1692 %1693))
  (let (%1696 (MatMul %1694 %3301))
  (let (%1697 (Add %1696 bert.encoder.layer.10.output.dense.bias))
  (let (%1698 (Add %1697 %1683))
  (let (%1700 (ReduceMean %1698 (vec -1) 1))
  (let (%1701 (Sub %1698 %1700))
  (let (%1702 (Cast_FLOAT %1701))
  (let (%1704 (Pow %1702 %3302))
  (let (%1705 (ReduceMean %1704 (vec -1) 1))
  (let (%1706 (Constant 9.999999960041972e-13))
  (let (%1707 (Add %1705 %1706))
  (let (%1708 (Sqrt %1707))
  (let (%1709 (Div %1701 %1708))
  (let (%1710 (Mul %1709 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1711 (Add %1710 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1713 (MatMul %1711 %3303))
  (let (%1714 (Add %1713 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1716 (MatMul %1711 %3304))
  (let (%1717 (Add %1716 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1719 (MatMul %1711 %3305))
  (let (%1720 (Add %1719 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1721 (Shape %1714))
  (let (%1722 (Constant 0))
  (let (%1723 (Gather %1721 %1722 0))
  (let (%1724 (Shape %1714))
  (let (%1725 (Constant 1))
  (let (%1726 (Gather %1724 %1725 0))
  (let (%1729 (Unsqueeze %1723 (vec 0)))
  (let (%1730 (Unsqueeze %1726 (vec 0)))
  (let (%1733 (Concat %1729 %1730 %3306 %3307 0))
  (let (%1734 (Reshape %1714 %1733))
  (let (%1735 (Transpose %1734 (vec 0 2 1 3)))
  (let (%1736 (Shape %1717))
  (let (%1737 (Constant 0))
  (let (%1738 (Gather %1736 %1737 0))
  (let (%1739 (Shape %1717))
  (let (%1740 (Constant 1))
  (let (%1741 (Gather %1739 %1740 0))
  (let (%1744 (Unsqueeze %1738 (vec 0)))
  (let (%1745 (Unsqueeze %1741 (vec 0)))
  (let (%1748 (Concat %1744 %1745 %3308 %3309 0))
  (let (%1749 (Reshape %1717 %1748))
  (let (%1750 (Shape %1720))
  (let (%1751 (Constant 0))
  (let (%1752 (Gather %1750 %1751 0))
  (let (%1753 (Shape %1720))
  (let (%1754 (Constant 1))
  (let (%1755 (Gather %1753 %1754 0))
  (let (%1758 (Unsqueeze %1752 (vec 0)))
  (let (%1759 (Unsqueeze %1755 (vec 0)))
  (let (%1762 (Concat %1758 %1759 %3310 %3311 0))
  (let (%1763 (Reshape %1720 %1762))
  (let (%1764 (Transpose %1763 (vec 0 2 1 3)))
  (let (%1765 (Transpose %1749 (vec 0 2 3 1)))
  (let (%1766 (MatMul %1735 %1765))
  (let (%1767 (Constant 8.0))
  (let (%1768 (Div %1766 %1767))
  (let (%1769 (Add %1768 %385))
  (let (%1770 (Softmax %1769 3))
  (let (%1771 (MatMul %1770 %1764))
  (let (%1772 (Transpose %1771 (vec 0 2 1 3)))
  (let (%1773 (Shape %1772))
  (let (%1774 (Constant 0))
  (let (%1775 (Gather %1773 %1774 0))
  (let (%1776 (Shape %1772))
  (let (%1777 (Constant 1))
  (let (%1778 (Gather %1776 %1777 0))
  (let (%1780 (Unsqueeze %1775 (vec 0)))
  (let (%1781 (Unsqueeze %1778 (vec 0)))
  (let (%1783 (Concat %1780 %1781 %3312 0))
  (let (%1784 (Reshape %1772 %1783))
  (let (%1786 (MatMul %1784 %3313))
  (let (%1787 (Add %1786 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1788 (Add %1787 %1711))
  (let (%1790 (ReduceMean %1788 (vec -1) 1))
  (let (%1791 (Sub %1788 %1790))
  (let (%1792 (Cast_FLOAT %1791))
  (let (%1794 (Pow %1792 %3314))
  (let (%1795 (ReduceMean %1794 (vec -1) 1))
  (let (%1796 (Constant 9.999999960041972e-13))
  (let (%1797 (Add %1795 %1796))
  (let (%1798 (Sqrt %1797))
  (let (%1799 (Div %1791 %1798))
  (let (%1800 (Mul %1799 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1801 (Add %1800 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1803 (MatMul %1801 %3315))
  (let (%1804 (Add %1803 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1805 (Constant 1.4142135381698608))
  (let (%1806 (Div %1804 %1805))
  (let (%1807 (Erf %1806))
  (let (%1808 (Constant 1.0))
  (let (%1809 (Add %1807 %1808))
  (let (%1810 (Mul %1804 %1809))
  (let (%1811 (Constant 0.5))
  (let (%1812 (Mul %1810 %1811))
  (let (%1814 (MatMul %1812 %3316))
  (let (%1815 (Add %1814 bert.encoder.layer.11.output.dense.bias))
  (let (%1816 (Add %1815 %1801))
  (let (%1818 (ReduceMean %1816 (vec -1) 1))
  (let (%1819 (Sub %1816 %1818))
  (let (%1820 (Cast_FLOAT %1819))
  (let (%1822 (Pow %1820 %3317))
  (let (%1823 (ReduceMean %1822 (vec -1) 1))
  (let (%1824 (Constant 9.999999960041972e-13))
  (let (%1825 (Add %1823 %1824))
  (let (%1826 (Sqrt %1825))
  (let (%1827 (Div %1819 %1826))
  (let (%1828 (Mul %1827 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1829 (Add %1828 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1831 (MatMul %1829 %3318))
  (let (%1832 (Add %1831 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1834 (MatMul %1829 %3319))
  (let (%1835 (Add %1834 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1837 (MatMul %1829 %3320))
  (let (%1838 (Add %1837 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1839 (Shape %1832))
  (let (%1840 (Constant 0))
  (let (%1841 (Gather %1839 %1840 0))
  (let (%1842 (Shape %1832))
  (let (%1843 (Constant 1))
  (let (%1844 (Gather %1842 %1843 0))
  (let (%1847 (Unsqueeze %1841 (vec 0)))
  (let (%1848 (Unsqueeze %1844 (vec 0)))
  (let (%1851 (Concat %1847 %1848 %3321 %3322 0))
  (let (%1852 (Reshape %1832 %1851))
  (let (%1853 (Transpose %1852 (vec 0 2 1 3)))
  (let (%1854 (Shape %1835))
  (let (%1855 (Constant 0))
  (let (%1856 (Gather %1854 %1855 0))
  (let (%1857 (Shape %1835))
  (let (%1858 (Constant 1))
  (let (%1859 (Gather %1857 %1858 0))
  (let (%1862 (Unsqueeze %1856 (vec 0)))
  (let (%1863 (Unsqueeze %1859 (vec 0)))
  (let (%1866 (Concat %1862 %1863 %3323 %3324 0))
  (let (%1867 (Reshape %1835 %1866))
  (let (%1868 (Shape %1838))
  (let (%1869 (Constant 0))
  (let (%1870 (Gather %1868 %1869 0))
  (let (%1871 (Shape %1838))
  (let (%1872 (Constant 1))
  (let (%1873 (Gather %1871 %1872 0))
  (let (%1876 (Unsqueeze %1870 (vec 0)))
  (let (%1877 (Unsqueeze %1873 (vec 0)))
  (let (%1880 (Concat %1876 %1877 %3325 %3326 0))
  (let (%1881 (Reshape %1838 %1880))
  (let (%1882 (Transpose %1881 (vec 0 2 1 3)))
  (let (%1883 (Transpose %1867 (vec 0 2 3 1)))
  (let (%1884 (MatMul %1853 %1883))
  (let (%1885 (Constant 8.0))
  (let (%1886 (Div %1884 %1885))
  (let (%1887 (Add %1886 %385))
  (let (%1888 (Softmax %1887 3))
  (let (%1889 (MatMul %1888 %1882))
  (let (%1890 (Transpose %1889 (vec 0 2 1 3)))
  (let (%1891 (Shape %1890))
  (let (%1892 (Constant 0))
  (let (%1893 (Gather %1891 %1892 0))
  (let (%1894 (Shape %1890))
  (let (%1895 (Constant 1))
  (let (%1896 (Gather %1894 %1895 0))
  (let (%1898 (Unsqueeze %1893 (vec 0)))
  (let (%1899 (Unsqueeze %1896 (vec 0)))
  (let (%1901 (Concat %1898 %1899 %3327 0))
  (let (%1902 (Reshape %1890 %1901))
  (let (%1904 (MatMul %1902 %3328))
  (let (%1905 (Add %1904 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1906 (Add %1905 %1829))
  (let (%1908 (ReduceMean %1906 (vec -1) 1))
  (let (%1909 (Sub %1906 %1908))
  (let (%1910 (Cast_FLOAT %1909))
  (let (%1912 (Pow %1910 %3329))
  (let (%1913 (ReduceMean %1912 (vec -1) 1))
  (let (%1914 (Constant 9.999999960041972e-13))
  (let (%1915 (Add %1913 %1914))
  (let (%1916 (Sqrt %1915))
  (let (%1917 (Div %1909 %1916))
  (let (%1918 (Mul %1917 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1919 (Add %1918 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1921 (MatMul %1919 %3330))
  (let (%1922 (Add %1921 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1923 (Constant 1.4142135381698608))
  (let (%1924 (Div %1922 %1923))
  (let (%1925 (Erf %1924))
  (let (%1926 (Constant 1.0))
  (let (%1927 (Add %1925 %1926))
  (let (%1928 (Mul %1922 %1927))
  (let (%1929 (Constant 0.5))
  (let (%1930 (Mul %1928 %1929))
  (let (%1932 (MatMul %1930 %3331))
  (let (%1933 (Add %1932 bert.encoder.layer.12.output.dense.bias))
  (let (%1934 (Add %1933 %1919))
  (let (%1936 (ReduceMean %1934 (vec -1) 1))
  (let (%1937 (Sub %1934 %1936))
  (let (%1938 (Cast_FLOAT %1937))
  (let (%1940 (Pow %1938 %3332))
  (let (%1941 (ReduceMean %1940 (vec -1) 1))
  (let (%1942 (Constant 9.999999960041972e-13))
  (let (%1943 (Add %1941 %1942))
  (let (%1944 (Sqrt %1943))
  (let (%1945 (Div %1937 %1944))
  (let (%1946 (Mul %1945 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1947 (Add %1946 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1949 (MatMul %1947 %3333))
  (let (%1950 (Add %1949 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1952 (MatMul %1947 %3334))
  (let (%1953 (Add %1952 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1955 (MatMul %1947 %3335))
  (let (%1956 (Add %1955 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1957 (Shape %1950))
  (let (%1958 (Constant 0))
  (let (%1959 (Gather %1957 %1958 0))
  (let (%1960 (Shape %1950))
  (let (%1961 (Constant 1))
  (let (%1962 (Gather %1960 %1961 0))
  (let (%1965 (Unsqueeze %1959 (vec 0)))
  (let (%1966 (Unsqueeze %1962 (vec 0)))
  (let (%1969 (Concat %1965 %1966 %3336 %3337 0))
  (let (%1970 (Reshape %1950 %1969))
  (let (%1971 (Transpose %1970 (vec 0 2 1 3)))
  (let (%1972 (Shape %1953))
  (let (%1973 (Constant 0))
  (let (%1974 (Gather %1972 %1973 0))
  (let (%1975 (Shape %1953))
  (let (%1976 (Constant 1))
  (let (%1977 (Gather %1975 %1976 0))
  (let (%1980 (Unsqueeze %1974 (vec 0)))
  (let (%1981 (Unsqueeze %1977 (vec 0)))
  (let (%1984 (Concat %1980 %1981 %3338 %3339 0))
  (let (%1985 (Reshape %1953 %1984))
  (let (%1986 (Shape %1956))
  (let (%1987 (Constant 0))
  (let (%1988 (Gather %1986 %1987 0))
  (let (%1989 (Shape %1956))
  (let (%1990 (Constant 1))
  (let (%1991 (Gather %1989 %1990 0))
  (let (%1994 (Unsqueeze %1988 (vec 0)))
  (let (%1995 (Unsqueeze %1991 (vec 0)))
  (let (%1998 (Concat %1994 %1995 %3340 %3341 0))
  (let (%1999 (Reshape %1956 %1998))
  (let (%2000 (Transpose %1999 (vec 0 2 1 3)))
  (let (%2001 (Transpose %1985 (vec 0 2 3 1)))
  (let (%2002 (MatMul %1971 %2001))
  (let (%2003 (Constant 8.0))
  (let (%2004 (Div %2002 %2003))
  (let (%2005 (Add %2004 %385))
  (let (%2006 (Softmax %2005 3))
  (let (%2007 (MatMul %2006 %2000))
  (let (%2008 (Transpose %2007 (vec 0 2 1 3)))
  (let (%2009 (Shape %2008))
  (let (%2010 (Constant 0))
  (let (%2011 (Gather %2009 %2010 0))
  (let (%2012 (Shape %2008))
  (let (%2013 (Constant 1))
  (let (%2014 (Gather %2012 %2013 0))
  (let (%2016 (Unsqueeze %2011 (vec 0)))
  (let (%2017 (Unsqueeze %2014 (vec 0)))
  (let (%2019 (Concat %2016 %2017 %3342 0))
  (let (%2020 (Reshape %2008 %2019))
  (let (%2022 (MatMul %2020 %3343))
  (let (%2023 (Add %2022 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%2024 (Add %2023 %1947))
  (let (%2026 (ReduceMean %2024 (vec -1) 1))
  (let (%2027 (Sub %2024 %2026))
  (let (%2028 (Cast_FLOAT %2027))
  (let (%2030 (Pow %2028 %3344))
  (let (%2031 (ReduceMean %2030 (vec -1) 1))
  (let (%2032 (Constant 9.999999960041972e-13))
  (let (%2033 (Add %2031 %2032))
  (let (%2034 (Sqrt %2033))
  (let (%2035 (Div %2027 %2034))
  (let (%2036 (Mul %2035 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%2037 (Add %2036 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%2039 (MatMul %2037 %3345))
  (let (%2040 (Add %2039 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%2041 (Constant 1.4142135381698608))
  (let (%2042 (Div %2040 %2041))
  (let (%2043 (Erf %2042))
  (let (%2044 (Constant 1.0))
  (let (%2045 (Add %2043 %2044))
  (let (%2046 (Mul %2040 %2045))
  (let (%2047 (Constant 0.5))
  (let (%2048 (Mul %2046 %2047))
  (let (%2050 (MatMul %2048 %3346))
  (let (%2051 (Add %2050 bert.encoder.layer.13.output.dense.bias))
  (let (%2052 (Add %2051 %2037))
  (let (%2054 (ReduceMean %2052 (vec -1) 1))
  (let (%2055 (Sub %2052 %2054))
  (let (%2056 (Cast_FLOAT %2055))
  (let (%2058 (Pow %2056 %3347))
  (let (%2059 (ReduceMean %2058 (vec -1) 1))
  (let (%2060 (Constant 9.999999960041972e-13))
  (let (%2061 (Add %2059 %2060))
  (let (%2062 (Sqrt %2061))
  (let (%2063 (Div %2055 %2062))
  (let (%2064 (Mul %2063 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%2065 (Add %2064 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%2067 (MatMul %2065 %3348))
  (let (%2068 (Add %2067 bert.encoder.layer.14.attention.self.query.bias))
  (let (%2070 (MatMul %2065 %3349))
  (let (%2071 (Add %2070 bert.encoder.layer.14.attention.self.key.bias))
  (let (%2073 (MatMul %2065 %3350))
  (let (%2074 (Add %2073 bert.encoder.layer.14.attention.self.value.bias))
  (let (%2075 (Shape %2068))
  (let (%2076 (Constant 0))
  (let (%2077 (Gather %2075 %2076 0))
  (let (%2078 (Shape %2068))
  (let (%2079 (Constant 1))
  (let (%2080 (Gather %2078 %2079 0))
  (let (%2083 (Unsqueeze %2077 (vec 0)))
  (let (%2084 (Unsqueeze %2080 (vec 0)))
  (let (%2087 (Concat %2083 %2084 %3351 %3352 0))
  (let (%2088 (Reshape %2068 %2087))
  (let (%2089 (Transpose %2088 (vec 0 2 1 3)))
  (let (%2090 (Shape %2071))
  (let (%2091 (Constant 0))
  (let (%2092 (Gather %2090 %2091 0))
  (let (%2093 (Shape %2071))
  (let (%2094 (Constant 1))
  (let (%2095 (Gather %2093 %2094 0))
  (let (%2098 (Unsqueeze %2092 (vec 0)))
  (let (%2099 (Unsqueeze %2095 (vec 0)))
  (let (%2102 (Concat %2098 %2099 %3353 %3354 0))
  (let (%2103 (Reshape %2071 %2102))
  (let (%2104 (Shape %2074))
  (let (%2105 (Constant 0))
  (let (%2106 (Gather %2104 %2105 0))
  (let (%2107 (Shape %2074))
  (let (%2108 (Constant 1))
  (let (%2109 (Gather %2107 %2108 0))
  (let (%2112 (Unsqueeze %2106 (vec 0)))
  (let (%2113 (Unsqueeze %2109 (vec 0)))
  (let (%2116 (Concat %2112 %2113 %3355 %3356 0))
  (let (%2117 (Reshape %2074 %2116))
  (let (%2118 (Transpose %2117 (vec 0 2 1 3)))
  (let (%2119 (Transpose %2103 (vec 0 2 3 1)))
  (let (%2120 (MatMul %2089 %2119))
  (let (%2121 (Constant 8.0))
  (let (%2122 (Div %2120 %2121))
  (let (%2123 (Add %2122 %385))
  (let (%2124 (Softmax %2123 3))
  (let (%2125 (MatMul %2124 %2118))
  (let (%2126 (Transpose %2125 (vec 0 2 1 3)))
  (let (%2127 (Shape %2126))
  (let (%2128 (Constant 0))
  (let (%2129 (Gather %2127 %2128 0))
  (let (%2130 (Shape %2126))
  (let (%2131 (Constant 1))
  (let (%2132 (Gather %2130 %2131 0))
  (let (%2134 (Unsqueeze %2129 (vec 0)))
  (let (%2135 (Unsqueeze %2132 (vec 0)))
  (let (%2137 (Concat %2134 %2135 %3357 0))
  (let (%2138 (Reshape %2126 %2137))
  (let (%2140 (MatMul %2138 %3358))
  (let (%2141 (Add %2140 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2142 (Add %2141 %2065))
  (let (%2144 (ReduceMean %2142 (vec -1) 1))
  (let (%2145 (Sub %2142 %2144))
  (let (%2146 (Cast_FLOAT %2145))
  (let (%2148 (Pow %2146 %3359))
  (let (%2149 (ReduceMean %2148 (vec -1) 1))
  (let (%2150 (Constant 9.999999960041972e-13))
  (let (%2151 (Add %2149 %2150))
  (let (%2152 (Sqrt %2151))
  (let (%2153 (Div %2145 %2152))
  (let (%2154 (Mul %2153 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2155 (Add %2154 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2157 (MatMul %2155 %3360))
  (let (%2158 (Add %2157 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2159 (Constant 1.4142135381698608))
  (let (%2160 (Div %2158 %2159))
  (let (%2161 (Erf %2160))
  (let (%2162 (Constant 1.0))
  (let (%2163 (Add %2161 %2162))
  (let (%2164 (Mul %2158 %2163))
  (let (%2165 (Constant 0.5))
  (let (%2166 (Mul %2164 %2165))
  (let (%2168 (MatMul %2166 %3361))
  (let (%2169 (Add %2168 bert.encoder.layer.14.output.dense.bias))
  (let (%2170 (Add %2169 %2155))
  (let (%2172 (ReduceMean %2170 (vec -1) 1))
  (let (%2173 (Sub %2170 %2172))
  (let (%2174 (Cast_FLOAT %2173))
  (let (%2176 (Pow %2174 %3362))
  (let (%2177 (ReduceMean %2176 (vec -1) 1))
  (let (%2178 (Constant 9.999999960041972e-13))
  (let (%2179 (Add %2177 %2178))
  (let (%2180 (Sqrt %2179))
  (let (%2181 (Div %2173 %2180))
  (let (%2182 (Mul %2181 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2183 (Add %2182 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2185 (MatMul %2183 %3363))
  (let (%2186 (Add %2185 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2188 (MatMul %2183 %3364))
  (let (%2189 (Add %2188 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2191 (MatMul %2183 %3365))
  (let (%2192 (Add %2191 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2193 (Shape %2186))
  (let (%2194 (Constant 0))
  (let (%2195 (Gather %2193 %2194 0))
  (let (%2196 (Shape %2186))
  (let (%2197 (Constant 1))
  (let (%2198 (Gather %2196 %2197 0))
  (let (%2201 (Unsqueeze %2195 (vec 0)))
  (let (%2202 (Unsqueeze %2198 (vec 0)))
  (let (%2205 (Concat %2201 %2202 %3366 %3367 0))
  (let (%2206 (Reshape %2186 %2205))
  (let (%2207 (Transpose %2206 (vec 0 2 1 3)))
  (let (%2208 (Shape %2189))
  (let (%2209 (Constant 0))
  (let (%2210 (Gather %2208 %2209 0))
  (let (%2211 (Shape %2189))
  (let (%2212 (Constant 1))
  (let (%2213 (Gather %2211 %2212 0))
  (let (%2216 (Unsqueeze %2210 (vec 0)))
  (let (%2217 (Unsqueeze %2213 (vec 0)))
  (let (%2220 (Concat %2216 %2217 %3368 %3369 0))
  (let (%2221 (Reshape %2189 %2220))
  (let (%2222 (Shape %2192))
  (let (%2223 (Constant 0))
  (let (%2224 (Gather %2222 %2223 0))
  (let (%2225 (Shape %2192))
  (let (%2226 (Constant 1))
  (let (%2227 (Gather %2225 %2226 0))
  (let (%2230 (Unsqueeze %2224 (vec 0)))
  (let (%2231 (Unsqueeze %2227 (vec 0)))
  (let (%2234 (Concat %2230 %2231 %3370 %3371 0))
  (let (%2235 (Reshape %2192 %2234))
  (let (%2236 (Transpose %2235 (vec 0 2 1 3)))
  (let (%2237 (Transpose %2221 (vec 0 2 3 1)))
  (let (%2238 (MatMul %2207 %2237))
  (let (%2239 (Constant 8.0))
  (let (%2240 (Div %2238 %2239))
  (let (%2241 (Add %2240 %385))
  (let (%2242 (Softmax %2241 3))
  (let (%2243 (MatMul %2242 %2236))
  (let (%2244 (Transpose %2243 (vec 0 2 1 3)))
  (let (%2245 (Shape %2244))
  (let (%2246 (Constant 0))
  (let (%2247 (Gather %2245 %2246 0))
  (let (%2248 (Shape %2244))
  (let (%2249 (Constant 1))
  (let (%2250 (Gather %2248 %2249 0))
  (let (%2252 (Unsqueeze %2247 (vec 0)))
  (let (%2253 (Unsqueeze %2250 (vec 0)))
  (let (%2255 (Concat %2252 %2253 %3372 0))
  (let (%2256 (Reshape %2244 %2255))
  (let (%2258 (MatMul %2256 %3373))
  (let (%2259 (Add %2258 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2260 (Add %2259 %2183))
  (let (%2262 (ReduceMean %2260 (vec -1) 1))
  (let (%2263 (Sub %2260 %2262))
  (let (%2264 (Cast_FLOAT %2263))
  (let (%2266 (Pow %2264 %3374))
  (let (%2267 (ReduceMean %2266 (vec -1) 1))
  (let (%2268 (Constant 9.999999960041972e-13))
  (let (%2269 (Add %2267 %2268))
  (let (%2270 (Sqrt %2269))
  (let (%2271 (Div %2263 %2270))
  (let (%2272 (Mul %2271 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2273 (Add %2272 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2275 (MatMul %2273 %3375))
  (let (%2276 (Add %2275 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2277 (Constant 1.4142135381698608))
  (let (%2278 (Div %2276 %2277))
  (let (%2279 (Erf %2278))
  (let (%2280 (Constant 1.0))
  (let (%2281 (Add %2279 %2280))
  (let (%2282 (Mul %2276 %2281))
  (let (%2283 (Constant 0.5))
  (let (%2284 (Mul %2282 %2283))
  (let (%2286 (MatMul %2284 %3376))
  (let (%2287 (Add %2286 bert.encoder.layer.15.output.dense.bias))
  (let (%2288 (Add %2287 %2273))
  (let (%2290 (ReduceMean %2288 (vec -1) 1))
  (let (%2291 (Sub %2288 %2290))
  (let (%2292 (Cast_FLOAT %2291))
  (let (%2294 (Pow %2292 %3377))
  (let (%2295 (ReduceMean %2294 (vec -1) 1))
  (let (%2296 (Constant 9.999999960041972e-13))
  (let (%2297 (Add %2295 %2296))
  (let (%2298 (Sqrt %2297))
  (let (%2299 (Div %2291 %2298))
  (let (%2300 (Mul %2299 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2301 (Add %2300 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2303 (MatMul %2301 %3378))
  (let (%2304 (Add %2303 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2306 (MatMul %2301 %3379))
  (let (%2307 (Add %2306 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2309 (MatMul %2301 %3380))
  (let (%2310 (Add %2309 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2311 (Shape %2304))
  (let (%2312 (Constant 0))
  (let (%2313 (Gather %2311 %2312 0))
  (let (%2314 (Shape %2304))
  (let (%2315 (Constant 1))
  (let (%2316 (Gather %2314 %2315 0))
  (let (%2319 (Unsqueeze %2313 (vec 0)))
  (let (%2320 (Unsqueeze %2316 (vec 0)))
  (let (%2323 (Concat %2319 %2320 %3381 %3382 0))
  (let (%2324 (Reshape %2304 %2323))
  (let (%2325 (Transpose %2324 (vec 0 2 1 3)))
  (let (%2326 (Shape %2307))
  (let (%2327 (Constant 0))
  (let (%2328 (Gather %2326 %2327 0))
  (let (%2329 (Shape %2307))
  (let (%2330 (Constant 1))
  (let (%2331 (Gather %2329 %2330 0))
  (let (%2334 (Unsqueeze %2328 (vec 0)))
  (let (%2335 (Unsqueeze %2331 (vec 0)))
  (let (%2338 (Concat %2334 %2335 %3383 %3384 0))
  (let (%2339 (Reshape %2307 %2338))
  (let (%2340 (Shape %2310))
  (let (%2341 (Constant 0))
  (let (%2342 (Gather %2340 %2341 0))
  (let (%2343 (Shape %2310))
  (let (%2344 (Constant 1))
  (let (%2345 (Gather %2343 %2344 0))
  (let (%2348 (Unsqueeze %2342 (vec 0)))
  (let (%2349 (Unsqueeze %2345 (vec 0)))
  (let (%2352 (Concat %2348 %2349 %3385 %3386 0))
  (let (%2353 (Reshape %2310 %2352))
  (let (%2354 (Transpose %2353 (vec 0 2 1 3)))
  (let (%2355 (Transpose %2339 (vec 0 2 3 1)))
  (let (%2356 (MatMul %2325 %2355))
  (let (%2357 (Constant 8.0))
  (let (%2358 (Div %2356 %2357))
  (let (%2359 (Add %2358 %385))
  (let (%2360 (Softmax %2359 3))
  (let (%2361 (MatMul %2360 %2354))
  (let (%2362 (Transpose %2361 (vec 0 2 1 3)))
  (let (%2363 (Shape %2362))
  (let (%2364 (Constant 0))
  (let (%2365 (Gather %2363 %2364 0))
  (let (%2366 (Shape %2362))
  (let (%2367 (Constant 1))
  (let (%2368 (Gather %2366 %2367 0))
  (let (%2370 (Unsqueeze %2365 (vec 0)))
  (let (%2371 (Unsqueeze %2368 (vec 0)))
  (let (%2373 (Concat %2370 %2371 %3387 0))
  (let (%2374 (Reshape %2362 %2373))
  (let (%2376 (MatMul %2374 %3388))
  (let (%2377 (Add %2376 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2378 (Add %2377 %2301))
  (let (%2380 (ReduceMean %2378 (vec -1) 1))
  (let (%2381 (Sub %2378 %2380))
  (let (%2382 (Cast_FLOAT %2381))
  (let (%2384 (Pow %2382 %3389))
  (let (%2385 (ReduceMean %2384 (vec -1) 1))
  (let (%2386 (Constant 9.999999960041972e-13))
  (let (%2387 (Add %2385 %2386))
  (let (%2388 (Sqrt %2387))
  (let (%2389 (Div %2381 %2388))
  (let (%2390 (Mul %2389 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2391 (Add %2390 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2393 (MatMul %2391 %3390))
  (let (%2394 (Add %2393 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2395 (Constant 1.4142135381698608))
  (let (%2396 (Div %2394 %2395))
  (let (%2397 (Erf %2396))
  (let (%2398 (Constant 1.0))
  (let (%2399 (Add %2397 %2398))
  (let (%2400 (Mul %2394 %2399))
  (let (%2401 (Constant 0.5))
  (let (%2402 (Mul %2400 %2401))
  (let (%2404 (MatMul %2402 %3391))
  (let (%2405 (Add %2404 bert.encoder.layer.16.output.dense.bias))
  (let (%2406 (Add %2405 %2391))
  (let (%2408 (ReduceMean %2406 (vec -1) 1))
  (let (%2409 (Sub %2406 %2408))
  (let (%2410 (Cast_FLOAT %2409))
  (let (%2412 (Pow %2410 %3392))
  (let (%2413 (ReduceMean %2412 (vec -1) 1))
  (let (%2414 (Constant 9.999999960041972e-13))
  (let (%2415 (Add %2413 %2414))
  (let (%2416 (Sqrt %2415))
  (let (%2417 (Div %2409 %2416))
  (let (%2418 (Mul %2417 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2419 (Add %2418 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2421 (MatMul %2419 %3393))
  (let (%2422 (Add %2421 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2424 (MatMul %2419 %3394))
  (let (%2425 (Add %2424 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2427 (MatMul %2419 %3395))
  (let (%2428 (Add %2427 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2429 (Shape %2422))
  (let (%2430 (Constant 0))
  (let (%2431 (Gather %2429 %2430 0))
  (let (%2432 (Shape %2422))
  (let (%2433 (Constant 1))
  (let (%2434 (Gather %2432 %2433 0))
  (let (%2437 (Unsqueeze %2431 (vec 0)))
  (let (%2438 (Unsqueeze %2434 (vec 0)))
  (let (%2441 (Concat %2437 %2438 %3396 %3397 0))
  (let (%2442 (Reshape %2422 %2441))
  (let (%2443 (Transpose %2442 (vec 0 2 1 3)))
  (let (%2444 (Shape %2425))
  (let (%2445 (Constant 0))
  (let (%2446 (Gather %2444 %2445 0))
  (let (%2447 (Shape %2425))
  (let (%2448 (Constant 1))
  (let (%2449 (Gather %2447 %2448 0))
  (let (%2452 (Unsqueeze %2446 (vec 0)))
  (let (%2453 (Unsqueeze %2449 (vec 0)))
  (let (%2456 (Concat %2452 %2453 %3398 %3399 0))
  (let (%2457 (Reshape %2425 %2456))
  (let (%2458 (Shape %2428))
  (let (%2459 (Constant 0))
  (let (%2460 (Gather %2458 %2459 0))
  (let (%2461 (Shape %2428))
  (let (%2462 (Constant 1))
  (let (%2463 (Gather %2461 %2462 0))
  (let (%2466 (Unsqueeze %2460 (vec 0)))
  (let (%2467 (Unsqueeze %2463 (vec 0)))
  (let (%2470 (Concat %2466 %2467 %3400 %3401 0))
  (let (%2471 (Reshape %2428 %2470))
  (let (%2472 (Transpose %2471 (vec 0 2 1 3)))
  (let (%2473 (Transpose %2457 (vec 0 2 3 1)))
  (let (%2474 (MatMul %2443 %2473))
  (let (%2475 (Constant 8.0))
  (let (%2476 (Div %2474 %2475))
  (let (%2477 (Add %2476 %385))
  (let (%2478 (Softmax %2477 3))
  (let (%2479 (MatMul %2478 %2472))
  (let (%2480 (Transpose %2479 (vec 0 2 1 3)))
  (let (%2481 (Shape %2480))
  (let (%2482 (Constant 0))
  (let (%2483 (Gather %2481 %2482 0))
  (let (%2484 (Shape %2480))
  (let (%2485 (Constant 1))
  (let (%2486 (Gather %2484 %2485 0))
  (let (%2488 (Unsqueeze %2483 (vec 0)))
  (let (%2489 (Unsqueeze %2486 (vec 0)))
  (let (%2491 (Concat %2488 %2489 %3402 0))
  (let (%2492 (Reshape %2480 %2491))
  (let (%2494 (MatMul %2492 %3403))
  (let (%2495 (Add %2494 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2496 (Add %2495 %2419))
  (let (%2498 (ReduceMean %2496 (vec -1) 1))
  (let (%2499 (Sub %2496 %2498))
  (let (%2500 (Cast_FLOAT %2499))
  (let (%2502 (Pow %2500 %3404))
  (let (%2503 (ReduceMean %2502 (vec -1) 1))
  (let (%2504 (Constant 9.999999960041972e-13))
  (let (%2505 (Add %2503 %2504))
  (let (%2506 (Sqrt %2505))
  (let (%2507 (Div %2499 %2506))
  (let (%2508 (Mul %2507 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2509 (Add %2508 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2511 (MatMul %2509 %3405))
  (let (%2512 (Add %2511 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2513 (Constant 1.4142135381698608))
  (let (%2514 (Div %2512 %2513))
  (let (%2515 (Erf %2514))
  (let (%2516 (Constant 1.0))
  (let (%2517 (Add %2515 %2516))
  (let (%2518 (Mul %2512 %2517))
  (let (%2519 (Constant 0.5))
  (let (%2520 (Mul %2518 %2519))
  (let (%2522 (MatMul %2520 %3406))
  (let (%2523 (Add %2522 bert.encoder.layer.17.output.dense.bias))
  (let (%2524 (Add %2523 %2509))
  (let (%2526 (ReduceMean %2524 (vec -1) 1))
  (let (%2527 (Sub %2524 %2526))
  (let (%2528 (Cast_FLOAT %2527))
  (let (%2530 (Pow %2528 %3407))
  (let (%2531 (ReduceMean %2530 (vec -1) 1))
  (let (%2532 (Constant 9.999999960041972e-13))
  (let (%2533 (Add %2531 %2532))
  (let (%2534 (Sqrt %2533))
  (let (%2535 (Div %2527 %2534))
  (let (%2536 (Mul %2535 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2537 (Add %2536 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2539 (MatMul %2537 %3408))
  (let (%2540 (Add %2539 bert.encoder.layer.18.attention.self.query.bias))
  (let (%2542 (MatMul %2537 %3409))
  (let (%2543 (Add %2542 bert.encoder.layer.18.attention.self.key.bias))
  (let (%2545 (MatMul %2537 %3410))
  (let (%2546 (Add %2545 bert.encoder.layer.18.attention.self.value.bias))
  (let (%2547 (Shape %2540))
  (let (%2548 (Constant 0))
  (let (%2549 (Gather %2547 %2548 0))
  (let (%2550 (Shape %2540))
  (let (%2551 (Constant 1))
  (let (%2552 (Gather %2550 %2551 0))
  (let (%2555 (Unsqueeze %2549 (vec 0)))
  (let (%2556 (Unsqueeze %2552 (vec 0)))
  (let (%2559 (Concat %2555 %2556 %3411 %3412 0))
  (let (%2560 (Reshape %2540 %2559))
  (let (%2561 (Transpose %2560 (vec 0 2 1 3)))
  (let (%2562 (Shape %2543))
  (let (%2563 (Constant 0))
  (let (%2564 (Gather %2562 %2563 0))
  (let (%2565 (Shape %2543))
  (let (%2566 (Constant 1))
  (let (%2567 (Gather %2565 %2566 0))
  (let (%2570 (Unsqueeze %2564 (vec 0)))
  (let (%2571 (Unsqueeze %2567 (vec 0)))
  (let (%2574 (Concat %2570 %2571 %3413 %3414 0))
  (let (%2575 (Reshape %2543 %2574))
  (let (%2576 (Shape %2546))
  (let (%2577 (Constant 0))
  (let (%2578 (Gather %2576 %2577 0))
  (let (%2579 (Shape %2546))
  (let (%2580 (Constant 1))
  (let (%2581 (Gather %2579 %2580 0))
  (let (%2584 (Unsqueeze %2578 (vec 0)))
  (let (%2585 (Unsqueeze %2581 (vec 0)))
  (let (%2588 (Concat %2584 %2585 %3415 %3416 0))
  (let (%2589 (Reshape %2546 %2588))
  (let (%2590 (Transpose %2589 (vec 0 2 1 3)))
  (let (%2591 (Transpose %2575 (vec 0 2 3 1)))
  (let (%2592 (MatMul %2561 %2591))
  (let (%2593 (Constant 8.0))
  (let (%2594 (Div %2592 %2593))
  (let (%2595 (Add %2594 %385))
  (let (%2596 (Softmax %2595 3))
  (let (%2597 (MatMul %2596 %2590))
  (let (%2598 (Transpose %2597 (vec 0 2 1 3)))
  (let (%2599 (Shape %2598))
  (let (%2600 (Constant 0))
  (let (%2601 (Gather %2599 %2600 0))
  (let (%2602 (Shape %2598))
  (let (%2603 (Constant 1))
  (let (%2604 (Gather %2602 %2603 0))
  (let (%2606 (Unsqueeze %2601 (vec 0)))
  (let (%2607 (Unsqueeze %2604 (vec 0)))
  (let (%2609 (Concat %2606 %2607 %3417 0))
  (let (%2610 (Reshape %2598 %2609))
  (let (%2612 (MatMul %2610 %3418))
  (let (%2613 (Add %2612 bert.encoder.layer.18.attention.output.dense.bias))
  (let (%2614 (Add %2613 %2537))
  (let (%2616 (ReduceMean %2614 (vec -1) 1))
  (let (%2617 (Sub %2614 %2616))
  (let (%2618 (Cast_FLOAT %2617))
  (let (%2620 (Pow %2618 %3419))
  (let (%2621 (ReduceMean %2620 (vec -1) 1))
  (let (%2622 (Constant 9.999999960041972e-13))
  (let (%2623 (Add %2621 %2622))
  (let (%2624 (Sqrt %2623))
  (let (%2625 (Div %2617 %2624))
  (let (%2626 (Mul %2625 bert.encoder.layer.18.attention.output.LayerNorm.weight))
  (let (%2627 (Add %2626 bert.encoder.layer.18.attention.output.LayerNorm.bias))
  (let (%2629 (MatMul %2627 %3420))
  (let (%2630 (Add %2629 bert.encoder.layer.18.intermediate.dense.bias))
  (let (%2631 (Constant 1.4142135381698608))
  (let (%2632 (Div %2630 %2631))
  (let (%2633 (Erf %2632))
  (let (%2634 (Constant 1.0))
  (let (%2635 (Add %2633 %2634))
  (let (%2636 (Mul %2630 %2635))
  (let (%2637 (Constant 0.5))
  (let (%2638 (Mul %2636 %2637))
  (let (%2640 (MatMul %2638 %3421))
  (let (%2641 (Add %2640 bert.encoder.layer.18.output.dense.bias))
  (let (%2642 (Add %2641 %2627))
  (let (%2644 (ReduceMean %2642 (vec -1) 1))
  (let (%2645 (Sub %2642 %2644))
  (let (%2646 (Cast_FLOAT %2645))
  (let (%2648 (Pow %2646 %3422))
  (let (%2649 (ReduceMean %2648 (vec -1) 1))
  (let (%2650 (Constant 9.999999960041972e-13))
  (let (%2651 (Add %2649 %2650))
  (let (%2652 (Sqrt %2651))
  (let (%2653 (Div %2645 %2652))
  (let (%2654 (Mul %2653 bert.encoder.layer.18.output.LayerNorm.weight))
  (let (%2655 (Add %2654 bert.encoder.layer.18.output.LayerNorm.bias))
  (let (%2657 (MatMul %2655 %3423))
  (let (%2658 (Add %2657 bert.encoder.layer.19.attention.self.query.bias))
  (let (%2660 (MatMul %2655 %3424))
  (let (%2661 (Add %2660 bert.encoder.layer.19.attention.self.key.bias))
  (let (%2663 (MatMul %2655 %3425))
  (let (%2664 (Add %2663 bert.encoder.layer.19.attention.self.value.bias))
  (let (%2665 (Shape %2658))
  (let (%2666 (Constant 0))
  (let (%2667 (Gather %2665 %2666 0))
  (let (%2668 (Shape %2658))
  (let (%2669 (Constant 1))
  (let (%2670 (Gather %2668 %2669 0))
  (let (%2673 (Unsqueeze %2667 (vec 0)))
  (let (%2674 (Unsqueeze %2670 (vec 0)))
  (let (%2677 (Concat %2673 %2674 %3426 %3427 0))
  (let (%2678 (Reshape %2658 %2677))
  (let (%2679 (Transpose %2678 (vec 0 2 1 3)))
  (let (%2680 (Shape %2661))
  (let (%2681 (Constant 0))
  (let (%2682 (Gather %2680 %2681 0))
  (let (%2683 (Shape %2661))
  (let (%2684 (Constant 1))
  (let (%2685 (Gather %2683 %2684 0))
  (let (%2688 (Unsqueeze %2682 (vec 0)))
  (let (%2689 (Unsqueeze %2685 (vec 0)))
  (let (%2692 (Concat %2688 %2689 %3428 %3429 0))
  (let (%2693 (Reshape %2661 %2692))
  (let (%2694 (Shape %2664))
  (let (%2695 (Constant 0))
  (let (%2696 (Gather %2694 %2695 0))
  (let (%2697 (Shape %2664))
  (let (%2698 (Constant 1))
  (let (%2699 (Gather %2697 %2698 0))
  (let (%2702 (Unsqueeze %2696 (vec 0)))
  (let (%2703 (Unsqueeze %2699 (vec 0)))
  (let (%2706 (Concat %2702 %2703 %3430 %3431 0))
  (let (%2707 (Reshape %2664 %2706))
  (let (%2708 (Transpose %2707 (vec 0 2 1 3)))
  (let (%2709 (Transpose %2693 (vec 0 2 3 1)))
  (let (%2710 (MatMul %2679 %2709))
  (let (%2711 (Constant 8.0))
  (let (%2712 (Div %2710 %2711))
  (let (%2713 (Add %2712 %385))
  (let (%2714 (Softmax %2713 3))
  (let (%2715 (MatMul %2714 %2708))
  (let (%2716 (Transpose %2715 (vec 0 2 1 3)))
  (let (%2717 (Shape %2716))
  (let (%2718 (Constant 0))
  (let (%2719 (Gather %2717 %2718 0))
  (let (%2720 (Shape %2716))
  (let (%2721 (Constant 1))
  (let (%2722 (Gather %2720 %2721 0))
  (let (%2724 (Unsqueeze %2719 (vec 0)))
  (let (%2725 (Unsqueeze %2722 (vec 0)))
  (let (%2727 (Concat %2724 %2725 %3432 0))
  (let (%2728 (Reshape %2716 %2727))
  (let (%2730 (MatMul %2728 %3433))
  (let (%2731 (Add %2730 bert.encoder.layer.19.attention.output.dense.bias))
  (let (%2732 (Add %2731 %2655))
  (let (%2734 (ReduceMean %2732 (vec -1) 1))
  (let (%2735 (Sub %2732 %2734))
  (let (%2736 (Cast_FLOAT %2735))
  (let (%2738 (Pow %2736 %3434))
  (let (%2739 (ReduceMean %2738 (vec -1) 1))
  (let (%2740 (Constant 9.999999960041972e-13))
  (let (%2741 (Add %2739 %2740))
  (let (%2742 (Sqrt %2741))
  (let (%2743 (Div %2735 %2742))
  (let (%2744 (Mul %2743 bert.encoder.layer.19.attention.output.LayerNorm.weight))
  (let (%2745 (Add %2744 bert.encoder.layer.19.attention.output.LayerNorm.bias))
  (let (%2747 (MatMul %2745 %3435))
  (let (%2748 (Add %2747 bert.encoder.layer.19.intermediate.dense.bias))
  (let (%2749 (Constant 1.4142135381698608))
  (let (%2750 (Div %2748 %2749))
  (let (%2751 (Erf %2750))
  (let (%2752 (Constant 1.0))
  (let (%2753 (Add %2751 %2752))
  (let (%2754 (Mul %2748 %2753))
  (let (%2755 (Constant 0.5))
  (let (%2756 (Mul %2754 %2755))
  (let (%2758 (MatMul %2756 %3436))
  (let (%2759 (Add %2758 bert.encoder.layer.19.output.dense.bias))
  (let (%2760 (Add %2759 %2745))
  (let (%2762 (ReduceMean %2760 (vec -1) 1))
  (let (%2763 (Sub %2760 %2762))
  (let (%2764 (Cast_FLOAT %2763))
  (let (%2766 (Pow %2764 %3437))
  (let (%2767 (ReduceMean %2766 (vec -1) 1))
  (let (%2768 (Constant 9.999999960041972e-13))
  (let (%2769 (Add %2767 %2768))
  (let (%2770 (Sqrt %2769))
  (let (%2771 (Div %2763 %2770))
  (let (%2772 (Mul %2771 bert.encoder.layer.19.output.LayerNorm.weight))
  (let (%2773 (Add %2772 bert.encoder.layer.19.output.LayerNorm.bias))
  (let (%2775 (MatMul %2773 %3438))
  (let (%2776 (Add %2775 bert.encoder.layer.20.attention.self.query.bias))
  (let (%2778 (MatMul %2773 %3439))
  (let (%2779 (Add %2778 bert.encoder.layer.20.attention.self.key.bias))
  (let (%2781 (MatMul %2773 %3440))
  (let (%2782 (Add %2781 bert.encoder.layer.20.attention.self.value.bias))
  (let (%2783 (Shape %2776))
  (let (%2784 (Constant 0))
  (let (%2785 (Gather %2783 %2784 0))
  (let (%2786 (Shape %2776))
  (let (%2787 (Constant 1))
  (let (%2788 (Gather %2786 %2787 0))
  (let (%2791 (Unsqueeze %2785 (vec 0)))
  (let (%2792 (Unsqueeze %2788 (vec 0)))
  (let (%2795 (Concat %2791 %2792 %3441 %3442 0))
  (let (%2796 (Reshape %2776 %2795))
  (let (%2797 (Transpose %2796 (vec 0 2 1 3)))
  (let (%2798 (Shape %2779))
  (let (%2799 (Constant 0))
  (let (%2800 (Gather %2798 %2799 0))
  (let (%2801 (Shape %2779))
  (let (%2802 (Constant 1))
  (let (%2803 (Gather %2801 %2802 0))
  (let (%2806 (Unsqueeze %2800 (vec 0)))
  (let (%2807 (Unsqueeze %2803 (vec 0)))
  (let (%2810 (Concat %2806 %2807 %3443 %3444 0))
  (let (%2811 (Reshape %2779 %2810))
  (let (%2812 (Shape %2782))
  (let (%2813 (Constant 0))
  (let (%2814 (Gather %2812 %2813 0))
  (let (%2815 (Shape %2782))
  (let (%2816 (Constant 1))
  (let (%2817 (Gather %2815 %2816 0))
  (let (%2820 (Unsqueeze %2814 (vec 0)))
  (let (%2821 (Unsqueeze %2817 (vec 0)))
  (let (%2824 (Concat %2820 %2821 %3445 %3446 0))
  (let (%2825 (Reshape %2782 %2824))
  (let (%2826 (Transpose %2825 (vec 0 2 1 3)))
  (let (%2827 (Transpose %2811 (vec 0 2 3 1)))
  (let (%2828 (MatMul %2797 %2827))
  (let (%2829 (Constant 8.0))
  (let (%2830 (Div %2828 %2829))
  (let (%2831 (Add %2830 %385))
  (let (%2832 (Softmax %2831 3))
  (let (%2833 (MatMul %2832 %2826))
  (let (%2834 (Transpose %2833 (vec 0 2 1 3)))
  (let (%2835 (Shape %2834))
  (let (%2836 (Constant 0))
  (let (%2837 (Gather %2835 %2836 0))
  (let (%2838 (Shape %2834))
  (let (%2839 (Constant 1))
  (let (%2840 (Gather %2838 %2839 0))
  (let (%2842 (Unsqueeze %2837 (vec 0)))
  (let (%2843 (Unsqueeze %2840 (vec 0)))
  (let (%2845 (Concat %2842 %2843 %3447 0))
  (let (%2846 (Reshape %2834 %2845))
  (let (%2848 (MatMul %2846 %3448))
  (let (%2849 (Add %2848 bert.encoder.layer.20.attention.output.dense.bias))
  (let (%2850 (Add %2849 %2773))
  (let (%2852 (ReduceMean %2850 (vec -1) 1))
  (let (%2853 (Sub %2850 %2852))
  (let (%2854 (Cast_FLOAT %2853))
  (let (%2856 (Pow %2854 %3449))
  (let (%2857 (ReduceMean %2856 (vec -1) 1))
  (let (%2858 (Constant 9.999999960041972e-13))
  (let (%2859 (Add %2857 %2858))
  (let (%2860 (Sqrt %2859))
  (let (%2861 (Div %2853 %2860))
  (let (%2862 (Mul %2861 bert.encoder.layer.20.attention.output.LayerNorm.weight))
  (let (%2863 (Add %2862 bert.encoder.layer.20.attention.output.LayerNorm.bias))
  (let (%2865 (MatMul %2863 %3450))
  (let (%2866 (Add %2865 bert.encoder.layer.20.intermediate.dense.bias))
  (let (%2867 (Constant 1.4142135381698608))
  (let (%2868 (Div %2866 %2867))
  (let (%2869 (Erf %2868))
  (let (%2870 (Constant 1.0))
  (let (%2871 (Add %2869 %2870))
  (let (%2872 (Mul %2866 %2871))
  (let (%2873 (Constant 0.5))
  (let (%2874 (Mul %2872 %2873))
  (let (%2876 (MatMul %2874 %3451))
  (let (%2877 (Add %2876 bert.encoder.layer.20.output.dense.bias))
  (let (%2878 (Add %2877 %2863))
  (let (%2880 (ReduceMean %2878 (vec -1) 1))
  (let (%2881 (Sub %2878 %2880))
  (let (%2882 (Cast_FLOAT %2881))
  (let (%2884 (Pow %2882 %3452))
  (let (%2885 (ReduceMean %2884 (vec -1) 1))
  (let (%2886 (Constant 9.999999960041972e-13))
  (let (%2887 (Add %2885 %2886))
  (let (%2888 (Sqrt %2887))
  (let (%2889 (Div %2881 %2888))
  (let (%2890 (Mul %2889 bert.encoder.layer.20.output.LayerNorm.weight))
  (let (%2891 (Add %2890 bert.encoder.layer.20.output.LayerNorm.bias))
  (let (%2893 (MatMul %2891 %3453))
  (let (%2894 (Add %2893 bert.encoder.layer.21.attention.self.query.bias))
  (let (%2896 (MatMul %2891 %3454))
  (let (%2897 (Add %2896 bert.encoder.layer.21.attention.self.key.bias))
  (let (%2899 (MatMul %2891 %3455))
  (let (%2900 (Add %2899 bert.encoder.layer.21.attention.self.value.bias))
  (let (%2901 (Shape %2894))
  (let (%2902 (Constant 0))
  (let (%2903 (Gather %2901 %2902 0))
  (let (%2904 (Shape %2894))
  (let (%2905 (Constant 1))
  (let (%2906 (Gather %2904 %2905 0))
  (let (%2909 (Unsqueeze %2903 (vec 0)))
  (let (%2910 (Unsqueeze %2906 (vec 0)))
  (let (%2913 (Concat %2909 %2910 %3456 %3457 0))
  (let (%2914 (Reshape %2894 %2913))
  (let (%2915 (Transpose %2914 (vec 0 2 1 3)))
  (let (%2916 (Shape %2897))
  (let (%2917 (Constant 0))
  (let (%2918 (Gather %2916 %2917 0))
  (let (%2919 (Shape %2897))
  (let (%2920 (Constant 1))
  (let (%2921 (Gather %2919 %2920 0))
  (let (%2924 (Unsqueeze %2918 (vec 0)))
  (let (%2925 (Unsqueeze %2921 (vec 0)))
  (let (%2928 (Concat %2924 %2925 %3458 %3459 0))
  (let (%2929 (Reshape %2897 %2928))
  (let (%2930 (Shape %2900))
  (let (%2931 (Constant 0))
  (let (%2932 (Gather %2930 %2931 0))
  (let (%2933 (Shape %2900))
  (let (%2934 (Constant 1))
  (let (%2935 (Gather %2933 %2934 0))
  (let (%2938 (Unsqueeze %2932 (vec 0)))
  (let (%2939 (Unsqueeze %2935 (vec 0)))
  (let (%2942 (Concat %2938 %2939 %3460 %3461 0))
  (let (%2943 (Reshape %2900 %2942))
  (let (%2944 (Transpose %2943 (vec 0 2 1 3)))
  (let (%2945 (Transpose %2929 (vec 0 2 3 1)))
  (let (%2946 (MatMul %2915 %2945))
  (let (%2947 (Constant 8.0))
  (let (%2948 (Div %2946 %2947))
  (let (%2949 (Add %2948 %385))
  (let (%2950 (Softmax %2949 3))
  (let (%2951 (MatMul %2950 %2944))
  (let (%2952 (Transpose %2951 (vec 0 2 1 3)))
  (let (%2953 (Shape %2952))
  (let (%2954 (Constant 0))
  (let (%2955 (Gather %2953 %2954 0))
  (let (%2956 (Shape %2952))
  (let (%2957 (Constant 1))
  (let (%2958 (Gather %2956 %2957 0))
  (let (%2960 (Unsqueeze %2955 (vec 0)))
  (let (%2961 (Unsqueeze %2958 (vec 0)))
  (let (%2963 (Concat %2960 %2961 %3462 0))
  (let (%2964 (Reshape %2952 %2963))
  (let (%2966 (MatMul %2964 %3463))
  (let (%2967 (Add %2966 bert.encoder.layer.21.attention.output.dense.bias))
  (let (%2968 (Add %2967 %2891))
  (let (%2970 (ReduceMean %2968 (vec -1) 1))
  (let (%2971 (Sub %2968 %2970))
  (let (%2972 (Cast_FLOAT %2971))
  (let (%2974 (Pow %2972 %3464))
  (let (%2975 (ReduceMean %2974 (vec -1) 1))
  (let (%2976 (Constant 9.999999960041972e-13))
  (let (%2977 (Add %2975 %2976))
  (let (%2978 (Sqrt %2977))
  (let (%2979 (Div %2971 %2978))
  (let (%2980 (Mul %2979 bert.encoder.layer.21.attention.output.LayerNorm.weight))
  (let (%2981 (Add %2980 bert.encoder.layer.21.attention.output.LayerNorm.bias))
  (let (%2983 (MatMul %2981 %3465))
  (let (%2984 (Add %2983 bert.encoder.layer.21.intermediate.dense.bias))
  (let (%2985 (Constant 1.4142135381698608))
  (let (%2986 (Div %2984 %2985))
  (let (%2987 (Erf %2986))
  (let (%2988 (Constant 1.0))
  (let (%2989 (Add %2987 %2988))
  (let (%2990 (Mul %2984 %2989))
  (let (%2991 (Constant 0.5))
  (let (%2992 (Mul %2990 %2991))
  (let (%2994 (MatMul %2992 %3466))
  (let (%2995 (Add %2994 bert.encoder.layer.21.output.dense.bias))
  (let (%2996 (Add %2995 %2981))
  (let (%2998 (ReduceMean %2996 (vec -1) 1))
  (let (%2999 (Sub %2996 %2998))
  (let (%3000 (Cast_FLOAT %2999))
  (let (%3002 (Pow %3000 %3467))
  (let (%3003 (ReduceMean %3002 (vec -1) 1))
  (let (%3004 (Constant 9.999999960041972e-13))
  (let (%3005 (Add %3003 %3004))
  (let (%3006 (Sqrt %3005))
  (let (%3007 (Div %2999 %3006))
  (let (%3008 (Mul %3007 bert.encoder.layer.21.output.LayerNorm.weight))
  (let (%3009 (Add %3008 bert.encoder.layer.21.output.LayerNorm.bias))
  (let (%3011 (MatMul %3009 %3468))
  (let (%3012 (Add %3011 bert.encoder.layer.22.attention.self.query.bias))
  (let (%3014 (MatMul %3009 %3469))
  (let (%3015 (Add %3014 bert.encoder.layer.22.attention.self.key.bias))
  (let (%3017 (MatMul %3009 %3470))
  (let (%3018 (Add %3017 bert.encoder.layer.22.attention.self.value.bias))
  (let (%3019 (Shape %3012))
  (let (%3020 (Constant 0))
  (let (%3021 (Gather %3019 %3020 0))
  (let (%3022 (Shape %3012))
  (let (%3023 (Constant 1))
  (let (%3024 (Gather %3022 %3023 0))
  (let (%3027 (Unsqueeze %3021 (vec 0)))
  (let (%3028 (Unsqueeze %3024 (vec 0)))
  (let (%3031 (Concat %3027 %3028 %3471 %3472 0))
  (let (%3032 (Reshape %3012 %3031))
  (let (%3033 (Transpose %3032 (vec 0 2 1 3)))
  (let (%3034 (Shape %3015))
  (let (%3035 (Constant 0))
  (let (%3036 (Gather %3034 %3035 0))
  (let (%3037 (Shape %3015))
  (let (%3038 (Constant 1))
  (let (%3039 (Gather %3037 %3038 0))
  (let (%3042 (Unsqueeze %3036 (vec 0)))
  (let (%3043 (Unsqueeze %3039 (vec 0)))
  (let (%3046 (Concat %3042 %3043 %3473 %3474 0))
  (let (%3047 (Reshape %3015 %3046))
  (let (%3048 (Shape %3018))
  (let (%3049 (Constant 0))
  (let (%3050 (Gather %3048 %3049 0))
  (let (%3051 (Shape %3018))
  (let (%3052 (Constant 1))
  (let (%3053 (Gather %3051 %3052 0))
  (let (%3056 (Unsqueeze %3050 (vec 0)))
  (let (%3057 (Unsqueeze %3053 (vec 0)))
  (let (%3060 (Concat %3056 %3057 %3475 %3476 0))
  (let (%3061 (Reshape %3018 %3060))
  (let (%3062 (Transpose %3061 (vec 0 2 1 3)))
  (let (%3063 (Transpose %3047 (vec 0 2 3 1)))
  (let (%3064 (MatMul %3033 %3063))
  (let (%3065 (Constant 8.0))
  (let (%3066 (Div %3064 %3065))
  (let (%3067 (Add %3066 %385))
  (let (%3068 (Softmax %3067 3))
  (let (%3069 (MatMul %3068 %3062))
  (let (%3070 (Transpose %3069 (vec 0 2 1 3)))
  (let (%3071 (Shape %3070))
  (let (%3072 (Constant 0))
  (let (%3073 (Gather %3071 %3072 0))
  (let (%3074 (Shape %3070))
  (let (%3075 (Constant 1))
  (let (%3076 (Gather %3074 %3075 0))
  (let (%3078 (Unsqueeze %3073 (vec 0)))
  (let (%3079 (Unsqueeze %3076 (vec 0)))
  (let (%3081 (Concat %3078 %3079 %3477 0))
  (let (%3082 (Reshape %3070 %3081))
  (let (%3084 (MatMul %3082 %3478))
  (let (%3085 (Add %3084 bert.encoder.layer.22.attention.output.dense.bias))
  (let (%3086 (Add %3085 %3009))
  (let (%3088 (ReduceMean %3086 (vec -1) 1))
  (let (%3089 (Sub %3086 %3088))
  (let (%3090 (Cast_FLOAT %3089))
  (let (%3092 (Pow %3090 %3479))
  (let (%3093 (ReduceMean %3092 (vec -1) 1))
  (let (%3094 (Constant 9.999999960041972e-13))
  (let (%3095 (Add %3093 %3094))
  (let (%3096 (Sqrt %3095))
  (let (%3097 (Div %3089 %3096))
  (let (%3098 (Mul %3097 bert.encoder.layer.22.attention.output.LayerNorm.weight))
  (let (%3099 (Add %3098 bert.encoder.layer.22.attention.output.LayerNorm.bias))
  (let (%3101 (MatMul %3099 %3480))
  (let (%3102 (Add %3101 bert.encoder.layer.22.intermediate.dense.bias))
  (let (%3103 (Constant 1.4142135381698608))
  (let (%3104 (Div %3102 %3103))
  (let (%3105 (Erf %3104))
  (let (%3106 (Constant 1.0))
  (let (%3107 (Add %3105 %3106))
  (let (%3108 (Mul %3102 %3107))
  (let (%3109 (Constant 0.5))
  (let (%3110 (Mul %3108 %3109))
  (let (%3112 (MatMul %3110 %3481))
  (let (%3113 (Add %3112 bert.encoder.layer.22.output.dense.bias))
  (let (%3114 (Add %3113 %3099))
  (let (%3116 (ReduceMean %3114 (vec -1) 1))
  (let (%3117 (Sub %3114 %3116))
  (let (%3118 (Cast_FLOAT %3117))
  (let (%3120 (Pow %3118 %3482))
  (let (%3121 (ReduceMean %3120 (vec -1) 1))
  (let (%3122 (Constant 9.999999960041972e-13))
  (let (%3123 (Add %3121 %3122))
  (let (%3124 (Sqrt %3123))
  (let (%3125 (Div %3117 %3124))
  (let (%3126 (Mul %3125 bert.encoder.layer.22.output.LayerNorm.weight))
  (let (%3127 (Add %3126 bert.encoder.layer.22.output.LayerNorm.bias))
  (let (%3129 (MatMul %3127 %3483))
  (let (%3130 (Add %3129 qa_outputs.bias))
  (let ((%3131 %3132) (Split %3130 (vec 1 1) -1))
  (let (output_0 (Squeeze %3131 (vec -1)))
  (let (output_1 (Squeeze %3132 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

