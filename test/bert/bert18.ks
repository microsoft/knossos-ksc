;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert18.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2465 (vec 0))
  (let (%2466 (vec 1))
  (let (%2467 2.0)
  (let (%2468 (load-from-onnx-float32 768 768 "%2468"))
  (let (%2469 (load-from-onnx-float32 768 768 "%2469"))
  (let (%2470 (load-from-onnx-float32 768 768 "%2470"))
  (let (%2471 (vec 12))
  (let (%2472 (vec 64))
  (let (%2473 (vec 12))
  (let (%2474 (vec 64))
  (let (%2475 (vec 12))
  (let (%2476 (vec 64))
  (let (%2477 (vec 768))
  (let (%2478 (load-from-onnx-float32 768 768 "%2478"))
  (let (%2479 2.0)
  (let (%2480 (load-from-onnx-float32 768 3072 "%2480"))
  (let (%2481 (load-from-onnx-float32 3072 768 "%2481"))
  (let (%2482 2.0)
  (let (%2483 (load-from-onnx-float32 768 768 "%2483"))
  (let (%2484 (load-from-onnx-float32 768 768 "%2484"))
  (let (%2485 (load-from-onnx-float32 768 768 "%2485"))
  (let (%2486 (vec 12))
  (let (%2487 (vec 64))
  (let (%2488 (vec 12))
  (let (%2489 (vec 64))
  (let (%2490 (vec 12))
  (let (%2491 (vec 64))
  (let (%2492 (vec 768))
  (let (%2493 (load-from-onnx-float32 768 768 "%2493"))
  (let (%2494 2.0)
  (let (%2495 (load-from-onnx-float32 768 3072 "%2495"))
  (let (%2496 (load-from-onnx-float32 3072 768 "%2496"))
  (let (%2497 2.0)
  (let (%2498 (load-from-onnx-float32 768 768 "%2498"))
  (let (%2499 (load-from-onnx-float32 768 768 "%2499"))
  (let (%2500 (load-from-onnx-float32 768 768 "%2500"))
  (let (%2501 (vec 12))
  (let (%2502 (vec 64))
  (let (%2503 (vec 12))
  (let (%2504 (vec 64))
  (let (%2505 (vec 12))
  (let (%2506 (vec 64))
  (let (%2507 (vec 768))
  (let (%2508 (load-from-onnx-float32 768 768 "%2508"))
  (let (%2509 2.0)
  (let (%2510 (load-from-onnx-float32 768 3072 "%2510"))
  (let (%2511 (load-from-onnx-float32 3072 768 "%2511"))
  (let (%2512 2.0)
  (let (%2513 (load-from-onnx-float32 768 768 "%2513"))
  (let (%2514 (load-from-onnx-float32 768 768 "%2514"))
  (let (%2515 (load-from-onnx-float32 768 768 "%2515"))
  (let (%2516 (vec 12))
  (let (%2517 (vec 64))
  (let (%2518 (vec 12))
  (let (%2519 (vec 64))
  (let (%2520 (vec 12))
  (let (%2521 (vec 64))
  (let (%2522 (vec 768))
  (let (%2523 (load-from-onnx-float32 768 768 "%2523"))
  (let (%2524 2.0)
  (let (%2525 (load-from-onnx-float32 768 3072 "%2525"))
  (let (%2526 (load-from-onnx-float32 3072 768 "%2526"))
  (let (%2527 2.0)
  (let (%2528 (load-from-onnx-float32 768 768 "%2528"))
  (let (%2529 (load-from-onnx-float32 768 768 "%2529"))
  (let (%2530 (load-from-onnx-float32 768 768 "%2530"))
  (let (%2531 (vec 12))
  (let (%2532 (vec 64))
  (let (%2533 (vec 12))
  (let (%2534 (vec 64))
  (let (%2535 (vec 12))
  (let (%2536 (vec 64))
  (let (%2537 (vec 768))
  (let (%2538 (load-from-onnx-float32 768 768 "%2538"))
  (let (%2539 2.0)
  (let (%2540 (load-from-onnx-float32 768 3072 "%2540"))
  (let (%2541 (load-from-onnx-float32 3072 768 "%2541"))
  (let (%2542 2.0)
  (let (%2543 (load-from-onnx-float32 768 768 "%2543"))
  (let (%2544 (load-from-onnx-float32 768 768 "%2544"))
  (let (%2545 (load-from-onnx-float32 768 768 "%2545"))
  (let (%2546 (vec 12))
  (let (%2547 (vec 64))
  (let (%2548 (vec 12))
  (let (%2549 (vec 64))
  (let (%2550 (vec 12))
  (let (%2551 (vec 64))
  (let (%2552 (vec 768))
  (let (%2553 (load-from-onnx-float32 768 768 "%2553"))
  (let (%2554 2.0)
  (let (%2555 (load-from-onnx-float32 768 3072 "%2555"))
  (let (%2556 (load-from-onnx-float32 3072 768 "%2556"))
  (let (%2557 2.0)
  (let (%2558 (load-from-onnx-float32 768 768 "%2558"))
  (let (%2559 (load-from-onnx-float32 768 768 "%2559"))
  (let (%2560 (load-from-onnx-float32 768 768 "%2560"))
  (let (%2561 (vec 12))
  (let (%2562 (vec 64))
  (let (%2563 (vec 12))
  (let (%2564 (vec 64))
  (let (%2565 (vec 12))
  (let (%2566 (vec 64))
  (let (%2567 (vec 768))
  (let (%2568 (load-from-onnx-float32 768 768 "%2568"))
  (let (%2569 2.0)
  (let (%2570 (load-from-onnx-float32 768 3072 "%2570"))
  (let (%2571 (load-from-onnx-float32 3072 768 "%2571"))
  (let (%2572 2.0)
  (let (%2573 (load-from-onnx-float32 768 768 "%2573"))
  (let (%2574 (load-from-onnx-float32 768 768 "%2574"))
  (let (%2575 (load-from-onnx-float32 768 768 "%2575"))
  (let (%2576 (vec 12))
  (let (%2577 (vec 64))
  (let (%2578 (vec 12))
  (let (%2579 (vec 64))
  (let (%2580 (vec 12))
  (let (%2581 (vec 64))
  (let (%2582 (vec 768))
  (let (%2583 (load-from-onnx-float32 768 768 "%2583"))
  (let (%2584 2.0)
  (let (%2585 (load-from-onnx-float32 768 3072 "%2585"))
  (let (%2586 (load-from-onnx-float32 3072 768 "%2586"))
  (let (%2587 2.0)
  (let (%2588 (load-from-onnx-float32 768 768 "%2588"))
  (let (%2589 (load-from-onnx-float32 768 768 "%2589"))
  (let (%2590 (load-from-onnx-float32 768 768 "%2590"))
  (let (%2591 (vec 12))
  (let (%2592 (vec 64))
  (let (%2593 (vec 12))
  (let (%2594 (vec 64))
  (let (%2595 (vec 12))
  (let (%2596 (vec 64))
  (let (%2597 (vec 768))
  (let (%2598 (load-from-onnx-float32 768 768 "%2598"))
  (let (%2599 2.0)
  (let (%2600 (load-from-onnx-float32 768 3072 "%2600"))
  (let (%2601 (load-from-onnx-float32 3072 768 "%2601"))
  (let (%2602 2.0)
  (let (%2603 (load-from-onnx-float32 768 768 "%2603"))
  (let (%2604 (load-from-onnx-float32 768 768 "%2604"))
  (let (%2605 (load-from-onnx-float32 768 768 "%2605"))
  (let (%2606 (vec 12))
  (let (%2607 (vec 64))
  (let (%2608 (vec 12))
  (let (%2609 (vec 64))
  (let (%2610 (vec 12))
  (let (%2611 (vec 64))
  (let (%2612 (vec 768))
  (let (%2613 (load-from-onnx-float32 768 768 "%2613"))
  (let (%2614 2.0)
  (let (%2615 (load-from-onnx-float32 768 3072 "%2615"))
  (let (%2616 (load-from-onnx-float32 3072 768 "%2616"))
  (let (%2617 2.0)
  (let (%2618 (load-from-onnx-float32 768 768 "%2618"))
  (let (%2619 (load-from-onnx-float32 768 768 "%2619"))
  (let (%2620 (load-from-onnx-float32 768 768 "%2620"))
  (let (%2621 (vec 12))
  (let (%2622 (vec 64))
  (let (%2623 (vec 12))
  (let (%2624 (vec 64))
  (let (%2625 (vec 12))
  (let (%2626 (vec 64))
  (let (%2627 (vec 768))
  (let (%2628 (load-from-onnx-float32 768 768 "%2628"))
  (let (%2629 2.0)
  (let (%2630 (load-from-onnx-float32 768 3072 "%2630"))
  (let (%2631 (load-from-onnx-float32 3072 768 "%2631"))
  (let (%2632 2.0)
  (let (%2633 (load-from-onnx-float32 768 768 "%2633"))
  (let (%2634 (load-from-onnx-float32 768 768 "%2634"))
  (let (%2635 (load-from-onnx-float32 768 768 "%2635"))
  (let (%2636 (vec 12))
  (let (%2637 (vec 64))
  (let (%2638 (vec 12))
  (let (%2639 (vec 64))
  (let (%2640 (vec 12))
  (let (%2641 (vec 64))
  (let (%2642 (vec 768))
  (let (%2643 (load-from-onnx-float32 768 768 "%2643"))
  (let (%2644 2.0)
  (let (%2645 (load-from-onnx-float32 768 3072 "%2645"))
  (let (%2646 (load-from-onnx-float32 3072 768 "%2646"))
  (let (%2647 2.0)
  (let (%2648 (load-from-onnx-float32 768 768 "%2648"))
  (let (%2649 (load-from-onnx-float32 768 768 "%2649"))
  (let (%2650 (load-from-onnx-float32 768 768 "%2650"))
  (let (%2651 (vec 12))
  (let (%2652 (vec 64))
  (let (%2653 (vec 12))
  (let (%2654 (vec 64))
  (let (%2655 (vec 12))
  (let (%2656 (vec 64))
  (let (%2657 (vec 768))
  (let (%2658 (load-from-onnx-float32 768 768 "%2658"))
  (let (%2659 2.0)
  (let (%2660 (load-from-onnx-float32 768 3072 "%2660"))
  (let (%2661 (load-from-onnx-float32 3072 768 "%2661"))
  (let (%2662 2.0)
  (let (%2663 (load-from-onnx-float32 768 768 "%2663"))
  (let (%2664 (load-from-onnx-float32 768 768 "%2664"))
  (let (%2665 (load-from-onnx-float32 768 768 "%2665"))
  (let (%2666 (vec 12))
  (let (%2667 (vec 64))
  (let (%2668 (vec 12))
  (let (%2669 (vec 64))
  (let (%2670 (vec 12))
  (let (%2671 (vec 64))
  (let (%2672 (vec 768))
  (let (%2673 (load-from-onnx-float32 768 768 "%2673"))
  (let (%2674 2.0)
  (let (%2675 (load-from-onnx-float32 768 3072 "%2675"))
  (let (%2676 (load-from-onnx-float32 3072 768 "%2676"))
  (let (%2677 2.0)
  (let (%2678 (load-from-onnx-float32 768 768 "%2678"))
  (let (%2679 (load-from-onnx-float32 768 768 "%2679"))
  (let (%2680 (load-from-onnx-float32 768 768 "%2680"))
  (let (%2681 (vec 12))
  (let (%2682 (vec 64))
  (let (%2683 (vec 12))
  (let (%2684 (vec 64))
  (let (%2685 (vec 12))
  (let (%2686 (vec 64))
  (let (%2687 (vec 768))
  (let (%2688 (load-from-onnx-float32 768 768 "%2688"))
  (let (%2689 2.0)
  (let (%2690 (load-from-onnx-float32 768 3072 "%2690"))
  (let (%2691 (load-from-onnx-float32 3072 768 "%2691"))
  (let (%2692 2.0)
  (let (%2693 (load-from-onnx-float32 768 768 "%2693"))
  (let (%2694 (load-from-onnx-float32 768 768 "%2694"))
  (let (%2695 (load-from-onnx-float32 768 768 "%2695"))
  (let (%2696 (vec 12))
  (let (%2697 (vec 64))
  (let (%2698 (vec 12))
  (let (%2699 (vec 64))
  (let (%2700 (vec 12))
  (let (%2701 (vec 64))
  (let (%2702 (vec 768))
  (let (%2703 (load-from-onnx-float32 768 768 "%2703"))
  (let (%2704 2.0)
  (let (%2705 (load-from-onnx-float32 768 3072 "%2705"))
  (let (%2706 (load-from-onnx-float32 3072 768 "%2706"))
  (let (%2707 2.0)
  (let (%2708 (load-from-onnx-float32 768 768 "%2708"))
  (let (%2709 (load-from-onnx-float32 768 768 "%2709"))
  (let (%2710 (load-from-onnx-float32 768 768 "%2710"))
  (let (%2711 (vec 12))
  (let (%2712 (vec 64))
  (let (%2713 (vec 12))
  (let (%2714 (vec 64))
  (let (%2715 (vec 12))
  (let (%2716 (vec 64))
  (let (%2717 (vec 768))
  (let (%2718 (load-from-onnx-float32 768 768 "%2718"))
  (let (%2719 2.0)
  (let (%2720 (load-from-onnx-float32 768 3072 "%2720"))
  (let (%2721 (load-from-onnx-float32 3072 768 "%2721"))
  (let (%2722 2.0)
  (let (%2723 (load-from-onnx-float32 768 768 "%2723"))
  (let (%2724 (load-from-onnx-float32 768 768 "%2724"))
  (let (%2725 (load-from-onnx-float32 768 768 "%2725"))
  (let (%2726 (vec 12))
  (let (%2727 (vec 64))
  (let (%2728 (vec 12))
  (let (%2729 (vec 64))
  (let (%2730 (vec 12))
  (let (%2731 (vec 64))
  (let (%2732 (vec 768))
  (let (%2733 (load-from-onnx-float32 768 768 "%2733"))
  (let (%2734 2.0)
  (let (%2735 (load-from-onnx-float32 768 3072 "%2735"))
  (let (%2736 (load-from-onnx-float32 3072 768 "%2736"))
  (let (%2737 2.0)
  (let (%2738 (load-from-onnx-float32 768 2 "%2738"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%299 (Unsqueeze attention_mask (vec 1)))
  (let (%300 (Unsqueeze %299 (vec 2)))
  (let (%301 (Cast_FLOAT %300))
  (let (%302 (Constant 1.0))
  (let (%303 (Sub %302 %301))
  (let (%304 (Constant -10000.0))
  (let (%305 (Mul %303 %304))
  (let (%306 (Shape input_ids))
  (let (%307 (Constant 1))
  (let (%308 (Gather %306 %307 0))
  (let (%312 (Unsqueeze %308 (vec 0)))
  (let (%314 (Constant (vec 1)))
  (let (%315 (Slice bert.embeddings.position_ids %2465 %312 %2466 %314))
  (let (%316 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%317 (Gather bert.embeddings.position_embeddings.weight %315 0))
  (let (%318 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%319 (Add %316 %317))
  (let (%320 (Add %319 %318))
  (let (%322 (ReduceMean %320 (vec -1) 1))
  (let (%323 (Sub %320 %322))
  (let (%324 (Cast_FLOAT %323))
  (let (%326 (Pow %324 %2467))
  (let (%327 (ReduceMean %326 (vec -1) 1))
  (let (%328 (Constant 9.999999960041972e-13))
  (let (%329 (Add %327 %328))
  (let (%330 (Sqrt %329))
  (let (%331 (Div %323 %330))
  (let (%332 (Mul %331 bert.embeddings.LayerNorm.weight))
  (let (%333 (Add %332 bert.embeddings.LayerNorm.bias))
  (let (%335 (MatMul %333 %2468))
  (let (%336 (Add %335 bert.encoder.layer.0.attention.self.query.bias))
  (let (%338 (MatMul %333 %2469))
  (let (%339 (Add %338 bert.encoder.layer.0.attention.self.key.bias))
  (let (%341 (MatMul %333 %2470))
  (let (%342 (Add %341 bert.encoder.layer.0.attention.self.value.bias))
  (let (%343 (Shape %336))
  (let (%344 (Constant 0))
  (let (%345 (Gather %343 %344 0))
  (let (%346 (Shape %336))
  (let (%347 (Constant 1))
  (let (%348 (Gather %346 %347 0))
  (let (%351 (Unsqueeze %345 (vec 0)))
  (let (%352 (Unsqueeze %348 (vec 0)))
  (let (%355 (Concat %351 %352 %2471 %2472 0))
  (let (%356 (Reshape %336 %355))
  (let (%357 (Transpose %356 (vec 0 2 1 3)))
  (let (%358 (Shape %339))
  (let (%359 (Constant 0))
  (let (%360 (Gather %358 %359 0))
  (let (%361 (Shape %339))
  (let (%362 (Constant 1))
  (let (%363 (Gather %361 %362 0))
  (let (%366 (Unsqueeze %360 (vec 0)))
  (let (%367 (Unsqueeze %363 (vec 0)))
  (let (%370 (Concat %366 %367 %2473 %2474 0))
  (let (%371 (Reshape %339 %370))
  (let (%372 (Shape %342))
  (let (%373 (Constant 0))
  (let (%374 (Gather %372 %373 0))
  (let (%375 (Shape %342))
  (let (%376 (Constant 1))
  (let (%377 (Gather %375 %376 0))
  (let (%380 (Unsqueeze %374 (vec 0)))
  (let (%381 (Unsqueeze %377 (vec 0)))
  (let (%384 (Concat %380 %381 %2475 %2476 0))
  (let (%385 (Reshape %342 %384))
  (let (%386 (Transpose %385 (vec 0 2 1 3)))
  (let (%387 (Transpose %371 (vec 0 2 3 1)))
  (let (%388 (MatMul %357 %387))
  (let (%389 (Constant 8.0))
  (let (%390 (Div %388 %389))
  (let (%391 (Add %390 %305))
  (let (%392 (Softmax %391 3))
  (let (%393 (MatMul %392 %386))
  (let (%394 (Transpose %393 (vec 0 2 1 3)))
  (let (%395 (Shape %394))
  (let (%396 (Constant 0))
  (let (%397 (Gather %395 %396 0))
  (let (%398 (Shape %394))
  (let (%399 (Constant 1))
  (let (%400 (Gather %398 %399 0))
  (let (%402 (Unsqueeze %397 (vec 0)))
  (let (%403 (Unsqueeze %400 (vec 0)))
  (let (%405 (Concat %402 %403 %2477 0))
  (let (%406 (Reshape %394 %405))
  (let (%408 (MatMul %406 %2478))
  (let (%409 (Add %408 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%410 (Add %409 %333))
  (let (%412 (ReduceMean %410 (vec -1) 1))
  (let (%413 (Sub %410 %412))
  (let (%414 (Cast_FLOAT %413))
  (let (%416 (Pow %414 %2479))
  (let (%417 (ReduceMean %416 (vec -1) 1))
  (let (%418 (Constant 9.999999960041972e-13))
  (let (%419 (Add %417 %418))
  (let (%420 (Sqrt %419))
  (let (%421 (Div %413 %420))
  (let (%422 (Mul %421 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%423 (Add %422 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%425 (MatMul %423 %2480))
  (let (%426 (Add %425 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%427 (Constant 1.4142135381698608))
  (let (%428 (Div %426 %427))
  (let (%429 (Erf %428))
  (let (%430 (Constant 1.0))
  (let (%431 (Add %429 %430))
  (let (%432 (Mul %426 %431))
  (let (%433 (Constant 0.5))
  (let (%434 (Mul %432 %433))
  (let (%436 (MatMul %434 %2481))
  (let (%437 (Add %436 bert.encoder.layer.0.output.dense.bias))
  (let (%438 (Add %437 %423))
  (let (%440 (ReduceMean %438 (vec -1) 1))
  (let (%441 (Sub %438 %440))
  (let (%442 (Cast_FLOAT %441))
  (let (%444 (Pow %442 %2482))
  (let (%445 (ReduceMean %444 (vec -1) 1))
  (let (%446 (Constant 9.999999960041972e-13))
  (let (%447 (Add %445 %446))
  (let (%448 (Sqrt %447))
  (let (%449 (Div %441 %448))
  (let (%450 (Mul %449 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%451 (Add %450 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%453 (MatMul %451 %2483))
  (let (%454 (Add %453 bert.encoder.layer.1.attention.self.query.bias))
  (let (%456 (MatMul %451 %2484))
  (let (%457 (Add %456 bert.encoder.layer.1.attention.self.key.bias))
  (let (%459 (MatMul %451 %2485))
  (let (%460 (Add %459 bert.encoder.layer.1.attention.self.value.bias))
  (let (%461 (Shape %454))
  (let (%462 (Constant 0))
  (let (%463 (Gather %461 %462 0))
  (let (%464 (Shape %454))
  (let (%465 (Constant 1))
  (let (%466 (Gather %464 %465 0))
  (let (%469 (Unsqueeze %463 (vec 0)))
  (let (%470 (Unsqueeze %466 (vec 0)))
  (let (%473 (Concat %469 %470 %2486 %2487 0))
  (let (%474 (Reshape %454 %473))
  (let (%475 (Transpose %474 (vec 0 2 1 3)))
  (let (%476 (Shape %457))
  (let (%477 (Constant 0))
  (let (%478 (Gather %476 %477 0))
  (let (%479 (Shape %457))
  (let (%480 (Constant 1))
  (let (%481 (Gather %479 %480 0))
  (let (%484 (Unsqueeze %478 (vec 0)))
  (let (%485 (Unsqueeze %481 (vec 0)))
  (let (%488 (Concat %484 %485 %2488 %2489 0))
  (let (%489 (Reshape %457 %488))
  (let (%490 (Shape %460))
  (let (%491 (Constant 0))
  (let (%492 (Gather %490 %491 0))
  (let (%493 (Shape %460))
  (let (%494 (Constant 1))
  (let (%495 (Gather %493 %494 0))
  (let (%498 (Unsqueeze %492 (vec 0)))
  (let (%499 (Unsqueeze %495 (vec 0)))
  (let (%502 (Concat %498 %499 %2490 %2491 0))
  (let (%503 (Reshape %460 %502))
  (let (%504 (Transpose %503 (vec 0 2 1 3)))
  (let (%505 (Transpose %489 (vec 0 2 3 1)))
  (let (%506 (MatMul %475 %505))
  (let (%507 (Constant 8.0))
  (let (%508 (Div %506 %507))
  (let (%509 (Add %508 %305))
  (let (%510 (Softmax %509 3))
  (let (%511 (MatMul %510 %504))
  (let (%512 (Transpose %511 (vec 0 2 1 3)))
  (let (%513 (Shape %512))
  (let (%514 (Constant 0))
  (let (%515 (Gather %513 %514 0))
  (let (%516 (Shape %512))
  (let (%517 (Constant 1))
  (let (%518 (Gather %516 %517 0))
  (let (%520 (Unsqueeze %515 (vec 0)))
  (let (%521 (Unsqueeze %518 (vec 0)))
  (let (%523 (Concat %520 %521 %2492 0))
  (let (%524 (Reshape %512 %523))
  (let (%526 (MatMul %524 %2493))
  (let (%527 (Add %526 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%528 (Add %527 %451))
  (let (%530 (ReduceMean %528 (vec -1) 1))
  (let (%531 (Sub %528 %530))
  (let (%532 (Cast_FLOAT %531))
  (let (%534 (Pow %532 %2494))
  (let (%535 (ReduceMean %534 (vec -1) 1))
  (let (%536 (Constant 9.999999960041972e-13))
  (let (%537 (Add %535 %536))
  (let (%538 (Sqrt %537))
  (let (%539 (Div %531 %538))
  (let (%540 (Mul %539 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%541 (Add %540 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%543 (MatMul %541 %2495))
  (let (%544 (Add %543 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%545 (Constant 1.4142135381698608))
  (let (%546 (Div %544 %545))
  (let (%547 (Erf %546))
  (let (%548 (Constant 1.0))
  (let (%549 (Add %547 %548))
  (let (%550 (Mul %544 %549))
  (let (%551 (Constant 0.5))
  (let (%552 (Mul %550 %551))
  (let (%554 (MatMul %552 %2496))
  (let (%555 (Add %554 bert.encoder.layer.1.output.dense.bias))
  (let (%556 (Add %555 %541))
  (let (%558 (ReduceMean %556 (vec -1) 1))
  (let (%559 (Sub %556 %558))
  (let (%560 (Cast_FLOAT %559))
  (let (%562 (Pow %560 %2497))
  (let (%563 (ReduceMean %562 (vec -1) 1))
  (let (%564 (Constant 9.999999960041972e-13))
  (let (%565 (Add %563 %564))
  (let (%566 (Sqrt %565))
  (let (%567 (Div %559 %566))
  (let (%568 (Mul %567 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%569 (Add %568 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%571 (MatMul %569 %2498))
  (let (%572 (Add %571 bert.encoder.layer.2.attention.self.query.bias))
  (let (%574 (MatMul %569 %2499))
  (let (%575 (Add %574 bert.encoder.layer.2.attention.self.key.bias))
  (let (%577 (MatMul %569 %2500))
  (let (%578 (Add %577 bert.encoder.layer.2.attention.self.value.bias))
  (let (%579 (Shape %572))
  (let (%580 (Constant 0))
  (let (%581 (Gather %579 %580 0))
  (let (%582 (Shape %572))
  (let (%583 (Constant 1))
  (let (%584 (Gather %582 %583 0))
  (let (%587 (Unsqueeze %581 (vec 0)))
  (let (%588 (Unsqueeze %584 (vec 0)))
  (let (%591 (Concat %587 %588 %2501 %2502 0))
  (let (%592 (Reshape %572 %591))
  (let (%593 (Transpose %592 (vec 0 2 1 3)))
  (let (%594 (Shape %575))
  (let (%595 (Constant 0))
  (let (%596 (Gather %594 %595 0))
  (let (%597 (Shape %575))
  (let (%598 (Constant 1))
  (let (%599 (Gather %597 %598 0))
  (let (%602 (Unsqueeze %596 (vec 0)))
  (let (%603 (Unsqueeze %599 (vec 0)))
  (let (%606 (Concat %602 %603 %2503 %2504 0))
  (let (%607 (Reshape %575 %606))
  (let (%608 (Shape %578))
  (let (%609 (Constant 0))
  (let (%610 (Gather %608 %609 0))
  (let (%611 (Shape %578))
  (let (%612 (Constant 1))
  (let (%613 (Gather %611 %612 0))
  (let (%616 (Unsqueeze %610 (vec 0)))
  (let (%617 (Unsqueeze %613 (vec 0)))
  (let (%620 (Concat %616 %617 %2505 %2506 0))
  (let (%621 (Reshape %578 %620))
  (let (%622 (Transpose %621 (vec 0 2 1 3)))
  (let (%623 (Transpose %607 (vec 0 2 3 1)))
  (let (%624 (MatMul %593 %623))
  (let (%625 (Constant 8.0))
  (let (%626 (Div %624 %625))
  (let (%627 (Add %626 %305))
  (let (%628 (Softmax %627 3))
  (let (%629 (MatMul %628 %622))
  (let (%630 (Transpose %629 (vec 0 2 1 3)))
  (let (%631 (Shape %630))
  (let (%632 (Constant 0))
  (let (%633 (Gather %631 %632 0))
  (let (%634 (Shape %630))
  (let (%635 (Constant 1))
  (let (%636 (Gather %634 %635 0))
  (let (%638 (Unsqueeze %633 (vec 0)))
  (let (%639 (Unsqueeze %636 (vec 0)))
  (let (%641 (Concat %638 %639 %2507 0))
  (let (%642 (Reshape %630 %641))
  (let (%644 (MatMul %642 %2508))
  (let (%645 (Add %644 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%646 (Add %645 %569))
  (let (%648 (ReduceMean %646 (vec -1) 1))
  (let (%649 (Sub %646 %648))
  (let (%650 (Cast_FLOAT %649))
  (let (%652 (Pow %650 %2509))
  (let (%653 (ReduceMean %652 (vec -1) 1))
  (let (%654 (Constant 9.999999960041972e-13))
  (let (%655 (Add %653 %654))
  (let (%656 (Sqrt %655))
  (let (%657 (Div %649 %656))
  (let (%658 (Mul %657 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%659 (Add %658 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%661 (MatMul %659 %2510))
  (let (%662 (Add %661 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%663 (Constant 1.4142135381698608))
  (let (%664 (Div %662 %663))
  (let (%665 (Erf %664))
  (let (%666 (Constant 1.0))
  (let (%667 (Add %665 %666))
  (let (%668 (Mul %662 %667))
  (let (%669 (Constant 0.5))
  (let (%670 (Mul %668 %669))
  (let (%672 (MatMul %670 %2511))
  (let (%673 (Add %672 bert.encoder.layer.2.output.dense.bias))
  (let (%674 (Add %673 %659))
  (let (%676 (ReduceMean %674 (vec -1) 1))
  (let (%677 (Sub %674 %676))
  (let (%678 (Cast_FLOAT %677))
  (let (%680 (Pow %678 %2512))
  (let (%681 (ReduceMean %680 (vec -1) 1))
  (let (%682 (Constant 9.999999960041972e-13))
  (let (%683 (Add %681 %682))
  (let (%684 (Sqrt %683))
  (let (%685 (Div %677 %684))
  (let (%686 (Mul %685 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%687 (Add %686 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%689 (MatMul %687 %2513))
  (let (%690 (Add %689 bert.encoder.layer.3.attention.self.query.bias))
  (let (%692 (MatMul %687 %2514))
  (let (%693 (Add %692 bert.encoder.layer.3.attention.self.key.bias))
  (let (%695 (MatMul %687 %2515))
  (let (%696 (Add %695 bert.encoder.layer.3.attention.self.value.bias))
  (let (%697 (Shape %690))
  (let (%698 (Constant 0))
  (let (%699 (Gather %697 %698 0))
  (let (%700 (Shape %690))
  (let (%701 (Constant 1))
  (let (%702 (Gather %700 %701 0))
  (let (%705 (Unsqueeze %699 (vec 0)))
  (let (%706 (Unsqueeze %702 (vec 0)))
  (let (%709 (Concat %705 %706 %2516 %2517 0))
  (let (%710 (Reshape %690 %709))
  (let (%711 (Transpose %710 (vec 0 2 1 3)))
  (let (%712 (Shape %693))
  (let (%713 (Constant 0))
  (let (%714 (Gather %712 %713 0))
  (let (%715 (Shape %693))
  (let (%716 (Constant 1))
  (let (%717 (Gather %715 %716 0))
  (let (%720 (Unsqueeze %714 (vec 0)))
  (let (%721 (Unsqueeze %717 (vec 0)))
  (let (%724 (Concat %720 %721 %2518 %2519 0))
  (let (%725 (Reshape %693 %724))
  (let (%726 (Shape %696))
  (let (%727 (Constant 0))
  (let (%728 (Gather %726 %727 0))
  (let (%729 (Shape %696))
  (let (%730 (Constant 1))
  (let (%731 (Gather %729 %730 0))
  (let (%734 (Unsqueeze %728 (vec 0)))
  (let (%735 (Unsqueeze %731 (vec 0)))
  (let (%738 (Concat %734 %735 %2520 %2521 0))
  (let (%739 (Reshape %696 %738))
  (let (%740 (Transpose %739 (vec 0 2 1 3)))
  (let (%741 (Transpose %725 (vec 0 2 3 1)))
  (let (%742 (MatMul %711 %741))
  (let (%743 (Constant 8.0))
  (let (%744 (Div %742 %743))
  (let (%745 (Add %744 %305))
  (let (%746 (Softmax %745 3))
  (let (%747 (MatMul %746 %740))
  (let (%748 (Transpose %747 (vec 0 2 1 3)))
  (let (%749 (Shape %748))
  (let (%750 (Constant 0))
  (let (%751 (Gather %749 %750 0))
  (let (%752 (Shape %748))
  (let (%753 (Constant 1))
  (let (%754 (Gather %752 %753 0))
  (let (%756 (Unsqueeze %751 (vec 0)))
  (let (%757 (Unsqueeze %754 (vec 0)))
  (let (%759 (Concat %756 %757 %2522 0))
  (let (%760 (Reshape %748 %759))
  (let (%762 (MatMul %760 %2523))
  (let (%763 (Add %762 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%764 (Add %763 %687))
  (let (%766 (ReduceMean %764 (vec -1) 1))
  (let (%767 (Sub %764 %766))
  (let (%768 (Cast_FLOAT %767))
  (let (%770 (Pow %768 %2524))
  (let (%771 (ReduceMean %770 (vec -1) 1))
  (let (%772 (Constant 9.999999960041972e-13))
  (let (%773 (Add %771 %772))
  (let (%774 (Sqrt %773))
  (let (%775 (Div %767 %774))
  (let (%776 (Mul %775 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%777 (Add %776 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%779 (MatMul %777 %2525))
  (let (%780 (Add %779 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%781 (Constant 1.4142135381698608))
  (let (%782 (Div %780 %781))
  (let (%783 (Erf %782))
  (let (%784 (Constant 1.0))
  (let (%785 (Add %783 %784))
  (let (%786 (Mul %780 %785))
  (let (%787 (Constant 0.5))
  (let (%788 (Mul %786 %787))
  (let (%790 (MatMul %788 %2526))
  (let (%791 (Add %790 bert.encoder.layer.3.output.dense.bias))
  (let (%792 (Add %791 %777))
  (let (%794 (ReduceMean %792 (vec -1) 1))
  (let (%795 (Sub %792 %794))
  (let (%796 (Cast_FLOAT %795))
  (let (%798 (Pow %796 %2527))
  (let (%799 (ReduceMean %798 (vec -1) 1))
  (let (%800 (Constant 9.999999960041972e-13))
  (let (%801 (Add %799 %800))
  (let (%802 (Sqrt %801))
  (let (%803 (Div %795 %802))
  (let (%804 (Mul %803 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%805 (Add %804 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%807 (MatMul %805 %2528))
  (let (%808 (Add %807 bert.encoder.layer.4.attention.self.query.bias))
  (let (%810 (MatMul %805 %2529))
  (let (%811 (Add %810 bert.encoder.layer.4.attention.self.key.bias))
  (let (%813 (MatMul %805 %2530))
  (let (%814 (Add %813 bert.encoder.layer.4.attention.self.value.bias))
  (let (%815 (Shape %808))
  (let (%816 (Constant 0))
  (let (%817 (Gather %815 %816 0))
  (let (%818 (Shape %808))
  (let (%819 (Constant 1))
  (let (%820 (Gather %818 %819 0))
  (let (%823 (Unsqueeze %817 (vec 0)))
  (let (%824 (Unsqueeze %820 (vec 0)))
  (let (%827 (Concat %823 %824 %2531 %2532 0))
  (let (%828 (Reshape %808 %827))
  (let (%829 (Transpose %828 (vec 0 2 1 3)))
  (let (%830 (Shape %811))
  (let (%831 (Constant 0))
  (let (%832 (Gather %830 %831 0))
  (let (%833 (Shape %811))
  (let (%834 (Constant 1))
  (let (%835 (Gather %833 %834 0))
  (let (%838 (Unsqueeze %832 (vec 0)))
  (let (%839 (Unsqueeze %835 (vec 0)))
  (let (%842 (Concat %838 %839 %2533 %2534 0))
  (let (%843 (Reshape %811 %842))
  (let (%844 (Shape %814))
  (let (%845 (Constant 0))
  (let (%846 (Gather %844 %845 0))
  (let (%847 (Shape %814))
  (let (%848 (Constant 1))
  (let (%849 (Gather %847 %848 0))
  (let (%852 (Unsqueeze %846 (vec 0)))
  (let (%853 (Unsqueeze %849 (vec 0)))
  (let (%856 (Concat %852 %853 %2535 %2536 0))
  (let (%857 (Reshape %814 %856))
  (let (%858 (Transpose %857 (vec 0 2 1 3)))
  (let (%859 (Transpose %843 (vec 0 2 3 1)))
  (let (%860 (MatMul %829 %859))
  (let (%861 (Constant 8.0))
  (let (%862 (Div %860 %861))
  (let (%863 (Add %862 %305))
  (let (%864 (Softmax %863 3))
  (let (%865 (MatMul %864 %858))
  (let (%866 (Transpose %865 (vec 0 2 1 3)))
  (let (%867 (Shape %866))
  (let (%868 (Constant 0))
  (let (%869 (Gather %867 %868 0))
  (let (%870 (Shape %866))
  (let (%871 (Constant 1))
  (let (%872 (Gather %870 %871 0))
  (let (%874 (Unsqueeze %869 (vec 0)))
  (let (%875 (Unsqueeze %872 (vec 0)))
  (let (%877 (Concat %874 %875 %2537 0))
  (let (%878 (Reshape %866 %877))
  (let (%880 (MatMul %878 %2538))
  (let (%881 (Add %880 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%882 (Add %881 %805))
  (let (%884 (ReduceMean %882 (vec -1) 1))
  (let (%885 (Sub %882 %884))
  (let (%886 (Cast_FLOAT %885))
  (let (%888 (Pow %886 %2539))
  (let (%889 (ReduceMean %888 (vec -1) 1))
  (let (%890 (Constant 9.999999960041972e-13))
  (let (%891 (Add %889 %890))
  (let (%892 (Sqrt %891))
  (let (%893 (Div %885 %892))
  (let (%894 (Mul %893 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%895 (Add %894 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%897 (MatMul %895 %2540))
  (let (%898 (Add %897 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%899 (Constant 1.4142135381698608))
  (let (%900 (Div %898 %899))
  (let (%901 (Erf %900))
  (let (%902 (Constant 1.0))
  (let (%903 (Add %901 %902))
  (let (%904 (Mul %898 %903))
  (let (%905 (Constant 0.5))
  (let (%906 (Mul %904 %905))
  (let (%908 (MatMul %906 %2541))
  (let (%909 (Add %908 bert.encoder.layer.4.output.dense.bias))
  (let (%910 (Add %909 %895))
  (let (%912 (ReduceMean %910 (vec -1) 1))
  (let (%913 (Sub %910 %912))
  (let (%914 (Cast_FLOAT %913))
  (let (%916 (Pow %914 %2542))
  (let (%917 (ReduceMean %916 (vec -1) 1))
  (let (%918 (Constant 9.999999960041972e-13))
  (let (%919 (Add %917 %918))
  (let (%920 (Sqrt %919))
  (let (%921 (Div %913 %920))
  (let (%922 (Mul %921 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%923 (Add %922 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%925 (MatMul %923 %2543))
  (let (%926 (Add %925 bert.encoder.layer.5.attention.self.query.bias))
  (let (%928 (MatMul %923 %2544))
  (let (%929 (Add %928 bert.encoder.layer.5.attention.self.key.bias))
  (let (%931 (MatMul %923 %2545))
  (let (%932 (Add %931 bert.encoder.layer.5.attention.self.value.bias))
  (let (%933 (Shape %926))
  (let (%934 (Constant 0))
  (let (%935 (Gather %933 %934 0))
  (let (%936 (Shape %926))
  (let (%937 (Constant 1))
  (let (%938 (Gather %936 %937 0))
  (let (%941 (Unsqueeze %935 (vec 0)))
  (let (%942 (Unsqueeze %938 (vec 0)))
  (let (%945 (Concat %941 %942 %2546 %2547 0))
  (let (%946 (Reshape %926 %945))
  (let (%947 (Transpose %946 (vec 0 2 1 3)))
  (let (%948 (Shape %929))
  (let (%949 (Constant 0))
  (let (%950 (Gather %948 %949 0))
  (let (%951 (Shape %929))
  (let (%952 (Constant 1))
  (let (%953 (Gather %951 %952 0))
  (let (%956 (Unsqueeze %950 (vec 0)))
  (let (%957 (Unsqueeze %953 (vec 0)))
  (let (%960 (Concat %956 %957 %2548 %2549 0))
  (let (%961 (Reshape %929 %960))
  (let (%962 (Shape %932))
  (let (%963 (Constant 0))
  (let (%964 (Gather %962 %963 0))
  (let (%965 (Shape %932))
  (let (%966 (Constant 1))
  (let (%967 (Gather %965 %966 0))
  (let (%970 (Unsqueeze %964 (vec 0)))
  (let (%971 (Unsqueeze %967 (vec 0)))
  (let (%974 (Concat %970 %971 %2550 %2551 0))
  (let (%975 (Reshape %932 %974))
  (let (%976 (Transpose %975 (vec 0 2 1 3)))
  (let (%977 (Transpose %961 (vec 0 2 3 1)))
  (let (%978 (MatMul %947 %977))
  (let (%979 (Constant 8.0))
  (let (%980 (Div %978 %979))
  (let (%981 (Add %980 %305))
  (let (%982 (Softmax %981 3))
  (let (%983 (MatMul %982 %976))
  (let (%984 (Transpose %983 (vec 0 2 1 3)))
  (let (%985 (Shape %984))
  (let (%986 (Constant 0))
  (let (%987 (Gather %985 %986 0))
  (let (%988 (Shape %984))
  (let (%989 (Constant 1))
  (let (%990 (Gather %988 %989 0))
  (let (%992 (Unsqueeze %987 (vec 0)))
  (let (%993 (Unsqueeze %990 (vec 0)))
  (let (%995 (Concat %992 %993 %2552 0))
  (let (%996 (Reshape %984 %995))
  (let (%998 (MatMul %996 %2553))
  (let (%999 (Add %998 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1000 (Add %999 %923))
  (let (%1002 (ReduceMean %1000 (vec -1) 1))
  (let (%1003 (Sub %1000 %1002))
  (let (%1004 (Cast_FLOAT %1003))
  (let (%1006 (Pow %1004 %2554))
  (let (%1007 (ReduceMean %1006 (vec -1) 1))
  (let (%1008 (Constant 9.999999960041972e-13))
  (let (%1009 (Add %1007 %1008))
  (let (%1010 (Sqrt %1009))
  (let (%1011 (Div %1003 %1010))
  (let (%1012 (Mul %1011 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1013 (Add %1012 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1015 (MatMul %1013 %2555))
  (let (%1016 (Add %1015 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1017 (Constant 1.4142135381698608))
  (let (%1018 (Div %1016 %1017))
  (let (%1019 (Erf %1018))
  (let (%1020 (Constant 1.0))
  (let (%1021 (Add %1019 %1020))
  (let (%1022 (Mul %1016 %1021))
  (let (%1023 (Constant 0.5))
  (let (%1024 (Mul %1022 %1023))
  (let (%1026 (MatMul %1024 %2556))
  (let (%1027 (Add %1026 bert.encoder.layer.5.output.dense.bias))
  (let (%1028 (Add %1027 %1013))
  (let (%1030 (ReduceMean %1028 (vec -1) 1))
  (let (%1031 (Sub %1028 %1030))
  (let (%1032 (Cast_FLOAT %1031))
  (let (%1034 (Pow %1032 %2557))
  (let (%1035 (ReduceMean %1034 (vec -1) 1))
  (let (%1036 (Constant 9.999999960041972e-13))
  (let (%1037 (Add %1035 %1036))
  (let (%1038 (Sqrt %1037))
  (let (%1039 (Div %1031 %1038))
  (let (%1040 (Mul %1039 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1041 (Add %1040 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1043 (MatMul %1041 %2558))
  (let (%1044 (Add %1043 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1046 (MatMul %1041 %2559))
  (let (%1047 (Add %1046 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1049 (MatMul %1041 %2560))
  (let (%1050 (Add %1049 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1051 (Shape %1044))
  (let (%1052 (Constant 0))
  (let (%1053 (Gather %1051 %1052 0))
  (let (%1054 (Shape %1044))
  (let (%1055 (Constant 1))
  (let (%1056 (Gather %1054 %1055 0))
  (let (%1059 (Unsqueeze %1053 (vec 0)))
  (let (%1060 (Unsqueeze %1056 (vec 0)))
  (let (%1063 (Concat %1059 %1060 %2561 %2562 0))
  (let (%1064 (Reshape %1044 %1063))
  (let (%1065 (Transpose %1064 (vec 0 2 1 3)))
  (let (%1066 (Shape %1047))
  (let (%1067 (Constant 0))
  (let (%1068 (Gather %1066 %1067 0))
  (let (%1069 (Shape %1047))
  (let (%1070 (Constant 1))
  (let (%1071 (Gather %1069 %1070 0))
  (let (%1074 (Unsqueeze %1068 (vec 0)))
  (let (%1075 (Unsqueeze %1071 (vec 0)))
  (let (%1078 (Concat %1074 %1075 %2563 %2564 0))
  (let (%1079 (Reshape %1047 %1078))
  (let (%1080 (Shape %1050))
  (let (%1081 (Constant 0))
  (let (%1082 (Gather %1080 %1081 0))
  (let (%1083 (Shape %1050))
  (let (%1084 (Constant 1))
  (let (%1085 (Gather %1083 %1084 0))
  (let (%1088 (Unsqueeze %1082 (vec 0)))
  (let (%1089 (Unsqueeze %1085 (vec 0)))
  (let (%1092 (Concat %1088 %1089 %2565 %2566 0))
  (let (%1093 (Reshape %1050 %1092))
  (let (%1094 (Transpose %1093 (vec 0 2 1 3)))
  (let (%1095 (Transpose %1079 (vec 0 2 3 1)))
  (let (%1096 (MatMul %1065 %1095))
  (let (%1097 (Constant 8.0))
  (let (%1098 (Div %1096 %1097))
  (let (%1099 (Add %1098 %305))
  (let (%1100 (Softmax %1099 3))
  (let (%1101 (MatMul %1100 %1094))
  (let (%1102 (Transpose %1101 (vec 0 2 1 3)))
  (let (%1103 (Shape %1102))
  (let (%1104 (Constant 0))
  (let (%1105 (Gather %1103 %1104 0))
  (let (%1106 (Shape %1102))
  (let (%1107 (Constant 1))
  (let (%1108 (Gather %1106 %1107 0))
  (let (%1110 (Unsqueeze %1105 (vec 0)))
  (let (%1111 (Unsqueeze %1108 (vec 0)))
  (let (%1113 (Concat %1110 %1111 %2567 0))
  (let (%1114 (Reshape %1102 %1113))
  (let (%1116 (MatMul %1114 %2568))
  (let (%1117 (Add %1116 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1118 (Add %1117 %1041))
  (let (%1120 (ReduceMean %1118 (vec -1) 1))
  (let (%1121 (Sub %1118 %1120))
  (let (%1122 (Cast_FLOAT %1121))
  (let (%1124 (Pow %1122 %2569))
  (let (%1125 (ReduceMean %1124 (vec -1) 1))
  (let (%1126 (Constant 9.999999960041972e-13))
  (let (%1127 (Add %1125 %1126))
  (let (%1128 (Sqrt %1127))
  (let (%1129 (Div %1121 %1128))
  (let (%1130 (Mul %1129 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1131 (Add %1130 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1133 (MatMul %1131 %2570))
  (let (%1134 (Add %1133 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1135 (Constant 1.4142135381698608))
  (let (%1136 (Div %1134 %1135))
  (let (%1137 (Erf %1136))
  (let (%1138 (Constant 1.0))
  (let (%1139 (Add %1137 %1138))
  (let (%1140 (Mul %1134 %1139))
  (let (%1141 (Constant 0.5))
  (let (%1142 (Mul %1140 %1141))
  (let (%1144 (MatMul %1142 %2571))
  (let (%1145 (Add %1144 bert.encoder.layer.6.output.dense.bias))
  (let (%1146 (Add %1145 %1131))
  (let (%1148 (ReduceMean %1146 (vec -1) 1))
  (let (%1149 (Sub %1146 %1148))
  (let (%1150 (Cast_FLOAT %1149))
  (let (%1152 (Pow %1150 %2572))
  (let (%1153 (ReduceMean %1152 (vec -1) 1))
  (let (%1154 (Constant 9.999999960041972e-13))
  (let (%1155 (Add %1153 %1154))
  (let (%1156 (Sqrt %1155))
  (let (%1157 (Div %1149 %1156))
  (let (%1158 (Mul %1157 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1159 (Add %1158 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1161 (MatMul %1159 %2573))
  (let (%1162 (Add %1161 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1164 (MatMul %1159 %2574))
  (let (%1165 (Add %1164 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1167 (MatMul %1159 %2575))
  (let (%1168 (Add %1167 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1169 (Shape %1162))
  (let (%1170 (Constant 0))
  (let (%1171 (Gather %1169 %1170 0))
  (let (%1172 (Shape %1162))
  (let (%1173 (Constant 1))
  (let (%1174 (Gather %1172 %1173 0))
  (let (%1177 (Unsqueeze %1171 (vec 0)))
  (let (%1178 (Unsqueeze %1174 (vec 0)))
  (let (%1181 (Concat %1177 %1178 %2576 %2577 0))
  (let (%1182 (Reshape %1162 %1181))
  (let (%1183 (Transpose %1182 (vec 0 2 1 3)))
  (let (%1184 (Shape %1165))
  (let (%1185 (Constant 0))
  (let (%1186 (Gather %1184 %1185 0))
  (let (%1187 (Shape %1165))
  (let (%1188 (Constant 1))
  (let (%1189 (Gather %1187 %1188 0))
  (let (%1192 (Unsqueeze %1186 (vec 0)))
  (let (%1193 (Unsqueeze %1189 (vec 0)))
  (let (%1196 (Concat %1192 %1193 %2578 %2579 0))
  (let (%1197 (Reshape %1165 %1196))
  (let (%1198 (Shape %1168))
  (let (%1199 (Constant 0))
  (let (%1200 (Gather %1198 %1199 0))
  (let (%1201 (Shape %1168))
  (let (%1202 (Constant 1))
  (let (%1203 (Gather %1201 %1202 0))
  (let (%1206 (Unsqueeze %1200 (vec 0)))
  (let (%1207 (Unsqueeze %1203 (vec 0)))
  (let (%1210 (Concat %1206 %1207 %2580 %2581 0))
  (let (%1211 (Reshape %1168 %1210))
  (let (%1212 (Transpose %1211 (vec 0 2 1 3)))
  (let (%1213 (Transpose %1197 (vec 0 2 3 1)))
  (let (%1214 (MatMul %1183 %1213))
  (let (%1215 (Constant 8.0))
  (let (%1216 (Div %1214 %1215))
  (let (%1217 (Add %1216 %305))
  (let (%1218 (Softmax %1217 3))
  (let (%1219 (MatMul %1218 %1212))
  (let (%1220 (Transpose %1219 (vec 0 2 1 3)))
  (let (%1221 (Shape %1220))
  (let (%1222 (Constant 0))
  (let (%1223 (Gather %1221 %1222 0))
  (let (%1224 (Shape %1220))
  (let (%1225 (Constant 1))
  (let (%1226 (Gather %1224 %1225 0))
  (let (%1228 (Unsqueeze %1223 (vec 0)))
  (let (%1229 (Unsqueeze %1226 (vec 0)))
  (let (%1231 (Concat %1228 %1229 %2582 0))
  (let (%1232 (Reshape %1220 %1231))
  (let (%1234 (MatMul %1232 %2583))
  (let (%1235 (Add %1234 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1236 (Add %1235 %1159))
  (let (%1238 (ReduceMean %1236 (vec -1) 1))
  (let (%1239 (Sub %1236 %1238))
  (let (%1240 (Cast_FLOAT %1239))
  (let (%1242 (Pow %1240 %2584))
  (let (%1243 (ReduceMean %1242 (vec -1) 1))
  (let (%1244 (Constant 9.999999960041972e-13))
  (let (%1245 (Add %1243 %1244))
  (let (%1246 (Sqrt %1245))
  (let (%1247 (Div %1239 %1246))
  (let (%1248 (Mul %1247 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1249 (Add %1248 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1251 (MatMul %1249 %2585))
  (let (%1252 (Add %1251 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1253 (Constant 1.4142135381698608))
  (let (%1254 (Div %1252 %1253))
  (let (%1255 (Erf %1254))
  (let (%1256 (Constant 1.0))
  (let (%1257 (Add %1255 %1256))
  (let (%1258 (Mul %1252 %1257))
  (let (%1259 (Constant 0.5))
  (let (%1260 (Mul %1258 %1259))
  (let (%1262 (MatMul %1260 %2586))
  (let (%1263 (Add %1262 bert.encoder.layer.7.output.dense.bias))
  (let (%1264 (Add %1263 %1249))
  (let (%1266 (ReduceMean %1264 (vec -1) 1))
  (let (%1267 (Sub %1264 %1266))
  (let (%1268 (Cast_FLOAT %1267))
  (let (%1270 (Pow %1268 %2587))
  (let (%1271 (ReduceMean %1270 (vec -1) 1))
  (let (%1272 (Constant 9.999999960041972e-13))
  (let (%1273 (Add %1271 %1272))
  (let (%1274 (Sqrt %1273))
  (let (%1275 (Div %1267 %1274))
  (let (%1276 (Mul %1275 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1277 (Add %1276 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1279 (MatMul %1277 %2588))
  (let (%1280 (Add %1279 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1282 (MatMul %1277 %2589))
  (let (%1283 (Add %1282 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1285 (MatMul %1277 %2590))
  (let (%1286 (Add %1285 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1287 (Shape %1280))
  (let (%1288 (Constant 0))
  (let (%1289 (Gather %1287 %1288 0))
  (let (%1290 (Shape %1280))
  (let (%1291 (Constant 1))
  (let (%1292 (Gather %1290 %1291 0))
  (let (%1295 (Unsqueeze %1289 (vec 0)))
  (let (%1296 (Unsqueeze %1292 (vec 0)))
  (let (%1299 (Concat %1295 %1296 %2591 %2592 0))
  (let (%1300 (Reshape %1280 %1299))
  (let (%1301 (Transpose %1300 (vec 0 2 1 3)))
  (let (%1302 (Shape %1283))
  (let (%1303 (Constant 0))
  (let (%1304 (Gather %1302 %1303 0))
  (let (%1305 (Shape %1283))
  (let (%1306 (Constant 1))
  (let (%1307 (Gather %1305 %1306 0))
  (let (%1310 (Unsqueeze %1304 (vec 0)))
  (let (%1311 (Unsqueeze %1307 (vec 0)))
  (let (%1314 (Concat %1310 %1311 %2593 %2594 0))
  (let (%1315 (Reshape %1283 %1314))
  (let (%1316 (Shape %1286))
  (let (%1317 (Constant 0))
  (let (%1318 (Gather %1316 %1317 0))
  (let (%1319 (Shape %1286))
  (let (%1320 (Constant 1))
  (let (%1321 (Gather %1319 %1320 0))
  (let (%1324 (Unsqueeze %1318 (vec 0)))
  (let (%1325 (Unsqueeze %1321 (vec 0)))
  (let (%1328 (Concat %1324 %1325 %2595 %2596 0))
  (let (%1329 (Reshape %1286 %1328))
  (let (%1330 (Transpose %1329 (vec 0 2 1 3)))
  (let (%1331 (Transpose %1315 (vec 0 2 3 1)))
  (let (%1332 (MatMul %1301 %1331))
  (let (%1333 (Constant 8.0))
  (let (%1334 (Div %1332 %1333))
  (let (%1335 (Add %1334 %305))
  (let (%1336 (Softmax %1335 3))
  (let (%1337 (MatMul %1336 %1330))
  (let (%1338 (Transpose %1337 (vec 0 2 1 3)))
  (let (%1339 (Shape %1338))
  (let (%1340 (Constant 0))
  (let (%1341 (Gather %1339 %1340 0))
  (let (%1342 (Shape %1338))
  (let (%1343 (Constant 1))
  (let (%1344 (Gather %1342 %1343 0))
  (let (%1346 (Unsqueeze %1341 (vec 0)))
  (let (%1347 (Unsqueeze %1344 (vec 0)))
  (let (%1349 (Concat %1346 %1347 %2597 0))
  (let (%1350 (Reshape %1338 %1349))
  (let (%1352 (MatMul %1350 %2598))
  (let (%1353 (Add %1352 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1354 (Add %1353 %1277))
  (let (%1356 (ReduceMean %1354 (vec -1) 1))
  (let (%1357 (Sub %1354 %1356))
  (let (%1358 (Cast_FLOAT %1357))
  (let (%1360 (Pow %1358 %2599))
  (let (%1361 (ReduceMean %1360 (vec -1) 1))
  (let (%1362 (Constant 9.999999960041972e-13))
  (let (%1363 (Add %1361 %1362))
  (let (%1364 (Sqrt %1363))
  (let (%1365 (Div %1357 %1364))
  (let (%1366 (Mul %1365 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1367 (Add %1366 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1369 (MatMul %1367 %2600))
  (let (%1370 (Add %1369 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1371 (Constant 1.4142135381698608))
  (let (%1372 (Div %1370 %1371))
  (let (%1373 (Erf %1372))
  (let (%1374 (Constant 1.0))
  (let (%1375 (Add %1373 %1374))
  (let (%1376 (Mul %1370 %1375))
  (let (%1377 (Constant 0.5))
  (let (%1378 (Mul %1376 %1377))
  (let (%1380 (MatMul %1378 %2601))
  (let (%1381 (Add %1380 bert.encoder.layer.8.output.dense.bias))
  (let (%1382 (Add %1381 %1367))
  (let (%1384 (ReduceMean %1382 (vec -1) 1))
  (let (%1385 (Sub %1382 %1384))
  (let (%1386 (Cast_FLOAT %1385))
  (let (%1388 (Pow %1386 %2602))
  (let (%1389 (ReduceMean %1388 (vec -1) 1))
  (let (%1390 (Constant 9.999999960041972e-13))
  (let (%1391 (Add %1389 %1390))
  (let (%1392 (Sqrt %1391))
  (let (%1393 (Div %1385 %1392))
  (let (%1394 (Mul %1393 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1395 (Add %1394 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1397 (MatMul %1395 %2603))
  (let (%1398 (Add %1397 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1400 (MatMul %1395 %2604))
  (let (%1401 (Add %1400 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1403 (MatMul %1395 %2605))
  (let (%1404 (Add %1403 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1405 (Shape %1398))
  (let (%1406 (Constant 0))
  (let (%1407 (Gather %1405 %1406 0))
  (let (%1408 (Shape %1398))
  (let (%1409 (Constant 1))
  (let (%1410 (Gather %1408 %1409 0))
  (let (%1413 (Unsqueeze %1407 (vec 0)))
  (let (%1414 (Unsqueeze %1410 (vec 0)))
  (let (%1417 (Concat %1413 %1414 %2606 %2607 0))
  (let (%1418 (Reshape %1398 %1417))
  (let (%1419 (Transpose %1418 (vec 0 2 1 3)))
  (let (%1420 (Shape %1401))
  (let (%1421 (Constant 0))
  (let (%1422 (Gather %1420 %1421 0))
  (let (%1423 (Shape %1401))
  (let (%1424 (Constant 1))
  (let (%1425 (Gather %1423 %1424 0))
  (let (%1428 (Unsqueeze %1422 (vec 0)))
  (let (%1429 (Unsqueeze %1425 (vec 0)))
  (let (%1432 (Concat %1428 %1429 %2608 %2609 0))
  (let (%1433 (Reshape %1401 %1432))
  (let (%1434 (Shape %1404))
  (let (%1435 (Constant 0))
  (let (%1436 (Gather %1434 %1435 0))
  (let (%1437 (Shape %1404))
  (let (%1438 (Constant 1))
  (let (%1439 (Gather %1437 %1438 0))
  (let (%1442 (Unsqueeze %1436 (vec 0)))
  (let (%1443 (Unsqueeze %1439 (vec 0)))
  (let (%1446 (Concat %1442 %1443 %2610 %2611 0))
  (let (%1447 (Reshape %1404 %1446))
  (let (%1448 (Transpose %1447 (vec 0 2 1 3)))
  (let (%1449 (Transpose %1433 (vec 0 2 3 1)))
  (let (%1450 (MatMul %1419 %1449))
  (let (%1451 (Constant 8.0))
  (let (%1452 (Div %1450 %1451))
  (let (%1453 (Add %1452 %305))
  (let (%1454 (Softmax %1453 3))
  (let (%1455 (MatMul %1454 %1448))
  (let (%1456 (Transpose %1455 (vec 0 2 1 3)))
  (let (%1457 (Shape %1456))
  (let (%1458 (Constant 0))
  (let (%1459 (Gather %1457 %1458 0))
  (let (%1460 (Shape %1456))
  (let (%1461 (Constant 1))
  (let (%1462 (Gather %1460 %1461 0))
  (let (%1464 (Unsqueeze %1459 (vec 0)))
  (let (%1465 (Unsqueeze %1462 (vec 0)))
  (let (%1467 (Concat %1464 %1465 %2612 0))
  (let (%1468 (Reshape %1456 %1467))
  (let (%1470 (MatMul %1468 %2613))
  (let (%1471 (Add %1470 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1472 (Add %1471 %1395))
  (let (%1474 (ReduceMean %1472 (vec -1) 1))
  (let (%1475 (Sub %1472 %1474))
  (let (%1476 (Cast_FLOAT %1475))
  (let (%1478 (Pow %1476 %2614))
  (let (%1479 (ReduceMean %1478 (vec -1) 1))
  (let (%1480 (Constant 9.999999960041972e-13))
  (let (%1481 (Add %1479 %1480))
  (let (%1482 (Sqrt %1481))
  (let (%1483 (Div %1475 %1482))
  (let (%1484 (Mul %1483 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1485 (Add %1484 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1487 (MatMul %1485 %2615))
  (let (%1488 (Add %1487 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1489 (Constant 1.4142135381698608))
  (let (%1490 (Div %1488 %1489))
  (let (%1491 (Erf %1490))
  (let (%1492 (Constant 1.0))
  (let (%1493 (Add %1491 %1492))
  (let (%1494 (Mul %1488 %1493))
  (let (%1495 (Constant 0.5))
  (let (%1496 (Mul %1494 %1495))
  (let (%1498 (MatMul %1496 %2616))
  (let (%1499 (Add %1498 bert.encoder.layer.9.output.dense.bias))
  (let (%1500 (Add %1499 %1485))
  (let (%1502 (ReduceMean %1500 (vec -1) 1))
  (let (%1503 (Sub %1500 %1502))
  (let (%1504 (Cast_FLOAT %1503))
  (let (%1506 (Pow %1504 %2617))
  (let (%1507 (ReduceMean %1506 (vec -1) 1))
  (let (%1508 (Constant 9.999999960041972e-13))
  (let (%1509 (Add %1507 %1508))
  (let (%1510 (Sqrt %1509))
  (let (%1511 (Div %1503 %1510))
  (let (%1512 (Mul %1511 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1513 (Add %1512 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1515 (MatMul %1513 %2618))
  (let (%1516 (Add %1515 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1518 (MatMul %1513 %2619))
  (let (%1519 (Add %1518 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1521 (MatMul %1513 %2620))
  (let (%1522 (Add %1521 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1523 (Shape %1516))
  (let (%1524 (Constant 0))
  (let (%1525 (Gather %1523 %1524 0))
  (let (%1526 (Shape %1516))
  (let (%1527 (Constant 1))
  (let (%1528 (Gather %1526 %1527 0))
  (let (%1531 (Unsqueeze %1525 (vec 0)))
  (let (%1532 (Unsqueeze %1528 (vec 0)))
  (let (%1535 (Concat %1531 %1532 %2621 %2622 0))
  (let (%1536 (Reshape %1516 %1535))
  (let (%1537 (Transpose %1536 (vec 0 2 1 3)))
  (let (%1538 (Shape %1519))
  (let (%1539 (Constant 0))
  (let (%1540 (Gather %1538 %1539 0))
  (let (%1541 (Shape %1519))
  (let (%1542 (Constant 1))
  (let (%1543 (Gather %1541 %1542 0))
  (let (%1546 (Unsqueeze %1540 (vec 0)))
  (let (%1547 (Unsqueeze %1543 (vec 0)))
  (let (%1550 (Concat %1546 %1547 %2623 %2624 0))
  (let (%1551 (Reshape %1519 %1550))
  (let (%1552 (Shape %1522))
  (let (%1553 (Constant 0))
  (let (%1554 (Gather %1552 %1553 0))
  (let (%1555 (Shape %1522))
  (let (%1556 (Constant 1))
  (let (%1557 (Gather %1555 %1556 0))
  (let (%1560 (Unsqueeze %1554 (vec 0)))
  (let (%1561 (Unsqueeze %1557 (vec 0)))
  (let (%1564 (Concat %1560 %1561 %2625 %2626 0))
  (let (%1565 (Reshape %1522 %1564))
  (let (%1566 (Transpose %1565 (vec 0 2 1 3)))
  (let (%1567 (Transpose %1551 (vec 0 2 3 1)))
  (let (%1568 (MatMul %1537 %1567))
  (let (%1569 (Constant 8.0))
  (let (%1570 (Div %1568 %1569))
  (let (%1571 (Add %1570 %305))
  (let (%1572 (Softmax %1571 3))
  (let (%1573 (MatMul %1572 %1566))
  (let (%1574 (Transpose %1573 (vec 0 2 1 3)))
  (let (%1575 (Shape %1574))
  (let (%1576 (Constant 0))
  (let (%1577 (Gather %1575 %1576 0))
  (let (%1578 (Shape %1574))
  (let (%1579 (Constant 1))
  (let (%1580 (Gather %1578 %1579 0))
  (let (%1582 (Unsqueeze %1577 (vec 0)))
  (let (%1583 (Unsqueeze %1580 (vec 0)))
  (let (%1585 (Concat %1582 %1583 %2627 0))
  (let (%1586 (Reshape %1574 %1585))
  (let (%1588 (MatMul %1586 %2628))
  (let (%1589 (Add %1588 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1590 (Add %1589 %1513))
  (let (%1592 (ReduceMean %1590 (vec -1) 1))
  (let (%1593 (Sub %1590 %1592))
  (let (%1594 (Cast_FLOAT %1593))
  (let (%1596 (Pow %1594 %2629))
  (let (%1597 (ReduceMean %1596 (vec -1) 1))
  (let (%1598 (Constant 9.999999960041972e-13))
  (let (%1599 (Add %1597 %1598))
  (let (%1600 (Sqrt %1599))
  (let (%1601 (Div %1593 %1600))
  (let (%1602 (Mul %1601 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1603 (Add %1602 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1605 (MatMul %1603 %2630))
  (let (%1606 (Add %1605 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1607 (Constant 1.4142135381698608))
  (let (%1608 (Div %1606 %1607))
  (let (%1609 (Erf %1608))
  (let (%1610 (Constant 1.0))
  (let (%1611 (Add %1609 %1610))
  (let (%1612 (Mul %1606 %1611))
  (let (%1613 (Constant 0.5))
  (let (%1614 (Mul %1612 %1613))
  (let (%1616 (MatMul %1614 %2631))
  (let (%1617 (Add %1616 bert.encoder.layer.10.output.dense.bias))
  (let (%1618 (Add %1617 %1603))
  (let (%1620 (ReduceMean %1618 (vec -1) 1))
  (let (%1621 (Sub %1618 %1620))
  (let (%1622 (Cast_FLOAT %1621))
  (let (%1624 (Pow %1622 %2632))
  (let (%1625 (ReduceMean %1624 (vec -1) 1))
  (let (%1626 (Constant 9.999999960041972e-13))
  (let (%1627 (Add %1625 %1626))
  (let (%1628 (Sqrt %1627))
  (let (%1629 (Div %1621 %1628))
  (let (%1630 (Mul %1629 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1631 (Add %1630 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1633 (MatMul %1631 %2633))
  (let (%1634 (Add %1633 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1636 (MatMul %1631 %2634))
  (let (%1637 (Add %1636 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1639 (MatMul %1631 %2635))
  (let (%1640 (Add %1639 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1641 (Shape %1634))
  (let (%1642 (Constant 0))
  (let (%1643 (Gather %1641 %1642 0))
  (let (%1644 (Shape %1634))
  (let (%1645 (Constant 1))
  (let (%1646 (Gather %1644 %1645 0))
  (let (%1649 (Unsqueeze %1643 (vec 0)))
  (let (%1650 (Unsqueeze %1646 (vec 0)))
  (let (%1653 (Concat %1649 %1650 %2636 %2637 0))
  (let (%1654 (Reshape %1634 %1653))
  (let (%1655 (Transpose %1654 (vec 0 2 1 3)))
  (let (%1656 (Shape %1637))
  (let (%1657 (Constant 0))
  (let (%1658 (Gather %1656 %1657 0))
  (let (%1659 (Shape %1637))
  (let (%1660 (Constant 1))
  (let (%1661 (Gather %1659 %1660 0))
  (let (%1664 (Unsqueeze %1658 (vec 0)))
  (let (%1665 (Unsqueeze %1661 (vec 0)))
  (let (%1668 (Concat %1664 %1665 %2638 %2639 0))
  (let (%1669 (Reshape %1637 %1668))
  (let (%1670 (Shape %1640))
  (let (%1671 (Constant 0))
  (let (%1672 (Gather %1670 %1671 0))
  (let (%1673 (Shape %1640))
  (let (%1674 (Constant 1))
  (let (%1675 (Gather %1673 %1674 0))
  (let (%1678 (Unsqueeze %1672 (vec 0)))
  (let (%1679 (Unsqueeze %1675 (vec 0)))
  (let (%1682 (Concat %1678 %1679 %2640 %2641 0))
  (let (%1683 (Reshape %1640 %1682))
  (let (%1684 (Transpose %1683 (vec 0 2 1 3)))
  (let (%1685 (Transpose %1669 (vec 0 2 3 1)))
  (let (%1686 (MatMul %1655 %1685))
  (let (%1687 (Constant 8.0))
  (let (%1688 (Div %1686 %1687))
  (let (%1689 (Add %1688 %305))
  (let (%1690 (Softmax %1689 3))
  (let (%1691 (MatMul %1690 %1684))
  (let (%1692 (Transpose %1691 (vec 0 2 1 3)))
  (let (%1693 (Shape %1692))
  (let (%1694 (Constant 0))
  (let (%1695 (Gather %1693 %1694 0))
  (let (%1696 (Shape %1692))
  (let (%1697 (Constant 1))
  (let (%1698 (Gather %1696 %1697 0))
  (let (%1700 (Unsqueeze %1695 (vec 0)))
  (let (%1701 (Unsqueeze %1698 (vec 0)))
  (let (%1703 (Concat %1700 %1701 %2642 0))
  (let (%1704 (Reshape %1692 %1703))
  (let (%1706 (MatMul %1704 %2643))
  (let (%1707 (Add %1706 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1708 (Add %1707 %1631))
  (let (%1710 (ReduceMean %1708 (vec -1) 1))
  (let (%1711 (Sub %1708 %1710))
  (let (%1712 (Cast_FLOAT %1711))
  (let (%1714 (Pow %1712 %2644))
  (let (%1715 (ReduceMean %1714 (vec -1) 1))
  (let (%1716 (Constant 9.999999960041972e-13))
  (let (%1717 (Add %1715 %1716))
  (let (%1718 (Sqrt %1717))
  (let (%1719 (Div %1711 %1718))
  (let (%1720 (Mul %1719 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1721 (Add %1720 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1723 (MatMul %1721 %2645))
  (let (%1724 (Add %1723 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1725 (Constant 1.4142135381698608))
  (let (%1726 (Div %1724 %1725))
  (let (%1727 (Erf %1726))
  (let (%1728 (Constant 1.0))
  (let (%1729 (Add %1727 %1728))
  (let (%1730 (Mul %1724 %1729))
  (let (%1731 (Constant 0.5))
  (let (%1732 (Mul %1730 %1731))
  (let (%1734 (MatMul %1732 %2646))
  (let (%1735 (Add %1734 bert.encoder.layer.11.output.dense.bias))
  (let (%1736 (Add %1735 %1721))
  (let (%1738 (ReduceMean %1736 (vec -1) 1))
  (let (%1739 (Sub %1736 %1738))
  (let (%1740 (Cast_FLOAT %1739))
  (let (%1742 (Pow %1740 %2647))
  (let (%1743 (ReduceMean %1742 (vec -1) 1))
  (let (%1744 (Constant 9.999999960041972e-13))
  (let (%1745 (Add %1743 %1744))
  (let (%1746 (Sqrt %1745))
  (let (%1747 (Div %1739 %1746))
  (let (%1748 (Mul %1747 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1749 (Add %1748 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1751 (MatMul %1749 %2648))
  (let (%1752 (Add %1751 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1754 (MatMul %1749 %2649))
  (let (%1755 (Add %1754 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1757 (MatMul %1749 %2650))
  (let (%1758 (Add %1757 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1759 (Shape %1752))
  (let (%1760 (Constant 0))
  (let (%1761 (Gather %1759 %1760 0))
  (let (%1762 (Shape %1752))
  (let (%1763 (Constant 1))
  (let (%1764 (Gather %1762 %1763 0))
  (let (%1767 (Unsqueeze %1761 (vec 0)))
  (let (%1768 (Unsqueeze %1764 (vec 0)))
  (let (%1771 (Concat %1767 %1768 %2651 %2652 0))
  (let (%1772 (Reshape %1752 %1771))
  (let (%1773 (Transpose %1772 (vec 0 2 1 3)))
  (let (%1774 (Shape %1755))
  (let (%1775 (Constant 0))
  (let (%1776 (Gather %1774 %1775 0))
  (let (%1777 (Shape %1755))
  (let (%1778 (Constant 1))
  (let (%1779 (Gather %1777 %1778 0))
  (let (%1782 (Unsqueeze %1776 (vec 0)))
  (let (%1783 (Unsqueeze %1779 (vec 0)))
  (let (%1786 (Concat %1782 %1783 %2653 %2654 0))
  (let (%1787 (Reshape %1755 %1786))
  (let (%1788 (Shape %1758))
  (let (%1789 (Constant 0))
  (let (%1790 (Gather %1788 %1789 0))
  (let (%1791 (Shape %1758))
  (let (%1792 (Constant 1))
  (let (%1793 (Gather %1791 %1792 0))
  (let (%1796 (Unsqueeze %1790 (vec 0)))
  (let (%1797 (Unsqueeze %1793 (vec 0)))
  (let (%1800 (Concat %1796 %1797 %2655 %2656 0))
  (let (%1801 (Reshape %1758 %1800))
  (let (%1802 (Transpose %1801 (vec 0 2 1 3)))
  (let (%1803 (Transpose %1787 (vec 0 2 3 1)))
  (let (%1804 (MatMul %1773 %1803))
  (let (%1805 (Constant 8.0))
  (let (%1806 (Div %1804 %1805))
  (let (%1807 (Add %1806 %305))
  (let (%1808 (Softmax %1807 3))
  (let (%1809 (MatMul %1808 %1802))
  (let (%1810 (Transpose %1809 (vec 0 2 1 3)))
  (let (%1811 (Shape %1810))
  (let (%1812 (Constant 0))
  (let (%1813 (Gather %1811 %1812 0))
  (let (%1814 (Shape %1810))
  (let (%1815 (Constant 1))
  (let (%1816 (Gather %1814 %1815 0))
  (let (%1818 (Unsqueeze %1813 (vec 0)))
  (let (%1819 (Unsqueeze %1816 (vec 0)))
  (let (%1821 (Concat %1818 %1819 %2657 0))
  (let (%1822 (Reshape %1810 %1821))
  (let (%1824 (MatMul %1822 %2658))
  (let (%1825 (Add %1824 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1826 (Add %1825 %1749))
  (let (%1828 (ReduceMean %1826 (vec -1) 1))
  (let (%1829 (Sub %1826 %1828))
  (let (%1830 (Cast_FLOAT %1829))
  (let (%1832 (Pow %1830 %2659))
  (let (%1833 (ReduceMean %1832 (vec -1) 1))
  (let (%1834 (Constant 9.999999960041972e-13))
  (let (%1835 (Add %1833 %1834))
  (let (%1836 (Sqrt %1835))
  (let (%1837 (Div %1829 %1836))
  (let (%1838 (Mul %1837 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1839 (Add %1838 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1841 (MatMul %1839 %2660))
  (let (%1842 (Add %1841 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1843 (Constant 1.4142135381698608))
  (let (%1844 (Div %1842 %1843))
  (let (%1845 (Erf %1844))
  (let (%1846 (Constant 1.0))
  (let (%1847 (Add %1845 %1846))
  (let (%1848 (Mul %1842 %1847))
  (let (%1849 (Constant 0.5))
  (let (%1850 (Mul %1848 %1849))
  (let (%1852 (MatMul %1850 %2661))
  (let (%1853 (Add %1852 bert.encoder.layer.12.output.dense.bias))
  (let (%1854 (Add %1853 %1839))
  (let (%1856 (ReduceMean %1854 (vec -1) 1))
  (let (%1857 (Sub %1854 %1856))
  (let (%1858 (Cast_FLOAT %1857))
  (let (%1860 (Pow %1858 %2662))
  (let (%1861 (ReduceMean %1860 (vec -1) 1))
  (let (%1862 (Constant 9.999999960041972e-13))
  (let (%1863 (Add %1861 %1862))
  (let (%1864 (Sqrt %1863))
  (let (%1865 (Div %1857 %1864))
  (let (%1866 (Mul %1865 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1867 (Add %1866 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1869 (MatMul %1867 %2663))
  (let (%1870 (Add %1869 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1872 (MatMul %1867 %2664))
  (let (%1873 (Add %1872 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1875 (MatMul %1867 %2665))
  (let (%1876 (Add %1875 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1877 (Shape %1870))
  (let (%1878 (Constant 0))
  (let (%1879 (Gather %1877 %1878 0))
  (let (%1880 (Shape %1870))
  (let (%1881 (Constant 1))
  (let (%1882 (Gather %1880 %1881 0))
  (let (%1885 (Unsqueeze %1879 (vec 0)))
  (let (%1886 (Unsqueeze %1882 (vec 0)))
  (let (%1889 (Concat %1885 %1886 %2666 %2667 0))
  (let (%1890 (Reshape %1870 %1889))
  (let (%1891 (Transpose %1890 (vec 0 2 1 3)))
  (let (%1892 (Shape %1873))
  (let (%1893 (Constant 0))
  (let (%1894 (Gather %1892 %1893 0))
  (let (%1895 (Shape %1873))
  (let (%1896 (Constant 1))
  (let (%1897 (Gather %1895 %1896 0))
  (let (%1900 (Unsqueeze %1894 (vec 0)))
  (let (%1901 (Unsqueeze %1897 (vec 0)))
  (let (%1904 (Concat %1900 %1901 %2668 %2669 0))
  (let (%1905 (Reshape %1873 %1904))
  (let (%1906 (Shape %1876))
  (let (%1907 (Constant 0))
  (let (%1908 (Gather %1906 %1907 0))
  (let (%1909 (Shape %1876))
  (let (%1910 (Constant 1))
  (let (%1911 (Gather %1909 %1910 0))
  (let (%1914 (Unsqueeze %1908 (vec 0)))
  (let (%1915 (Unsqueeze %1911 (vec 0)))
  (let (%1918 (Concat %1914 %1915 %2670 %2671 0))
  (let (%1919 (Reshape %1876 %1918))
  (let (%1920 (Transpose %1919 (vec 0 2 1 3)))
  (let (%1921 (Transpose %1905 (vec 0 2 3 1)))
  (let (%1922 (MatMul %1891 %1921))
  (let (%1923 (Constant 8.0))
  (let (%1924 (Div %1922 %1923))
  (let (%1925 (Add %1924 %305))
  (let (%1926 (Softmax %1925 3))
  (let (%1927 (MatMul %1926 %1920))
  (let (%1928 (Transpose %1927 (vec 0 2 1 3)))
  (let (%1929 (Shape %1928))
  (let (%1930 (Constant 0))
  (let (%1931 (Gather %1929 %1930 0))
  (let (%1932 (Shape %1928))
  (let (%1933 (Constant 1))
  (let (%1934 (Gather %1932 %1933 0))
  (let (%1936 (Unsqueeze %1931 (vec 0)))
  (let (%1937 (Unsqueeze %1934 (vec 0)))
  (let (%1939 (Concat %1936 %1937 %2672 0))
  (let (%1940 (Reshape %1928 %1939))
  (let (%1942 (MatMul %1940 %2673))
  (let (%1943 (Add %1942 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1944 (Add %1943 %1867))
  (let (%1946 (ReduceMean %1944 (vec -1) 1))
  (let (%1947 (Sub %1944 %1946))
  (let (%1948 (Cast_FLOAT %1947))
  (let (%1950 (Pow %1948 %2674))
  (let (%1951 (ReduceMean %1950 (vec -1) 1))
  (let (%1952 (Constant 9.999999960041972e-13))
  (let (%1953 (Add %1951 %1952))
  (let (%1954 (Sqrt %1953))
  (let (%1955 (Div %1947 %1954))
  (let (%1956 (Mul %1955 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1957 (Add %1956 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1959 (MatMul %1957 %2675))
  (let (%1960 (Add %1959 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1961 (Constant 1.4142135381698608))
  (let (%1962 (Div %1960 %1961))
  (let (%1963 (Erf %1962))
  (let (%1964 (Constant 1.0))
  (let (%1965 (Add %1963 %1964))
  (let (%1966 (Mul %1960 %1965))
  (let (%1967 (Constant 0.5))
  (let (%1968 (Mul %1966 %1967))
  (let (%1970 (MatMul %1968 %2676))
  (let (%1971 (Add %1970 bert.encoder.layer.13.output.dense.bias))
  (let (%1972 (Add %1971 %1957))
  (let (%1974 (ReduceMean %1972 (vec -1) 1))
  (let (%1975 (Sub %1972 %1974))
  (let (%1976 (Cast_FLOAT %1975))
  (let (%1978 (Pow %1976 %2677))
  (let (%1979 (ReduceMean %1978 (vec -1) 1))
  (let (%1980 (Constant 9.999999960041972e-13))
  (let (%1981 (Add %1979 %1980))
  (let (%1982 (Sqrt %1981))
  (let (%1983 (Div %1975 %1982))
  (let (%1984 (Mul %1983 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%1985 (Add %1984 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%1987 (MatMul %1985 %2678))
  (let (%1988 (Add %1987 bert.encoder.layer.14.attention.self.query.bias))
  (let (%1990 (MatMul %1985 %2679))
  (let (%1991 (Add %1990 bert.encoder.layer.14.attention.self.key.bias))
  (let (%1993 (MatMul %1985 %2680))
  (let (%1994 (Add %1993 bert.encoder.layer.14.attention.self.value.bias))
  (let (%1995 (Shape %1988))
  (let (%1996 (Constant 0))
  (let (%1997 (Gather %1995 %1996 0))
  (let (%1998 (Shape %1988))
  (let (%1999 (Constant 1))
  (let (%2000 (Gather %1998 %1999 0))
  (let (%2003 (Unsqueeze %1997 (vec 0)))
  (let (%2004 (Unsqueeze %2000 (vec 0)))
  (let (%2007 (Concat %2003 %2004 %2681 %2682 0))
  (let (%2008 (Reshape %1988 %2007))
  (let (%2009 (Transpose %2008 (vec 0 2 1 3)))
  (let (%2010 (Shape %1991))
  (let (%2011 (Constant 0))
  (let (%2012 (Gather %2010 %2011 0))
  (let (%2013 (Shape %1991))
  (let (%2014 (Constant 1))
  (let (%2015 (Gather %2013 %2014 0))
  (let (%2018 (Unsqueeze %2012 (vec 0)))
  (let (%2019 (Unsqueeze %2015 (vec 0)))
  (let (%2022 (Concat %2018 %2019 %2683 %2684 0))
  (let (%2023 (Reshape %1991 %2022))
  (let (%2024 (Shape %1994))
  (let (%2025 (Constant 0))
  (let (%2026 (Gather %2024 %2025 0))
  (let (%2027 (Shape %1994))
  (let (%2028 (Constant 1))
  (let (%2029 (Gather %2027 %2028 0))
  (let (%2032 (Unsqueeze %2026 (vec 0)))
  (let (%2033 (Unsqueeze %2029 (vec 0)))
  (let (%2036 (Concat %2032 %2033 %2685 %2686 0))
  (let (%2037 (Reshape %1994 %2036))
  (let (%2038 (Transpose %2037 (vec 0 2 1 3)))
  (let (%2039 (Transpose %2023 (vec 0 2 3 1)))
  (let (%2040 (MatMul %2009 %2039))
  (let (%2041 (Constant 8.0))
  (let (%2042 (Div %2040 %2041))
  (let (%2043 (Add %2042 %305))
  (let (%2044 (Softmax %2043 3))
  (let (%2045 (MatMul %2044 %2038))
  (let (%2046 (Transpose %2045 (vec 0 2 1 3)))
  (let (%2047 (Shape %2046))
  (let (%2048 (Constant 0))
  (let (%2049 (Gather %2047 %2048 0))
  (let (%2050 (Shape %2046))
  (let (%2051 (Constant 1))
  (let (%2052 (Gather %2050 %2051 0))
  (let (%2054 (Unsqueeze %2049 (vec 0)))
  (let (%2055 (Unsqueeze %2052 (vec 0)))
  (let (%2057 (Concat %2054 %2055 %2687 0))
  (let (%2058 (Reshape %2046 %2057))
  (let (%2060 (MatMul %2058 %2688))
  (let (%2061 (Add %2060 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2062 (Add %2061 %1985))
  (let (%2064 (ReduceMean %2062 (vec -1) 1))
  (let (%2065 (Sub %2062 %2064))
  (let (%2066 (Cast_FLOAT %2065))
  (let (%2068 (Pow %2066 %2689))
  (let (%2069 (ReduceMean %2068 (vec -1) 1))
  (let (%2070 (Constant 9.999999960041972e-13))
  (let (%2071 (Add %2069 %2070))
  (let (%2072 (Sqrt %2071))
  (let (%2073 (Div %2065 %2072))
  (let (%2074 (Mul %2073 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2075 (Add %2074 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2077 (MatMul %2075 %2690))
  (let (%2078 (Add %2077 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2079 (Constant 1.4142135381698608))
  (let (%2080 (Div %2078 %2079))
  (let (%2081 (Erf %2080))
  (let (%2082 (Constant 1.0))
  (let (%2083 (Add %2081 %2082))
  (let (%2084 (Mul %2078 %2083))
  (let (%2085 (Constant 0.5))
  (let (%2086 (Mul %2084 %2085))
  (let (%2088 (MatMul %2086 %2691))
  (let (%2089 (Add %2088 bert.encoder.layer.14.output.dense.bias))
  (let (%2090 (Add %2089 %2075))
  (let (%2092 (ReduceMean %2090 (vec -1) 1))
  (let (%2093 (Sub %2090 %2092))
  (let (%2094 (Cast_FLOAT %2093))
  (let (%2096 (Pow %2094 %2692))
  (let (%2097 (ReduceMean %2096 (vec -1) 1))
  (let (%2098 (Constant 9.999999960041972e-13))
  (let (%2099 (Add %2097 %2098))
  (let (%2100 (Sqrt %2099))
  (let (%2101 (Div %2093 %2100))
  (let (%2102 (Mul %2101 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2103 (Add %2102 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2105 (MatMul %2103 %2693))
  (let (%2106 (Add %2105 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2108 (MatMul %2103 %2694))
  (let (%2109 (Add %2108 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2111 (MatMul %2103 %2695))
  (let (%2112 (Add %2111 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2113 (Shape %2106))
  (let (%2114 (Constant 0))
  (let (%2115 (Gather %2113 %2114 0))
  (let (%2116 (Shape %2106))
  (let (%2117 (Constant 1))
  (let (%2118 (Gather %2116 %2117 0))
  (let (%2121 (Unsqueeze %2115 (vec 0)))
  (let (%2122 (Unsqueeze %2118 (vec 0)))
  (let (%2125 (Concat %2121 %2122 %2696 %2697 0))
  (let (%2126 (Reshape %2106 %2125))
  (let (%2127 (Transpose %2126 (vec 0 2 1 3)))
  (let (%2128 (Shape %2109))
  (let (%2129 (Constant 0))
  (let (%2130 (Gather %2128 %2129 0))
  (let (%2131 (Shape %2109))
  (let (%2132 (Constant 1))
  (let (%2133 (Gather %2131 %2132 0))
  (let (%2136 (Unsqueeze %2130 (vec 0)))
  (let (%2137 (Unsqueeze %2133 (vec 0)))
  (let (%2140 (Concat %2136 %2137 %2698 %2699 0))
  (let (%2141 (Reshape %2109 %2140))
  (let (%2142 (Shape %2112))
  (let (%2143 (Constant 0))
  (let (%2144 (Gather %2142 %2143 0))
  (let (%2145 (Shape %2112))
  (let (%2146 (Constant 1))
  (let (%2147 (Gather %2145 %2146 0))
  (let (%2150 (Unsqueeze %2144 (vec 0)))
  (let (%2151 (Unsqueeze %2147 (vec 0)))
  (let (%2154 (Concat %2150 %2151 %2700 %2701 0))
  (let (%2155 (Reshape %2112 %2154))
  (let (%2156 (Transpose %2155 (vec 0 2 1 3)))
  (let (%2157 (Transpose %2141 (vec 0 2 3 1)))
  (let (%2158 (MatMul %2127 %2157))
  (let (%2159 (Constant 8.0))
  (let (%2160 (Div %2158 %2159))
  (let (%2161 (Add %2160 %305))
  (let (%2162 (Softmax %2161 3))
  (let (%2163 (MatMul %2162 %2156))
  (let (%2164 (Transpose %2163 (vec 0 2 1 3)))
  (let (%2165 (Shape %2164))
  (let (%2166 (Constant 0))
  (let (%2167 (Gather %2165 %2166 0))
  (let (%2168 (Shape %2164))
  (let (%2169 (Constant 1))
  (let (%2170 (Gather %2168 %2169 0))
  (let (%2172 (Unsqueeze %2167 (vec 0)))
  (let (%2173 (Unsqueeze %2170 (vec 0)))
  (let (%2175 (Concat %2172 %2173 %2702 0))
  (let (%2176 (Reshape %2164 %2175))
  (let (%2178 (MatMul %2176 %2703))
  (let (%2179 (Add %2178 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2180 (Add %2179 %2103))
  (let (%2182 (ReduceMean %2180 (vec -1) 1))
  (let (%2183 (Sub %2180 %2182))
  (let (%2184 (Cast_FLOAT %2183))
  (let (%2186 (Pow %2184 %2704))
  (let (%2187 (ReduceMean %2186 (vec -1) 1))
  (let (%2188 (Constant 9.999999960041972e-13))
  (let (%2189 (Add %2187 %2188))
  (let (%2190 (Sqrt %2189))
  (let (%2191 (Div %2183 %2190))
  (let (%2192 (Mul %2191 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2193 (Add %2192 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2195 (MatMul %2193 %2705))
  (let (%2196 (Add %2195 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2197 (Constant 1.4142135381698608))
  (let (%2198 (Div %2196 %2197))
  (let (%2199 (Erf %2198))
  (let (%2200 (Constant 1.0))
  (let (%2201 (Add %2199 %2200))
  (let (%2202 (Mul %2196 %2201))
  (let (%2203 (Constant 0.5))
  (let (%2204 (Mul %2202 %2203))
  (let (%2206 (MatMul %2204 %2706))
  (let (%2207 (Add %2206 bert.encoder.layer.15.output.dense.bias))
  (let (%2208 (Add %2207 %2193))
  (let (%2210 (ReduceMean %2208 (vec -1) 1))
  (let (%2211 (Sub %2208 %2210))
  (let (%2212 (Cast_FLOAT %2211))
  (let (%2214 (Pow %2212 %2707))
  (let (%2215 (ReduceMean %2214 (vec -1) 1))
  (let (%2216 (Constant 9.999999960041972e-13))
  (let (%2217 (Add %2215 %2216))
  (let (%2218 (Sqrt %2217))
  (let (%2219 (Div %2211 %2218))
  (let (%2220 (Mul %2219 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2221 (Add %2220 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2223 (MatMul %2221 %2708))
  (let (%2224 (Add %2223 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2226 (MatMul %2221 %2709))
  (let (%2227 (Add %2226 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2229 (MatMul %2221 %2710))
  (let (%2230 (Add %2229 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2231 (Shape %2224))
  (let (%2232 (Constant 0))
  (let (%2233 (Gather %2231 %2232 0))
  (let (%2234 (Shape %2224))
  (let (%2235 (Constant 1))
  (let (%2236 (Gather %2234 %2235 0))
  (let (%2239 (Unsqueeze %2233 (vec 0)))
  (let (%2240 (Unsqueeze %2236 (vec 0)))
  (let (%2243 (Concat %2239 %2240 %2711 %2712 0))
  (let (%2244 (Reshape %2224 %2243))
  (let (%2245 (Transpose %2244 (vec 0 2 1 3)))
  (let (%2246 (Shape %2227))
  (let (%2247 (Constant 0))
  (let (%2248 (Gather %2246 %2247 0))
  (let (%2249 (Shape %2227))
  (let (%2250 (Constant 1))
  (let (%2251 (Gather %2249 %2250 0))
  (let (%2254 (Unsqueeze %2248 (vec 0)))
  (let (%2255 (Unsqueeze %2251 (vec 0)))
  (let (%2258 (Concat %2254 %2255 %2713 %2714 0))
  (let (%2259 (Reshape %2227 %2258))
  (let (%2260 (Shape %2230))
  (let (%2261 (Constant 0))
  (let (%2262 (Gather %2260 %2261 0))
  (let (%2263 (Shape %2230))
  (let (%2264 (Constant 1))
  (let (%2265 (Gather %2263 %2264 0))
  (let (%2268 (Unsqueeze %2262 (vec 0)))
  (let (%2269 (Unsqueeze %2265 (vec 0)))
  (let (%2272 (Concat %2268 %2269 %2715 %2716 0))
  (let (%2273 (Reshape %2230 %2272))
  (let (%2274 (Transpose %2273 (vec 0 2 1 3)))
  (let (%2275 (Transpose %2259 (vec 0 2 3 1)))
  (let (%2276 (MatMul %2245 %2275))
  (let (%2277 (Constant 8.0))
  (let (%2278 (Div %2276 %2277))
  (let (%2279 (Add %2278 %305))
  (let (%2280 (Softmax %2279 3))
  (let (%2281 (MatMul %2280 %2274))
  (let (%2282 (Transpose %2281 (vec 0 2 1 3)))
  (let (%2283 (Shape %2282))
  (let (%2284 (Constant 0))
  (let (%2285 (Gather %2283 %2284 0))
  (let (%2286 (Shape %2282))
  (let (%2287 (Constant 1))
  (let (%2288 (Gather %2286 %2287 0))
  (let (%2290 (Unsqueeze %2285 (vec 0)))
  (let (%2291 (Unsqueeze %2288 (vec 0)))
  (let (%2293 (Concat %2290 %2291 %2717 0))
  (let (%2294 (Reshape %2282 %2293))
  (let (%2296 (MatMul %2294 %2718))
  (let (%2297 (Add %2296 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2298 (Add %2297 %2221))
  (let (%2300 (ReduceMean %2298 (vec -1) 1))
  (let (%2301 (Sub %2298 %2300))
  (let (%2302 (Cast_FLOAT %2301))
  (let (%2304 (Pow %2302 %2719))
  (let (%2305 (ReduceMean %2304 (vec -1) 1))
  (let (%2306 (Constant 9.999999960041972e-13))
  (let (%2307 (Add %2305 %2306))
  (let (%2308 (Sqrt %2307))
  (let (%2309 (Div %2301 %2308))
  (let (%2310 (Mul %2309 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2311 (Add %2310 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2313 (MatMul %2311 %2720))
  (let (%2314 (Add %2313 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2315 (Constant 1.4142135381698608))
  (let (%2316 (Div %2314 %2315))
  (let (%2317 (Erf %2316))
  (let (%2318 (Constant 1.0))
  (let (%2319 (Add %2317 %2318))
  (let (%2320 (Mul %2314 %2319))
  (let (%2321 (Constant 0.5))
  (let (%2322 (Mul %2320 %2321))
  (let (%2324 (MatMul %2322 %2721))
  (let (%2325 (Add %2324 bert.encoder.layer.16.output.dense.bias))
  (let (%2326 (Add %2325 %2311))
  (let (%2328 (ReduceMean %2326 (vec -1) 1))
  (let (%2329 (Sub %2326 %2328))
  (let (%2330 (Cast_FLOAT %2329))
  (let (%2332 (Pow %2330 %2722))
  (let (%2333 (ReduceMean %2332 (vec -1) 1))
  (let (%2334 (Constant 9.999999960041972e-13))
  (let (%2335 (Add %2333 %2334))
  (let (%2336 (Sqrt %2335))
  (let (%2337 (Div %2329 %2336))
  (let (%2338 (Mul %2337 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2339 (Add %2338 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2341 (MatMul %2339 %2723))
  (let (%2342 (Add %2341 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2344 (MatMul %2339 %2724))
  (let (%2345 (Add %2344 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2347 (MatMul %2339 %2725))
  (let (%2348 (Add %2347 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2349 (Shape %2342))
  (let (%2350 (Constant 0))
  (let (%2351 (Gather %2349 %2350 0))
  (let (%2352 (Shape %2342))
  (let (%2353 (Constant 1))
  (let (%2354 (Gather %2352 %2353 0))
  (let (%2357 (Unsqueeze %2351 (vec 0)))
  (let (%2358 (Unsqueeze %2354 (vec 0)))
  (let (%2361 (Concat %2357 %2358 %2726 %2727 0))
  (let (%2362 (Reshape %2342 %2361))
  (let (%2363 (Transpose %2362 (vec 0 2 1 3)))
  (let (%2364 (Shape %2345))
  (let (%2365 (Constant 0))
  (let (%2366 (Gather %2364 %2365 0))
  (let (%2367 (Shape %2345))
  (let (%2368 (Constant 1))
  (let (%2369 (Gather %2367 %2368 0))
  (let (%2372 (Unsqueeze %2366 (vec 0)))
  (let (%2373 (Unsqueeze %2369 (vec 0)))
  (let (%2376 (Concat %2372 %2373 %2728 %2729 0))
  (let (%2377 (Reshape %2345 %2376))
  (let (%2378 (Shape %2348))
  (let (%2379 (Constant 0))
  (let (%2380 (Gather %2378 %2379 0))
  (let (%2381 (Shape %2348))
  (let (%2382 (Constant 1))
  (let (%2383 (Gather %2381 %2382 0))
  (let (%2386 (Unsqueeze %2380 (vec 0)))
  (let (%2387 (Unsqueeze %2383 (vec 0)))
  (let (%2390 (Concat %2386 %2387 %2730 %2731 0))
  (let (%2391 (Reshape %2348 %2390))
  (let (%2392 (Transpose %2391 (vec 0 2 1 3)))
  (let (%2393 (Transpose %2377 (vec 0 2 3 1)))
  (let (%2394 (MatMul %2363 %2393))
  (let (%2395 (Constant 8.0))
  (let (%2396 (Div %2394 %2395))
  (let (%2397 (Add %2396 %305))
  (let (%2398 (Softmax %2397 3))
  (let (%2399 (MatMul %2398 %2392))
  (let (%2400 (Transpose %2399 (vec 0 2 1 3)))
  (let (%2401 (Shape %2400))
  (let (%2402 (Constant 0))
  (let (%2403 (Gather %2401 %2402 0))
  (let (%2404 (Shape %2400))
  (let (%2405 (Constant 1))
  (let (%2406 (Gather %2404 %2405 0))
  (let (%2408 (Unsqueeze %2403 (vec 0)))
  (let (%2409 (Unsqueeze %2406 (vec 0)))
  (let (%2411 (Concat %2408 %2409 %2732 0))
  (let (%2412 (Reshape %2400 %2411))
  (let (%2414 (MatMul %2412 %2733))
  (let (%2415 (Add %2414 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2416 (Add %2415 %2339))
  (let (%2418 (ReduceMean %2416 (vec -1) 1))
  (let (%2419 (Sub %2416 %2418))
  (let (%2420 (Cast_FLOAT %2419))
  (let (%2422 (Pow %2420 %2734))
  (let (%2423 (ReduceMean %2422 (vec -1) 1))
  (let (%2424 (Constant 9.999999960041972e-13))
  (let (%2425 (Add %2423 %2424))
  (let (%2426 (Sqrt %2425))
  (let (%2427 (Div %2419 %2426))
  (let (%2428 (Mul %2427 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2429 (Add %2428 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2431 (MatMul %2429 %2735))
  (let (%2432 (Add %2431 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2433 (Constant 1.4142135381698608))
  (let (%2434 (Div %2432 %2433))
  (let (%2435 (Erf %2434))
  (let (%2436 (Constant 1.0))
  (let (%2437 (Add %2435 %2436))
  (let (%2438 (Mul %2432 %2437))
  (let (%2439 (Constant 0.5))
  (let (%2440 (Mul %2438 %2439))
  (let (%2442 (MatMul %2440 %2736))
  (let (%2443 (Add %2442 bert.encoder.layer.17.output.dense.bias))
  (let (%2444 (Add %2443 %2429))
  (let (%2446 (ReduceMean %2444 (vec -1) 1))
  (let (%2447 (Sub %2444 %2446))
  (let (%2448 (Cast_FLOAT %2447))
  (let (%2450 (Pow %2448 %2737))
  (let (%2451 (ReduceMean %2450 (vec -1) 1))
  (let (%2452 (Constant 9.999999960041972e-13))
  (let (%2453 (Add %2451 %2452))
  (let (%2454 (Sqrt %2453))
  (let (%2455 (Div %2447 %2454))
  (let (%2456 (Mul %2455 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2457 (Add %2456 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2459 (MatMul %2457 %2738))
  (let (%2460 (Add %2459 qa_outputs.bias))
  (let ((%2461 %2462) (Split %2460 (vec 1 1) -1))
  (let (output_0 (Squeeze %2461 (vec -1)))
  (let (output_1 (Squeeze %2462 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

