;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert22.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%3001 (vec 0))
  (let (%3002 (vec 1))
  (let (%3003 2.0)
  (let (%3004 (load-from-onnx-float32 768 768 "%3004"))
  (let (%3005 (load-from-onnx-float32 768 768 "%3005"))
  (let (%3006 (load-from-onnx-float32 768 768 "%3006"))
  (let (%3007 (vec 12))
  (let (%3008 (vec 64))
  (let (%3009 (vec 12))
  (let (%3010 (vec 64))
  (let (%3011 (vec 12))
  (let (%3012 (vec 64))
  (let (%3013 (vec 768))
  (let (%3014 (load-from-onnx-float32 768 768 "%3014"))
  (let (%3015 2.0)
  (let (%3016 (load-from-onnx-float32 768 3072 "%3016"))
  (let (%3017 (load-from-onnx-float32 3072 768 "%3017"))
  (let (%3018 2.0)
  (let (%3019 (load-from-onnx-float32 768 768 "%3019"))
  (let (%3020 (load-from-onnx-float32 768 768 "%3020"))
  (let (%3021 (load-from-onnx-float32 768 768 "%3021"))
  (let (%3022 (vec 12))
  (let (%3023 (vec 64))
  (let (%3024 (vec 12))
  (let (%3025 (vec 64))
  (let (%3026 (vec 12))
  (let (%3027 (vec 64))
  (let (%3028 (vec 768))
  (let (%3029 (load-from-onnx-float32 768 768 "%3029"))
  (let (%3030 2.0)
  (let (%3031 (load-from-onnx-float32 768 3072 "%3031"))
  (let (%3032 (load-from-onnx-float32 3072 768 "%3032"))
  (let (%3033 2.0)
  (let (%3034 (load-from-onnx-float32 768 768 "%3034"))
  (let (%3035 (load-from-onnx-float32 768 768 "%3035"))
  (let (%3036 (load-from-onnx-float32 768 768 "%3036"))
  (let (%3037 (vec 12))
  (let (%3038 (vec 64))
  (let (%3039 (vec 12))
  (let (%3040 (vec 64))
  (let (%3041 (vec 12))
  (let (%3042 (vec 64))
  (let (%3043 (vec 768))
  (let (%3044 (load-from-onnx-float32 768 768 "%3044"))
  (let (%3045 2.0)
  (let (%3046 (load-from-onnx-float32 768 3072 "%3046"))
  (let (%3047 (load-from-onnx-float32 3072 768 "%3047"))
  (let (%3048 2.0)
  (let (%3049 (load-from-onnx-float32 768 768 "%3049"))
  (let (%3050 (load-from-onnx-float32 768 768 "%3050"))
  (let (%3051 (load-from-onnx-float32 768 768 "%3051"))
  (let (%3052 (vec 12))
  (let (%3053 (vec 64))
  (let (%3054 (vec 12))
  (let (%3055 (vec 64))
  (let (%3056 (vec 12))
  (let (%3057 (vec 64))
  (let (%3058 (vec 768))
  (let (%3059 (load-from-onnx-float32 768 768 "%3059"))
  (let (%3060 2.0)
  (let (%3061 (load-from-onnx-float32 768 3072 "%3061"))
  (let (%3062 (load-from-onnx-float32 3072 768 "%3062"))
  (let (%3063 2.0)
  (let (%3064 (load-from-onnx-float32 768 768 "%3064"))
  (let (%3065 (load-from-onnx-float32 768 768 "%3065"))
  (let (%3066 (load-from-onnx-float32 768 768 "%3066"))
  (let (%3067 (vec 12))
  (let (%3068 (vec 64))
  (let (%3069 (vec 12))
  (let (%3070 (vec 64))
  (let (%3071 (vec 12))
  (let (%3072 (vec 64))
  (let (%3073 (vec 768))
  (let (%3074 (load-from-onnx-float32 768 768 "%3074"))
  (let (%3075 2.0)
  (let (%3076 (load-from-onnx-float32 768 3072 "%3076"))
  (let (%3077 (load-from-onnx-float32 3072 768 "%3077"))
  (let (%3078 2.0)
  (let (%3079 (load-from-onnx-float32 768 768 "%3079"))
  (let (%3080 (load-from-onnx-float32 768 768 "%3080"))
  (let (%3081 (load-from-onnx-float32 768 768 "%3081"))
  (let (%3082 (vec 12))
  (let (%3083 (vec 64))
  (let (%3084 (vec 12))
  (let (%3085 (vec 64))
  (let (%3086 (vec 12))
  (let (%3087 (vec 64))
  (let (%3088 (vec 768))
  (let (%3089 (load-from-onnx-float32 768 768 "%3089"))
  (let (%3090 2.0)
  (let (%3091 (load-from-onnx-float32 768 3072 "%3091"))
  (let (%3092 (load-from-onnx-float32 3072 768 "%3092"))
  (let (%3093 2.0)
  (let (%3094 (load-from-onnx-float32 768 768 "%3094"))
  (let (%3095 (load-from-onnx-float32 768 768 "%3095"))
  (let (%3096 (load-from-onnx-float32 768 768 "%3096"))
  (let (%3097 (vec 12))
  (let (%3098 (vec 64))
  (let (%3099 (vec 12))
  (let (%3100 (vec 64))
  (let (%3101 (vec 12))
  (let (%3102 (vec 64))
  (let (%3103 (vec 768))
  (let (%3104 (load-from-onnx-float32 768 768 "%3104"))
  (let (%3105 2.0)
  (let (%3106 (load-from-onnx-float32 768 3072 "%3106"))
  (let (%3107 (load-from-onnx-float32 3072 768 "%3107"))
  (let (%3108 2.0)
  (let (%3109 (load-from-onnx-float32 768 768 "%3109"))
  (let (%3110 (load-from-onnx-float32 768 768 "%3110"))
  (let (%3111 (load-from-onnx-float32 768 768 "%3111"))
  (let (%3112 (vec 12))
  (let (%3113 (vec 64))
  (let (%3114 (vec 12))
  (let (%3115 (vec 64))
  (let (%3116 (vec 12))
  (let (%3117 (vec 64))
  (let (%3118 (vec 768))
  (let (%3119 (load-from-onnx-float32 768 768 "%3119"))
  (let (%3120 2.0)
  (let (%3121 (load-from-onnx-float32 768 3072 "%3121"))
  (let (%3122 (load-from-onnx-float32 3072 768 "%3122"))
  (let (%3123 2.0)
  (let (%3124 (load-from-onnx-float32 768 768 "%3124"))
  (let (%3125 (load-from-onnx-float32 768 768 "%3125"))
  (let (%3126 (load-from-onnx-float32 768 768 "%3126"))
  (let (%3127 (vec 12))
  (let (%3128 (vec 64))
  (let (%3129 (vec 12))
  (let (%3130 (vec 64))
  (let (%3131 (vec 12))
  (let (%3132 (vec 64))
  (let (%3133 (vec 768))
  (let (%3134 (load-from-onnx-float32 768 768 "%3134"))
  (let (%3135 2.0)
  (let (%3136 (load-from-onnx-float32 768 3072 "%3136"))
  (let (%3137 (load-from-onnx-float32 3072 768 "%3137"))
  (let (%3138 2.0)
  (let (%3139 (load-from-onnx-float32 768 768 "%3139"))
  (let (%3140 (load-from-onnx-float32 768 768 "%3140"))
  (let (%3141 (load-from-onnx-float32 768 768 "%3141"))
  (let (%3142 (vec 12))
  (let (%3143 (vec 64))
  (let (%3144 (vec 12))
  (let (%3145 (vec 64))
  (let (%3146 (vec 12))
  (let (%3147 (vec 64))
  (let (%3148 (vec 768))
  (let (%3149 (load-from-onnx-float32 768 768 "%3149"))
  (let (%3150 2.0)
  (let (%3151 (load-from-onnx-float32 768 3072 "%3151"))
  (let (%3152 (load-from-onnx-float32 3072 768 "%3152"))
  (let (%3153 2.0)
  (let (%3154 (load-from-onnx-float32 768 768 "%3154"))
  (let (%3155 (load-from-onnx-float32 768 768 "%3155"))
  (let (%3156 (load-from-onnx-float32 768 768 "%3156"))
  (let (%3157 (vec 12))
  (let (%3158 (vec 64))
  (let (%3159 (vec 12))
  (let (%3160 (vec 64))
  (let (%3161 (vec 12))
  (let (%3162 (vec 64))
  (let (%3163 (vec 768))
  (let (%3164 (load-from-onnx-float32 768 768 "%3164"))
  (let (%3165 2.0)
  (let (%3166 (load-from-onnx-float32 768 3072 "%3166"))
  (let (%3167 (load-from-onnx-float32 3072 768 "%3167"))
  (let (%3168 2.0)
  (let (%3169 (load-from-onnx-float32 768 768 "%3169"))
  (let (%3170 (load-from-onnx-float32 768 768 "%3170"))
  (let (%3171 (load-from-onnx-float32 768 768 "%3171"))
  (let (%3172 (vec 12))
  (let (%3173 (vec 64))
  (let (%3174 (vec 12))
  (let (%3175 (vec 64))
  (let (%3176 (vec 12))
  (let (%3177 (vec 64))
  (let (%3178 (vec 768))
  (let (%3179 (load-from-onnx-float32 768 768 "%3179"))
  (let (%3180 2.0)
  (let (%3181 (load-from-onnx-float32 768 3072 "%3181"))
  (let (%3182 (load-from-onnx-float32 3072 768 "%3182"))
  (let (%3183 2.0)
  (let (%3184 (load-from-onnx-float32 768 768 "%3184"))
  (let (%3185 (load-from-onnx-float32 768 768 "%3185"))
  (let (%3186 (load-from-onnx-float32 768 768 "%3186"))
  (let (%3187 (vec 12))
  (let (%3188 (vec 64))
  (let (%3189 (vec 12))
  (let (%3190 (vec 64))
  (let (%3191 (vec 12))
  (let (%3192 (vec 64))
  (let (%3193 (vec 768))
  (let (%3194 (load-from-onnx-float32 768 768 "%3194"))
  (let (%3195 2.0)
  (let (%3196 (load-from-onnx-float32 768 3072 "%3196"))
  (let (%3197 (load-from-onnx-float32 3072 768 "%3197"))
  (let (%3198 2.0)
  (let (%3199 (load-from-onnx-float32 768 768 "%3199"))
  (let (%3200 (load-from-onnx-float32 768 768 "%3200"))
  (let (%3201 (load-from-onnx-float32 768 768 "%3201"))
  (let (%3202 (vec 12))
  (let (%3203 (vec 64))
  (let (%3204 (vec 12))
  (let (%3205 (vec 64))
  (let (%3206 (vec 12))
  (let (%3207 (vec 64))
  (let (%3208 (vec 768))
  (let (%3209 (load-from-onnx-float32 768 768 "%3209"))
  (let (%3210 2.0)
  (let (%3211 (load-from-onnx-float32 768 3072 "%3211"))
  (let (%3212 (load-from-onnx-float32 3072 768 "%3212"))
  (let (%3213 2.0)
  (let (%3214 (load-from-onnx-float32 768 768 "%3214"))
  (let (%3215 (load-from-onnx-float32 768 768 "%3215"))
  (let (%3216 (load-from-onnx-float32 768 768 "%3216"))
  (let (%3217 (vec 12))
  (let (%3218 (vec 64))
  (let (%3219 (vec 12))
  (let (%3220 (vec 64))
  (let (%3221 (vec 12))
  (let (%3222 (vec 64))
  (let (%3223 (vec 768))
  (let (%3224 (load-from-onnx-float32 768 768 "%3224"))
  (let (%3225 2.0)
  (let (%3226 (load-from-onnx-float32 768 3072 "%3226"))
  (let (%3227 (load-from-onnx-float32 3072 768 "%3227"))
  (let (%3228 2.0)
  (let (%3229 (load-from-onnx-float32 768 768 "%3229"))
  (let (%3230 (load-from-onnx-float32 768 768 "%3230"))
  (let (%3231 (load-from-onnx-float32 768 768 "%3231"))
  (let (%3232 (vec 12))
  (let (%3233 (vec 64))
  (let (%3234 (vec 12))
  (let (%3235 (vec 64))
  (let (%3236 (vec 12))
  (let (%3237 (vec 64))
  (let (%3238 (vec 768))
  (let (%3239 (load-from-onnx-float32 768 768 "%3239"))
  (let (%3240 2.0)
  (let (%3241 (load-from-onnx-float32 768 3072 "%3241"))
  (let (%3242 (load-from-onnx-float32 3072 768 "%3242"))
  (let (%3243 2.0)
  (let (%3244 (load-from-onnx-float32 768 768 "%3244"))
  (let (%3245 (load-from-onnx-float32 768 768 "%3245"))
  (let (%3246 (load-from-onnx-float32 768 768 "%3246"))
  (let (%3247 (vec 12))
  (let (%3248 (vec 64))
  (let (%3249 (vec 12))
  (let (%3250 (vec 64))
  (let (%3251 (vec 12))
  (let (%3252 (vec 64))
  (let (%3253 (vec 768))
  (let (%3254 (load-from-onnx-float32 768 768 "%3254"))
  (let (%3255 2.0)
  (let (%3256 (load-from-onnx-float32 768 3072 "%3256"))
  (let (%3257 (load-from-onnx-float32 3072 768 "%3257"))
  (let (%3258 2.0)
  (let (%3259 (load-from-onnx-float32 768 768 "%3259"))
  (let (%3260 (load-from-onnx-float32 768 768 "%3260"))
  (let (%3261 (load-from-onnx-float32 768 768 "%3261"))
  (let (%3262 (vec 12))
  (let (%3263 (vec 64))
  (let (%3264 (vec 12))
  (let (%3265 (vec 64))
  (let (%3266 (vec 12))
  (let (%3267 (vec 64))
  (let (%3268 (vec 768))
  (let (%3269 (load-from-onnx-float32 768 768 "%3269"))
  (let (%3270 2.0)
  (let (%3271 (load-from-onnx-float32 768 3072 "%3271"))
  (let (%3272 (load-from-onnx-float32 3072 768 "%3272"))
  (let (%3273 2.0)
  (let (%3274 (load-from-onnx-float32 768 768 "%3274"))
  (let (%3275 (load-from-onnx-float32 768 768 "%3275"))
  (let (%3276 (load-from-onnx-float32 768 768 "%3276"))
  (let (%3277 (vec 12))
  (let (%3278 (vec 64))
  (let (%3279 (vec 12))
  (let (%3280 (vec 64))
  (let (%3281 (vec 12))
  (let (%3282 (vec 64))
  (let (%3283 (vec 768))
  (let (%3284 (load-from-onnx-float32 768 768 "%3284"))
  (let (%3285 2.0)
  (let (%3286 (load-from-onnx-float32 768 3072 "%3286"))
  (let (%3287 (load-from-onnx-float32 3072 768 "%3287"))
  (let (%3288 2.0)
  (let (%3289 (load-from-onnx-float32 768 768 "%3289"))
  (let (%3290 (load-from-onnx-float32 768 768 "%3290"))
  (let (%3291 (load-from-onnx-float32 768 768 "%3291"))
  (let (%3292 (vec 12))
  (let (%3293 (vec 64))
  (let (%3294 (vec 12))
  (let (%3295 (vec 64))
  (let (%3296 (vec 12))
  (let (%3297 (vec 64))
  (let (%3298 (vec 768))
  (let (%3299 (load-from-onnx-float32 768 768 "%3299"))
  (let (%3300 2.0)
  (let (%3301 (load-from-onnx-float32 768 3072 "%3301"))
  (let (%3302 (load-from-onnx-float32 3072 768 "%3302"))
  (let (%3303 2.0)
  (let (%3304 (load-from-onnx-float32 768 768 "%3304"))
  (let (%3305 (load-from-onnx-float32 768 768 "%3305"))
  (let (%3306 (load-from-onnx-float32 768 768 "%3306"))
  (let (%3307 (vec 12))
  (let (%3308 (vec 64))
  (let (%3309 (vec 12))
  (let (%3310 (vec 64))
  (let (%3311 (vec 12))
  (let (%3312 (vec 64))
  (let (%3313 (vec 768))
  (let (%3314 (load-from-onnx-float32 768 768 "%3314"))
  (let (%3315 2.0)
  (let (%3316 (load-from-onnx-float32 768 3072 "%3316"))
  (let (%3317 (load-from-onnx-float32 3072 768 "%3317"))
  (let (%3318 2.0)
  (let (%3319 (load-from-onnx-float32 768 768 "%3319"))
  (let (%3320 (load-from-onnx-float32 768 768 "%3320"))
  (let (%3321 (load-from-onnx-float32 768 768 "%3321"))
  (let (%3322 (vec 12))
  (let (%3323 (vec 64))
  (let (%3324 (vec 12))
  (let (%3325 (vec 64))
  (let (%3326 (vec 12))
  (let (%3327 (vec 64))
  (let (%3328 (vec 768))
  (let (%3329 (load-from-onnx-float32 768 768 "%3329"))
  (let (%3330 2.0)
  (let (%3331 (load-from-onnx-float32 768 3072 "%3331"))
  (let (%3332 (load-from-onnx-float32 3072 768 "%3332"))
  (let (%3333 2.0)
  (let (%3334 (load-from-onnx-float32 768 2 "%3334"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.key.bias"))
  (let (bert.encoder.layer.18.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.query.bias"))
  (let (bert.encoder.layer.18.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.value.bias"))
  (let (bert.encoder.layer.18.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.18.intermediate.dense.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.key.bias"))
  (let (bert.encoder.layer.19.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.query.bias"))
  (let (bert.encoder.layer.19.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.value.bias"))
  (let (bert.encoder.layer.19.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.19.intermediate.dense.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.key.bias"))
  (let (bert.encoder.layer.20.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.query.bias"))
  (let (bert.encoder.layer.20.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.value.bias"))
  (let (bert.encoder.layer.20.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.20.intermediate.dense.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.dense.bias"))
  (let (bert.encoder.layer.21.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.21.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.21.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.output.dense.bias"))
  (let (bert.encoder.layer.21.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.key.bias"))
  (let (bert.encoder.layer.21.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.query.bias"))
  (let (bert.encoder.layer.21.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.attention.self.value.bias"))
  (let (bert.encoder.layer.21.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.21.intermediate.dense.bias"))
  (let (bert.encoder.layer.21.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.output.LayerNorm.bias"))
  (let (bert.encoder.layer.21.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.21.output.LayerNorm.weight"))
  (let (bert.encoder.layer.21.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.21.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%363 (Unsqueeze attention_mask (vec 1)))
  (let (%364 (Unsqueeze %363 (vec 2)))
  (let (%365 (Cast_FLOAT %364))
  (let (%366 (Constant 1.0))
  (let (%367 (Sub %366 %365))
  (let (%368 (Constant -10000.0))
  (let (%369 (Mul %367 %368))
  (let (%370 (Shape input_ids))
  (let (%371 (Constant 1))
  (let (%372 (Gather %370 %371 0))
  (let (%376 (Unsqueeze %372 (vec 0)))
  (let (%378 (Constant (vec 1)))
  (let (%379 (Slice bert.embeddings.position_ids %3001 %376 %3002 %378))
  (let (%380 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%381 (Gather bert.embeddings.position_embeddings.weight %379 0))
  (let (%382 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%383 (Add %380 %381))
  (let (%384 (Add %383 %382))
  (let (%386 (ReduceMean %384 (vec -1) 1))
  (let (%387 (Sub %384 %386))
  (let (%388 (Cast_FLOAT %387))
  (let (%390 (Pow %388 %3003))
  (let (%391 (ReduceMean %390 (vec -1) 1))
  (let (%392 (Constant 9.999999960041972e-13))
  (let (%393 (Add %391 %392))
  (let (%394 (Sqrt %393))
  (let (%395 (Div %387 %394))
  (let (%396 (Mul %395 bert.embeddings.LayerNorm.weight))
  (let (%397 (Add %396 bert.embeddings.LayerNorm.bias))
  (let (%399 (MatMul %397 %3004))
  (let (%400 (Add %399 bert.encoder.layer.0.attention.self.query.bias))
  (let (%402 (MatMul %397 %3005))
  (let (%403 (Add %402 bert.encoder.layer.0.attention.self.key.bias))
  (let (%405 (MatMul %397 %3006))
  (let (%406 (Add %405 bert.encoder.layer.0.attention.self.value.bias))
  (let (%407 (Shape %400))
  (let (%408 (Constant 0))
  (let (%409 (Gather %407 %408 0))
  (let (%410 (Shape %400))
  (let (%411 (Constant 1))
  (let (%412 (Gather %410 %411 0))
  (let (%415 (Unsqueeze %409 (vec 0)))
  (let (%416 (Unsqueeze %412 (vec 0)))
  (let (%419 (Concat %415 %416 %3007 %3008 0))
  (let (%420 (Reshape %400 %419))
  (let (%421 (Transpose %420 (vec 0 2 1 3)))
  (let (%422 (Shape %403))
  (let (%423 (Constant 0))
  (let (%424 (Gather %422 %423 0))
  (let (%425 (Shape %403))
  (let (%426 (Constant 1))
  (let (%427 (Gather %425 %426 0))
  (let (%430 (Unsqueeze %424 (vec 0)))
  (let (%431 (Unsqueeze %427 (vec 0)))
  (let (%434 (Concat %430 %431 %3009 %3010 0))
  (let (%435 (Reshape %403 %434))
  (let (%436 (Shape %406))
  (let (%437 (Constant 0))
  (let (%438 (Gather %436 %437 0))
  (let (%439 (Shape %406))
  (let (%440 (Constant 1))
  (let (%441 (Gather %439 %440 0))
  (let (%444 (Unsqueeze %438 (vec 0)))
  (let (%445 (Unsqueeze %441 (vec 0)))
  (let (%448 (Concat %444 %445 %3011 %3012 0))
  (let (%449 (Reshape %406 %448))
  (let (%450 (Transpose %449 (vec 0 2 1 3)))
  (let (%451 (Transpose %435 (vec 0 2 3 1)))
  (let (%452 (MatMul %421 %451))
  (let (%453 (Constant 8.0))
  (let (%454 (Div %452 %453))
  (let (%455 (Add %454 %369))
  (let (%456 (Softmax %455 3))
  (let (%457 (MatMul %456 %450))
  (let (%458 (Transpose %457 (vec 0 2 1 3)))
  (let (%459 (Shape %458))
  (let (%460 (Constant 0))
  (let (%461 (Gather %459 %460 0))
  (let (%462 (Shape %458))
  (let (%463 (Constant 1))
  (let (%464 (Gather %462 %463 0))
  (let (%466 (Unsqueeze %461 (vec 0)))
  (let (%467 (Unsqueeze %464 (vec 0)))
  (let (%469 (Concat %466 %467 %3013 0))
  (let (%470 (Reshape %458 %469))
  (let (%472 (MatMul %470 %3014))
  (let (%473 (Add %472 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%474 (Add %473 %397))
  (let (%476 (ReduceMean %474 (vec -1) 1))
  (let (%477 (Sub %474 %476))
  (let (%478 (Cast_FLOAT %477))
  (let (%480 (Pow %478 %3015))
  (let (%481 (ReduceMean %480 (vec -1) 1))
  (let (%482 (Constant 9.999999960041972e-13))
  (let (%483 (Add %481 %482))
  (let (%484 (Sqrt %483))
  (let (%485 (Div %477 %484))
  (let (%486 (Mul %485 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%487 (Add %486 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%489 (MatMul %487 %3016))
  (let (%490 (Add %489 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%491 (Constant 1.4142135381698608))
  (let (%492 (Div %490 %491))
  (let (%493 (Erf %492))
  (let (%494 (Constant 1.0))
  (let (%495 (Add %493 %494))
  (let (%496 (Mul %490 %495))
  (let (%497 (Constant 0.5))
  (let (%498 (Mul %496 %497))
  (let (%500 (MatMul %498 %3017))
  (let (%501 (Add %500 bert.encoder.layer.0.output.dense.bias))
  (let (%502 (Add %501 %487))
  (let (%504 (ReduceMean %502 (vec -1) 1))
  (let (%505 (Sub %502 %504))
  (let (%506 (Cast_FLOAT %505))
  (let (%508 (Pow %506 %3018))
  (let (%509 (ReduceMean %508 (vec -1) 1))
  (let (%510 (Constant 9.999999960041972e-13))
  (let (%511 (Add %509 %510))
  (let (%512 (Sqrt %511))
  (let (%513 (Div %505 %512))
  (let (%514 (Mul %513 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%515 (Add %514 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%517 (MatMul %515 %3019))
  (let (%518 (Add %517 bert.encoder.layer.1.attention.self.query.bias))
  (let (%520 (MatMul %515 %3020))
  (let (%521 (Add %520 bert.encoder.layer.1.attention.self.key.bias))
  (let (%523 (MatMul %515 %3021))
  (let (%524 (Add %523 bert.encoder.layer.1.attention.self.value.bias))
  (let (%525 (Shape %518))
  (let (%526 (Constant 0))
  (let (%527 (Gather %525 %526 0))
  (let (%528 (Shape %518))
  (let (%529 (Constant 1))
  (let (%530 (Gather %528 %529 0))
  (let (%533 (Unsqueeze %527 (vec 0)))
  (let (%534 (Unsqueeze %530 (vec 0)))
  (let (%537 (Concat %533 %534 %3022 %3023 0))
  (let (%538 (Reshape %518 %537))
  (let (%539 (Transpose %538 (vec 0 2 1 3)))
  (let (%540 (Shape %521))
  (let (%541 (Constant 0))
  (let (%542 (Gather %540 %541 0))
  (let (%543 (Shape %521))
  (let (%544 (Constant 1))
  (let (%545 (Gather %543 %544 0))
  (let (%548 (Unsqueeze %542 (vec 0)))
  (let (%549 (Unsqueeze %545 (vec 0)))
  (let (%552 (Concat %548 %549 %3024 %3025 0))
  (let (%553 (Reshape %521 %552))
  (let (%554 (Shape %524))
  (let (%555 (Constant 0))
  (let (%556 (Gather %554 %555 0))
  (let (%557 (Shape %524))
  (let (%558 (Constant 1))
  (let (%559 (Gather %557 %558 0))
  (let (%562 (Unsqueeze %556 (vec 0)))
  (let (%563 (Unsqueeze %559 (vec 0)))
  (let (%566 (Concat %562 %563 %3026 %3027 0))
  (let (%567 (Reshape %524 %566))
  (let (%568 (Transpose %567 (vec 0 2 1 3)))
  (let (%569 (Transpose %553 (vec 0 2 3 1)))
  (let (%570 (MatMul %539 %569))
  (let (%571 (Constant 8.0))
  (let (%572 (Div %570 %571))
  (let (%573 (Add %572 %369))
  (let (%574 (Softmax %573 3))
  (let (%575 (MatMul %574 %568))
  (let (%576 (Transpose %575 (vec 0 2 1 3)))
  (let (%577 (Shape %576))
  (let (%578 (Constant 0))
  (let (%579 (Gather %577 %578 0))
  (let (%580 (Shape %576))
  (let (%581 (Constant 1))
  (let (%582 (Gather %580 %581 0))
  (let (%584 (Unsqueeze %579 (vec 0)))
  (let (%585 (Unsqueeze %582 (vec 0)))
  (let (%587 (Concat %584 %585 %3028 0))
  (let (%588 (Reshape %576 %587))
  (let (%590 (MatMul %588 %3029))
  (let (%591 (Add %590 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%592 (Add %591 %515))
  (let (%594 (ReduceMean %592 (vec -1) 1))
  (let (%595 (Sub %592 %594))
  (let (%596 (Cast_FLOAT %595))
  (let (%598 (Pow %596 %3030))
  (let (%599 (ReduceMean %598 (vec -1) 1))
  (let (%600 (Constant 9.999999960041972e-13))
  (let (%601 (Add %599 %600))
  (let (%602 (Sqrt %601))
  (let (%603 (Div %595 %602))
  (let (%604 (Mul %603 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%605 (Add %604 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%607 (MatMul %605 %3031))
  (let (%608 (Add %607 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%609 (Constant 1.4142135381698608))
  (let (%610 (Div %608 %609))
  (let (%611 (Erf %610))
  (let (%612 (Constant 1.0))
  (let (%613 (Add %611 %612))
  (let (%614 (Mul %608 %613))
  (let (%615 (Constant 0.5))
  (let (%616 (Mul %614 %615))
  (let (%618 (MatMul %616 %3032))
  (let (%619 (Add %618 bert.encoder.layer.1.output.dense.bias))
  (let (%620 (Add %619 %605))
  (let (%622 (ReduceMean %620 (vec -1) 1))
  (let (%623 (Sub %620 %622))
  (let (%624 (Cast_FLOAT %623))
  (let (%626 (Pow %624 %3033))
  (let (%627 (ReduceMean %626 (vec -1) 1))
  (let (%628 (Constant 9.999999960041972e-13))
  (let (%629 (Add %627 %628))
  (let (%630 (Sqrt %629))
  (let (%631 (Div %623 %630))
  (let (%632 (Mul %631 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%633 (Add %632 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%635 (MatMul %633 %3034))
  (let (%636 (Add %635 bert.encoder.layer.2.attention.self.query.bias))
  (let (%638 (MatMul %633 %3035))
  (let (%639 (Add %638 bert.encoder.layer.2.attention.self.key.bias))
  (let (%641 (MatMul %633 %3036))
  (let (%642 (Add %641 bert.encoder.layer.2.attention.self.value.bias))
  (let (%643 (Shape %636))
  (let (%644 (Constant 0))
  (let (%645 (Gather %643 %644 0))
  (let (%646 (Shape %636))
  (let (%647 (Constant 1))
  (let (%648 (Gather %646 %647 0))
  (let (%651 (Unsqueeze %645 (vec 0)))
  (let (%652 (Unsqueeze %648 (vec 0)))
  (let (%655 (Concat %651 %652 %3037 %3038 0))
  (let (%656 (Reshape %636 %655))
  (let (%657 (Transpose %656 (vec 0 2 1 3)))
  (let (%658 (Shape %639))
  (let (%659 (Constant 0))
  (let (%660 (Gather %658 %659 0))
  (let (%661 (Shape %639))
  (let (%662 (Constant 1))
  (let (%663 (Gather %661 %662 0))
  (let (%666 (Unsqueeze %660 (vec 0)))
  (let (%667 (Unsqueeze %663 (vec 0)))
  (let (%670 (Concat %666 %667 %3039 %3040 0))
  (let (%671 (Reshape %639 %670))
  (let (%672 (Shape %642))
  (let (%673 (Constant 0))
  (let (%674 (Gather %672 %673 0))
  (let (%675 (Shape %642))
  (let (%676 (Constant 1))
  (let (%677 (Gather %675 %676 0))
  (let (%680 (Unsqueeze %674 (vec 0)))
  (let (%681 (Unsqueeze %677 (vec 0)))
  (let (%684 (Concat %680 %681 %3041 %3042 0))
  (let (%685 (Reshape %642 %684))
  (let (%686 (Transpose %685 (vec 0 2 1 3)))
  (let (%687 (Transpose %671 (vec 0 2 3 1)))
  (let (%688 (MatMul %657 %687))
  (let (%689 (Constant 8.0))
  (let (%690 (Div %688 %689))
  (let (%691 (Add %690 %369))
  (let (%692 (Softmax %691 3))
  (let (%693 (MatMul %692 %686))
  (let (%694 (Transpose %693 (vec 0 2 1 3)))
  (let (%695 (Shape %694))
  (let (%696 (Constant 0))
  (let (%697 (Gather %695 %696 0))
  (let (%698 (Shape %694))
  (let (%699 (Constant 1))
  (let (%700 (Gather %698 %699 0))
  (let (%702 (Unsqueeze %697 (vec 0)))
  (let (%703 (Unsqueeze %700 (vec 0)))
  (let (%705 (Concat %702 %703 %3043 0))
  (let (%706 (Reshape %694 %705))
  (let (%708 (MatMul %706 %3044))
  (let (%709 (Add %708 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%710 (Add %709 %633))
  (let (%712 (ReduceMean %710 (vec -1) 1))
  (let (%713 (Sub %710 %712))
  (let (%714 (Cast_FLOAT %713))
  (let (%716 (Pow %714 %3045))
  (let (%717 (ReduceMean %716 (vec -1) 1))
  (let (%718 (Constant 9.999999960041972e-13))
  (let (%719 (Add %717 %718))
  (let (%720 (Sqrt %719))
  (let (%721 (Div %713 %720))
  (let (%722 (Mul %721 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%723 (Add %722 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%725 (MatMul %723 %3046))
  (let (%726 (Add %725 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%727 (Constant 1.4142135381698608))
  (let (%728 (Div %726 %727))
  (let (%729 (Erf %728))
  (let (%730 (Constant 1.0))
  (let (%731 (Add %729 %730))
  (let (%732 (Mul %726 %731))
  (let (%733 (Constant 0.5))
  (let (%734 (Mul %732 %733))
  (let (%736 (MatMul %734 %3047))
  (let (%737 (Add %736 bert.encoder.layer.2.output.dense.bias))
  (let (%738 (Add %737 %723))
  (let (%740 (ReduceMean %738 (vec -1) 1))
  (let (%741 (Sub %738 %740))
  (let (%742 (Cast_FLOAT %741))
  (let (%744 (Pow %742 %3048))
  (let (%745 (ReduceMean %744 (vec -1) 1))
  (let (%746 (Constant 9.999999960041972e-13))
  (let (%747 (Add %745 %746))
  (let (%748 (Sqrt %747))
  (let (%749 (Div %741 %748))
  (let (%750 (Mul %749 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%751 (Add %750 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%753 (MatMul %751 %3049))
  (let (%754 (Add %753 bert.encoder.layer.3.attention.self.query.bias))
  (let (%756 (MatMul %751 %3050))
  (let (%757 (Add %756 bert.encoder.layer.3.attention.self.key.bias))
  (let (%759 (MatMul %751 %3051))
  (let (%760 (Add %759 bert.encoder.layer.3.attention.self.value.bias))
  (let (%761 (Shape %754))
  (let (%762 (Constant 0))
  (let (%763 (Gather %761 %762 0))
  (let (%764 (Shape %754))
  (let (%765 (Constant 1))
  (let (%766 (Gather %764 %765 0))
  (let (%769 (Unsqueeze %763 (vec 0)))
  (let (%770 (Unsqueeze %766 (vec 0)))
  (let (%773 (Concat %769 %770 %3052 %3053 0))
  (let (%774 (Reshape %754 %773))
  (let (%775 (Transpose %774 (vec 0 2 1 3)))
  (let (%776 (Shape %757))
  (let (%777 (Constant 0))
  (let (%778 (Gather %776 %777 0))
  (let (%779 (Shape %757))
  (let (%780 (Constant 1))
  (let (%781 (Gather %779 %780 0))
  (let (%784 (Unsqueeze %778 (vec 0)))
  (let (%785 (Unsqueeze %781 (vec 0)))
  (let (%788 (Concat %784 %785 %3054 %3055 0))
  (let (%789 (Reshape %757 %788))
  (let (%790 (Shape %760))
  (let (%791 (Constant 0))
  (let (%792 (Gather %790 %791 0))
  (let (%793 (Shape %760))
  (let (%794 (Constant 1))
  (let (%795 (Gather %793 %794 0))
  (let (%798 (Unsqueeze %792 (vec 0)))
  (let (%799 (Unsqueeze %795 (vec 0)))
  (let (%802 (Concat %798 %799 %3056 %3057 0))
  (let (%803 (Reshape %760 %802))
  (let (%804 (Transpose %803 (vec 0 2 1 3)))
  (let (%805 (Transpose %789 (vec 0 2 3 1)))
  (let (%806 (MatMul %775 %805))
  (let (%807 (Constant 8.0))
  (let (%808 (Div %806 %807))
  (let (%809 (Add %808 %369))
  (let (%810 (Softmax %809 3))
  (let (%811 (MatMul %810 %804))
  (let (%812 (Transpose %811 (vec 0 2 1 3)))
  (let (%813 (Shape %812))
  (let (%814 (Constant 0))
  (let (%815 (Gather %813 %814 0))
  (let (%816 (Shape %812))
  (let (%817 (Constant 1))
  (let (%818 (Gather %816 %817 0))
  (let (%820 (Unsqueeze %815 (vec 0)))
  (let (%821 (Unsqueeze %818 (vec 0)))
  (let (%823 (Concat %820 %821 %3058 0))
  (let (%824 (Reshape %812 %823))
  (let (%826 (MatMul %824 %3059))
  (let (%827 (Add %826 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%828 (Add %827 %751))
  (let (%830 (ReduceMean %828 (vec -1) 1))
  (let (%831 (Sub %828 %830))
  (let (%832 (Cast_FLOAT %831))
  (let (%834 (Pow %832 %3060))
  (let (%835 (ReduceMean %834 (vec -1) 1))
  (let (%836 (Constant 9.999999960041972e-13))
  (let (%837 (Add %835 %836))
  (let (%838 (Sqrt %837))
  (let (%839 (Div %831 %838))
  (let (%840 (Mul %839 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%841 (Add %840 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%843 (MatMul %841 %3061))
  (let (%844 (Add %843 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%845 (Constant 1.4142135381698608))
  (let (%846 (Div %844 %845))
  (let (%847 (Erf %846))
  (let (%848 (Constant 1.0))
  (let (%849 (Add %847 %848))
  (let (%850 (Mul %844 %849))
  (let (%851 (Constant 0.5))
  (let (%852 (Mul %850 %851))
  (let (%854 (MatMul %852 %3062))
  (let (%855 (Add %854 bert.encoder.layer.3.output.dense.bias))
  (let (%856 (Add %855 %841))
  (let (%858 (ReduceMean %856 (vec -1) 1))
  (let (%859 (Sub %856 %858))
  (let (%860 (Cast_FLOAT %859))
  (let (%862 (Pow %860 %3063))
  (let (%863 (ReduceMean %862 (vec -1) 1))
  (let (%864 (Constant 9.999999960041972e-13))
  (let (%865 (Add %863 %864))
  (let (%866 (Sqrt %865))
  (let (%867 (Div %859 %866))
  (let (%868 (Mul %867 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%869 (Add %868 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%871 (MatMul %869 %3064))
  (let (%872 (Add %871 bert.encoder.layer.4.attention.self.query.bias))
  (let (%874 (MatMul %869 %3065))
  (let (%875 (Add %874 bert.encoder.layer.4.attention.self.key.bias))
  (let (%877 (MatMul %869 %3066))
  (let (%878 (Add %877 bert.encoder.layer.4.attention.self.value.bias))
  (let (%879 (Shape %872))
  (let (%880 (Constant 0))
  (let (%881 (Gather %879 %880 0))
  (let (%882 (Shape %872))
  (let (%883 (Constant 1))
  (let (%884 (Gather %882 %883 0))
  (let (%887 (Unsqueeze %881 (vec 0)))
  (let (%888 (Unsqueeze %884 (vec 0)))
  (let (%891 (Concat %887 %888 %3067 %3068 0))
  (let (%892 (Reshape %872 %891))
  (let (%893 (Transpose %892 (vec 0 2 1 3)))
  (let (%894 (Shape %875))
  (let (%895 (Constant 0))
  (let (%896 (Gather %894 %895 0))
  (let (%897 (Shape %875))
  (let (%898 (Constant 1))
  (let (%899 (Gather %897 %898 0))
  (let (%902 (Unsqueeze %896 (vec 0)))
  (let (%903 (Unsqueeze %899 (vec 0)))
  (let (%906 (Concat %902 %903 %3069 %3070 0))
  (let (%907 (Reshape %875 %906))
  (let (%908 (Shape %878))
  (let (%909 (Constant 0))
  (let (%910 (Gather %908 %909 0))
  (let (%911 (Shape %878))
  (let (%912 (Constant 1))
  (let (%913 (Gather %911 %912 0))
  (let (%916 (Unsqueeze %910 (vec 0)))
  (let (%917 (Unsqueeze %913 (vec 0)))
  (let (%920 (Concat %916 %917 %3071 %3072 0))
  (let (%921 (Reshape %878 %920))
  (let (%922 (Transpose %921 (vec 0 2 1 3)))
  (let (%923 (Transpose %907 (vec 0 2 3 1)))
  (let (%924 (MatMul %893 %923))
  (let (%925 (Constant 8.0))
  (let (%926 (Div %924 %925))
  (let (%927 (Add %926 %369))
  (let (%928 (Softmax %927 3))
  (let (%929 (MatMul %928 %922))
  (let (%930 (Transpose %929 (vec 0 2 1 3)))
  (let (%931 (Shape %930))
  (let (%932 (Constant 0))
  (let (%933 (Gather %931 %932 0))
  (let (%934 (Shape %930))
  (let (%935 (Constant 1))
  (let (%936 (Gather %934 %935 0))
  (let (%938 (Unsqueeze %933 (vec 0)))
  (let (%939 (Unsqueeze %936 (vec 0)))
  (let (%941 (Concat %938 %939 %3073 0))
  (let (%942 (Reshape %930 %941))
  (let (%944 (MatMul %942 %3074))
  (let (%945 (Add %944 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%946 (Add %945 %869))
  (let (%948 (ReduceMean %946 (vec -1) 1))
  (let (%949 (Sub %946 %948))
  (let (%950 (Cast_FLOAT %949))
  (let (%952 (Pow %950 %3075))
  (let (%953 (ReduceMean %952 (vec -1) 1))
  (let (%954 (Constant 9.999999960041972e-13))
  (let (%955 (Add %953 %954))
  (let (%956 (Sqrt %955))
  (let (%957 (Div %949 %956))
  (let (%958 (Mul %957 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%959 (Add %958 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%961 (MatMul %959 %3076))
  (let (%962 (Add %961 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%963 (Constant 1.4142135381698608))
  (let (%964 (Div %962 %963))
  (let (%965 (Erf %964))
  (let (%966 (Constant 1.0))
  (let (%967 (Add %965 %966))
  (let (%968 (Mul %962 %967))
  (let (%969 (Constant 0.5))
  (let (%970 (Mul %968 %969))
  (let (%972 (MatMul %970 %3077))
  (let (%973 (Add %972 bert.encoder.layer.4.output.dense.bias))
  (let (%974 (Add %973 %959))
  (let (%976 (ReduceMean %974 (vec -1) 1))
  (let (%977 (Sub %974 %976))
  (let (%978 (Cast_FLOAT %977))
  (let (%980 (Pow %978 %3078))
  (let (%981 (ReduceMean %980 (vec -1) 1))
  (let (%982 (Constant 9.999999960041972e-13))
  (let (%983 (Add %981 %982))
  (let (%984 (Sqrt %983))
  (let (%985 (Div %977 %984))
  (let (%986 (Mul %985 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%987 (Add %986 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%989 (MatMul %987 %3079))
  (let (%990 (Add %989 bert.encoder.layer.5.attention.self.query.bias))
  (let (%992 (MatMul %987 %3080))
  (let (%993 (Add %992 bert.encoder.layer.5.attention.self.key.bias))
  (let (%995 (MatMul %987 %3081))
  (let (%996 (Add %995 bert.encoder.layer.5.attention.self.value.bias))
  (let (%997 (Shape %990))
  (let (%998 (Constant 0))
  (let (%999 (Gather %997 %998 0))
  (let (%1000 (Shape %990))
  (let (%1001 (Constant 1))
  (let (%1002 (Gather %1000 %1001 0))
  (let (%1005 (Unsqueeze %999 (vec 0)))
  (let (%1006 (Unsqueeze %1002 (vec 0)))
  (let (%1009 (Concat %1005 %1006 %3082 %3083 0))
  (let (%1010 (Reshape %990 %1009))
  (let (%1011 (Transpose %1010 (vec 0 2 1 3)))
  (let (%1012 (Shape %993))
  (let (%1013 (Constant 0))
  (let (%1014 (Gather %1012 %1013 0))
  (let (%1015 (Shape %993))
  (let (%1016 (Constant 1))
  (let (%1017 (Gather %1015 %1016 0))
  (let (%1020 (Unsqueeze %1014 (vec 0)))
  (let (%1021 (Unsqueeze %1017 (vec 0)))
  (let (%1024 (Concat %1020 %1021 %3084 %3085 0))
  (let (%1025 (Reshape %993 %1024))
  (let (%1026 (Shape %996))
  (let (%1027 (Constant 0))
  (let (%1028 (Gather %1026 %1027 0))
  (let (%1029 (Shape %996))
  (let (%1030 (Constant 1))
  (let (%1031 (Gather %1029 %1030 0))
  (let (%1034 (Unsqueeze %1028 (vec 0)))
  (let (%1035 (Unsqueeze %1031 (vec 0)))
  (let (%1038 (Concat %1034 %1035 %3086 %3087 0))
  (let (%1039 (Reshape %996 %1038))
  (let (%1040 (Transpose %1039 (vec 0 2 1 3)))
  (let (%1041 (Transpose %1025 (vec 0 2 3 1)))
  (let (%1042 (MatMul %1011 %1041))
  (let (%1043 (Constant 8.0))
  (let (%1044 (Div %1042 %1043))
  (let (%1045 (Add %1044 %369))
  (let (%1046 (Softmax %1045 3))
  (let (%1047 (MatMul %1046 %1040))
  (let (%1048 (Transpose %1047 (vec 0 2 1 3)))
  (let (%1049 (Shape %1048))
  (let (%1050 (Constant 0))
  (let (%1051 (Gather %1049 %1050 0))
  (let (%1052 (Shape %1048))
  (let (%1053 (Constant 1))
  (let (%1054 (Gather %1052 %1053 0))
  (let (%1056 (Unsqueeze %1051 (vec 0)))
  (let (%1057 (Unsqueeze %1054 (vec 0)))
  (let (%1059 (Concat %1056 %1057 %3088 0))
  (let (%1060 (Reshape %1048 %1059))
  (let (%1062 (MatMul %1060 %3089))
  (let (%1063 (Add %1062 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1064 (Add %1063 %987))
  (let (%1066 (ReduceMean %1064 (vec -1) 1))
  (let (%1067 (Sub %1064 %1066))
  (let (%1068 (Cast_FLOAT %1067))
  (let (%1070 (Pow %1068 %3090))
  (let (%1071 (ReduceMean %1070 (vec -1) 1))
  (let (%1072 (Constant 9.999999960041972e-13))
  (let (%1073 (Add %1071 %1072))
  (let (%1074 (Sqrt %1073))
  (let (%1075 (Div %1067 %1074))
  (let (%1076 (Mul %1075 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1077 (Add %1076 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1079 (MatMul %1077 %3091))
  (let (%1080 (Add %1079 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1081 (Constant 1.4142135381698608))
  (let (%1082 (Div %1080 %1081))
  (let (%1083 (Erf %1082))
  (let (%1084 (Constant 1.0))
  (let (%1085 (Add %1083 %1084))
  (let (%1086 (Mul %1080 %1085))
  (let (%1087 (Constant 0.5))
  (let (%1088 (Mul %1086 %1087))
  (let (%1090 (MatMul %1088 %3092))
  (let (%1091 (Add %1090 bert.encoder.layer.5.output.dense.bias))
  (let (%1092 (Add %1091 %1077))
  (let (%1094 (ReduceMean %1092 (vec -1) 1))
  (let (%1095 (Sub %1092 %1094))
  (let (%1096 (Cast_FLOAT %1095))
  (let (%1098 (Pow %1096 %3093))
  (let (%1099 (ReduceMean %1098 (vec -1) 1))
  (let (%1100 (Constant 9.999999960041972e-13))
  (let (%1101 (Add %1099 %1100))
  (let (%1102 (Sqrt %1101))
  (let (%1103 (Div %1095 %1102))
  (let (%1104 (Mul %1103 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1105 (Add %1104 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1107 (MatMul %1105 %3094))
  (let (%1108 (Add %1107 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1110 (MatMul %1105 %3095))
  (let (%1111 (Add %1110 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1113 (MatMul %1105 %3096))
  (let (%1114 (Add %1113 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1115 (Shape %1108))
  (let (%1116 (Constant 0))
  (let (%1117 (Gather %1115 %1116 0))
  (let (%1118 (Shape %1108))
  (let (%1119 (Constant 1))
  (let (%1120 (Gather %1118 %1119 0))
  (let (%1123 (Unsqueeze %1117 (vec 0)))
  (let (%1124 (Unsqueeze %1120 (vec 0)))
  (let (%1127 (Concat %1123 %1124 %3097 %3098 0))
  (let (%1128 (Reshape %1108 %1127))
  (let (%1129 (Transpose %1128 (vec 0 2 1 3)))
  (let (%1130 (Shape %1111))
  (let (%1131 (Constant 0))
  (let (%1132 (Gather %1130 %1131 0))
  (let (%1133 (Shape %1111))
  (let (%1134 (Constant 1))
  (let (%1135 (Gather %1133 %1134 0))
  (let (%1138 (Unsqueeze %1132 (vec 0)))
  (let (%1139 (Unsqueeze %1135 (vec 0)))
  (let (%1142 (Concat %1138 %1139 %3099 %3100 0))
  (let (%1143 (Reshape %1111 %1142))
  (let (%1144 (Shape %1114))
  (let (%1145 (Constant 0))
  (let (%1146 (Gather %1144 %1145 0))
  (let (%1147 (Shape %1114))
  (let (%1148 (Constant 1))
  (let (%1149 (Gather %1147 %1148 0))
  (let (%1152 (Unsqueeze %1146 (vec 0)))
  (let (%1153 (Unsqueeze %1149 (vec 0)))
  (let (%1156 (Concat %1152 %1153 %3101 %3102 0))
  (let (%1157 (Reshape %1114 %1156))
  (let (%1158 (Transpose %1157 (vec 0 2 1 3)))
  (let (%1159 (Transpose %1143 (vec 0 2 3 1)))
  (let (%1160 (MatMul %1129 %1159))
  (let (%1161 (Constant 8.0))
  (let (%1162 (Div %1160 %1161))
  (let (%1163 (Add %1162 %369))
  (let (%1164 (Softmax %1163 3))
  (let (%1165 (MatMul %1164 %1158))
  (let (%1166 (Transpose %1165 (vec 0 2 1 3)))
  (let (%1167 (Shape %1166))
  (let (%1168 (Constant 0))
  (let (%1169 (Gather %1167 %1168 0))
  (let (%1170 (Shape %1166))
  (let (%1171 (Constant 1))
  (let (%1172 (Gather %1170 %1171 0))
  (let (%1174 (Unsqueeze %1169 (vec 0)))
  (let (%1175 (Unsqueeze %1172 (vec 0)))
  (let (%1177 (Concat %1174 %1175 %3103 0))
  (let (%1178 (Reshape %1166 %1177))
  (let (%1180 (MatMul %1178 %3104))
  (let (%1181 (Add %1180 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1182 (Add %1181 %1105))
  (let (%1184 (ReduceMean %1182 (vec -1) 1))
  (let (%1185 (Sub %1182 %1184))
  (let (%1186 (Cast_FLOAT %1185))
  (let (%1188 (Pow %1186 %3105))
  (let (%1189 (ReduceMean %1188 (vec -1) 1))
  (let (%1190 (Constant 9.999999960041972e-13))
  (let (%1191 (Add %1189 %1190))
  (let (%1192 (Sqrt %1191))
  (let (%1193 (Div %1185 %1192))
  (let (%1194 (Mul %1193 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1195 (Add %1194 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1197 (MatMul %1195 %3106))
  (let (%1198 (Add %1197 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1199 (Constant 1.4142135381698608))
  (let (%1200 (Div %1198 %1199))
  (let (%1201 (Erf %1200))
  (let (%1202 (Constant 1.0))
  (let (%1203 (Add %1201 %1202))
  (let (%1204 (Mul %1198 %1203))
  (let (%1205 (Constant 0.5))
  (let (%1206 (Mul %1204 %1205))
  (let (%1208 (MatMul %1206 %3107))
  (let (%1209 (Add %1208 bert.encoder.layer.6.output.dense.bias))
  (let (%1210 (Add %1209 %1195))
  (let (%1212 (ReduceMean %1210 (vec -1) 1))
  (let (%1213 (Sub %1210 %1212))
  (let (%1214 (Cast_FLOAT %1213))
  (let (%1216 (Pow %1214 %3108))
  (let (%1217 (ReduceMean %1216 (vec -1) 1))
  (let (%1218 (Constant 9.999999960041972e-13))
  (let (%1219 (Add %1217 %1218))
  (let (%1220 (Sqrt %1219))
  (let (%1221 (Div %1213 %1220))
  (let (%1222 (Mul %1221 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1223 (Add %1222 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1225 (MatMul %1223 %3109))
  (let (%1226 (Add %1225 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1228 (MatMul %1223 %3110))
  (let (%1229 (Add %1228 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1231 (MatMul %1223 %3111))
  (let (%1232 (Add %1231 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1233 (Shape %1226))
  (let (%1234 (Constant 0))
  (let (%1235 (Gather %1233 %1234 0))
  (let (%1236 (Shape %1226))
  (let (%1237 (Constant 1))
  (let (%1238 (Gather %1236 %1237 0))
  (let (%1241 (Unsqueeze %1235 (vec 0)))
  (let (%1242 (Unsqueeze %1238 (vec 0)))
  (let (%1245 (Concat %1241 %1242 %3112 %3113 0))
  (let (%1246 (Reshape %1226 %1245))
  (let (%1247 (Transpose %1246 (vec 0 2 1 3)))
  (let (%1248 (Shape %1229))
  (let (%1249 (Constant 0))
  (let (%1250 (Gather %1248 %1249 0))
  (let (%1251 (Shape %1229))
  (let (%1252 (Constant 1))
  (let (%1253 (Gather %1251 %1252 0))
  (let (%1256 (Unsqueeze %1250 (vec 0)))
  (let (%1257 (Unsqueeze %1253 (vec 0)))
  (let (%1260 (Concat %1256 %1257 %3114 %3115 0))
  (let (%1261 (Reshape %1229 %1260))
  (let (%1262 (Shape %1232))
  (let (%1263 (Constant 0))
  (let (%1264 (Gather %1262 %1263 0))
  (let (%1265 (Shape %1232))
  (let (%1266 (Constant 1))
  (let (%1267 (Gather %1265 %1266 0))
  (let (%1270 (Unsqueeze %1264 (vec 0)))
  (let (%1271 (Unsqueeze %1267 (vec 0)))
  (let (%1274 (Concat %1270 %1271 %3116 %3117 0))
  (let (%1275 (Reshape %1232 %1274))
  (let (%1276 (Transpose %1275 (vec 0 2 1 3)))
  (let (%1277 (Transpose %1261 (vec 0 2 3 1)))
  (let (%1278 (MatMul %1247 %1277))
  (let (%1279 (Constant 8.0))
  (let (%1280 (Div %1278 %1279))
  (let (%1281 (Add %1280 %369))
  (let (%1282 (Softmax %1281 3))
  (let (%1283 (MatMul %1282 %1276))
  (let (%1284 (Transpose %1283 (vec 0 2 1 3)))
  (let (%1285 (Shape %1284))
  (let (%1286 (Constant 0))
  (let (%1287 (Gather %1285 %1286 0))
  (let (%1288 (Shape %1284))
  (let (%1289 (Constant 1))
  (let (%1290 (Gather %1288 %1289 0))
  (let (%1292 (Unsqueeze %1287 (vec 0)))
  (let (%1293 (Unsqueeze %1290 (vec 0)))
  (let (%1295 (Concat %1292 %1293 %3118 0))
  (let (%1296 (Reshape %1284 %1295))
  (let (%1298 (MatMul %1296 %3119))
  (let (%1299 (Add %1298 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1300 (Add %1299 %1223))
  (let (%1302 (ReduceMean %1300 (vec -1) 1))
  (let (%1303 (Sub %1300 %1302))
  (let (%1304 (Cast_FLOAT %1303))
  (let (%1306 (Pow %1304 %3120))
  (let (%1307 (ReduceMean %1306 (vec -1) 1))
  (let (%1308 (Constant 9.999999960041972e-13))
  (let (%1309 (Add %1307 %1308))
  (let (%1310 (Sqrt %1309))
  (let (%1311 (Div %1303 %1310))
  (let (%1312 (Mul %1311 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1313 (Add %1312 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1315 (MatMul %1313 %3121))
  (let (%1316 (Add %1315 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1317 (Constant 1.4142135381698608))
  (let (%1318 (Div %1316 %1317))
  (let (%1319 (Erf %1318))
  (let (%1320 (Constant 1.0))
  (let (%1321 (Add %1319 %1320))
  (let (%1322 (Mul %1316 %1321))
  (let (%1323 (Constant 0.5))
  (let (%1324 (Mul %1322 %1323))
  (let (%1326 (MatMul %1324 %3122))
  (let (%1327 (Add %1326 bert.encoder.layer.7.output.dense.bias))
  (let (%1328 (Add %1327 %1313))
  (let (%1330 (ReduceMean %1328 (vec -1) 1))
  (let (%1331 (Sub %1328 %1330))
  (let (%1332 (Cast_FLOAT %1331))
  (let (%1334 (Pow %1332 %3123))
  (let (%1335 (ReduceMean %1334 (vec -1) 1))
  (let (%1336 (Constant 9.999999960041972e-13))
  (let (%1337 (Add %1335 %1336))
  (let (%1338 (Sqrt %1337))
  (let (%1339 (Div %1331 %1338))
  (let (%1340 (Mul %1339 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1341 (Add %1340 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1343 (MatMul %1341 %3124))
  (let (%1344 (Add %1343 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1346 (MatMul %1341 %3125))
  (let (%1347 (Add %1346 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1349 (MatMul %1341 %3126))
  (let (%1350 (Add %1349 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1351 (Shape %1344))
  (let (%1352 (Constant 0))
  (let (%1353 (Gather %1351 %1352 0))
  (let (%1354 (Shape %1344))
  (let (%1355 (Constant 1))
  (let (%1356 (Gather %1354 %1355 0))
  (let (%1359 (Unsqueeze %1353 (vec 0)))
  (let (%1360 (Unsqueeze %1356 (vec 0)))
  (let (%1363 (Concat %1359 %1360 %3127 %3128 0))
  (let (%1364 (Reshape %1344 %1363))
  (let (%1365 (Transpose %1364 (vec 0 2 1 3)))
  (let (%1366 (Shape %1347))
  (let (%1367 (Constant 0))
  (let (%1368 (Gather %1366 %1367 0))
  (let (%1369 (Shape %1347))
  (let (%1370 (Constant 1))
  (let (%1371 (Gather %1369 %1370 0))
  (let (%1374 (Unsqueeze %1368 (vec 0)))
  (let (%1375 (Unsqueeze %1371 (vec 0)))
  (let (%1378 (Concat %1374 %1375 %3129 %3130 0))
  (let (%1379 (Reshape %1347 %1378))
  (let (%1380 (Shape %1350))
  (let (%1381 (Constant 0))
  (let (%1382 (Gather %1380 %1381 0))
  (let (%1383 (Shape %1350))
  (let (%1384 (Constant 1))
  (let (%1385 (Gather %1383 %1384 0))
  (let (%1388 (Unsqueeze %1382 (vec 0)))
  (let (%1389 (Unsqueeze %1385 (vec 0)))
  (let (%1392 (Concat %1388 %1389 %3131 %3132 0))
  (let (%1393 (Reshape %1350 %1392))
  (let (%1394 (Transpose %1393 (vec 0 2 1 3)))
  (let (%1395 (Transpose %1379 (vec 0 2 3 1)))
  (let (%1396 (MatMul %1365 %1395))
  (let (%1397 (Constant 8.0))
  (let (%1398 (Div %1396 %1397))
  (let (%1399 (Add %1398 %369))
  (let (%1400 (Softmax %1399 3))
  (let (%1401 (MatMul %1400 %1394))
  (let (%1402 (Transpose %1401 (vec 0 2 1 3)))
  (let (%1403 (Shape %1402))
  (let (%1404 (Constant 0))
  (let (%1405 (Gather %1403 %1404 0))
  (let (%1406 (Shape %1402))
  (let (%1407 (Constant 1))
  (let (%1408 (Gather %1406 %1407 0))
  (let (%1410 (Unsqueeze %1405 (vec 0)))
  (let (%1411 (Unsqueeze %1408 (vec 0)))
  (let (%1413 (Concat %1410 %1411 %3133 0))
  (let (%1414 (Reshape %1402 %1413))
  (let (%1416 (MatMul %1414 %3134))
  (let (%1417 (Add %1416 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1418 (Add %1417 %1341))
  (let (%1420 (ReduceMean %1418 (vec -1) 1))
  (let (%1421 (Sub %1418 %1420))
  (let (%1422 (Cast_FLOAT %1421))
  (let (%1424 (Pow %1422 %3135))
  (let (%1425 (ReduceMean %1424 (vec -1) 1))
  (let (%1426 (Constant 9.999999960041972e-13))
  (let (%1427 (Add %1425 %1426))
  (let (%1428 (Sqrt %1427))
  (let (%1429 (Div %1421 %1428))
  (let (%1430 (Mul %1429 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1431 (Add %1430 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1433 (MatMul %1431 %3136))
  (let (%1434 (Add %1433 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1435 (Constant 1.4142135381698608))
  (let (%1436 (Div %1434 %1435))
  (let (%1437 (Erf %1436))
  (let (%1438 (Constant 1.0))
  (let (%1439 (Add %1437 %1438))
  (let (%1440 (Mul %1434 %1439))
  (let (%1441 (Constant 0.5))
  (let (%1442 (Mul %1440 %1441))
  (let (%1444 (MatMul %1442 %3137))
  (let (%1445 (Add %1444 bert.encoder.layer.8.output.dense.bias))
  (let (%1446 (Add %1445 %1431))
  (let (%1448 (ReduceMean %1446 (vec -1) 1))
  (let (%1449 (Sub %1446 %1448))
  (let (%1450 (Cast_FLOAT %1449))
  (let (%1452 (Pow %1450 %3138))
  (let (%1453 (ReduceMean %1452 (vec -1) 1))
  (let (%1454 (Constant 9.999999960041972e-13))
  (let (%1455 (Add %1453 %1454))
  (let (%1456 (Sqrt %1455))
  (let (%1457 (Div %1449 %1456))
  (let (%1458 (Mul %1457 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1459 (Add %1458 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1461 (MatMul %1459 %3139))
  (let (%1462 (Add %1461 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1464 (MatMul %1459 %3140))
  (let (%1465 (Add %1464 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1467 (MatMul %1459 %3141))
  (let (%1468 (Add %1467 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1469 (Shape %1462))
  (let (%1470 (Constant 0))
  (let (%1471 (Gather %1469 %1470 0))
  (let (%1472 (Shape %1462))
  (let (%1473 (Constant 1))
  (let (%1474 (Gather %1472 %1473 0))
  (let (%1477 (Unsqueeze %1471 (vec 0)))
  (let (%1478 (Unsqueeze %1474 (vec 0)))
  (let (%1481 (Concat %1477 %1478 %3142 %3143 0))
  (let (%1482 (Reshape %1462 %1481))
  (let (%1483 (Transpose %1482 (vec 0 2 1 3)))
  (let (%1484 (Shape %1465))
  (let (%1485 (Constant 0))
  (let (%1486 (Gather %1484 %1485 0))
  (let (%1487 (Shape %1465))
  (let (%1488 (Constant 1))
  (let (%1489 (Gather %1487 %1488 0))
  (let (%1492 (Unsqueeze %1486 (vec 0)))
  (let (%1493 (Unsqueeze %1489 (vec 0)))
  (let (%1496 (Concat %1492 %1493 %3144 %3145 0))
  (let (%1497 (Reshape %1465 %1496))
  (let (%1498 (Shape %1468))
  (let (%1499 (Constant 0))
  (let (%1500 (Gather %1498 %1499 0))
  (let (%1501 (Shape %1468))
  (let (%1502 (Constant 1))
  (let (%1503 (Gather %1501 %1502 0))
  (let (%1506 (Unsqueeze %1500 (vec 0)))
  (let (%1507 (Unsqueeze %1503 (vec 0)))
  (let (%1510 (Concat %1506 %1507 %3146 %3147 0))
  (let (%1511 (Reshape %1468 %1510))
  (let (%1512 (Transpose %1511 (vec 0 2 1 3)))
  (let (%1513 (Transpose %1497 (vec 0 2 3 1)))
  (let (%1514 (MatMul %1483 %1513))
  (let (%1515 (Constant 8.0))
  (let (%1516 (Div %1514 %1515))
  (let (%1517 (Add %1516 %369))
  (let (%1518 (Softmax %1517 3))
  (let (%1519 (MatMul %1518 %1512))
  (let (%1520 (Transpose %1519 (vec 0 2 1 3)))
  (let (%1521 (Shape %1520))
  (let (%1522 (Constant 0))
  (let (%1523 (Gather %1521 %1522 0))
  (let (%1524 (Shape %1520))
  (let (%1525 (Constant 1))
  (let (%1526 (Gather %1524 %1525 0))
  (let (%1528 (Unsqueeze %1523 (vec 0)))
  (let (%1529 (Unsqueeze %1526 (vec 0)))
  (let (%1531 (Concat %1528 %1529 %3148 0))
  (let (%1532 (Reshape %1520 %1531))
  (let (%1534 (MatMul %1532 %3149))
  (let (%1535 (Add %1534 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1536 (Add %1535 %1459))
  (let (%1538 (ReduceMean %1536 (vec -1) 1))
  (let (%1539 (Sub %1536 %1538))
  (let (%1540 (Cast_FLOAT %1539))
  (let (%1542 (Pow %1540 %3150))
  (let (%1543 (ReduceMean %1542 (vec -1) 1))
  (let (%1544 (Constant 9.999999960041972e-13))
  (let (%1545 (Add %1543 %1544))
  (let (%1546 (Sqrt %1545))
  (let (%1547 (Div %1539 %1546))
  (let (%1548 (Mul %1547 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1549 (Add %1548 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1551 (MatMul %1549 %3151))
  (let (%1552 (Add %1551 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1553 (Constant 1.4142135381698608))
  (let (%1554 (Div %1552 %1553))
  (let (%1555 (Erf %1554))
  (let (%1556 (Constant 1.0))
  (let (%1557 (Add %1555 %1556))
  (let (%1558 (Mul %1552 %1557))
  (let (%1559 (Constant 0.5))
  (let (%1560 (Mul %1558 %1559))
  (let (%1562 (MatMul %1560 %3152))
  (let (%1563 (Add %1562 bert.encoder.layer.9.output.dense.bias))
  (let (%1564 (Add %1563 %1549))
  (let (%1566 (ReduceMean %1564 (vec -1) 1))
  (let (%1567 (Sub %1564 %1566))
  (let (%1568 (Cast_FLOAT %1567))
  (let (%1570 (Pow %1568 %3153))
  (let (%1571 (ReduceMean %1570 (vec -1) 1))
  (let (%1572 (Constant 9.999999960041972e-13))
  (let (%1573 (Add %1571 %1572))
  (let (%1574 (Sqrt %1573))
  (let (%1575 (Div %1567 %1574))
  (let (%1576 (Mul %1575 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1577 (Add %1576 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1579 (MatMul %1577 %3154))
  (let (%1580 (Add %1579 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1582 (MatMul %1577 %3155))
  (let (%1583 (Add %1582 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1585 (MatMul %1577 %3156))
  (let (%1586 (Add %1585 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1587 (Shape %1580))
  (let (%1588 (Constant 0))
  (let (%1589 (Gather %1587 %1588 0))
  (let (%1590 (Shape %1580))
  (let (%1591 (Constant 1))
  (let (%1592 (Gather %1590 %1591 0))
  (let (%1595 (Unsqueeze %1589 (vec 0)))
  (let (%1596 (Unsqueeze %1592 (vec 0)))
  (let (%1599 (Concat %1595 %1596 %3157 %3158 0))
  (let (%1600 (Reshape %1580 %1599))
  (let (%1601 (Transpose %1600 (vec 0 2 1 3)))
  (let (%1602 (Shape %1583))
  (let (%1603 (Constant 0))
  (let (%1604 (Gather %1602 %1603 0))
  (let (%1605 (Shape %1583))
  (let (%1606 (Constant 1))
  (let (%1607 (Gather %1605 %1606 0))
  (let (%1610 (Unsqueeze %1604 (vec 0)))
  (let (%1611 (Unsqueeze %1607 (vec 0)))
  (let (%1614 (Concat %1610 %1611 %3159 %3160 0))
  (let (%1615 (Reshape %1583 %1614))
  (let (%1616 (Shape %1586))
  (let (%1617 (Constant 0))
  (let (%1618 (Gather %1616 %1617 0))
  (let (%1619 (Shape %1586))
  (let (%1620 (Constant 1))
  (let (%1621 (Gather %1619 %1620 0))
  (let (%1624 (Unsqueeze %1618 (vec 0)))
  (let (%1625 (Unsqueeze %1621 (vec 0)))
  (let (%1628 (Concat %1624 %1625 %3161 %3162 0))
  (let (%1629 (Reshape %1586 %1628))
  (let (%1630 (Transpose %1629 (vec 0 2 1 3)))
  (let (%1631 (Transpose %1615 (vec 0 2 3 1)))
  (let (%1632 (MatMul %1601 %1631))
  (let (%1633 (Constant 8.0))
  (let (%1634 (Div %1632 %1633))
  (let (%1635 (Add %1634 %369))
  (let (%1636 (Softmax %1635 3))
  (let (%1637 (MatMul %1636 %1630))
  (let (%1638 (Transpose %1637 (vec 0 2 1 3)))
  (let (%1639 (Shape %1638))
  (let (%1640 (Constant 0))
  (let (%1641 (Gather %1639 %1640 0))
  (let (%1642 (Shape %1638))
  (let (%1643 (Constant 1))
  (let (%1644 (Gather %1642 %1643 0))
  (let (%1646 (Unsqueeze %1641 (vec 0)))
  (let (%1647 (Unsqueeze %1644 (vec 0)))
  (let (%1649 (Concat %1646 %1647 %3163 0))
  (let (%1650 (Reshape %1638 %1649))
  (let (%1652 (MatMul %1650 %3164))
  (let (%1653 (Add %1652 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1654 (Add %1653 %1577))
  (let (%1656 (ReduceMean %1654 (vec -1) 1))
  (let (%1657 (Sub %1654 %1656))
  (let (%1658 (Cast_FLOAT %1657))
  (let (%1660 (Pow %1658 %3165))
  (let (%1661 (ReduceMean %1660 (vec -1) 1))
  (let (%1662 (Constant 9.999999960041972e-13))
  (let (%1663 (Add %1661 %1662))
  (let (%1664 (Sqrt %1663))
  (let (%1665 (Div %1657 %1664))
  (let (%1666 (Mul %1665 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1667 (Add %1666 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1669 (MatMul %1667 %3166))
  (let (%1670 (Add %1669 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1671 (Constant 1.4142135381698608))
  (let (%1672 (Div %1670 %1671))
  (let (%1673 (Erf %1672))
  (let (%1674 (Constant 1.0))
  (let (%1675 (Add %1673 %1674))
  (let (%1676 (Mul %1670 %1675))
  (let (%1677 (Constant 0.5))
  (let (%1678 (Mul %1676 %1677))
  (let (%1680 (MatMul %1678 %3167))
  (let (%1681 (Add %1680 bert.encoder.layer.10.output.dense.bias))
  (let (%1682 (Add %1681 %1667))
  (let (%1684 (ReduceMean %1682 (vec -1) 1))
  (let (%1685 (Sub %1682 %1684))
  (let (%1686 (Cast_FLOAT %1685))
  (let (%1688 (Pow %1686 %3168))
  (let (%1689 (ReduceMean %1688 (vec -1) 1))
  (let (%1690 (Constant 9.999999960041972e-13))
  (let (%1691 (Add %1689 %1690))
  (let (%1692 (Sqrt %1691))
  (let (%1693 (Div %1685 %1692))
  (let (%1694 (Mul %1693 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1695 (Add %1694 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1697 (MatMul %1695 %3169))
  (let (%1698 (Add %1697 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1700 (MatMul %1695 %3170))
  (let (%1701 (Add %1700 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1703 (MatMul %1695 %3171))
  (let (%1704 (Add %1703 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1705 (Shape %1698))
  (let (%1706 (Constant 0))
  (let (%1707 (Gather %1705 %1706 0))
  (let (%1708 (Shape %1698))
  (let (%1709 (Constant 1))
  (let (%1710 (Gather %1708 %1709 0))
  (let (%1713 (Unsqueeze %1707 (vec 0)))
  (let (%1714 (Unsqueeze %1710 (vec 0)))
  (let (%1717 (Concat %1713 %1714 %3172 %3173 0))
  (let (%1718 (Reshape %1698 %1717))
  (let (%1719 (Transpose %1718 (vec 0 2 1 3)))
  (let (%1720 (Shape %1701))
  (let (%1721 (Constant 0))
  (let (%1722 (Gather %1720 %1721 0))
  (let (%1723 (Shape %1701))
  (let (%1724 (Constant 1))
  (let (%1725 (Gather %1723 %1724 0))
  (let (%1728 (Unsqueeze %1722 (vec 0)))
  (let (%1729 (Unsqueeze %1725 (vec 0)))
  (let (%1732 (Concat %1728 %1729 %3174 %3175 0))
  (let (%1733 (Reshape %1701 %1732))
  (let (%1734 (Shape %1704))
  (let (%1735 (Constant 0))
  (let (%1736 (Gather %1734 %1735 0))
  (let (%1737 (Shape %1704))
  (let (%1738 (Constant 1))
  (let (%1739 (Gather %1737 %1738 0))
  (let (%1742 (Unsqueeze %1736 (vec 0)))
  (let (%1743 (Unsqueeze %1739 (vec 0)))
  (let (%1746 (Concat %1742 %1743 %3176 %3177 0))
  (let (%1747 (Reshape %1704 %1746))
  (let (%1748 (Transpose %1747 (vec 0 2 1 3)))
  (let (%1749 (Transpose %1733 (vec 0 2 3 1)))
  (let (%1750 (MatMul %1719 %1749))
  (let (%1751 (Constant 8.0))
  (let (%1752 (Div %1750 %1751))
  (let (%1753 (Add %1752 %369))
  (let (%1754 (Softmax %1753 3))
  (let (%1755 (MatMul %1754 %1748))
  (let (%1756 (Transpose %1755 (vec 0 2 1 3)))
  (let (%1757 (Shape %1756))
  (let (%1758 (Constant 0))
  (let (%1759 (Gather %1757 %1758 0))
  (let (%1760 (Shape %1756))
  (let (%1761 (Constant 1))
  (let (%1762 (Gather %1760 %1761 0))
  (let (%1764 (Unsqueeze %1759 (vec 0)))
  (let (%1765 (Unsqueeze %1762 (vec 0)))
  (let (%1767 (Concat %1764 %1765 %3178 0))
  (let (%1768 (Reshape %1756 %1767))
  (let (%1770 (MatMul %1768 %3179))
  (let (%1771 (Add %1770 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1772 (Add %1771 %1695))
  (let (%1774 (ReduceMean %1772 (vec -1) 1))
  (let (%1775 (Sub %1772 %1774))
  (let (%1776 (Cast_FLOAT %1775))
  (let (%1778 (Pow %1776 %3180))
  (let (%1779 (ReduceMean %1778 (vec -1) 1))
  (let (%1780 (Constant 9.999999960041972e-13))
  (let (%1781 (Add %1779 %1780))
  (let (%1782 (Sqrt %1781))
  (let (%1783 (Div %1775 %1782))
  (let (%1784 (Mul %1783 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1785 (Add %1784 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1787 (MatMul %1785 %3181))
  (let (%1788 (Add %1787 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1789 (Constant 1.4142135381698608))
  (let (%1790 (Div %1788 %1789))
  (let (%1791 (Erf %1790))
  (let (%1792 (Constant 1.0))
  (let (%1793 (Add %1791 %1792))
  (let (%1794 (Mul %1788 %1793))
  (let (%1795 (Constant 0.5))
  (let (%1796 (Mul %1794 %1795))
  (let (%1798 (MatMul %1796 %3182))
  (let (%1799 (Add %1798 bert.encoder.layer.11.output.dense.bias))
  (let (%1800 (Add %1799 %1785))
  (let (%1802 (ReduceMean %1800 (vec -1) 1))
  (let (%1803 (Sub %1800 %1802))
  (let (%1804 (Cast_FLOAT %1803))
  (let (%1806 (Pow %1804 %3183))
  (let (%1807 (ReduceMean %1806 (vec -1) 1))
  (let (%1808 (Constant 9.999999960041972e-13))
  (let (%1809 (Add %1807 %1808))
  (let (%1810 (Sqrt %1809))
  (let (%1811 (Div %1803 %1810))
  (let (%1812 (Mul %1811 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1813 (Add %1812 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1815 (MatMul %1813 %3184))
  (let (%1816 (Add %1815 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1818 (MatMul %1813 %3185))
  (let (%1819 (Add %1818 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1821 (MatMul %1813 %3186))
  (let (%1822 (Add %1821 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1823 (Shape %1816))
  (let (%1824 (Constant 0))
  (let (%1825 (Gather %1823 %1824 0))
  (let (%1826 (Shape %1816))
  (let (%1827 (Constant 1))
  (let (%1828 (Gather %1826 %1827 0))
  (let (%1831 (Unsqueeze %1825 (vec 0)))
  (let (%1832 (Unsqueeze %1828 (vec 0)))
  (let (%1835 (Concat %1831 %1832 %3187 %3188 0))
  (let (%1836 (Reshape %1816 %1835))
  (let (%1837 (Transpose %1836 (vec 0 2 1 3)))
  (let (%1838 (Shape %1819))
  (let (%1839 (Constant 0))
  (let (%1840 (Gather %1838 %1839 0))
  (let (%1841 (Shape %1819))
  (let (%1842 (Constant 1))
  (let (%1843 (Gather %1841 %1842 0))
  (let (%1846 (Unsqueeze %1840 (vec 0)))
  (let (%1847 (Unsqueeze %1843 (vec 0)))
  (let (%1850 (Concat %1846 %1847 %3189 %3190 0))
  (let (%1851 (Reshape %1819 %1850))
  (let (%1852 (Shape %1822))
  (let (%1853 (Constant 0))
  (let (%1854 (Gather %1852 %1853 0))
  (let (%1855 (Shape %1822))
  (let (%1856 (Constant 1))
  (let (%1857 (Gather %1855 %1856 0))
  (let (%1860 (Unsqueeze %1854 (vec 0)))
  (let (%1861 (Unsqueeze %1857 (vec 0)))
  (let (%1864 (Concat %1860 %1861 %3191 %3192 0))
  (let (%1865 (Reshape %1822 %1864))
  (let (%1866 (Transpose %1865 (vec 0 2 1 3)))
  (let (%1867 (Transpose %1851 (vec 0 2 3 1)))
  (let (%1868 (MatMul %1837 %1867))
  (let (%1869 (Constant 8.0))
  (let (%1870 (Div %1868 %1869))
  (let (%1871 (Add %1870 %369))
  (let (%1872 (Softmax %1871 3))
  (let (%1873 (MatMul %1872 %1866))
  (let (%1874 (Transpose %1873 (vec 0 2 1 3)))
  (let (%1875 (Shape %1874))
  (let (%1876 (Constant 0))
  (let (%1877 (Gather %1875 %1876 0))
  (let (%1878 (Shape %1874))
  (let (%1879 (Constant 1))
  (let (%1880 (Gather %1878 %1879 0))
  (let (%1882 (Unsqueeze %1877 (vec 0)))
  (let (%1883 (Unsqueeze %1880 (vec 0)))
  (let (%1885 (Concat %1882 %1883 %3193 0))
  (let (%1886 (Reshape %1874 %1885))
  (let (%1888 (MatMul %1886 %3194))
  (let (%1889 (Add %1888 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1890 (Add %1889 %1813))
  (let (%1892 (ReduceMean %1890 (vec -1) 1))
  (let (%1893 (Sub %1890 %1892))
  (let (%1894 (Cast_FLOAT %1893))
  (let (%1896 (Pow %1894 %3195))
  (let (%1897 (ReduceMean %1896 (vec -1) 1))
  (let (%1898 (Constant 9.999999960041972e-13))
  (let (%1899 (Add %1897 %1898))
  (let (%1900 (Sqrt %1899))
  (let (%1901 (Div %1893 %1900))
  (let (%1902 (Mul %1901 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1903 (Add %1902 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1905 (MatMul %1903 %3196))
  (let (%1906 (Add %1905 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1907 (Constant 1.4142135381698608))
  (let (%1908 (Div %1906 %1907))
  (let (%1909 (Erf %1908))
  (let (%1910 (Constant 1.0))
  (let (%1911 (Add %1909 %1910))
  (let (%1912 (Mul %1906 %1911))
  (let (%1913 (Constant 0.5))
  (let (%1914 (Mul %1912 %1913))
  (let (%1916 (MatMul %1914 %3197))
  (let (%1917 (Add %1916 bert.encoder.layer.12.output.dense.bias))
  (let (%1918 (Add %1917 %1903))
  (let (%1920 (ReduceMean %1918 (vec -1) 1))
  (let (%1921 (Sub %1918 %1920))
  (let (%1922 (Cast_FLOAT %1921))
  (let (%1924 (Pow %1922 %3198))
  (let (%1925 (ReduceMean %1924 (vec -1) 1))
  (let (%1926 (Constant 9.999999960041972e-13))
  (let (%1927 (Add %1925 %1926))
  (let (%1928 (Sqrt %1927))
  (let (%1929 (Div %1921 %1928))
  (let (%1930 (Mul %1929 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1931 (Add %1930 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1933 (MatMul %1931 %3199))
  (let (%1934 (Add %1933 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1936 (MatMul %1931 %3200))
  (let (%1937 (Add %1936 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1939 (MatMul %1931 %3201))
  (let (%1940 (Add %1939 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1941 (Shape %1934))
  (let (%1942 (Constant 0))
  (let (%1943 (Gather %1941 %1942 0))
  (let (%1944 (Shape %1934))
  (let (%1945 (Constant 1))
  (let (%1946 (Gather %1944 %1945 0))
  (let (%1949 (Unsqueeze %1943 (vec 0)))
  (let (%1950 (Unsqueeze %1946 (vec 0)))
  (let (%1953 (Concat %1949 %1950 %3202 %3203 0))
  (let (%1954 (Reshape %1934 %1953))
  (let (%1955 (Transpose %1954 (vec 0 2 1 3)))
  (let (%1956 (Shape %1937))
  (let (%1957 (Constant 0))
  (let (%1958 (Gather %1956 %1957 0))
  (let (%1959 (Shape %1937))
  (let (%1960 (Constant 1))
  (let (%1961 (Gather %1959 %1960 0))
  (let (%1964 (Unsqueeze %1958 (vec 0)))
  (let (%1965 (Unsqueeze %1961 (vec 0)))
  (let (%1968 (Concat %1964 %1965 %3204 %3205 0))
  (let (%1969 (Reshape %1937 %1968))
  (let (%1970 (Shape %1940))
  (let (%1971 (Constant 0))
  (let (%1972 (Gather %1970 %1971 0))
  (let (%1973 (Shape %1940))
  (let (%1974 (Constant 1))
  (let (%1975 (Gather %1973 %1974 0))
  (let (%1978 (Unsqueeze %1972 (vec 0)))
  (let (%1979 (Unsqueeze %1975 (vec 0)))
  (let (%1982 (Concat %1978 %1979 %3206 %3207 0))
  (let (%1983 (Reshape %1940 %1982))
  (let (%1984 (Transpose %1983 (vec 0 2 1 3)))
  (let (%1985 (Transpose %1969 (vec 0 2 3 1)))
  (let (%1986 (MatMul %1955 %1985))
  (let (%1987 (Constant 8.0))
  (let (%1988 (Div %1986 %1987))
  (let (%1989 (Add %1988 %369))
  (let (%1990 (Softmax %1989 3))
  (let (%1991 (MatMul %1990 %1984))
  (let (%1992 (Transpose %1991 (vec 0 2 1 3)))
  (let (%1993 (Shape %1992))
  (let (%1994 (Constant 0))
  (let (%1995 (Gather %1993 %1994 0))
  (let (%1996 (Shape %1992))
  (let (%1997 (Constant 1))
  (let (%1998 (Gather %1996 %1997 0))
  (let (%2000 (Unsqueeze %1995 (vec 0)))
  (let (%2001 (Unsqueeze %1998 (vec 0)))
  (let (%2003 (Concat %2000 %2001 %3208 0))
  (let (%2004 (Reshape %1992 %2003))
  (let (%2006 (MatMul %2004 %3209))
  (let (%2007 (Add %2006 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%2008 (Add %2007 %1931))
  (let (%2010 (ReduceMean %2008 (vec -1) 1))
  (let (%2011 (Sub %2008 %2010))
  (let (%2012 (Cast_FLOAT %2011))
  (let (%2014 (Pow %2012 %3210))
  (let (%2015 (ReduceMean %2014 (vec -1) 1))
  (let (%2016 (Constant 9.999999960041972e-13))
  (let (%2017 (Add %2015 %2016))
  (let (%2018 (Sqrt %2017))
  (let (%2019 (Div %2011 %2018))
  (let (%2020 (Mul %2019 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%2021 (Add %2020 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%2023 (MatMul %2021 %3211))
  (let (%2024 (Add %2023 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%2025 (Constant 1.4142135381698608))
  (let (%2026 (Div %2024 %2025))
  (let (%2027 (Erf %2026))
  (let (%2028 (Constant 1.0))
  (let (%2029 (Add %2027 %2028))
  (let (%2030 (Mul %2024 %2029))
  (let (%2031 (Constant 0.5))
  (let (%2032 (Mul %2030 %2031))
  (let (%2034 (MatMul %2032 %3212))
  (let (%2035 (Add %2034 bert.encoder.layer.13.output.dense.bias))
  (let (%2036 (Add %2035 %2021))
  (let (%2038 (ReduceMean %2036 (vec -1) 1))
  (let (%2039 (Sub %2036 %2038))
  (let (%2040 (Cast_FLOAT %2039))
  (let (%2042 (Pow %2040 %3213))
  (let (%2043 (ReduceMean %2042 (vec -1) 1))
  (let (%2044 (Constant 9.999999960041972e-13))
  (let (%2045 (Add %2043 %2044))
  (let (%2046 (Sqrt %2045))
  (let (%2047 (Div %2039 %2046))
  (let (%2048 (Mul %2047 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%2049 (Add %2048 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%2051 (MatMul %2049 %3214))
  (let (%2052 (Add %2051 bert.encoder.layer.14.attention.self.query.bias))
  (let (%2054 (MatMul %2049 %3215))
  (let (%2055 (Add %2054 bert.encoder.layer.14.attention.self.key.bias))
  (let (%2057 (MatMul %2049 %3216))
  (let (%2058 (Add %2057 bert.encoder.layer.14.attention.self.value.bias))
  (let (%2059 (Shape %2052))
  (let (%2060 (Constant 0))
  (let (%2061 (Gather %2059 %2060 0))
  (let (%2062 (Shape %2052))
  (let (%2063 (Constant 1))
  (let (%2064 (Gather %2062 %2063 0))
  (let (%2067 (Unsqueeze %2061 (vec 0)))
  (let (%2068 (Unsqueeze %2064 (vec 0)))
  (let (%2071 (Concat %2067 %2068 %3217 %3218 0))
  (let (%2072 (Reshape %2052 %2071))
  (let (%2073 (Transpose %2072 (vec 0 2 1 3)))
  (let (%2074 (Shape %2055))
  (let (%2075 (Constant 0))
  (let (%2076 (Gather %2074 %2075 0))
  (let (%2077 (Shape %2055))
  (let (%2078 (Constant 1))
  (let (%2079 (Gather %2077 %2078 0))
  (let (%2082 (Unsqueeze %2076 (vec 0)))
  (let (%2083 (Unsqueeze %2079 (vec 0)))
  (let (%2086 (Concat %2082 %2083 %3219 %3220 0))
  (let (%2087 (Reshape %2055 %2086))
  (let (%2088 (Shape %2058))
  (let (%2089 (Constant 0))
  (let (%2090 (Gather %2088 %2089 0))
  (let (%2091 (Shape %2058))
  (let (%2092 (Constant 1))
  (let (%2093 (Gather %2091 %2092 0))
  (let (%2096 (Unsqueeze %2090 (vec 0)))
  (let (%2097 (Unsqueeze %2093 (vec 0)))
  (let (%2100 (Concat %2096 %2097 %3221 %3222 0))
  (let (%2101 (Reshape %2058 %2100))
  (let (%2102 (Transpose %2101 (vec 0 2 1 3)))
  (let (%2103 (Transpose %2087 (vec 0 2 3 1)))
  (let (%2104 (MatMul %2073 %2103))
  (let (%2105 (Constant 8.0))
  (let (%2106 (Div %2104 %2105))
  (let (%2107 (Add %2106 %369))
  (let (%2108 (Softmax %2107 3))
  (let (%2109 (MatMul %2108 %2102))
  (let (%2110 (Transpose %2109 (vec 0 2 1 3)))
  (let (%2111 (Shape %2110))
  (let (%2112 (Constant 0))
  (let (%2113 (Gather %2111 %2112 0))
  (let (%2114 (Shape %2110))
  (let (%2115 (Constant 1))
  (let (%2116 (Gather %2114 %2115 0))
  (let (%2118 (Unsqueeze %2113 (vec 0)))
  (let (%2119 (Unsqueeze %2116 (vec 0)))
  (let (%2121 (Concat %2118 %2119 %3223 0))
  (let (%2122 (Reshape %2110 %2121))
  (let (%2124 (MatMul %2122 %3224))
  (let (%2125 (Add %2124 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2126 (Add %2125 %2049))
  (let (%2128 (ReduceMean %2126 (vec -1) 1))
  (let (%2129 (Sub %2126 %2128))
  (let (%2130 (Cast_FLOAT %2129))
  (let (%2132 (Pow %2130 %3225))
  (let (%2133 (ReduceMean %2132 (vec -1) 1))
  (let (%2134 (Constant 9.999999960041972e-13))
  (let (%2135 (Add %2133 %2134))
  (let (%2136 (Sqrt %2135))
  (let (%2137 (Div %2129 %2136))
  (let (%2138 (Mul %2137 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2139 (Add %2138 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2141 (MatMul %2139 %3226))
  (let (%2142 (Add %2141 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2143 (Constant 1.4142135381698608))
  (let (%2144 (Div %2142 %2143))
  (let (%2145 (Erf %2144))
  (let (%2146 (Constant 1.0))
  (let (%2147 (Add %2145 %2146))
  (let (%2148 (Mul %2142 %2147))
  (let (%2149 (Constant 0.5))
  (let (%2150 (Mul %2148 %2149))
  (let (%2152 (MatMul %2150 %3227))
  (let (%2153 (Add %2152 bert.encoder.layer.14.output.dense.bias))
  (let (%2154 (Add %2153 %2139))
  (let (%2156 (ReduceMean %2154 (vec -1) 1))
  (let (%2157 (Sub %2154 %2156))
  (let (%2158 (Cast_FLOAT %2157))
  (let (%2160 (Pow %2158 %3228))
  (let (%2161 (ReduceMean %2160 (vec -1) 1))
  (let (%2162 (Constant 9.999999960041972e-13))
  (let (%2163 (Add %2161 %2162))
  (let (%2164 (Sqrt %2163))
  (let (%2165 (Div %2157 %2164))
  (let (%2166 (Mul %2165 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2167 (Add %2166 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2169 (MatMul %2167 %3229))
  (let (%2170 (Add %2169 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2172 (MatMul %2167 %3230))
  (let (%2173 (Add %2172 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2175 (MatMul %2167 %3231))
  (let (%2176 (Add %2175 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2177 (Shape %2170))
  (let (%2178 (Constant 0))
  (let (%2179 (Gather %2177 %2178 0))
  (let (%2180 (Shape %2170))
  (let (%2181 (Constant 1))
  (let (%2182 (Gather %2180 %2181 0))
  (let (%2185 (Unsqueeze %2179 (vec 0)))
  (let (%2186 (Unsqueeze %2182 (vec 0)))
  (let (%2189 (Concat %2185 %2186 %3232 %3233 0))
  (let (%2190 (Reshape %2170 %2189))
  (let (%2191 (Transpose %2190 (vec 0 2 1 3)))
  (let (%2192 (Shape %2173))
  (let (%2193 (Constant 0))
  (let (%2194 (Gather %2192 %2193 0))
  (let (%2195 (Shape %2173))
  (let (%2196 (Constant 1))
  (let (%2197 (Gather %2195 %2196 0))
  (let (%2200 (Unsqueeze %2194 (vec 0)))
  (let (%2201 (Unsqueeze %2197 (vec 0)))
  (let (%2204 (Concat %2200 %2201 %3234 %3235 0))
  (let (%2205 (Reshape %2173 %2204))
  (let (%2206 (Shape %2176))
  (let (%2207 (Constant 0))
  (let (%2208 (Gather %2206 %2207 0))
  (let (%2209 (Shape %2176))
  (let (%2210 (Constant 1))
  (let (%2211 (Gather %2209 %2210 0))
  (let (%2214 (Unsqueeze %2208 (vec 0)))
  (let (%2215 (Unsqueeze %2211 (vec 0)))
  (let (%2218 (Concat %2214 %2215 %3236 %3237 0))
  (let (%2219 (Reshape %2176 %2218))
  (let (%2220 (Transpose %2219 (vec 0 2 1 3)))
  (let (%2221 (Transpose %2205 (vec 0 2 3 1)))
  (let (%2222 (MatMul %2191 %2221))
  (let (%2223 (Constant 8.0))
  (let (%2224 (Div %2222 %2223))
  (let (%2225 (Add %2224 %369))
  (let (%2226 (Softmax %2225 3))
  (let (%2227 (MatMul %2226 %2220))
  (let (%2228 (Transpose %2227 (vec 0 2 1 3)))
  (let (%2229 (Shape %2228))
  (let (%2230 (Constant 0))
  (let (%2231 (Gather %2229 %2230 0))
  (let (%2232 (Shape %2228))
  (let (%2233 (Constant 1))
  (let (%2234 (Gather %2232 %2233 0))
  (let (%2236 (Unsqueeze %2231 (vec 0)))
  (let (%2237 (Unsqueeze %2234 (vec 0)))
  (let (%2239 (Concat %2236 %2237 %3238 0))
  (let (%2240 (Reshape %2228 %2239))
  (let (%2242 (MatMul %2240 %3239))
  (let (%2243 (Add %2242 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2244 (Add %2243 %2167))
  (let (%2246 (ReduceMean %2244 (vec -1) 1))
  (let (%2247 (Sub %2244 %2246))
  (let (%2248 (Cast_FLOAT %2247))
  (let (%2250 (Pow %2248 %3240))
  (let (%2251 (ReduceMean %2250 (vec -1) 1))
  (let (%2252 (Constant 9.999999960041972e-13))
  (let (%2253 (Add %2251 %2252))
  (let (%2254 (Sqrt %2253))
  (let (%2255 (Div %2247 %2254))
  (let (%2256 (Mul %2255 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2257 (Add %2256 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2259 (MatMul %2257 %3241))
  (let (%2260 (Add %2259 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2261 (Constant 1.4142135381698608))
  (let (%2262 (Div %2260 %2261))
  (let (%2263 (Erf %2262))
  (let (%2264 (Constant 1.0))
  (let (%2265 (Add %2263 %2264))
  (let (%2266 (Mul %2260 %2265))
  (let (%2267 (Constant 0.5))
  (let (%2268 (Mul %2266 %2267))
  (let (%2270 (MatMul %2268 %3242))
  (let (%2271 (Add %2270 bert.encoder.layer.15.output.dense.bias))
  (let (%2272 (Add %2271 %2257))
  (let (%2274 (ReduceMean %2272 (vec -1) 1))
  (let (%2275 (Sub %2272 %2274))
  (let (%2276 (Cast_FLOAT %2275))
  (let (%2278 (Pow %2276 %3243))
  (let (%2279 (ReduceMean %2278 (vec -1) 1))
  (let (%2280 (Constant 9.999999960041972e-13))
  (let (%2281 (Add %2279 %2280))
  (let (%2282 (Sqrt %2281))
  (let (%2283 (Div %2275 %2282))
  (let (%2284 (Mul %2283 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2285 (Add %2284 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2287 (MatMul %2285 %3244))
  (let (%2288 (Add %2287 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2290 (MatMul %2285 %3245))
  (let (%2291 (Add %2290 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2293 (MatMul %2285 %3246))
  (let (%2294 (Add %2293 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2295 (Shape %2288))
  (let (%2296 (Constant 0))
  (let (%2297 (Gather %2295 %2296 0))
  (let (%2298 (Shape %2288))
  (let (%2299 (Constant 1))
  (let (%2300 (Gather %2298 %2299 0))
  (let (%2303 (Unsqueeze %2297 (vec 0)))
  (let (%2304 (Unsqueeze %2300 (vec 0)))
  (let (%2307 (Concat %2303 %2304 %3247 %3248 0))
  (let (%2308 (Reshape %2288 %2307))
  (let (%2309 (Transpose %2308 (vec 0 2 1 3)))
  (let (%2310 (Shape %2291))
  (let (%2311 (Constant 0))
  (let (%2312 (Gather %2310 %2311 0))
  (let (%2313 (Shape %2291))
  (let (%2314 (Constant 1))
  (let (%2315 (Gather %2313 %2314 0))
  (let (%2318 (Unsqueeze %2312 (vec 0)))
  (let (%2319 (Unsqueeze %2315 (vec 0)))
  (let (%2322 (Concat %2318 %2319 %3249 %3250 0))
  (let (%2323 (Reshape %2291 %2322))
  (let (%2324 (Shape %2294))
  (let (%2325 (Constant 0))
  (let (%2326 (Gather %2324 %2325 0))
  (let (%2327 (Shape %2294))
  (let (%2328 (Constant 1))
  (let (%2329 (Gather %2327 %2328 0))
  (let (%2332 (Unsqueeze %2326 (vec 0)))
  (let (%2333 (Unsqueeze %2329 (vec 0)))
  (let (%2336 (Concat %2332 %2333 %3251 %3252 0))
  (let (%2337 (Reshape %2294 %2336))
  (let (%2338 (Transpose %2337 (vec 0 2 1 3)))
  (let (%2339 (Transpose %2323 (vec 0 2 3 1)))
  (let (%2340 (MatMul %2309 %2339))
  (let (%2341 (Constant 8.0))
  (let (%2342 (Div %2340 %2341))
  (let (%2343 (Add %2342 %369))
  (let (%2344 (Softmax %2343 3))
  (let (%2345 (MatMul %2344 %2338))
  (let (%2346 (Transpose %2345 (vec 0 2 1 3)))
  (let (%2347 (Shape %2346))
  (let (%2348 (Constant 0))
  (let (%2349 (Gather %2347 %2348 0))
  (let (%2350 (Shape %2346))
  (let (%2351 (Constant 1))
  (let (%2352 (Gather %2350 %2351 0))
  (let (%2354 (Unsqueeze %2349 (vec 0)))
  (let (%2355 (Unsqueeze %2352 (vec 0)))
  (let (%2357 (Concat %2354 %2355 %3253 0))
  (let (%2358 (Reshape %2346 %2357))
  (let (%2360 (MatMul %2358 %3254))
  (let (%2361 (Add %2360 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2362 (Add %2361 %2285))
  (let (%2364 (ReduceMean %2362 (vec -1) 1))
  (let (%2365 (Sub %2362 %2364))
  (let (%2366 (Cast_FLOAT %2365))
  (let (%2368 (Pow %2366 %3255))
  (let (%2369 (ReduceMean %2368 (vec -1) 1))
  (let (%2370 (Constant 9.999999960041972e-13))
  (let (%2371 (Add %2369 %2370))
  (let (%2372 (Sqrt %2371))
  (let (%2373 (Div %2365 %2372))
  (let (%2374 (Mul %2373 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2375 (Add %2374 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2377 (MatMul %2375 %3256))
  (let (%2378 (Add %2377 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2379 (Constant 1.4142135381698608))
  (let (%2380 (Div %2378 %2379))
  (let (%2381 (Erf %2380))
  (let (%2382 (Constant 1.0))
  (let (%2383 (Add %2381 %2382))
  (let (%2384 (Mul %2378 %2383))
  (let (%2385 (Constant 0.5))
  (let (%2386 (Mul %2384 %2385))
  (let (%2388 (MatMul %2386 %3257))
  (let (%2389 (Add %2388 bert.encoder.layer.16.output.dense.bias))
  (let (%2390 (Add %2389 %2375))
  (let (%2392 (ReduceMean %2390 (vec -1) 1))
  (let (%2393 (Sub %2390 %2392))
  (let (%2394 (Cast_FLOAT %2393))
  (let (%2396 (Pow %2394 %3258))
  (let (%2397 (ReduceMean %2396 (vec -1) 1))
  (let (%2398 (Constant 9.999999960041972e-13))
  (let (%2399 (Add %2397 %2398))
  (let (%2400 (Sqrt %2399))
  (let (%2401 (Div %2393 %2400))
  (let (%2402 (Mul %2401 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2403 (Add %2402 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2405 (MatMul %2403 %3259))
  (let (%2406 (Add %2405 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2408 (MatMul %2403 %3260))
  (let (%2409 (Add %2408 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2411 (MatMul %2403 %3261))
  (let (%2412 (Add %2411 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2413 (Shape %2406))
  (let (%2414 (Constant 0))
  (let (%2415 (Gather %2413 %2414 0))
  (let (%2416 (Shape %2406))
  (let (%2417 (Constant 1))
  (let (%2418 (Gather %2416 %2417 0))
  (let (%2421 (Unsqueeze %2415 (vec 0)))
  (let (%2422 (Unsqueeze %2418 (vec 0)))
  (let (%2425 (Concat %2421 %2422 %3262 %3263 0))
  (let (%2426 (Reshape %2406 %2425))
  (let (%2427 (Transpose %2426 (vec 0 2 1 3)))
  (let (%2428 (Shape %2409))
  (let (%2429 (Constant 0))
  (let (%2430 (Gather %2428 %2429 0))
  (let (%2431 (Shape %2409))
  (let (%2432 (Constant 1))
  (let (%2433 (Gather %2431 %2432 0))
  (let (%2436 (Unsqueeze %2430 (vec 0)))
  (let (%2437 (Unsqueeze %2433 (vec 0)))
  (let (%2440 (Concat %2436 %2437 %3264 %3265 0))
  (let (%2441 (Reshape %2409 %2440))
  (let (%2442 (Shape %2412))
  (let (%2443 (Constant 0))
  (let (%2444 (Gather %2442 %2443 0))
  (let (%2445 (Shape %2412))
  (let (%2446 (Constant 1))
  (let (%2447 (Gather %2445 %2446 0))
  (let (%2450 (Unsqueeze %2444 (vec 0)))
  (let (%2451 (Unsqueeze %2447 (vec 0)))
  (let (%2454 (Concat %2450 %2451 %3266 %3267 0))
  (let (%2455 (Reshape %2412 %2454))
  (let (%2456 (Transpose %2455 (vec 0 2 1 3)))
  (let (%2457 (Transpose %2441 (vec 0 2 3 1)))
  (let (%2458 (MatMul %2427 %2457))
  (let (%2459 (Constant 8.0))
  (let (%2460 (Div %2458 %2459))
  (let (%2461 (Add %2460 %369))
  (let (%2462 (Softmax %2461 3))
  (let (%2463 (MatMul %2462 %2456))
  (let (%2464 (Transpose %2463 (vec 0 2 1 3)))
  (let (%2465 (Shape %2464))
  (let (%2466 (Constant 0))
  (let (%2467 (Gather %2465 %2466 0))
  (let (%2468 (Shape %2464))
  (let (%2469 (Constant 1))
  (let (%2470 (Gather %2468 %2469 0))
  (let (%2472 (Unsqueeze %2467 (vec 0)))
  (let (%2473 (Unsqueeze %2470 (vec 0)))
  (let (%2475 (Concat %2472 %2473 %3268 0))
  (let (%2476 (Reshape %2464 %2475))
  (let (%2478 (MatMul %2476 %3269))
  (let (%2479 (Add %2478 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2480 (Add %2479 %2403))
  (let (%2482 (ReduceMean %2480 (vec -1) 1))
  (let (%2483 (Sub %2480 %2482))
  (let (%2484 (Cast_FLOAT %2483))
  (let (%2486 (Pow %2484 %3270))
  (let (%2487 (ReduceMean %2486 (vec -1) 1))
  (let (%2488 (Constant 9.999999960041972e-13))
  (let (%2489 (Add %2487 %2488))
  (let (%2490 (Sqrt %2489))
  (let (%2491 (Div %2483 %2490))
  (let (%2492 (Mul %2491 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2493 (Add %2492 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2495 (MatMul %2493 %3271))
  (let (%2496 (Add %2495 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2497 (Constant 1.4142135381698608))
  (let (%2498 (Div %2496 %2497))
  (let (%2499 (Erf %2498))
  (let (%2500 (Constant 1.0))
  (let (%2501 (Add %2499 %2500))
  (let (%2502 (Mul %2496 %2501))
  (let (%2503 (Constant 0.5))
  (let (%2504 (Mul %2502 %2503))
  (let (%2506 (MatMul %2504 %3272))
  (let (%2507 (Add %2506 bert.encoder.layer.17.output.dense.bias))
  (let (%2508 (Add %2507 %2493))
  (let (%2510 (ReduceMean %2508 (vec -1) 1))
  (let (%2511 (Sub %2508 %2510))
  (let (%2512 (Cast_FLOAT %2511))
  (let (%2514 (Pow %2512 %3273))
  (let (%2515 (ReduceMean %2514 (vec -1) 1))
  (let (%2516 (Constant 9.999999960041972e-13))
  (let (%2517 (Add %2515 %2516))
  (let (%2518 (Sqrt %2517))
  (let (%2519 (Div %2511 %2518))
  (let (%2520 (Mul %2519 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2521 (Add %2520 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2523 (MatMul %2521 %3274))
  (let (%2524 (Add %2523 bert.encoder.layer.18.attention.self.query.bias))
  (let (%2526 (MatMul %2521 %3275))
  (let (%2527 (Add %2526 bert.encoder.layer.18.attention.self.key.bias))
  (let (%2529 (MatMul %2521 %3276))
  (let (%2530 (Add %2529 bert.encoder.layer.18.attention.self.value.bias))
  (let (%2531 (Shape %2524))
  (let (%2532 (Constant 0))
  (let (%2533 (Gather %2531 %2532 0))
  (let (%2534 (Shape %2524))
  (let (%2535 (Constant 1))
  (let (%2536 (Gather %2534 %2535 0))
  (let (%2539 (Unsqueeze %2533 (vec 0)))
  (let (%2540 (Unsqueeze %2536 (vec 0)))
  (let (%2543 (Concat %2539 %2540 %3277 %3278 0))
  (let (%2544 (Reshape %2524 %2543))
  (let (%2545 (Transpose %2544 (vec 0 2 1 3)))
  (let (%2546 (Shape %2527))
  (let (%2547 (Constant 0))
  (let (%2548 (Gather %2546 %2547 0))
  (let (%2549 (Shape %2527))
  (let (%2550 (Constant 1))
  (let (%2551 (Gather %2549 %2550 0))
  (let (%2554 (Unsqueeze %2548 (vec 0)))
  (let (%2555 (Unsqueeze %2551 (vec 0)))
  (let (%2558 (Concat %2554 %2555 %3279 %3280 0))
  (let (%2559 (Reshape %2527 %2558))
  (let (%2560 (Shape %2530))
  (let (%2561 (Constant 0))
  (let (%2562 (Gather %2560 %2561 0))
  (let (%2563 (Shape %2530))
  (let (%2564 (Constant 1))
  (let (%2565 (Gather %2563 %2564 0))
  (let (%2568 (Unsqueeze %2562 (vec 0)))
  (let (%2569 (Unsqueeze %2565 (vec 0)))
  (let (%2572 (Concat %2568 %2569 %3281 %3282 0))
  (let (%2573 (Reshape %2530 %2572))
  (let (%2574 (Transpose %2573 (vec 0 2 1 3)))
  (let (%2575 (Transpose %2559 (vec 0 2 3 1)))
  (let (%2576 (MatMul %2545 %2575))
  (let (%2577 (Constant 8.0))
  (let (%2578 (Div %2576 %2577))
  (let (%2579 (Add %2578 %369))
  (let (%2580 (Softmax %2579 3))
  (let (%2581 (MatMul %2580 %2574))
  (let (%2582 (Transpose %2581 (vec 0 2 1 3)))
  (let (%2583 (Shape %2582))
  (let (%2584 (Constant 0))
  (let (%2585 (Gather %2583 %2584 0))
  (let (%2586 (Shape %2582))
  (let (%2587 (Constant 1))
  (let (%2588 (Gather %2586 %2587 0))
  (let (%2590 (Unsqueeze %2585 (vec 0)))
  (let (%2591 (Unsqueeze %2588 (vec 0)))
  (let (%2593 (Concat %2590 %2591 %3283 0))
  (let (%2594 (Reshape %2582 %2593))
  (let (%2596 (MatMul %2594 %3284))
  (let (%2597 (Add %2596 bert.encoder.layer.18.attention.output.dense.bias))
  (let (%2598 (Add %2597 %2521))
  (let (%2600 (ReduceMean %2598 (vec -1) 1))
  (let (%2601 (Sub %2598 %2600))
  (let (%2602 (Cast_FLOAT %2601))
  (let (%2604 (Pow %2602 %3285))
  (let (%2605 (ReduceMean %2604 (vec -1) 1))
  (let (%2606 (Constant 9.999999960041972e-13))
  (let (%2607 (Add %2605 %2606))
  (let (%2608 (Sqrt %2607))
  (let (%2609 (Div %2601 %2608))
  (let (%2610 (Mul %2609 bert.encoder.layer.18.attention.output.LayerNorm.weight))
  (let (%2611 (Add %2610 bert.encoder.layer.18.attention.output.LayerNorm.bias))
  (let (%2613 (MatMul %2611 %3286))
  (let (%2614 (Add %2613 bert.encoder.layer.18.intermediate.dense.bias))
  (let (%2615 (Constant 1.4142135381698608))
  (let (%2616 (Div %2614 %2615))
  (let (%2617 (Erf %2616))
  (let (%2618 (Constant 1.0))
  (let (%2619 (Add %2617 %2618))
  (let (%2620 (Mul %2614 %2619))
  (let (%2621 (Constant 0.5))
  (let (%2622 (Mul %2620 %2621))
  (let (%2624 (MatMul %2622 %3287))
  (let (%2625 (Add %2624 bert.encoder.layer.18.output.dense.bias))
  (let (%2626 (Add %2625 %2611))
  (let (%2628 (ReduceMean %2626 (vec -1) 1))
  (let (%2629 (Sub %2626 %2628))
  (let (%2630 (Cast_FLOAT %2629))
  (let (%2632 (Pow %2630 %3288))
  (let (%2633 (ReduceMean %2632 (vec -1) 1))
  (let (%2634 (Constant 9.999999960041972e-13))
  (let (%2635 (Add %2633 %2634))
  (let (%2636 (Sqrt %2635))
  (let (%2637 (Div %2629 %2636))
  (let (%2638 (Mul %2637 bert.encoder.layer.18.output.LayerNorm.weight))
  (let (%2639 (Add %2638 bert.encoder.layer.18.output.LayerNorm.bias))
  (let (%2641 (MatMul %2639 %3289))
  (let (%2642 (Add %2641 bert.encoder.layer.19.attention.self.query.bias))
  (let (%2644 (MatMul %2639 %3290))
  (let (%2645 (Add %2644 bert.encoder.layer.19.attention.self.key.bias))
  (let (%2647 (MatMul %2639 %3291))
  (let (%2648 (Add %2647 bert.encoder.layer.19.attention.self.value.bias))
  (let (%2649 (Shape %2642))
  (let (%2650 (Constant 0))
  (let (%2651 (Gather %2649 %2650 0))
  (let (%2652 (Shape %2642))
  (let (%2653 (Constant 1))
  (let (%2654 (Gather %2652 %2653 0))
  (let (%2657 (Unsqueeze %2651 (vec 0)))
  (let (%2658 (Unsqueeze %2654 (vec 0)))
  (let (%2661 (Concat %2657 %2658 %3292 %3293 0))
  (let (%2662 (Reshape %2642 %2661))
  (let (%2663 (Transpose %2662 (vec 0 2 1 3)))
  (let (%2664 (Shape %2645))
  (let (%2665 (Constant 0))
  (let (%2666 (Gather %2664 %2665 0))
  (let (%2667 (Shape %2645))
  (let (%2668 (Constant 1))
  (let (%2669 (Gather %2667 %2668 0))
  (let (%2672 (Unsqueeze %2666 (vec 0)))
  (let (%2673 (Unsqueeze %2669 (vec 0)))
  (let (%2676 (Concat %2672 %2673 %3294 %3295 0))
  (let (%2677 (Reshape %2645 %2676))
  (let (%2678 (Shape %2648))
  (let (%2679 (Constant 0))
  (let (%2680 (Gather %2678 %2679 0))
  (let (%2681 (Shape %2648))
  (let (%2682 (Constant 1))
  (let (%2683 (Gather %2681 %2682 0))
  (let (%2686 (Unsqueeze %2680 (vec 0)))
  (let (%2687 (Unsqueeze %2683 (vec 0)))
  (let (%2690 (Concat %2686 %2687 %3296 %3297 0))
  (let (%2691 (Reshape %2648 %2690))
  (let (%2692 (Transpose %2691 (vec 0 2 1 3)))
  (let (%2693 (Transpose %2677 (vec 0 2 3 1)))
  (let (%2694 (MatMul %2663 %2693))
  (let (%2695 (Constant 8.0))
  (let (%2696 (Div %2694 %2695))
  (let (%2697 (Add %2696 %369))
  (let (%2698 (Softmax %2697 3))
  (let (%2699 (MatMul %2698 %2692))
  (let (%2700 (Transpose %2699 (vec 0 2 1 3)))
  (let (%2701 (Shape %2700))
  (let (%2702 (Constant 0))
  (let (%2703 (Gather %2701 %2702 0))
  (let (%2704 (Shape %2700))
  (let (%2705 (Constant 1))
  (let (%2706 (Gather %2704 %2705 0))
  (let (%2708 (Unsqueeze %2703 (vec 0)))
  (let (%2709 (Unsqueeze %2706 (vec 0)))
  (let (%2711 (Concat %2708 %2709 %3298 0))
  (let (%2712 (Reshape %2700 %2711))
  (let (%2714 (MatMul %2712 %3299))
  (let (%2715 (Add %2714 bert.encoder.layer.19.attention.output.dense.bias))
  (let (%2716 (Add %2715 %2639))
  (let (%2718 (ReduceMean %2716 (vec -1) 1))
  (let (%2719 (Sub %2716 %2718))
  (let (%2720 (Cast_FLOAT %2719))
  (let (%2722 (Pow %2720 %3300))
  (let (%2723 (ReduceMean %2722 (vec -1) 1))
  (let (%2724 (Constant 9.999999960041972e-13))
  (let (%2725 (Add %2723 %2724))
  (let (%2726 (Sqrt %2725))
  (let (%2727 (Div %2719 %2726))
  (let (%2728 (Mul %2727 bert.encoder.layer.19.attention.output.LayerNorm.weight))
  (let (%2729 (Add %2728 bert.encoder.layer.19.attention.output.LayerNorm.bias))
  (let (%2731 (MatMul %2729 %3301))
  (let (%2732 (Add %2731 bert.encoder.layer.19.intermediate.dense.bias))
  (let (%2733 (Constant 1.4142135381698608))
  (let (%2734 (Div %2732 %2733))
  (let (%2735 (Erf %2734))
  (let (%2736 (Constant 1.0))
  (let (%2737 (Add %2735 %2736))
  (let (%2738 (Mul %2732 %2737))
  (let (%2739 (Constant 0.5))
  (let (%2740 (Mul %2738 %2739))
  (let (%2742 (MatMul %2740 %3302))
  (let (%2743 (Add %2742 bert.encoder.layer.19.output.dense.bias))
  (let (%2744 (Add %2743 %2729))
  (let (%2746 (ReduceMean %2744 (vec -1) 1))
  (let (%2747 (Sub %2744 %2746))
  (let (%2748 (Cast_FLOAT %2747))
  (let (%2750 (Pow %2748 %3303))
  (let (%2751 (ReduceMean %2750 (vec -1) 1))
  (let (%2752 (Constant 9.999999960041972e-13))
  (let (%2753 (Add %2751 %2752))
  (let (%2754 (Sqrt %2753))
  (let (%2755 (Div %2747 %2754))
  (let (%2756 (Mul %2755 bert.encoder.layer.19.output.LayerNorm.weight))
  (let (%2757 (Add %2756 bert.encoder.layer.19.output.LayerNorm.bias))
  (let (%2759 (MatMul %2757 %3304))
  (let (%2760 (Add %2759 bert.encoder.layer.20.attention.self.query.bias))
  (let (%2762 (MatMul %2757 %3305))
  (let (%2763 (Add %2762 bert.encoder.layer.20.attention.self.key.bias))
  (let (%2765 (MatMul %2757 %3306))
  (let (%2766 (Add %2765 bert.encoder.layer.20.attention.self.value.bias))
  (let (%2767 (Shape %2760))
  (let (%2768 (Constant 0))
  (let (%2769 (Gather %2767 %2768 0))
  (let (%2770 (Shape %2760))
  (let (%2771 (Constant 1))
  (let (%2772 (Gather %2770 %2771 0))
  (let (%2775 (Unsqueeze %2769 (vec 0)))
  (let (%2776 (Unsqueeze %2772 (vec 0)))
  (let (%2779 (Concat %2775 %2776 %3307 %3308 0))
  (let (%2780 (Reshape %2760 %2779))
  (let (%2781 (Transpose %2780 (vec 0 2 1 3)))
  (let (%2782 (Shape %2763))
  (let (%2783 (Constant 0))
  (let (%2784 (Gather %2782 %2783 0))
  (let (%2785 (Shape %2763))
  (let (%2786 (Constant 1))
  (let (%2787 (Gather %2785 %2786 0))
  (let (%2790 (Unsqueeze %2784 (vec 0)))
  (let (%2791 (Unsqueeze %2787 (vec 0)))
  (let (%2794 (Concat %2790 %2791 %3309 %3310 0))
  (let (%2795 (Reshape %2763 %2794))
  (let (%2796 (Shape %2766))
  (let (%2797 (Constant 0))
  (let (%2798 (Gather %2796 %2797 0))
  (let (%2799 (Shape %2766))
  (let (%2800 (Constant 1))
  (let (%2801 (Gather %2799 %2800 0))
  (let (%2804 (Unsqueeze %2798 (vec 0)))
  (let (%2805 (Unsqueeze %2801 (vec 0)))
  (let (%2808 (Concat %2804 %2805 %3311 %3312 0))
  (let (%2809 (Reshape %2766 %2808))
  (let (%2810 (Transpose %2809 (vec 0 2 1 3)))
  (let (%2811 (Transpose %2795 (vec 0 2 3 1)))
  (let (%2812 (MatMul %2781 %2811))
  (let (%2813 (Constant 8.0))
  (let (%2814 (Div %2812 %2813))
  (let (%2815 (Add %2814 %369))
  (let (%2816 (Softmax %2815 3))
  (let (%2817 (MatMul %2816 %2810))
  (let (%2818 (Transpose %2817 (vec 0 2 1 3)))
  (let (%2819 (Shape %2818))
  (let (%2820 (Constant 0))
  (let (%2821 (Gather %2819 %2820 0))
  (let (%2822 (Shape %2818))
  (let (%2823 (Constant 1))
  (let (%2824 (Gather %2822 %2823 0))
  (let (%2826 (Unsqueeze %2821 (vec 0)))
  (let (%2827 (Unsqueeze %2824 (vec 0)))
  (let (%2829 (Concat %2826 %2827 %3313 0))
  (let (%2830 (Reshape %2818 %2829))
  (let (%2832 (MatMul %2830 %3314))
  (let (%2833 (Add %2832 bert.encoder.layer.20.attention.output.dense.bias))
  (let (%2834 (Add %2833 %2757))
  (let (%2836 (ReduceMean %2834 (vec -1) 1))
  (let (%2837 (Sub %2834 %2836))
  (let (%2838 (Cast_FLOAT %2837))
  (let (%2840 (Pow %2838 %3315))
  (let (%2841 (ReduceMean %2840 (vec -1) 1))
  (let (%2842 (Constant 9.999999960041972e-13))
  (let (%2843 (Add %2841 %2842))
  (let (%2844 (Sqrt %2843))
  (let (%2845 (Div %2837 %2844))
  (let (%2846 (Mul %2845 bert.encoder.layer.20.attention.output.LayerNorm.weight))
  (let (%2847 (Add %2846 bert.encoder.layer.20.attention.output.LayerNorm.bias))
  (let (%2849 (MatMul %2847 %3316))
  (let (%2850 (Add %2849 bert.encoder.layer.20.intermediate.dense.bias))
  (let (%2851 (Constant 1.4142135381698608))
  (let (%2852 (Div %2850 %2851))
  (let (%2853 (Erf %2852))
  (let (%2854 (Constant 1.0))
  (let (%2855 (Add %2853 %2854))
  (let (%2856 (Mul %2850 %2855))
  (let (%2857 (Constant 0.5))
  (let (%2858 (Mul %2856 %2857))
  (let (%2860 (MatMul %2858 %3317))
  (let (%2861 (Add %2860 bert.encoder.layer.20.output.dense.bias))
  (let (%2862 (Add %2861 %2847))
  (let (%2864 (ReduceMean %2862 (vec -1) 1))
  (let (%2865 (Sub %2862 %2864))
  (let (%2866 (Cast_FLOAT %2865))
  (let (%2868 (Pow %2866 %3318))
  (let (%2869 (ReduceMean %2868 (vec -1) 1))
  (let (%2870 (Constant 9.999999960041972e-13))
  (let (%2871 (Add %2869 %2870))
  (let (%2872 (Sqrt %2871))
  (let (%2873 (Div %2865 %2872))
  (let (%2874 (Mul %2873 bert.encoder.layer.20.output.LayerNorm.weight))
  (let (%2875 (Add %2874 bert.encoder.layer.20.output.LayerNorm.bias))
  (let (%2877 (MatMul %2875 %3319))
  (let (%2878 (Add %2877 bert.encoder.layer.21.attention.self.query.bias))
  (let (%2880 (MatMul %2875 %3320))
  (let (%2881 (Add %2880 bert.encoder.layer.21.attention.self.key.bias))
  (let (%2883 (MatMul %2875 %3321))
  (let (%2884 (Add %2883 bert.encoder.layer.21.attention.self.value.bias))
  (let (%2885 (Shape %2878))
  (let (%2886 (Constant 0))
  (let (%2887 (Gather %2885 %2886 0))
  (let (%2888 (Shape %2878))
  (let (%2889 (Constant 1))
  (let (%2890 (Gather %2888 %2889 0))
  (let (%2893 (Unsqueeze %2887 (vec 0)))
  (let (%2894 (Unsqueeze %2890 (vec 0)))
  (let (%2897 (Concat %2893 %2894 %3322 %3323 0))
  (let (%2898 (Reshape %2878 %2897))
  (let (%2899 (Transpose %2898 (vec 0 2 1 3)))
  (let (%2900 (Shape %2881))
  (let (%2901 (Constant 0))
  (let (%2902 (Gather %2900 %2901 0))
  (let (%2903 (Shape %2881))
  (let (%2904 (Constant 1))
  (let (%2905 (Gather %2903 %2904 0))
  (let (%2908 (Unsqueeze %2902 (vec 0)))
  (let (%2909 (Unsqueeze %2905 (vec 0)))
  (let (%2912 (Concat %2908 %2909 %3324 %3325 0))
  (let (%2913 (Reshape %2881 %2912))
  (let (%2914 (Shape %2884))
  (let (%2915 (Constant 0))
  (let (%2916 (Gather %2914 %2915 0))
  (let (%2917 (Shape %2884))
  (let (%2918 (Constant 1))
  (let (%2919 (Gather %2917 %2918 0))
  (let (%2922 (Unsqueeze %2916 (vec 0)))
  (let (%2923 (Unsqueeze %2919 (vec 0)))
  (let (%2926 (Concat %2922 %2923 %3326 %3327 0))
  (let (%2927 (Reshape %2884 %2926))
  (let (%2928 (Transpose %2927 (vec 0 2 1 3)))
  (let (%2929 (Transpose %2913 (vec 0 2 3 1)))
  (let (%2930 (MatMul %2899 %2929))
  (let (%2931 (Constant 8.0))
  (let (%2932 (Div %2930 %2931))
  (let (%2933 (Add %2932 %369))
  (let (%2934 (Softmax %2933 3))
  (let (%2935 (MatMul %2934 %2928))
  (let (%2936 (Transpose %2935 (vec 0 2 1 3)))
  (let (%2937 (Shape %2936))
  (let (%2938 (Constant 0))
  (let (%2939 (Gather %2937 %2938 0))
  (let (%2940 (Shape %2936))
  (let (%2941 (Constant 1))
  (let (%2942 (Gather %2940 %2941 0))
  (let (%2944 (Unsqueeze %2939 (vec 0)))
  (let (%2945 (Unsqueeze %2942 (vec 0)))
  (let (%2947 (Concat %2944 %2945 %3328 0))
  (let (%2948 (Reshape %2936 %2947))
  (let (%2950 (MatMul %2948 %3329))
  (let (%2951 (Add %2950 bert.encoder.layer.21.attention.output.dense.bias))
  (let (%2952 (Add %2951 %2875))
  (let (%2954 (ReduceMean %2952 (vec -1) 1))
  (let (%2955 (Sub %2952 %2954))
  (let (%2956 (Cast_FLOAT %2955))
  (let (%2958 (Pow %2956 %3330))
  (let (%2959 (ReduceMean %2958 (vec -1) 1))
  (let (%2960 (Constant 9.999999960041972e-13))
  (let (%2961 (Add %2959 %2960))
  (let (%2962 (Sqrt %2961))
  (let (%2963 (Div %2955 %2962))
  (let (%2964 (Mul %2963 bert.encoder.layer.21.attention.output.LayerNorm.weight))
  (let (%2965 (Add %2964 bert.encoder.layer.21.attention.output.LayerNorm.bias))
  (let (%2967 (MatMul %2965 %3331))
  (let (%2968 (Add %2967 bert.encoder.layer.21.intermediate.dense.bias))
  (let (%2969 (Constant 1.4142135381698608))
  (let (%2970 (Div %2968 %2969))
  (let (%2971 (Erf %2970))
  (let (%2972 (Constant 1.0))
  (let (%2973 (Add %2971 %2972))
  (let (%2974 (Mul %2968 %2973))
  (let (%2975 (Constant 0.5))
  (let (%2976 (Mul %2974 %2975))
  (let (%2978 (MatMul %2976 %3332))
  (let (%2979 (Add %2978 bert.encoder.layer.21.output.dense.bias))
  (let (%2980 (Add %2979 %2965))
  (let (%2982 (ReduceMean %2980 (vec -1) 1))
  (let (%2983 (Sub %2980 %2982))
  (let (%2984 (Cast_FLOAT %2983))
  (let (%2986 (Pow %2984 %3333))
  (let (%2987 (ReduceMean %2986 (vec -1) 1))
  (let (%2988 (Constant 9.999999960041972e-13))
  (let (%2989 (Add %2987 %2988))
  (let (%2990 (Sqrt %2989))
  (let (%2991 (Div %2983 %2990))
  (let (%2992 (Mul %2991 bert.encoder.layer.21.output.LayerNorm.weight))
  (let (%2993 (Add %2992 bert.encoder.layer.21.output.LayerNorm.bias))
  (let (%2995 (MatMul %2993 %3334))
  (let (%2996 (Add %2995 qa_outputs.bias))
  (let ((%2997 %2998) (Split %2996 (vec 1 1) -1))
  (let (output_0 (Squeeze %2997 (vec -1)))
  (let (output_1 (Squeeze %2998 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

