;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert12.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1661 (vec 0))
  (let (%1662 (vec 1))
  (let (%1663 2.0)
  (let (%1664 (load-from-onnx-float32 768 768 "%1664"))
  (let (%1665 (load-from-onnx-float32 768 768 "%1665"))
  (let (%1666 (load-from-onnx-float32 768 768 "%1666"))
  (let (%1667 (vec 12))
  (let (%1668 (vec 64))
  (let (%1669 (vec 12))
  (let (%1670 (vec 64))
  (let (%1671 (vec 12))
  (let (%1672 (vec 64))
  (let (%1673 (vec 768))
  (let (%1674 (load-from-onnx-float32 768 768 "%1674"))
  (let (%1675 2.0)
  (let (%1676 (load-from-onnx-float32 768 3072 "%1676"))
  (let (%1677 (load-from-onnx-float32 3072 768 "%1677"))
  (let (%1678 2.0)
  (let (%1679 (load-from-onnx-float32 768 768 "%1679"))
  (let (%1680 (load-from-onnx-float32 768 768 "%1680"))
  (let (%1681 (load-from-onnx-float32 768 768 "%1681"))
  (let (%1682 (vec 12))
  (let (%1683 (vec 64))
  (let (%1684 (vec 12))
  (let (%1685 (vec 64))
  (let (%1686 (vec 12))
  (let (%1687 (vec 64))
  (let (%1688 (vec 768))
  (let (%1689 (load-from-onnx-float32 768 768 "%1689"))
  (let (%1690 2.0)
  (let (%1691 (load-from-onnx-float32 768 3072 "%1691"))
  (let (%1692 (load-from-onnx-float32 3072 768 "%1692"))
  (let (%1693 2.0)
  (let (%1694 (load-from-onnx-float32 768 768 "%1694"))
  (let (%1695 (load-from-onnx-float32 768 768 "%1695"))
  (let (%1696 (load-from-onnx-float32 768 768 "%1696"))
  (let (%1697 (vec 12))
  (let (%1698 (vec 64))
  (let (%1699 (vec 12))
  (let (%1700 (vec 64))
  (let (%1701 (vec 12))
  (let (%1702 (vec 64))
  (let (%1703 (vec 768))
  (let (%1704 (load-from-onnx-float32 768 768 "%1704"))
  (let (%1705 2.0)
  (let (%1706 (load-from-onnx-float32 768 3072 "%1706"))
  (let (%1707 (load-from-onnx-float32 3072 768 "%1707"))
  (let (%1708 2.0)
  (let (%1709 (load-from-onnx-float32 768 768 "%1709"))
  (let (%1710 (load-from-onnx-float32 768 768 "%1710"))
  (let (%1711 (load-from-onnx-float32 768 768 "%1711"))
  (let (%1712 (vec 12))
  (let (%1713 (vec 64))
  (let (%1714 (vec 12))
  (let (%1715 (vec 64))
  (let (%1716 (vec 12))
  (let (%1717 (vec 64))
  (let (%1718 (vec 768))
  (let (%1719 (load-from-onnx-float32 768 768 "%1719"))
  (let (%1720 2.0)
  (let (%1721 (load-from-onnx-float32 768 3072 "%1721"))
  (let (%1722 (load-from-onnx-float32 3072 768 "%1722"))
  (let (%1723 2.0)
  (let (%1724 (load-from-onnx-float32 768 768 "%1724"))
  (let (%1725 (load-from-onnx-float32 768 768 "%1725"))
  (let (%1726 (load-from-onnx-float32 768 768 "%1726"))
  (let (%1727 (vec 12))
  (let (%1728 (vec 64))
  (let (%1729 (vec 12))
  (let (%1730 (vec 64))
  (let (%1731 (vec 12))
  (let (%1732 (vec 64))
  (let (%1733 (vec 768))
  (let (%1734 (load-from-onnx-float32 768 768 "%1734"))
  (let (%1735 2.0)
  (let (%1736 (load-from-onnx-float32 768 3072 "%1736"))
  (let (%1737 (load-from-onnx-float32 3072 768 "%1737"))
  (let (%1738 2.0)
  (let (%1739 (load-from-onnx-float32 768 768 "%1739"))
  (let (%1740 (load-from-onnx-float32 768 768 "%1740"))
  (let (%1741 (load-from-onnx-float32 768 768 "%1741"))
  (let (%1742 (vec 12))
  (let (%1743 (vec 64))
  (let (%1744 (vec 12))
  (let (%1745 (vec 64))
  (let (%1746 (vec 12))
  (let (%1747 (vec 64))
  (let (%1748 (vec 768))
  (let (%1749 (load-from-onnx-float32 768 768 "%1749"))
  (let (%1750 2.0)
  (let (%1751 (load-from-onnx-float32 768 3072 "%1751"))
  (let (%1752 (load-from-onnx-float32 3072 768 "%1752"))
  (let (%1753 2.0)
  (let (%1754 (load-from-onnx-float32 768 768 "%1754"))
  (let (%1755 (load-from-onnx-float32 768 768 "%1755"))
  (let (%1756 (load-from-onnx-float32 768 768 "%1756"))
  (let (%1757 (vec 12))
  (let (%1758 (vec 64))
  (let (%1759 (vec 12))
  (let (%1760 (vec 64))
  (let (%1761 (vec 12))
  (let (%1762 (vec 64))
  (let (%1763 (vec 768))
  (let (%1764 (load-from-onnx-float32 768 768 "%1764"))
  (let (%1765 2.0)
  (let (%1766 (load-from-onnx-float32 768 3072 "%1766"))
  (let (%1767 (load-from-onnx-float32 3072 768 "%1767"))
  (let (%1768 2.0)
  (let (%1769 (load-from-onnx-float32 768 768 "%1769"))
  (let (%1770 (load-from-onnx-float32 768 768 "%1770"))
  (let (%1771 (load-from-onnx-float32 768 768 "%1771"))
  (let (%1772 (vec 12))
  (let (%1773 (vec 64))
  (let (%1774 (vec 12))
  (let (%1775 (vec 64))
  (let (%1776 (vec 12))
  (let (%1777 (vec 64))
  (let (%1778 (vec 768))
  (let (%1779 (load-from-onnx-float32 768 768 "%1779"))
  (let (%1780 2.0)
  (let (%1781 (load-from-onnx-float32 768 3072 "%1781"))
  (let (%1782 (load-from-onnx-float32 3072 768 "%1782"))
  (let (%1783 2.0)
  (let (%1784 (load-from-onnx-float32 768 768 "%1784"))
  (let (%1785 (load-from-onnx-float32 768 768 "%1785"))
  (let (%1786 (load-from-onnx-float32 768 768 "%1786"))
  (let (%1787 (vec 12))
  (let (%1788 (vec 64))
  (let (%1789 (vec 12))
  (let (%1790 (vec 64))
  (let (%1791 (vec 12))
  (let (%1792 (vec 64))
  (let (%1793 (vec 768))
  (let (%1794 (load-from-onnx-float32 768 768 "%1794"))
  (let (%1795 2.0)
  (let (%1796 (load-from-onnx-float32 768 3072 "%1796"))
  (let (%1797 (load-from-onnx-float32 3072 768 "%1797"))
  (let (%1798 2.0)
  (let (%1799 (load-from-onnx-float32 768 768 "%1799"))
  (let (%1800 (load-from-onnx-float32 768 768 "%1800"))
  (let (%1801 (load-from-onnx-float32 768 768 "%1801"))
  (let (%1802 (vec 12))
  (let (%1803 (vec 64))
  (let (%1804 (vec 12))
  (let (%1805 (vec 64))
  (let (%1806 (vec 12))
  (let (%1807 (vec 64))
  (let (%1808 (vec 768))
  (let (%1809 (load-from-onnx-float32 768 768 "%1809"))
  (let (%1810 2.0)
  (let (%1811 (load-from-onnx-float32 768 3072 "%1811"))
  (let (%1812 (load-from-onnx-float32 3072 768 "%1812"))
  (let (%1813 2.0)
  (let (%1814 (load-from-onnx-float32 768 768 "%1814"))
  (let (%1815 (load-from-onnx-float32 768 768 "%1815"))
  (let (%1816 (load-from-onnx-float32 768 768 "%1816"))
  (let (%1817 (vec 12))
  (let (%1818 (vec 64))
  (let (%1819 (vec 12))
  (let (%1820 (vec 64))
  (let (%1821 (vec 12))
  (let (%1822 (vec 64))
  (let (%1823 (vec 768))
  (let (%1824 (load-from-onnx-float32 768 768 "%1824"))
  (let (%1825 2.0)
  (let (%1826 (load-from-onnx-float32 768 3072 "%1826"))
  (let (%1827 (load-from-onnx-float32 3072 768 "%1827"))
  (let (%1828 2.0)
  (let (%1829 (load-from-onnx-float32 768 768 "%1829"))
  (let (%1830 (load-from-onnx-float32 768 768 "%1830"))
  (let (%1831 (load-from-onnx-float32 768 768 "%1831"))
  (let (%1832 (vec 12))
  (let (%1833 (vec 64))
  (let (%1834 (vec 12))
  (let (%1835 (vec 64))
  (let (%1836 (vec 12))
  (let (%1837 (vec 64))
  (let (%1838 (vec 768))
  (let (%1839 (load-from-onnx-float32 768 768 "%1839"))
  (let (%1840 2.0)
  (let (%1841 (load-from-onnx-float32 768 3072 "%1841"))
  (let (%1842 (load-from-onnx-float32 3072 768 "%1842"))
  (let (%1843 2.0)
  (let (%1844 (load-from-onnx-float32 768 2 "%1844"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%203 (Unsqueeze attention_mask (vec 1)))
  (let (%204 (Unsqueeze %203 (vec 2)))
  (let (%205 (Cast_FLOAT %204))
  (let (%206 (Constant 1.0))
  (let (%207 (Sub %206 %205))
  (let (%208 (Constant -10000.0))
  (let (%209 (Mul %207 %208))
  (let (%210 (Shape input_ids))
  (let (%211 (Constant 1))
  (let (%212 (Gather %210 %211 0))
  (let (%216 (Unsqueeze %212 (vec 0)))
  (let (%218 (Constant (vec 1)))
  (let (%219 (Slice bert.embeddings.position_ids %1661 %216 %1662 %218))
  (let (%220 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%221 (Gather bert.embeddings.position_embeddings.weight %219 0))
  (let (%222 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%223 (Add %220 %221))
  (let (%224 (Add %223 %222))
  (let (%226 (ReduceMean %224 (vec -1) 1))
  (let (%227 (Sub %224 %226))
  (let (%228 (Cast_FLOAT %227))
  (let (%230 (Pow %228 %1663))
  (let (%231 (ReduceMean %230 (vec -1) 1))
  (let (%232 (Constant 9.999999960041972e-13))
  (let (%233 (Add %231 %232))
  (let (%234 (Sqrt %233))
  (let (%235 (Div %227 %234))
  (let (%236 (Mul %235 bert.embeddings.LayerNorm.weight))
  (let (%237 (Add %236 bert.embeddings.LayerNorm.bias))
  (let (%239 (MatMul %237 %1664))
  (let (%240 (Add %239 bert.encoder.layer.0.attention.self.query.bias))
  (let (%242 (MatMul %237 %1665))
  (let (%243 (Add %242 bert.encoder.layer.0.attention.self.key.bias))
  (let (%245 (MatMul %237 %1666))
  (let (%246 (Add %245 bert.encoder.layer.0.attention.self.value.bias))
  (let (%247 (Shape %240))
  (let (%248 (Constant 0))
  (let (%249 (Gather %247 %248 0))
  (let (%250 (Shape %240))
  (let (%251 (Constant 1))
  (let (%252 (Gather %250 %251 0))
  (let (%255 (Unsqueeze %249 (vec 0)))
  (let (%256 (Unsqueeze %252 (vec 0)))
  (let (%259 (Concat %255 %256 %1667 %1668 0))
  (let (%260 (Reshape %240 %259))
  (let (%261 (Transpose %260 (vec 0 2 1 3)))
  (let (%262 (Shape %243))
  (let (%263 (Constant 0))
  (let (%264 (Gather %262 %263 0))
  (let (%265 (Shape %243))
  (let (%266 (Constant 1))
  (let (%267 (Gather %265 %266 0))
  (let (%270 (Unsqueeze %264 (vec 0)))
  (let (%271 (Unsqueeze %267 (vec 0)))
  (let (%274 (Concat %270 %271 %1669 %1670 0))
  (let (%275 (Reshape %243 %274))
  (let (%276 (Shape %246))
  (let (%277 (Constant 0))
  (let (%278 (Gather %276 %277 0))
  (let (%279 (Shape %246))
  (let (%280 (Constant 1))
  (let (%281 (Gather %279 %280 0))
  (let (%284 (Unsqueeze %278 (vec 0)))
  (let (%285 (Unsqueeze %281 (vec 0)))
  (let (%288 (Concat %284 %285 %1671 %1672 0))
  (let (%289 (Reshape %246 %288))
  (let (%290 (Transpose %289 (vec 0 2 1 3)))
  (let (%291 (Transpose %275 (vec 0 2 3 1)))
  (let (%292 (MatMul %261 %291))
  (let (%293 (Constant 8.0))
  (let (%294 (Div %292 %293))
  (let (%295 (Add %294 %209))
  (let (%296 (Softmax %295 3))
  (let (%297 (MatMul %296 %290))
  (let (%298 (Transpose %297 (vec 0 2 1 3)))
  (let (%299 (Shape %298))
  (let (%300 (Constant 0))
  (let (%301 (Gather %299 %300 0))
  (let (%302 (Shape %298))
  (let (%303 (Constant 1))
  (let (%304 (Gather %302 %303 0))
  (let (%306 (Unsqueeze %301 (vec 0)))
  (let (%307 (Unsqueeze %304 (vec 0)))
  (let (%309 (Concat %306 %307 %1673 0))
  (let (%310 (Reshape %298 %309))
  (let (%312 (MatMul %310 %1674))
  (let (%313 (Add %312 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%314 (Add %313 %237))
  (let (%316 (ReduceMean %314 (vec -1) 1))
  (let (%317 (Sub %314 %316))
  (let (%318 (Cast_FLOAT %317))
  (let (%320 (Pow %318 %1675))
  (let (%321 (ReduceMean %320 (vec -1) 1))
  (let (%322 (Constant 9.999999960041972e-13))
  (let (%323 (Add %321 %322))
  (let (%324 (Sqrt %323))
  (let (%325 (Div %317 %324))
  (let (%326 (Mul %325 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%327 (Add %326 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%329 (MatMul %327 %1676))
  (let (%330 (Add %329 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%331 (Constant 1.4142135381698608))
  (let (%332 (Div %330 %331))
  (let (%333 (Erf %332))
  (let (%334 (Constant 1.0))
  (let (%335 (Add %333 %334))
  (let (%336 (Mul %330 %335))
  (let (%337 (Constant 0.5))
  (let (%338 (Mul %336 %337))
  (let (%340 (MatMul %338 %1677))
  (let (%341 (Add %340 bert.encoder.layer.0.output.dense.bias))
  (let (%342 (Add %341 %327))
  (let (%344 (ReduceMean %342 (vec -1) 1))
  (let (%345 (Sub %342 %344))
  (let (%346 (Cast_FLOAT %345))
  (let (%348 (Pow %346 %1678))
  (let (%349 (ReduceMean %348 (vec -1) 1))
  (let (%350 (Constant 9.999999960041972e-13))
  (let (%351 (Add %349 %350))
  (let (%352 (Sqrt %351))
  (let (%353 (Div %345 %352))
  (let (%354 (Mul %353 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%355 (Add %354 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%357 (MatMul %355 %1679))
  (let (%358 (Add %357 bert.encoder.layer.1.attention.self.query.bias))
  (let (%360 (MatMul %355 %1680))
  (let (%361 (Add %360 bert.encoder.layer.1.attention.self.key.bias))
  (let (%363 (MatMul %355 %1681))
  (let (%364 (Add %363 bert.encoder.layer.1.attention.self.value.bias))
  (let (%365 (Shape %358))
  (let (%366 (Constant 0))
  (let (%367 (Gather %365 %366 0))
  (let (%368 (Shape %358))
  (let (%369 (Constant 1))
  (let (%370 (Gather %368 %369 0))
  (let (%373 (Unsqueeze %367 (vec 0)))
  (let (%374 (Unsqueeze %370 (vec 0)))
  (let (%377 (Concat %373 %374 %1682 %1683 0))
  (let (%378 (Reshape %358 %377))
  (let (%379 (Transpose %378 (vec 0 2 1 3)))
  (let (%380 (Shape %361))
  (let (%381 (Constant 0))
  (let (%382 (Gather %380 %381 0))
  (let (%383 (Shape %361))
  (let (%384 (Constant 1))
  (let (%385 (Gather %383 %384 0))
  (let (%388 (Unsqueeze %382 (vec 0)))
  (let (%389 (Unsqueeze %385 (vec 0)))
  (let (%392 (Concat %388 %389 %1684 %1685 0))
  (let (%393 (Reshape %361 %392))
  (let (%394 (Shape %364))
  (let (%395 (Constant 0))
  (let (%396 (Gather %394 %395 0))
  (let (%397 (Shape %364))
  (let (%398 (Constant 1))
  (let (%399 (Gather %397 %398 0))
  (let (%402 (Unsqueeze %396 (vec 0)))
  (let (%403 (Unsqueeze %399 (vec 0)))
  (let (%406 (Concat %402 %403 %1686 %1687 0))
  (let (%407 (Reshape %364 %406))
  (let (%408 (Transpose %407 (vec 0 2 1 3)))
  (let (%409 (Transpose %393 (vec 0 2 3 1)))
  (let (%410 (MatMul %379 %409))
  (let (%411 (Constant 8.0))
  (let (%412 (Div %410 %411))
  (let (%413 (Add %412 %209))
  (let (%414 (Softmax %413 3))
  (let (%415 (MatMul %414 %408))
  (let (%416 (Transpose %415 (vec 0 2 1 3)))
  (let (%417 (Shape %416))
  (let (%418 (Constant 0))
  (let (%419 (Gather %417 %418 0))
  (let (%420 (Shape %416))
  (let (%421 (Constant 1))
  (let (%422 (Gather %420 %421 0))
  (let (%424 (Unsqueeze %419 (vec 0)))
  (let (%425 (Unsqueeze %422 (vec 0)))
  (let (%427 (Concat %424 %425 %1688 0))
  (let (%428 (Reshape %416 %427))
  (let (%430 (MatMul %428 %1689))
  (let (%431 (Add %430 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%432 (Add %431 %355))
  (let (%434 (ReduceMean %432 (vec -1) 1))
  (let (%435 (Sub %432 %434))
  (let (%436 (Cast_FLOAT %435))
  (let (%438 (Pow %436 %1690))
  (let (%439 (ReduceMean %438 (vec -1) 1))
  (let (%440 (Constant 9.999999960041972e-13))
  (let (%441 (Add %439 %440))
  (let (%442 (Sqrt %441))
  (let (%443 (Div %435 %442))
  (let (%444 (Mul %443 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%445 (Add %444 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%447 (MatMul %445 %1691))
  (let (%448 (Add %447 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%449 (Constant 1.4142135381698608))
  (let (%450 (Div %448 %449))
  (let (%451 (Erf %450))
  (let (%452 (Constant 1.0))
  (let (%453 (Add %451 %452))
  (let (%454 (Mul %448 %453))
  (let (%455 (Constant 0.5))
  (let (%456 (Mul %454 %455))
  (let (%458 (MatMul %456 %1692))
  (let (%459 (Add %458 bert.encoder.layer.1.output.dense.bias))
  (let (%460 (Add %459 %445))
  (let (%462 (ReduceMean %460 (vec -1) 1))
  (let (%463 (Sub %460 %462))
  (let (%464 (Cast_FLOAT %463))
  (let (%466 (Pow %464 %1693))
  (let (%467 (ReduceMean %466 (vec -1) 1))
  (let (%468 (Constant 9.999999960041972e-13))
  (let (%469 (Add %467 %468))
  (let (%470 (Sqrt %469))
  (let (%471 (Div %463 %470))
  (let (%472 (Mul %471 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%473 (Add %472 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%475 (MatMul %473 %1694))
  (let (%476 (Add %475 bert.encoder.layer.2.attention.self.query.bias))
  (let (%478 (MatMul %473 %1695))
  (let (%479 (Add %478 bert.encoder.layer.2.attention.self.key.bias))
  (let (%481 (MatMul %473 %1696))
  (let (%482 (Add %481 bert.encoder.layer.2.attention.self.value.bias))
  (let (%483 (Shape %476))
  (let (%484 (Constant 0))
  (let (%485 (Gather %483 %484 0))
  (let (%486 (Shape %476))
  (let (%487 (Constant 1))
  (let (%488 (Gather %486 %487 0))
  (let (%491 (Unsqueeze %485 (vec 0)))
  (let (%492 (Unsqueeze %488 (vec 0)))
  (let (%495 (Concat %491 %492 %1697 %1698 0))
  (let (%496 (Reshape %476 %495))
  (let (%497 (Transpose %496 (vec 0 2 1 3)))
  (let (%498 (Shape %479))
  (let (%499 (Constant 0))
  (let (%500 (Gather %498 %499 0))
  (let (%501 (Shape %479))
  (let (%502 (Constant 1))
  (let (%503 (Gather %501 %502 0))
  (let (%506 (Unsqueeze %500 (vec 0)))
  (let (%507 (Unsqueeze %503 (vec 0)))
  (let (%510 (Concat %506 %507 %1699 %1700 0))
  (let (%511 (Reshape %479 %510))
  (let (%512 (Shape %482))
  (let (%513 (Constant 0))
  (let (%514 (Gather %512 %513 0))
  (let (%515 (Shape %482))
  (let (%516 (Constant 1))
  (let (%517 (Gather %515 %516 0))
  (let (%520 (Unsqueeze %514 (vec 0)))
  (let (%521 (Unsqueeze %517 (vec 0)))
  (let (%524 (Concat %520 %521 %1701 %1702 0))
  (let (%525 (Reshape %482 %524))
  (let (%526 (Transpose %525 (vec 0 2 1 3)))
  (let (%527 (Transpose %511 (vec 0 2 3 1)))
  (let (%528 (MatMul %497 %527))
  (let (%529 (Constant 8.0))
  (let (%530 (Div %528 %529))
  (let (%531 (Add %530 %209))
  (let (%532 (Softmax %531 3))
  (let (%533 (MatMul %532 %526))
  (let (%534 (Transpose %533 (vec 0 2 1 3)))
  (let (%535 (Shape %534))
  (let (%536 (Constant 0))
  (let (%537 (Gather %535 %536 0))
  (let (%538 (Shape %534))
  (let (%539 (Constant 1))
  (let (%540 (Gather %538 %539 0))
  (let (%542 (Unsqueeze %537 (vec 0)))
  (let (%543 (Unsqueeze %540 (vec 0)))
  (let (%545 (Concat %542 %543 %1703 0))
  (let (%546 (Reshape %534 %545))
  (let (%548 (MatMul %546 %1704))
  (let (%549 (Add %548 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%550 (Add %549 %473))
  (let (%552 (ReduceMean %550 (vec -1) 1))
  (let (%553 (Sub %550 %552))
  (let (%554 (Cast_FLOAT %553))
  (let (%556 (Pow %554 %1705))
  (let (%557 (ReduceMean %556 (vec -1) 1))
  (let (%558 (Constant 9.999999960041972e-13))
  (let (%559 (Add %557 %558))
  (let (%560 (Sqrt %559))
  (let (%561 (Div %553 %560))
  (let (%562 (Mul %561 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%563 (Add %562 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%565 (MatMul %563 %1706))
  (let (%566 (Add %565 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%567 (Constant 1.4142135381698608))
  (let (%568 (Div %566 %567))
  (let (%569 (Erf %568))
  (let (%570 (Constant 1.0))
  (let (%571 (Add %569 %570))
  (let (%572 (Mul %566 %571))
  (let (%573 (Constant 0.5))
  (let (%574 (Mul %572 %573))
  (let (%576 (MatMul %574 %1707))
  (let (%577 (Add %576 bert.encoder.layer.2.output.dense.bias))
  (let (%578 (Add %577 %563))
  (let (%580 (ReduceMean %578 (vec -1) 1))
  (let (%581 (Sub %578 %580))
  (let (%582 (Cast_FLOAT %581))
  (let (%584 (Pow %582 %1708))
  (let (%585 (ReduceMean %584 (vec -1) 1))
  (let (%586 (Constant 9.999999960041972e-13))
  (let (%587 (Add %585 %586))
  (let (%588 (Sqrt %587))
  (let (%589 (Div %581 %588))
  (let (%590 (Mul %589 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%591 (Add %590 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%593 (MatMul %591 %1709))
  (let (%594 (Add %593 bert.encoder.layer.3.attention.self.query.bias))
  (let (%596 (MatMul %591 %1710))
  (let (%597 (Add %596 bert.encoder.layer.3.attention.self.key.bias))
  (let (%599 (MatMul %591 %1711))
  (let (%600 (Add %599 bert.encoder.layer.3.attention.self.value.bias))
  (let (%601 (Shape %594))
  (let (%602 (Constant 0))
  (let (%603 (Gather %601 %602 0))
  (let (%604 (Shape %594))
  (let (%605 (Constant 1))
  (let (%606 (Gather %604 %605 0))
  (let (%609 (Unsqueeze %603 (vec 0)))
  (let (%610 (Unsqueeze %606 (vec 0)))
  (let (%613 (Concat %609 %610 %1712 %1713 0))
  (let (%614 (Reshape %594 %613))
  (let (%615 (Transpose %614 (vec 0 2 1 3)))
  (let (%616 (Shape %597))
  (let (%617 (Constant 0))
  (let (%618 (Gather %616 %617 0))
  (let (%619 (Shape %597))
  (let (%620 (Constant 1))
  (let (%621 (Gather %619 %620 0))
  (let (%624 (Unsqueeze %618 (vec 0)))
  (let (%625 (Unsqueeze %621 (vec 0)))
  (let (%628 (Concat %624 %625 %1714 %1715 0))
  (let (%629 (Reshape %597 %628))
  (let (%630 (Shape %600))
  (let (%631 (Constant 0))
  (let (%632 (Gather %630 %631 0))
  (let (%633 (Shape %600))
  (let (%634 (Constant 1))
  (let (%635 (Gather %633 %634 0))
  (let (%638 (Unsqueeze %632 (vec 0)))
  (let (%639 (Unsqueeze %635 (vec 0)))
  (let (%642 (Concat %638 %639 %1716 %1717 0))
  (let (%643 (Reshape %600 %642))
  (let (%644 (Transpose %643 (vec 0 2 1 3)))
  (let (%645 (Transpose %629 (vec 0 2 3 1)))
  (let (%646 (MatMul %615 %645))
  (let (%647 (Constant 8.0))
  (let (%648 (Div %646 %647))
  (let (%649 (Add %648 %209))
  (let (%650 (Softmax %649 3))
  (let (%651 (MatMul %650 %644))
  (let (%652 (Transpose %651 (vec 0 2 1 3)))
  (let (%653 (Shape %652))
  (let (%654 (Constant 0))
  (let (%655 (Gather %653 %654 0))
  (let (%656 (Shape %652))
  (let (%657 (Constant 1))
  (let (%658 (Gather %656 %657 0))
  (let (%660 (Unsqueeze %655 (vec 0)))
  (let (%661 (Unsqueeze %658 (vec 0)))
  (let (%663 (Concat %660 %661 %1718 0))
  (let (%664 (Reshape %652 %663))
  (let (%666 (MatMul %664 %1719))
  (let (%667 (Add %666 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%668 (Add %667 %591))
  (let (%670 (ReduceMean %668 (vec -1) 1))
  (let (%671 (Sub %668 %670))
  (let (%672 (Cast_FLOAT %671))
  (let (%674 (Pow %672 %1720))
  (let (%675 (ReduceMean %674 (vec -1) 1))
  (let (%676 (Constant 9.999999960041972e-13))
  (let (%677 (Add %675 %676))
  (let (%678 (Sqrt %677))
  (let (%679 (Div %671 %678))
  (let (%680 (Mul %679 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%681 (Add %680 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%683 (MatMul %681 %1721))
  (let (%684 (Add %683 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%685 (Constant 1.4142135381698608))
  (let (%686 (Div %684 %685))
  (let (%687 (Erf %686))
  (let (%688 (Constant 1.0))
  (let (%689 (Add %687 %688))
  (let (%690 (Mul %684 %689))
  (let (%691 (Constant 0.5))
  (let (%692 (Mul %690 %691))
  (let (%694 (MatMul %692 %1722))
  (let (%695 (Add %694 bert.encoder.layer.3.output.dense.bias))
  (let (%696 (Add %695 %681))
  (let (%698 (ReduceMean %696 (vec -1) 1))
  (let (%699 (Sub %696 %698))
  (let (%700 (Cast_FLOAT %699))
  (let (%702 (Pow %700 %1723))
  (let (%703 (ReduceMean %702 (vec -1) 1))
  (let (%704 (Constant 9.999999960041972e-13))
  (let (%705 (Add %703 %704))
  (let (%706 (Sqrt %705))
  (let (%707 (Div %699 %706))
  (let (%708 (Mul %707 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%709 (Add %708 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%711 (MatMul %709 %1724))
  (let (%712 (Add %711 bert.encoder.layer.4.attention.self.query.bias))
  (let (%714 (MatMul %709 %1725))
  (let (%715 (Add %714 bert.encoder.layer.4.attention.self.key.bias))
  (let (%717 (MatMul %709 %1726))
  (let (%718 (Add %717 bert.encoder.layer.4.attention.self.value.bias))
  (let (%719 (Shape %712))
  (let (%720 (Constant 0))
  (let (%721 (Gather %719 %720 0))
  (let (%722 (Shape %712))
  (let (%723 (Constant 1))
  (let (%724 (Gather %722 %723 0))
  (let (%727 (Unsqueeze %721 (vec 0)))
  (let (%728 (Unsqueeze %724 (vec 0)))
  (let (%731 (Concat %727 %728 %1727 %1728 0))
  (let (%732 (Reshape %712 %731))
  (let (%733 (Transpose %732 (vec 0 2 1 3)))
  (let (%734 (Shape %715))
  (let (%735 (Constant 0))
  (let (%736 (Gather %734 %735 0))
  (let (%737 (Shape %715))
  (let (%738 (Constant 1))
  (let (%739 (Gather %737 %738 0))
  (let (%742 (Unsqueeze %736 (vec 0)))
  (let (%743 (Unsqueeze %739 (vec 0)))
  (let (%746 (Concat %742 %743 %1729 %1730 0))
  (let (%747 (Reshape %715 %746))
  (let (%748 (Shape %718))
  (let (%749 (Constant 0))
  (let (%750 (Gather %748 %749 0))
  (let (%751 (Shape %718))
  (let (%752 (Constant 1))
  (let (%753 (Gather %751 %752 0))
  (let (%756 (Unsqueeze %750 (vec 0)))
  (let (%757 (Unsqueeze %753 (vec 0)))
  (let (%760 (Concat %756 %757 %1731 %1732 0))
  (let (%761 (Reshape %718 %760))
  (let (%762 (Transpose %761 (vec 0 2 1 3)))
  (let (%763 (Transpose %747 (vec 0 2 3 1)))
  (let (%764 (MatMul %733 %763))
  (let (%765 (Constant 8.0))
  (let (%766 (Div %764 %765))
  (let (%767 (Add %766 %209))
  (let (%768 (Softmax %767 3))
  (let (%769 (MatMul %768 %762))
  (let (%770 (Transpose %769 (vec 0 2 1 3)))
  (let (%771 (Shape %770))
  (let (%772 (Constant 0))
  (let (%773 (Gather %771 %772 0))
  (let (%774 (Shape %770))
  (let (%775 (Constant 1))
  (let (%776 (Gather %774 %775 0))
  (let (%778 (Unsqueeze %773 (vec 0)))
  (let (%779 (Unsqueeze %776 (vec 0)))
  (let (%781 (Concat %778 %779 %1733 0))
  (let (%782 (Reshape %770 %781))
  (let (%784 (MatMul %782 %1734))
  (let (%785 (Add %784 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%786 (Add %785 %709))
  (let (%788 (ReduceMean %786 (vec -1) 1))
  (let (%789 (Sub %786 %788))
  (let (%790 (Cast_FLOAT %789))
  (let (%792 (Pow %790 %1735))
  (let (%793 (ReduceMean %792 (vec -1) 1))
  (let (%794 (Constant 9.999999960041972e-13))
  (let (%795 (Add %793 %794))
  (let (%796 (Sqrt %795))
  (let (%797 (Div %789 %796))
  (let (%798 (Mul %797 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%799 (Add %798 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%801 (MatMul %799 %1736))
  (let (%802 (Add %801 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%803 (Constant 1.4142135381698608))
  (let (%804 (Div %802 %803))
  (let (%805 (Erf %804))
  (let (%806 (Constant 1.0))
  (let (%807 (Add %805 %806))
  (let (%808 (Mul %802 %807))
  (let (%809 (Constant 0.5))
  (let (%810 (Mul %808 %809))
  (let (%812 (MatMul %810 %1737))
  (let (%813 (Add %812 bert.encoder.layer.4.output.dense.bias))
  (let (%814 (Add %813 %799))
  (let (%816 (ReduceMean %814 (vec -1) 1))
  (let (%817 (Sub %814 %816))
  (let (%818 (Cast_FLOAT %817))
  (let (%820 (Pow %818 %1738))
  (let (%821 (ReduceMean %820 (vec -1) 1))
  (let (%822 (Constant 9.999999960041972e-13))
  (let (%823 (Add %821 %822))
  (let (%824 (Sqrt %823))
  (let (%825 (Div %817 %824))
  (let (%826 (Mul %825 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%827 (Add %826 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%829 (MatMul %827 %1739))
  (let (%830 (Add %829 bert.encoder.layer.5.attention.self.query.bias))
  (let (%832 (MatMul %827 %1740))
  (let (%833 (Add %832 bert.encoder.layer.5.attention.self.key.bias))
  (let (%835 (MatMul %827 %1741))
  (let (%836 (Add %835 bert.encoder.layer.5.attention.self.value.bias))
  (let (%837 (Shape %830))
  (let (%838 (Constant 0))
  (let (%839 (Gather %837 %838 0))
  (let (%840 (Shape %830))
  (let (%841 (Constant 1))
  (let (%842 (Gather %840 %841 0))
  (let (%845 (Unsqueeze %839 (vec 0)))
  (let (%846 (Unsqueeze %842 (vec 0)))
  (let (%849 (Concat %845 %846 %1742 %1743 0))
  (let (%850 (Reshape %830 %849))
  (let (%851 (Transpose %850 (vec 0 2 1 3)))
  (let (%852 (Shape %833))
  (let (%853 (Constant 0))
  (let (%854 (Gather %852 %853 0))
  (let (%855 (Shape %833))
  (let (%856 (Constant 1))
  (let (%857 (Gather %855 %856 0))
  (let (%860 (Unsqueeze %854 (vec 0)))
  (let (%861 (Unsqueeze %857 (vec 0)))
  (let (%864 (Concat %860 %861 %1744 %1745 0))
  (let (%865 (Reshape %833 %864))
  (let (%866 (Shape %836))
  (let (%867 (Constant 0))
  (let (%868 (Gather %866 %867 0))
  (let (%869 (Shape %836))
  (let (%870 (Constant 1))
  (let (%871 (Gather %869 %870 0))
  (let (%874 (Unsqueeze %868 (vec 0)))
  (let (%875 (Unsqueeze %871 (vec 0)))
  (let (%878 (Concat %874 %875 %1746 %1747 0))
  (let (%879 (Reshape %836 %878))
  (let (%880 (Transpose %879 (vec 0 2 1 3)))
  (let (%881 (Transpose %865 (vec 0 2 3 1)))
  (let (%882 (MatMul %851 %881))
  (let (%883 (Constant 8.0))
  (let (%884 (Div %882 %883))
  (let (%885 (Add %884 %209))
  (let (%886 (Softmax %885 3))
  (let (%887 (MatMul %886 %880))
  (let (%888 (Transpose %887 (vec 0 2 1 3)))
  (let (%889 (Shape %888))
  (let (%890 (Constant 0))
  (let (%891 (Gather %889 %890 0))
  (let (%892 (Shape %888))
  (let (%893 (Constant 1))
  (let (%894 (Gather %892 %893 0))
  (let (%896 (Unsqueeze %891 (vec 0)))
  (let (%897 (Unsqueeze %894 (vec 0)))
  (let (%899 (Concat %896 %897 %1748 0))
  (let (%900 (Reshape %888 %899))
  (let (%902 (MatMul %900 %1749))
  (let (%903 (Add %902 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%904 (Add %903 %827))
  (let (%906 (ReduceMean %904 (vec -1) 1))
  (let (%907 (Sub %904 %906))
  (let (%908 (Cast_FLOAT %907))
  (let (%910 (Pow %908 %1750))
  (let (%911 (ReduceMean %910 (vec -1) 1))
  (let (%912 (Constant 9.999999960041972e-13))
  (let (%913 (Add %911 %912))
  (let (%914 (Sqrt %913))
  (let (%915 (Div %907 %914))
  (let (%916 (Mul %915 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%917 (Add %916 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%919 (MatMul %917 %1751))
  (let (%920 (Add %919 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%921 (Constant 1.4142135381698608))
  (let (%922 (Div %920 %921))
  (let (%923 (Erf %922))
  (let (%924 (Constant 1.0))
  (let (%925 (Add %923 %924))
  (let (%926 (Mul %920 %925))
  (let (%927 (Constant 0.5))
  (let (%928 (Mul %926 %927))
  (let (%930 (MatMul %928 %1752))
  (let (%931 (Add %930 bert.encoder.layer.5.output.dense.bias))
  (let (%932 (Add %931 %917))
  (let (%934 (ReduceMean %932 (vec -1) 1))
  (let (%935 (Sub %932 %934))
  (let (%936 (Cast_FLOAT %935))
  (let (%938 (Pow %936 %1753))
  (let (%939 (ReduceMean %938 (vec -1) 1))
  (let (%940 (Constant 9.999999960041972e-13))
  (let (%941 (Add %939 %940))
  (let (%942 (Sqrt %941))
  (let (%943 (Div %935 %942))
  (let (%944 (Mul %943 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%945 (Add %944 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%947 (MatMul %945 %1754))
  (let (%948 (Add %947 bert.encoder.layer.6.attention.self.query.bias))
  (let (%950 (MatMul %945 %1755))
  (let (%951 (Add %950 bert.encoder.layer.6.attention.self.key.bias))
  (let (%953 (MatMul %945 %1756))
  (let (%954 (Add %953 bert.encoder.layer.6.attention.self.value.bias))
  (let (%955 (Shape %948))
  (let (%956 (Constant 0))
  (let (%957 (Gather %955 %956 0))
  (let (%958 (Shape %948))
  (let (%959 (Constant 1))
  (let (%960 (Gather %958 %959 0))
  (let (%963 (Unsqueeze %957 (vec 0)))
  (let (%964 (Unsqueeze %960 (vec 0)))
  (let (%967 (Concat %963 %964 %1757 %1758 0))
  (let (%968 (Reshape %948 %967))
  (let (%969 (Transpose %968 (vec 0 2 1 3)))
  (let (%970 (Shape %951))
  (let (%971 (Constant 0))
  (let (%972 (Gather %970 %971 0))
  (let (%973 (Shape %951))
  (let (%974 (Constant 1))
  (let (%975 (Gather %973 %974 0))
  (let (%978 (Unsqueeze %972 (vec 0)))
  (let (%979 (Unsqueeze %975 (vec 0)))
  (let (%982 (Concat %978 %979 %1759 %1760 0))
  (let (%983 (Reshape %951 %982))
  (let (%984 (Shape %954))
  (let (%985 (Constant 0))
  (let (%986 (Gather %984 %985 0))
  (let (%987 (Shape %954))
  (let (%988 (Constant 1))
  (let (%989 (Gather %987 %988 0))
  (let (%992 (Unsqueeze %986 (vec 0)))
  (let (%993 (Unsqueeze %989 (vec 0)))
  (let (%996 (Concat %992 %993 %1761 %1762 0))
  (let (%997 (Reshape %954 %996))
  (let (%998 (Transpose %997 (vec 0 2 1 3)))
  (let (%999 (Transpose %983 (vec 0 2 3 1)))
  (let (%1000 (MatMul %969 %999))
  (let (%1001 (Constant 8.0))
  (let (%1002 (Div %1000 %1001))
  (let (%1003 (Add %1002 %209))
  (let (%1004 (Softmax %1003 3))
  (let (%1005 (MatMul %1004 %998))
  (let (%1006 (Transpose %1005 (vec 0 2 1 3)))
  (let (%1007 (Shape %1006))
  (let (%1008 (Constant 0))
  (let (%1009 (Gather %1007 %1008 0))
  (let (%1010 (Shape %1006))
  (let (%1011 (Constant 1))
  (let (%1012 (Gather %1010 %1011 0))
  (let (%1014 (Unsqueeze %1009 (vec 0)))
  (let (%1015 (Unsqueeze %1012 (vec 0)))
  (let (%1017 (Concat %1014 %1015 %1763 0))
  (let (%1018 (Reshape %1006 %1017))
  (let (%1020 (MatMul %1018 %1764))
  (let (%1021 (Add %1020 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1022 (Add %1021 %945))
  (let (%1024 (ReduceMean %1022 (vec -1) 1))
  (let (%1025 (Sub %1022 %1024))
  (let (%1026 (Cast_FLOAT %1025))
  (let (%1028 (Pow %1026 %1765))
  (let (%1029 (ReduceMean %1028 (vec -1) 1))
  (let (%1030 (Constant 9.999999960041972e-13))
  (let (%1031 (Add %1029 %1030))
  (let (%1032 (Sqrt %1031))
  (let (%1033 (Div %1025 %1032))
  (let (%1034 (Mul %1033 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1035 (Add %1034 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1037 (MatMul %1035 %1766))
  (let (%1038 (Add %1037 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1039 (Constant 1.4142135381698608))
  (let (%1040 (Div %1038 %1039))
  (let (%1041 (Erf %1040))
  (let (%1042 (Constant 1.0))
  (let (%1043 (Add %1041 %1042))
  (let (%1044 (Mul %1038 %1043))
  (let (%1045 (Constant 0.5))
  (let (%1046 (Mul %1044 %1045))
  (let (%1048 (MatMul %1046 %1767))
  (let (%1049 (Add %1048 bert.encoder.layer.6.output.dense.bias))
  (let (%1050 (Add %1049 %1035))
  (let (%1052 (ReduceMean %1050 (vec -1) 1))
  (let (%1053 (Sub %1050 %1052))
  (let (%1054 (Cast_FLOAT %1053))
  (let (%1056 (Pow %1054 %1768))
  (let (%1057 (ReduceMean %1056 (vec -1) 1))
  (let (%1058 (Constant 9.999999960041972e-13))
  (let (%1059 (Add %1057 %1058))
  (let (%1060 (Sqrt %1059))
  (let (%1061 (Div %1053 %1060))
  (let (%1062 (Mul %1061 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1063 (Add %1062 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1065 (MatMul %1063 %1769))
  (let (%1066 (Add %1065 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1068 (MatMul %1063 %1770))
  (let (%1069 (Add %1068 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1071 (MatMul %1063 %1771))
  (let (%1072 (Add %1071 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1073 (Shape %1066))
  (let (%1074 (Constant 0))
  (let (%1075 (Gather %1073 %1074 0))
  (let (%1076 (Shape %1066))
  (let (%1077 (Constant 1))
  (let (%1078 (Gather %1076 %1077 0))
  (let (%1081 (Unsqueeze %1075 (vec 0)))
  (let (%1082 (Unsqueeze %1078 (vec 0)))
  (let (%1085 (Concat %1081 %1082 %1772 %1773 0))
  (let (%1086 (Reshape %1066 %1085))
  (let (%1087 (Transpose %1086 (vec 0 2 1 3)))
  (let (%1088 (Shape %1069))
  (let (%1089 (Constant 0))
  (let (%1090 (Gather %1088 %1089 0))
  (let (%1091 (Shape %1069))
  (let (%1092 (Constant 1))
  (let (%1093 (Gather %1091 %1092 0))
  (let (%1096 (Unsqueeze %1090 (vec 0)))
  (let (%1097 (Unsqueeze %1093 (vec 0)))
  (let (%1100 (Concat %1096 %1097 %1774 %1775 0))
  (let (%1101 (Reshape %1069 %1100))
  (let (%1102 (Shape %1072))
  (let (%1103 (Constant 0))
  (let (%1104 (Gather %1102 %1103 0))
  (let (%1105 (Shape %1072))
  (let (%1106 (Constant 1))
  (let (%1107 (Gather %1105 %1106 0))
  (let (%1110 (Unsqueeze %1104 (vec 0)))
  (let (%1111 (Unsqueeze %1107 (vec 0)))
  (let (%1114 (Concat %1110 %1111 %1776 %1777 0))
  (let (%1115 (Reshape %1072 %1114))
  (let (%1116 (Transpose %1115 (vec 0 2 1 3)))
  (let (%1117 (Transpose %1101 (vec 0 2 3 1)))
  (let (%1118 (MatMul %1087 %1117))
  (let (%1119 (Constant 8.0))
  (let (%1120 (Div %1118 %1119))
  (let (%1121 (Add %1120 %209))
  (let (%1122 (Softmax %1121 3))
  (let (%1123 (MatMul %1122 %1116))
  (let (%1124 (Transpose %1123 (vec 0 2 1 3)))
  (let (%1125 (Shape %1124))
  (let (%1126 (Constant 0))
  (let (%1127 (Gather %1125 %1126 0))
  (let (%1128 (Shape %1124))
  (let (%1129 (Constant 1))
  (let (%1130 (Gather %1128 %1129 0))
  (let (%1132 (Unsqueeze %1127 (vec 0)))
  (let (%1133 (Unsqueeze %1130 (vec 0)))
  (let (%1135 (Concat %1132 %1133 %1778 0))
  (let (%1136 (Reshape %1124 %1135))
  (let (%1138 (MatMul %1136 %1779))
  (let (%1139 (Add %1138 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1140 (Add %1139 %1063))
  (let (%1142 (ReduceMean %1140 (vec -1) 1))
  (let (%1143 (Sub %1140 %1142))
  (let (%1144 (Cast_FLOAT %1143))
  (let (%1146 (Pow %1144 %1780))
  (let (%1147 (ReduceMean %1146 (vec -1) 1))
  (let (%1148 (Constant 9.999999960041972e-13))
  (let (%1149 (Add %1147 %1148))
  (let (%1150 (Sqrt %1149))
  (let (%1151 (Div %1143 %1150))
  (let (%1152 (Mul %1151 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1153 (Add %1152 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1155 (MatMul %1153 %1781))
  (let (%1156 (Add %1155 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1157 (Constant 1.4142135381698608))
  (let (%1158 (Div %1156 %1157))
  (let (%1159 (Erf %1158))
  (let (%1160 (Constant 1.0))
  (let (%1161 (Add %1159 %1160))
  (let (%1162 (Mul %1156 %1161))
  (let (%1163 (Constant 0.5))
  (let (%1164 (Mul %1162 %1163))
  (let (%1166 (MatMul %1164 %1782))
  (let (%1167 (Add %1166 bert.encoder.layer.7.output.dense.bias))
  (let (%1168 (Add %1167 %1153))
  (let (%1170 (ReduceMean %1168 (vec -1) 1))
  (let (%1171 (Sub %1168 %1170))
  (let (%1172 (Cast_FLOAT %1171))
  (let (%1174 (Pow %1172 %1783))
  (let (%1175 (ReduceMean %1174 (vec -1) 1))
  (let (%1176 (Constant 9.999999960041972e-13))
  (let (%1177 (Add %1175 %1176))
  (let (%1178 (Sqrt %1177))
  (let (%1179 (Div %1171 %1178))
  (let (%1180 (Mul %1179 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1181 (Add %1180 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1183 (MatMul %1181 %1784))
  (let (%1184 (Add %1183 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1186 (MatMul %1181 %1785))
  (let (%1187 (Add %1186 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1189 (MatMul %1181 %1786))
  (let (%1190 (Add %1189 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1191 (Shape %1184))
  (let (%1192 (Constant 0))
  (let (%1193 (Gather %1191 %1192 0))
  (let (%1194 (Shape %1184))
  (let (%1195 (Constant 1))
  (let (%1196 (Gather %1194 %1195 0))
  (let (%1199 (Unsqueeze %1193 (vec 0)))
  (let (%1200 (Unsqueeze %1196 (vec 0)))
  (let (%1203 (Concat %1199 %1200 %1787 %1788 0))
  (let (%1204 (Reshape %1184 %1203))
  (let (%1205 (Transpose %1204 (vec 0 2 1 3)))
  (let (%1206 (Shape %1187))
  (let (%1207 (Constant 0))
  (let (%1208 (Gather %1206 %1207 0))
  (let (%1209 (Shape %1187))
  (let (%1210 (Constant 1))
  (let (%1211 (Gather %1209 %1210 0))
  (let (%1214 (Unsqueeze %1208 (vec 0)))
  (let (%1215 (Unsqueeze %1211 (vec 0)))
  (let (%1218 (Concat %1214 %1215 %1789 %1790 0))
  (let (%1219 (Reshape %1187 %1218))
  (let (%1220 (Shape %1190))
  (let (%1221 (Constant 0))
  (let (%1222 (Gather %1220 %1221 0))
  (let (%1223 (Shape %1190))
  (let (%1224 (Constant 1))
  (let (%1225 (Gather %1223 %1224 0))
  (let (%1228 (Unsqueeze %1222 (vec 0)))
  (let (%1229 (Unsqueeze %1225 (vec 0)))
  (let (%1232 (Concat %1228 %1229 %1791 %1792 0))
  (let (%1233 (Reshape %1190 %1232))
  (let (%1234 (Transpose %1233 (vec 0 2 1 3)))
  (let (%1235 (Transpose %1219 (vec 0 2 3 1)))
  (let (%1236 (MatMul %1205 %1235))
  (let (%1237 (Constant 8.0))
  (let (%1238 (Div %1236 %1237))
  (let (%1239 (Add %1238 %209))
  (let (%1240 (Softmax %1239 3))
  (let (%1241 (MatMul %1240 %1234))
  (let (%1242 (Transpose %1241 (vec 0 2 1 3)))
  (let (%1243 (Shape %1242))
  (let (%1244 (Constant 0))
  (let (%1245 (Gather %1243 %1244 0))
  (let (%1246 (Shape %1242))
  (let (%1247 (Constant 1))
  (let (%1248 (Gather %1246 %1247 0))
  (let (%1250 (Unsqueeze %1245 (vec 0)))
  (let (%1251 (Unsqueeze %1248 (vec 0)))
  (let (%1253 (Concat %1250 %1251 %1793 0))
  (let (%1254 (Reshape %1242 %1253))
  (let (%1256 (MatMul %1254 %1794))
  (let (%1257 (Add %1256 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1258 (Add %1257 %1181))
  (let (%1260 (ReduceMean %1258 (vec -1) 1))
  (let (%1261 (Sub %1258 %1260))
  (let (%1262 (Cast_FLOAT %1261))
  (let (%1264 (Pow %1262 %1795))
  (let (%1265 (ReduceMean %1264 (vec -1) 1))
  (let (%1266 (Constant 9.999999960041972e-13))
  (let (%1267 (Add %1265 %1266))
  (let (%1268 (Sqrt %1267))
  (let (%1269 (Div %1261 %1268))
  (let (%1270 (Mul %1269 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1271 (Add %1270 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1273 (MatMul %1271 %1796))
  (let (%1274 (Add %1273 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1275 (Constant 1.4142135381698608))
  (let (%1276 (Div %1274 %1275))
  (let (%1277 (Erf %1276))
  (let (%1278 (Constant 1.0))
  (let (%1279 (Add %1277 %1278))
  (let (%1280 (Mul %1274 %1279))
  (let (%1281 (Constant 0.5))
  (let (%1282 (Mul %1280 %1281))
  (let (%1284 (MatMul %1282 %1797))
  (let (%1285 (Add %1284 bert.encoder.layer.8.output.dense.bias))
  (let (%1286 (Add %1285 %1271))
  (let (%1288 (ReduceMean %1286 (vec -1) 1))
  (let (%1289 (Sub %1286 %1288))
  (let (%1290 (Cast_FLOAT %1289))
  (let (%1292 (Pow %1290 %1798))
  (let (%1293 (ReduceMean %1292 (vec -1) 1))
  (let (%1294 (Constant 9.999999960041972e-13))
  (let (%1295 (Add %1293 %1294))
  (let (%1296 (Sqrt %1295))
  (let (%1297 (Div %1289 %1296))
  (let (%1298 (Mul %1297 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1299 (Add %1298 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1301 (MatMul %1299 %1799))
  (let (%1302 (Add %1301 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1304 (MatMul %1299 %1800))
  (let (%1305 (Add %1304 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1307 (MatMul %1299 %1801))
  (let (%1308 (Add %1307 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1309 (Shape %1302))
  (let (%1310 (Constant 0))
  (let (%1311 (Gather %1309 %1310 0))
  (let (%1312 (Shape %1302))
  (let (%1313 (Constant 1))
  (let (%1314 (Gather %1312 %1313 0))
  (let (%1317 (Unsqueeze %1311 (vec 0)))
  (let (%1318 (Unsqueeze %1314 (vec 0)))
  (let (%1321 (Concat %1317 %1318 %1802 %1803 0))
  (let (%1322 (Reshape %1302 %1321))
  (let (%1323 (Transpose %1322 (vec 0 2 1 3)))
  (let (%1324 (Shape %1305))
  (let (%1325 (Constant 0))
  (let (%1326 (Gather %1324 %1325 0))
  (let (%1327 (Shape %1305))
  (let (%1328 (Constant 1))
  (let (%1329 (Gather %1327 %1328 0))
  (let (%1332 (Unsqueeze %1326 (vec 0)))
  (let (%1333 (Unsqueeze %1329 (vec 0)))
  (let (%1336 (Concat %1332 %1333 %1804 %1805 0))
  (let (%1337 (Reshape %1305 %1336))
  (let (%1338 (Shape %1308))
  (let (%1339 (Constant 0))
  (let (%1340 (Gather %1338 %1339 0))
  (let (%1341 (Shape %1308))
  (let (%1342 (Constant 1))
  (let (%1343 (Gather %1341 %1342 0))
  (let (%1346 (Unsqueeze %1340 (vec 0)))
  (let (%1347 (Unsqueeze %1343 (vec 0)))
  (let (%1350 (Concat %1346 %1347 %1806 %1807 0))
  (let (%1351 (Reshape %1308 %1350))
  (let (%1352 (Transpose %1351 (vec 0 2 1 3)))
  (let (%1353 (Transpose %1337 (vec 0 2 3 1)))
  (let (%1354 (MatMul %1323 %1353))
  (let (%1355 (Constant 8.0))
  (let (%1356 (Div %1354 %1355))
  (let (%1357 (Add %1356 %209))
  (let (%1358 (Softmax %1357 3))
  (let (%1359 (MatMul %1358 %1352))
  (let (%1360 (Transpose %1359 (vec 0 2 1 3)))
  (let (%1361 (Shape %1360))
  (let (%1362 (Constant 0))
  (let (%1363 (Gather %1361 %1362 0))
  (let (%1364 (Shape %1360))
  (let (%1365 (Constant 1))
  (let (%1366 (Gather %1364 %1365 0))
  (let (%1368 (Unsqueeze %1363 (vec 0)))
  (let (%1369 (Unsqueeze %1366 (vec 0)))
  (let (%1371 (Concat %1368 %1369 %1808 0))
  (let (%1372 (Reshape %1360 %1371))
  (let (%1374 (MatMul %1372 %1809))
  (let (%1375 (Add %1374 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1376 (Add %1375 %1299))
  (let (%1378 (ReduceMean %1376 (vec -1) 1))
  (let (%1379 (Sub %1376 %1378))
  (let (%1380 (Cast_FLOAT %1379))
  (let (%1382 (Pow %1380 %1810))
  (let (%1383 (ReduceMean %1382 (vec -1) 1))
  (let (%1384 (Constant 9.999999960041972e-13))
  (let (%1385 (Add %1383 %1384))
  (let (%1386 (Sqrt %1385))
  (let (%1387 (Div %1379 %1386))
  (let (%1388 (Mul %1387 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1389 (Add %1388 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1391 (MatMul %1389 %1811))
  (let (%1392 (Add %1391 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1393 (Constant 1.4142135381698608))
  (let (%1394 (Div %1392 %1393))
  (let (%1395 (Erf %1394))
  (let (%1396 (Constant 1.0))
  (let (%1397 (Add %1395 %1396))
  (let (%1398 (Mul %1392 %1397))
  (let (%1399 (Constant 0.5))
  (let (%1400 (Mul %1398 %1399))
  (let (%1402 (MatMul %1400 %1812))
  (let (%1403 (Add %1402 bert.encoder.layer.9.output.dense.bias))
  (let (%1404 (Add %1403 %1389))
  (let (%1406 (ReduceMean %1404 (vec -1) 1))
  (let (%1407 (Sub %1404 %1406))
  (let (%1408 (Cast_FLOAT %1407))
  (let (%1410 (Pow %1408 %1813))
  (let (%1411 (ReduceMean %1410 (vec -1) 1))
  (let (%1412 (Constant 9.999999960041972e-13))
  (let (%1413 (Add %1411 %1412))
  (let (%1414 (Sqrt %1413))
  (let (%1415 (Div %1407 %1414))
  (let (%1416 (Mul %1415 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1417 (Add %1416 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1419 (MatMul %1417 %1814))
  (let (%1420 (Add %1419 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1422 (MatMul %1417 %1815))
  (let (%1423 (Add %1422 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1425 (MatMul %1417 %1816))
  (let (%1426 (Add %1425 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1427 (Shape %1420))
  (let (%1428 (Constant 0))
  (let (%1429 (Gather %1427 %1428 0))
  (let (%1430 (Shape %1420))
  (let (%1431 (Constant 1))
  (let (%1432 (Gather %1430 %1431 0))
  (let (%1435 (Unsqueeze %1429 (vec 0)))
  (let (%1436 (Unsqueeze %1432 (vec 0)))
  (let (%1439 (Concat %1435 %1436 %1817 %1818 0))
  (let (%1440 (Reshape %1420 %1439))
  (let (%1441 (Transpose %1440 (vec 0 2 1 3)))
  (let (%1442 (Shape %1423))
  (let (%1443 (Constant 0))
  (let (%1444 (Gather %1442 %1443 0))
  (let (%1445 (Shape %1423))
  (let (%1446 (Constant 1))
  (let (%1447 (Gather %1445 %1446 0))
  (let (%1450 (Unsqueeze %1444 (vec 0)))
  (let (%1451 (Unsqueeze %1447 (vec 0)))
  (let (%1454 (Concat %1450 %1451 %1819 %1820 0))
  (let (%1455 (Reshape %1423 %1454))
  (let (%1456 (Shape %1426))
  (let (%1457 (Constant 0))
  (let (%1458 (Gather %1456 %1457 0))
  (let (%1459 (Shape %1426))
  (let (%1460 (Constant 1))
  (let (%1461 (Gather %1459 %1460 0))
  (let (%1464 (Unsqueeze %1458 (vec 0)))
  (let (%1465 (Unsqueeze %1461 (vec 0)))
  (let (%1468 (Concat %1464 %1465 %1821 %1822 0))
  (let (%1469 (Reshape %1426 %1468))
  (let (%1470 (Transpose %1469 (vec 0 2 1 3)))
  (let (%1471 (Transpose %1455 (vec 0 2 3 1)))
  (let (%1472 (MatMul %1441 %1471))
  (let (%1473 (Constant 8.0))
  (let (%1474 (Div %1472 %1473))
  (let (%1475 (Add %1474 %209))
  (let (%1476 (Softmax %1475 3))
  (let (%1477 (MatMul %1476 %1470))
  (let (%1478 (Transpose %1477 (vec 0 2 1 3)))
  (let (%1479 (Shape %1478))
  (let (%1480 (Constant 0))
  (let (%1481 (Gather %1479 %1480 0))
  (let (%1482 (Shape %1478))
  (let (%1483 (Constant 1))
  (let (%1484 (Gather %1482 %1483 0))
  (let (%1486 (Unsqueeze %1481 (vec 0)))
  (let (%1487 (Unsqueeze %1484 (vec 0)))
  (let (%1489 (Concat %1486 %1487 %1823 0))
  (let (%1490 (Reshape %1478 %1489))
  (let (%1492 (MatMul %1490 %1824))
  (let (%1493 (Add %1492 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1494 (Add %1493 %1417))
  (let (%1496 (ReduceMean %1494 (vec -1) 1))
  (let (%1497 (Sub %1494 %1496))
  (let (%1498 (Cast_FLOAT %1497))
  (let (%1500 (Pow %1498 %1825))
  (let (%1501 (ReduceMean %1500 (vec -1) 1))
  (let (%1502 (Constant 9.999999960041972e-13))
  (let (%1503 (Add %1501 %1502))
  (let (%1504 (Sqrt %1503))
  (let (%1505 (Div %1497 %1504))
  (let (%1506 (Mul %1505 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1507 (Add %1506 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1509 (MatMul %1507 %1826))
  (let (%1510 (Add %1509 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1511 (Constant 1.4142135381698608))
  (let (%1512 (Div %1510 %1511))
  (let (%1513 (Erf %1512))
  (let (%1514 (Constant 1.0))
  (let (%1515 (Add %1513 %1514))
  (let (%1516 (Mul %1510 %1515))
  (let (%1517 (Constant 0.5))
  (let (%1518 (Mul %1516 %1517))
  (let (%1520 (MatMul %1518 %1827))
  (let (%1521 (Add %1520 bert.encoder.layer.10.output.dense.bias))
  (let (%1522 (Add %1521 %1507))
  (let (%1524 (ReduceMean %1522 (vec -1) 1))
  (let (%1525 (Sub %1522 %1524))
  (let (%1526 (Cast_FLOAT %1525))
  (let (%1528 (Pow %1526 %1828))
  (let (%1529 (ReduceMean %1528 (vec -1) 1))
  (let (%1530 (Constant 9.999999960041972e-13))
  (let (%1531 (Add %1529 %1530))
  (let (%1532 (Sqrt %1531))
  (let (%1533 (Div %1525 %1532))
  (let (%1534 (Mul %1533 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1535 (Add %1534 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1537 (MatMul %1535 %1829))
  (let (%1538 (Add %1537 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1540 (MatMul %1535 %1830))
  (let (%1541 (Add %1540 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1543 (MatMul %1535 %1831))
  (let (%1544 (Add %1543 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1545 (Shape %1538))
  (let (%1546 (Constant 0))
  (let (%1547 (Gather %1545 %1546 0))
  (let (%1548 (Shape %1538))
  (let (%1549 (Constant 1))
  (let (%1550 (Gather %1548 %1549 0))
  (let (%1553 (Unsqueeze %1547 (vec 0)))
  (let (%1554 (Unsqueeze %1550 (vec 0)))
  (let (%1557 (Concat %1553 %1554 %1832 %1833 0))
  (let (%1558 (Reshape %1538 %1557))
  (let (%1559 (Transpose %1558 (vec 0 2 1 3)))
  (let (%1560 (Shape %1541))
  (let (%1561 (Constant 0))
  (let (%1562 (Gather %1560 %1561 0))
  (let (%1563 (Shape %1541))
  (let (%1564 (Constant 1))
  (let (%1565 (Gather %1563 %1564 0))
  (let (%1568 (Unsqueeze %1562 (vec 0)))
  (let (%1569 (Unsqueeze %1565 (vec 0)))
  (let (%1572 (Concat %1568 %1569 %1834 %1835 0))
  (let (%1573 (Reshape %1541 %1572))
  (let (%1574 (Shape %1544))
  (let (%1575 (Constant 0))
  (let (%1576 (Gather %1574 %1575 0))
  (let (%1577 (Shape %1544))
  (let (%1578 (Constant 1))
  (let (%1579 (Gather %1577 %1578 0))
  (let (%1582 (Unsqueeze %1576 (vec 0)))
  (let (%1583 (Unsqueeze %1579 (vec 0)))
  (let (%1586 (Concat %1582 %1583 %1836 %1837 0))
  (let (%1587 (Reshape %1544 %1586))
  (let (%1588 (Transpose %1587 (vec 0 2 1 3)))
  (let (%1589 (Transpose %1573 (vec 0 2 3 1)))
  (let (%1590 (MatMul %1559 %1589))
  (let (%1591 (Constant 8.0))
  (let (%1592 (Div %1590 %1591))
  (let (%1593 (Add %1592 %209))
  (let (%1594 (Softmax %1593 3))
  (let (%1595 (MatMul %1594 %1588))
  (let (%1596 (Transpose %1595 (vec 0 2 1 3)))
  (let (%1597 (Shape %1596))
  (let (%1598 (Constant 0))
  (let (%1599 (Gather %1597 %1598 0))
  (let (%1600 (Shape %1596))
  (let (%1601 (Constant 1))
  (let (%1602 (Gather %1600 %1601 0))
  (let (%1604 (Unsqueeze %1599 (vec 0)))
  (let (%1605 (Unsqueeze %1602 (vec 0)))
  (let (%1607 (Concat %1604 %1605 %1838 0))
  (let (%1608 (Reshape %1596 %1607))
  (let (%1610 (MatMul %1608 %1839))
  (let (%1611 (Add %1610 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1612 (Add %1611 %1535))
  (let (%1614 (ReduceMean %1612 (vec -1) 1))
  (let (%1615 (Sub %1612 %1614))
  (let (%1616 (Cast_FLOAT %1615))
  (let (%1618 (Pow %1616 %1840))
  (let (%1619 (ReduceMean %1618 (vec -1) 1))
  (let (%1620 (Constant 9.999999960041972e-13))
  (let (%1621 (Add %1619 %1620))
  (let (%1622 (Sqrt %1621))
  (let (%1623 (Div %1615 %1622))
  (let (%1624 (Mul %1623 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1625 (Add %1624 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1627 (MatMul %1625 %1841))
  (let (%1628 (Add %1627 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1629 (Constant 1.4142135381698608))
  (let (%1630 (Div %1628 %1629))
  (let (%1631 (Erf %1630))
  (let (%1632 (Constant 1.0))
  (let (%1633 (Add %1631 %1632))
  (let (%1634 (Mul %1628 %1633))
  (let (%1635 (Constant 0.5))
  (let (%1636 (Mul %1634 %1635))
  (let (%1638 (MatMul %1636 %1842))
  (let (%1639 (Add %1638 bert.encoder.layer.11.output.dense.bias))
  (let (%1640 (Add %1639 %1625))
  (let (%1642 (ReduceMean %1640 (vec -1) 1))
  (let (%1643 (Sub %1640 %1642))
  (let (%1644 (Cast_FLOAT %1643))
  (let (%1646 (Pow %1644 %1843))
  (let (%1647 (ReduceMean %1646 (vec -1) 1))
  (let (%1648 (Constant 9.999999960041972e-13))
  (let (%1649 (Add %1647 %1648))
  (let (%1650 (Sqrt %1649))
  (let (%1651 (Div %1643 %1650))
  (let (%1652 (Mul %1651 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1653 (Add %1652 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1655 (MatMul %1653 %1844))
  (let (%1656 (Add %1655 qa_outputs.bias))
  (let ((%1657 %1658) (Split %1656 (vec 1 1) -1))
  (let (output_0 (Squeeze %1657 (vec -1)))
  (let (output_1 (Squeeze %1658 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

