;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert6.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%857 (vec 0))
  (let (%858 (vec 1))
  (let (%859 2.0)
  (let (%860 (load-from-onnx-float32 768 768 "%860"))
  (let (%861 (load-from-onnx-float32 768 768 "%861"))
  (let (%862 (load-from-onnx-float32 768 768 "%862"))
  (let (%863 (vec 12))
  (let (%864 (vec 64))
  (let (%865 (vec 12))
  (let (%866 (vec 64))
  (let (%867 (vec 12))
  (let (%868 (vec 64))
  (let (%869 (vec 768))
  (let (%870 (load-from-onnx-float32 768 768 "%870"))
  (let (%871 2.0)
  (let (%872 (load-from-onnx-float32 768 3072 "%872"))
  (let (%873 (load-from-onnx-float32 3072 768 "%873"))
  (let (%874 2.0)
  (let (%875 (load-from-onnx-float32 768 768 "%875"))
  (let (%876 (load-from-onnx-float32 768 768 "%876"))
  (let (%877 (load-from-onnx-float32 768 768 "%877"))
  (let (%878 (vec 12))
  (let (%879 (vec 64))
  (let (%880 (vec 12))
  (let (%881 (vec 64))
  (let (%882 (vec 12))
  (let (%883 (vec 64))
  (let (%884 (vec 768))
  (let (%885 (load-from-onnx-float32 768 768 "%885"))
  (let (%886 2.0)
  (let (%887 (load-from-onnx-float32 768 3072 "%887"))
  (let (%888 (load-from-onnx-float32 3072 768 "%888"))
  (let (%889 2.0)
  (let (%890 (load-from-onnx-float32 768 768 "%890"))
  (let (%891 (load-from-onnx-float32 768 768 "%891"))
  (let (%892 (load-from-onnx-float32 768 768 "%892"))
  (let (%893 (vec 12))
  (let (%894 (vec 64))
  (let (%895 (vec 12))
  (let (%896 (vec 64))
  (let (%897 (vec 12))
  (let (%898 (vec 64))
  (let (%899 (vec 768))
  (let (%900 (load-from-onnx-float32 768 768 "%900"))
  (let (%901 2.0)
  (let (%902 (load-from-onnx-float32 768 3072 "%902"))
  (let (%903 (load-from-onnx-float32 3072 768 "%903"))
  (let (%904 2.0)
  (let (%905 (load-from-onnx-float32 768 768 "%905"))
  (let (%906 (load-from-onnx-float32 768 768 "%906"))
  (let (%907 (load-from-onnx-float32 768 768 "%907"))
  (let (%908 (vec 12))
  (let (%909 (vec 64))
  (let (%910 (vec 12))
  (let (%911 (vec 64))
  (let (%912 (vec 12))
  (let (%913 (vec 64))
  (let (%914 (vec 768))
  (let (%915 (load-from-onnx-float32 768 768 "%915"))
  (let (%916 2.0)
  (let (%917 (load-from-onnx-float32 768 3072 "%917"))
  (let (%918 (load-from-onnx-float32 3072 768 "%918"))
  (let (%919 2.0)
  (let (%920 (load-from-onnx-float32 768 768 "%920"))
  (let (%921 (load-from-onnx-float32 768 768 "%921"))
  (let (%922 (load-from-onnx-float32 768 768 "%922"))
  (let (%923 (vec 12))
  (let (%924 (vec 64))
  (let (%925 (vec 12))
  (let (%926 (vec 64))
  (let (%927 (vec 12))
  (let (%928 (vec 64))
  (let (%929 (vec 768))
  (let (%930 (load-from-onnx-float32 768 768 "%930"))
  (let (%931 2.0)
  (let (%932 (load-from-onnx-float32 768 3072 "%932"))
  (let (%933 (load-from-onnx-float32 3072 768 "%933"))
  (let (%934 2.0)
  (let (%935 (load-from-onnx-float32 768 768 "%935"))
  (let (%936 (load-from-onnx-float32 768 768 "%936"))
  (let (%937 (load-from-onnx-float32 768 768 "%937"))
  (let (%938 (vec 12))
  (let (%939 (vec 64))
  (let (%940 (vec 12))
  (let (%941 (vec 64))
  (let (%942 (vec 12))
  (let (%943 (vec 64))
  (let (%944 (vec 768))
  (let (%945 (load-from-onnx-float32 768 768 "%945"))
  (let (%946 2.0)
  (let (%947 (load-from-onnx-float32 768 3072 "%947"))
  (let (%948 (load-from-onnx-float32 3072 768 "%948"))
  (let (%949 2.0)
  (let (%950 (load-from-onnx-float32 768 2 "%950"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%107 (Unsqueeze attention_mask (vec 1)))
  (let (%108 (Unsqueeze %107 (vec 2)))
  (let (%109 (Cast_FLOAT %108))
  (let (%110 (Constant 1.0))
  (let (%111 (Sub %110 %109))
  (let (%112 (Constant -10000.0))
  (let (%113 (Mul %111 %112))
  (let (%114 (Shape input_ids))
  (let (%115 (Constant 1))
  (let (%116 (Gather %114 %115 0))
  (let (%120 (Unsqueeze %116 (vec 0)))
  (let (%122 (Constant (vec 1)))
  (let (%123 (Slice bert.embeddings.position_ids %857 %120 %858 %122))
  (let (%124 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%125 (Gather bert.embeddings.position_embeddings.weight %123 0))
  (let (%126 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%127 (Add %124 %125))
  (let (%128 (Add %127 %126))
  (let (%130 (ReduceMean %128 (vec -1) 1))
  (let (%131 (Sub %128 %130))
  (let (%132 (Cast_FLOAT %131))
  (let (%134 (Pow %132 %859))
  (let (%135 (ReduceMean %134 (vec -1) 1))
  (let (%136 (Constant 9.999999960041972e-13))
  (let (%137 (Add %135 %136))
  (let (%138 (Sqrt %137))
  (let (%139 (Div %131 %138))
  (let (%140 (Mul %139 bert.embeddings.LayerNorm.weight))
  (let (%141 (Add %140 bert.embeddings.LayerNorm.bias))
  (let (%143 (MatMul %141 %860))
  (let (%144 (Add %143 bert.encoder.layer.0.attention.self.query.bias))
  (let (%146 (MatMul %141 %861))
  (let (%147 (Add %146 bert.encoder.layer.0.attention.self.key.bias))
  (let (%149 (MatMul %141 %862))
  (let (%150 (Add %149 bert.encoder.layer.0.attention.self.value.bias))
  (let (%151 (Shape %144))
  (let (%152 (Constant 0))
  (let (%153 (Gather %151 %152 0))
  (let (%154 (Shape %144))
  (let (%155 (Constant 1))
  (let (%156 (Gather %154 %155 0))
  (let (%159 (Unsqueeze %153 (vec 0)))
  (let (%160 (Unsqueeze %156 (vec 0)))
  (let (%163 (Concat %159 %160 %863 %864 0))
  (let (%164 (Reshape %144 %163))
  (let (%165 (Transpose %164 (vec 0 2 1 3)))
  (let (%166 (Shape %147))
  (let (%167 (Constant 0))
  (let (%168 (Gather %166 %167 0))
  (let (%169 (Shape %147))
  (let (%170 (Constant 1))
  (let (%171 (Gather %169 %170 0))
  (let (%174 (Unsqueeze %168 (vec 0)))
  (let (%175 (Unsqueeze %171 (vec 0)))
  (let (%178 (Concat %174 %175 %865 %866 0))
  (let (%179 (Reshape %147 %178))
  (let (%180 (Shape %150))
  (let (%181 (Constant 0))
  (let (%182 (Gather %180 %181 0))
  (let (%183 (Shape %150))
  (let (%184 (Constant 1))
  (let (%185 (Gather %183 %184 0))
  (let (%188 (Unsqueeze %182 (vec 0)))
  (let (%189 (Unsqueeze %185 (vec 0)))
  (let (%192 (Concat %188 %189 %867 %868 0))
  (let (%193 (Reshape %150 %192))
  (let (%194 (Transpose %193 (vec 0 2 1 3)))
  (let (%195 (Transpose %179 (vec 0 2 3 1)))
  (let (%196 (MatMul %165 %195))
  (let (%197 (Constant 8.0))
  (let (%198 (Div %196 %197))
  (let (%199 (Add %198 %113))
  (let (%200 (Softmax %199 3))
  (let (%201 (MatMul %200 %194))
  (let (%202 (Transpose %201 (vec 0 2 1 3)))
  (let (%203 (Shape %202))
  (let (%204 (Constant 0))
  (let (%205 (Gather %203 %204 0))
  (let (%206 (Shape %202))
  (let (%207 (Constant 1))
  (let (%208 (Gather %206 %207 0))
  (let (%210 (Unsqueeze %205 (vec 0)))
  (let (%211 (Unsqueeze %208 (vec 0)))
  (let (%213 (Concat %210 %211 %869 0))
  (let (%214 (Reshape %202 %213))
  (let (%216 (MatMul %214 %870))
  (let (%217 (Add %216 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%218 (Add %217 %141))
  (let (%220 (ReduceMean %218 (vec -1) 1))
  (let (%221 (Sub %218 %220))
  (let (%222 (Cast_FLOAT %221))
  (let (%224 (Pow %222 %871))
  (let (%225 (ReduceMean %224 (vec -1) 1))
  (let (%226 (Constant 9.999999960041972e-13))
  (let (%227 (Add %225 %226))
  (let (%228 (Sqrt %227))
  (let (%229 (Div %221 %228))
  (let (%230 (Mul %229 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%231 (Add %230 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%233 (MatMul %231 %872))
  (let (%234 (Add %233 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%235 (Constant 1.4142135381698608))
  (let (%236 (Div %234 %235))
  (let (%237 (Erf %236))
  (let (%238 (Constant 1.0))
  (let (%239 (Add %237 %238))
  (let (%240 (Mul %234 %239))
  (let (%241 (Constant 0.5))
  (let (%242 (Mul %240 %241))
  (let (%244 (MatMul %242 %873))
  (let (%245 (Add %244 bert.encoder.layer.0.output.dense.bias))
  (let (%246 (Add %245 %231))
  (let (%248 (ReduceMean %246 (vec -1) 1))
  (let (%249 (Sub %246 %248))
  (let (%250 (Cast_FLOAT %249))
  (let (%252 (Pow %250 %874))
  (let (%253 (ReduceMean %252 (vec -1) 1))
  (let (%254 (Constant 9.999999960041972e-13))
  (let (%255 (Add %253 %254))
  (let (%256 (Sqrt %255))
  (let (%257 (Div %249 %256))
  (let (%258 (Mul %257 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%259 (Add %258 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%261 (MatMul %259 %875))
  (let (%262 (Add %261 bert.encoder.layer.1.attention.self.query.bias))
  (let (%264 (MatMul %259 %876))
  (let (%265 (Add %264 bert.encoder.layer.1.attention.self.key.bias))
  (let (%267 (MatMul %259 %877))
  (let (%268 (Add %267 bert.encoder.layer.1.attention.self.value.bias))
  (let (%269 (Shape %262))
  (let (%270 (Constant 0))
  (let (%271 (Gather %269 %270 0))
  (let (%272 (Shape %262))
  (let (%273 (Constant 1))
  (let (%274 (Gather %272 %273 0))
  (let (%277 (Unsqueeze %271 (vec 0)))
  (let (%278 (Unsqueeze %274 (vec 0)))
  (let (%281 (Concat %277 %278 %878 %879 0))
  (let (%282 (Reshape %262 %281))
  (let (%283 (Transpose %282 (vec 0 2 1 3)))
  (let (%284 (Shape %265))
  (let (%285 (Constant 0))
  (let (%286 (Gather %284 %285 0))
  (let (%287 (Shape %265))
  (let (%288 (Constant 1))
  (let (%289 (Gather %287 %288 0))
  (let (%292 (Unsqueeze %286 (vec 0)))
  (let (%293 (Unsqueeze %289 (vec 0)))
  (let (%296 (Concat %292 %293 %880 %881 0))
  (let (%297 (Reshape %265 %296))
  (let (%298 (Shape %268))
  (let (%299 (Constant 0))
  (let (%300 (Gather %298 %299 0))
  (let (%301 (Shape %268))
  (let (%302 (Constant 1))
  (let (%303 (Gather %301 %302 0))
  (let (%306 (Unsqueeze %300 (vec 0)))
  (let (%307 (Unsqueeze %303 (vec 0)))
  (let (%310 (Concat %306 %307 %882 %883 0))
  (let (%311 (Reshape %268 %310))
  (let (%312 (Transpose %311 (vec 0 2 1 3)))
  (let (%313 (Transpose %297 (vec 0 2 3 1)))
  (let (%314 (MatMul %283 %313))
  (let (%315 (Constant 8.0))
  (let (%316 (Div %314 %315))
  (let (%317 (Add %316 %113))
  (let (%318 (Softmax %317 3))
  (let (%319 (MatMul %318 %312))
  (let (%320 (Transpose %319 (vec 0 2 1 3)))
  (let (%321 (Shape %320))
  (let (%322 (Constant 0))
  (let (%323 (Gather %321 %322 0))
  (let (%324 (Shape %320))
  (let (%325 (Constant 1))
  (let (%326 (Gather %324 %325 0))
  (let (%328 (Unsqueeze %323 (vec 0)))
  (let (%329 (Unsqueeze %326 (vec 0)))
  (let (%331 (Concat %328 %329 %884 0))
  (let (%332 (Reshape %320 %331))
  (let (%334 (MatMul %332 %885))
  (let (%335 (Add %334 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%336 (Add %335 %259))
  (let (%338 (ReduceMean %336 (vec -1) 1))
  (let (%339 (Sub %336 %338))
  (let (%340 (Cast_FLOAT %339))
  (let (%342 (Pow %340 %886))
  (let (%343 (ReduceMean %342 (vec -1) 1))
  (let (%344 (Constant 9.999999960041972e-13))
  (let (%345 (Add %343 %344))
  (let (%346 (Sqrt %345))
  (let (%347 (Div %339 %346))
  (let (%348 (Mul %347 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%349 (Add %348 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%351 (MatMul %349 %887))
  (let (%352 (Add %351 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%353 (Constant 1.4142135381698608))
  (let (%354 (Div %352 %353))
  (let (%355 (Erf %354))
  (let (%356 (Constant 1.0))
  (let (%357 (Add %355 %356))
  (let (%358 (Mul %352 %357))
  (let (%359 (Constant 0.5))
  (let (%360 (Mul %358 %359))
  (let (%362 (MatMul %360 %888))
  (let (%363 (Add %362 bert.encoder.layer.1.output.dense.bias))
  (let (%364 (Add %363 %349))
  (let (%366 (ReduceMean %364 (vec -1) 1))
  (let (%367 (Sub %364 %366))
  (let (%368 (Cast_FLOAT %367))
  (let (%370 (Pow %368 %889))
  (let (%371 (ReduceMean %370 (vec -1) 1))
  (let (%372 (Constant 9.999999960041972e-13))
  (let (%373 (Add %371 %372))
  (let (%374 (Sqrt %373))
  (let (%375 (Div %367 %374))
  (let (%376 (Mul %375 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%377 (Add %376 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%379 (MatMul %377 %890))
  (let (%380 (Add %379 bert.encoder.layer.2.attention.self.query.bias))
  (let (%382 (MatMul %377 %891))
  (let (%383 (Add %382 bert.encoder.layer.2.attention.self.key.bias))
  (let (%385 (MatMul %377 %892))
  (let (%386 (Add %385 bert.encoder.layer.2.attention.self.value.bias))
  (let (%387 (Shape %380))
  (let (%388 (Constant 0))
  (let (%389 (Gather %387 %388 0))
  (let (%390 (Shape %380))
  (let (%391 (Constant 1))
  (let (%392 (Gather %390 %391 0))
  (let (%395 (Unsqueeze %389 (vec 0)))
  (let (%396 (Unsqueeze %392 (vec 0)))
  (let (%399 (Concat %395 %396 %893 %894 0))
  (let (%400 (Reshape %380 %399))
  (let (%401 (Transpose %400 (vec 0 2 1 3)))
  (let (%402 (Shape %383))
  (let (%403 (Constant 0))
  (let (%404 (Gather %402 %403 0))
  (let (%405 (Shape %383))
  (let (%406 (Constant 1))
  (let (%407 (Gather %405 %406 0))
  (let (%410 (Unsqueeze %404 (vec 0)))
  (let (%411 (Unsqueeze %407 (vec 0)))
  (let (%414 (Concat %410 %411 %895 %896 0))
  (let (%415 (Reshape %383 %414))
  (let (%416 (Shape %386))
  (let (%417 (Constant 0))
  (let (%418 (Gather %416 %417 0))
  (let (%419 (Shape %386))
  (let (%420 (Constant 1))
  (let (%421 (Gather %419 %420 0))
  (let (%424 (Unsqueeze %418 (vec 0)))
  (let (%425 (Unsqueeze %421 (vec 0)))
  (let (%428 (Concat %424 %425 %897 %898 0))
  (let (%429 (Reshape %386 %428))
  (let (%430 (Transpose %429 (vec 0 2 1 3)))
  (let (%431 (Transpose %415 (vec 0 2 3 1)))
  (let (%432 (MatMul %401 %431))
  (let (%433 (Constant 8.0))
  (let (%434 (Div %432 %433))
  (let (%435 (Add %434 %113))
  (let (%436 (Softmax %435 3))
  (let (%437 (MatMul %436 %430))
  (let (%438 (Transpose %437 (vec 0 2 1 3)))
  (let (%439 (Shape %438))
  (let (%440 (Constant 0))
  (let (%441 (Gather %439 %440 0))
  (let (%442 (Shape %438))
  (let (%443 (Constant 1))
  (let (%444 (Gather %442 %443 0))
  (let (%446 (Unsqueeze %441 (vec 0)))
  (let (%447 (Unsqueeze %444 (vec 0)))
  (let (%449 (Concat %446 %447 %899 0))
  (let (%450 (Reshape %438 %449))
  (let (%452 (MatMul %450 %900))
  (let (%453 (Add %452 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%454 (Add %453 %377))
  (let (%456 (ReduceMean %454 (vec -1) 1))
  (let (%457 (Sub %454 %456))
  (let (%458 (Cast_FLOAT %457))
  (let (%460 (Pow %458 %901))
  (let (%461 (ReduceMean %460 (vec -1) 1))
  (let (%462 (Constant 9.999999960041972e-13))
  (let (%463 (Add %461 %462))
  (let (%464 (Sqrt %463))
  (let (%465 (Div %457 %464))
  (let (%466 (Mul %465 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%467 (Add %466 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%469 (MatMul %467 %902))
  (let (%470 (Add %469 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%471 (Constant 1.4142135381698608))
  (let (%472 (Div %470 %471))
  (let (%473 (Erf %472))
  (let (%474 (Constant 1.0))
  (let (%475 (Add %473 %474))
  (let (%476 (Mul %470 %475))
  (let (%477 (Constant 0.5))
  (let (%478 (Mul %476 %477))
  (let (%480 (MatMul %478 %903))
  (let (%481 (Add %480 bert.encoder.layer.2.output.dense.bias))
  (let (%482 (Add %481 %467))
  (let (%484 (ReduceMean %482 (vec -1) 1))
  (let (%485 (Sub %482 %484))
  (let (%486 (Cast_FLOAT %485))
  (let (%488 (Pow %486 %904))
  (let (%489 (ReduceMean %488 (vec -1) 1))
  (let (%490 (Constant 9.999999960041972e-13))
  (let (%491 (Add %489 %490))
  (let (%492 (Sqrt %491))
  (let (%493 (Div %485 %492))
  (let (%494 (Mul %493 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%495 (Add %494 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%497 (MatMul %495 %905))
  (let (%498 (Add %497 bert.encoder.layer.3.attention.self.query.bias))
  (let (%500 (MatMul %495 %906))
  (let (%501 (Add %500 bert.encoder.layer.3.attention.self.key.bias))
  (let (%503 (MatMul %495 %907))
  (let (%504 (Add %503 bert.encoder.layer.3.attention.self.value.bias))
  (let (%505 (Shape %498))
  (let (%506 (Constant 0))
  (let (%507 (Gather %505 %506 0))
  (let (%508 (Shape %498))
  (let (%509 (Constant 1))
  (let (%510 (Gather %508 %509 0))
  (let (%513 (Unsqueeze %507 (vec 0)))
  (let (%514 (Unsqueeze %510 (vec 0)))
  (let (%517 (Concat %513 %514 %908 %909 0))
  (let (%518 (Reshape %498 %517))
  (let (%519 (Transpose %518 (vec 0 2 1 3)))
  (let (%520 (Shape %501))
  (let (%521 (Constant 0))
  (let (%522 (Gather %520 %521 0))
  (let (%523 (Shape %501))
  (let (%524 (Constant 1))
  (let (%525 (Gather %523 %524 0))
  (let (%528 (Unsqueeze %522 (vec 0)))
  (let (%529 (Unsqueeze %525 (vec 0)))
  (let (%532 (Concat %528 %529 %910 %911 0))
  (let (%533 (Reshape %501 %532))
  (let (%534 (Shape %504))
  (let (%535 (Constant 0))
  (let (%536 (Gather %534 %535 0))
  (let (%537 (Shape %504))
  (let (%538 (Constant 1))
  (let (%539 (Gather %537 %538 0))
  (let (%542 (Unsqueeze %536 (vec 0)))
  (let (%543 (Unsqueeze %539 (vec 0)))
  (let (%546 (Concat %542 %543 %912 %913 0))
  (let (%547 (Reshape %504 %546))
  (let (%548 (Transpose %547 (vec 0 2 1 3)))
  (let (%549 (Transpose %533 (vec 0 2 3 1)))
  (let (%550 (MatMul %519 %549))
  (let (%551 (Constant 8.0))
  (let (%552 (Div %550 %551))
  (let (%553 (Add %552 %113))
  (let (%554 (Softmax %553 3))
  (let (%555 (MatMul %554 %548))
  (let (%556 (Transpose %555 (vec 0 2 1 3)))
  (let (%557 (Shape %556))
  (let (%558 (Constant 0))
  (let (%559 (Gather %557 %558 0))
  (let (%560 (Shape %556))
  (let (%561 (Constant 1))
  (let (%562 (Gather %560 %561 0))
  (let (%564 (Unsqueeze %559 (vec 0)))
  (let (%565 (Unsqueeze %562 (vec 0)))
  (let (%567 (Concat %564 %565 %914 0))
  (let (%568 (Reshape %556 %567))
  (let (%570 (MatMul %568 %915))
  (let (%571 (Add %570 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%572 (Add %571 %495))
  (let (%574 (ReduceMean %572 (vec -1) 1))
  (let (%575 (Sub %572 %574))
  (let (%576 (Cast_FLOAT %575))
  (let (%578 (Pow %576 %916))
  (let (%579 (ReduceMean %578 (vec -1) 1))
  (let (%580 (Constant 9.999999960041972e-13))
  (let (%581 (Add %579 %580))
  (let (%582 (Sqrt %581))
  (let (%583 (Div %575 %582))
  (let (%584 (Mul %583 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%585 (Add %584 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%587 (MatMul %585 %917))
  (let (%588 (Add %587 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%589 (Constant 1.4142135381698608))
  (let (%590 (Div %588 %589))
  (let (%591 (Erf %590))
  (let (%592 (Constant 1.0))
  (let (%593 (Add %591 %592))
  (let (%594 (Mul %588 %593))
  (let (%595 (Constant 0.5))
  (let (%596 (Mul %594 %595))
  (let (%598 (MatMul %596 %918))
  (let (%599 (Add %598 bert.encoder.layer.3.output.dense.bias))
  (let (%600 (Add %599 %585))
  (let (%602 (ReduceMean %600 (vec -1) 1))
  (let (%603 (Sub %600 %602))
  (let (%604 (Cast_FLOAT %603))
  (let (%606 (Pow %604 %919))
  (let (%607 (ReduceMean %606 (vec -1) 1))
  (let (%608 (Constant 9.999999960041972e-13))
  (let (%609 (Add %607 %608))
  (let (%610 (Sqrt %609))
  (let (%611 (Div %603 %610))
  (let (%612 (Mul %611 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%613 (Add %612 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%615 (MatMul %613 %920))
  (let (%616 (Add %615 bert.encoder.layer.4.attention.self.query.bias))
  (let (%618 (MatMul %613 %921))
  (let (%619 (Add %618 bert.encoder.layer.4.attention.self.key.bias))
  (let (%621 (MatMul %613 %922))
  (let (%622 (Add %621 bert.encoder.layer.4.attention.self.value.bias))
  (let (%623 (Shape %616))
  (let (%624 (Constant 0))
  (let (%625 (Gather %623 %624 0))
  (let (%626 (Shape %616))
  (let (%627 (Constant 1))
  (let (%628 (Gather %626 %627 0))
  (let (%631 (Unsqueeze %625 (vec 0)))
  (let (%632 (Unsqueeze %628 (vec 0)))
  (let (%635 (Concat %631 %632 %923 %924 0))
  (let (%636 (Reshape %616 %635))
  (let (%637 (Transpose %636 (vec 0 2 1 3)))
  (let (%638 (Shape %619))
  (let (%639 (Constant 0))
  (let (%640 (Gather %638 %639 0))
  (let (%641 (Shape %619))
  (let (%642 (Constant 1))
  (let (%643 (Gather %641 %642 0))
  (let (%646 (Unsqueeze %640 (vec 0)))
  (let (%647 (Unsqueeze %643 (vec 0)))
  (let (%650 (Concat %646 %647 %925 %926 0))
  (let (%651 (Reshape %619 %650))
  (let (%652 (Shape %622))
  (let (%653 (Constant 0))
  (let (%654 (Gather %652 %653 0))
  (let (%655 (Shape %622))
  (let (%656 (Constant 1))
  (let (%657 (Gather %655 %656 0))
  (let (%660 (Unsqueeze %654 (vec 0)))
  (let (%661 (Unsqueeze %657 (vec 0)))
  (let (%664 (Concat %660 %661 %927 %928 0))
  (let (%665 (Reshape %622 %664))
  (let (%666 (Transpose %665 (vec 0 2 1 3)))
  (let (%667 (Transpose %651 (vec 0 2 3 1)))
  (let (%668 (MatMul %637 %667))
  (let (%669 (Constant 8.0))
  (let (%670 (Div %668 %669))
  (let (%671 (Add %670 %113))
  (let (%672 (Softmax %671 3))
  (let (%673 (MatMul %672 %666))
  (let (%674 (Transpose %673 (vec 0 2 1 3)))
  (let (%675 (Shape %674))
  (let (%676 (Constant 0))
  (let (%677 (Gather %675 %676 0))
  (let (%678 (Shape %674))
  (let (%679 (Constant 1))
  (let (%680 (Gather %678 %679 0))
  (let (%682 (Unsqueeze %677 (vec 0)))
  (let (%683 (Unsqueeze %680 (vec 0)))
  (let (%685 (Concat %682 %683 %929 0))
  (let (%686 (Reshape %674 %685))
  (let (%688 (MatMul %686 %930))
  (let (%689 (Add %688 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%690 (Add %689 %613))
  (let (%692 (ReduceMean %690 (vec -1) 1))
  (let (%693 (Sub %690 %692))
  (let (%694 (Cast_FLOAT %693))
  (let (%696 (Pow %694 %931))
  (let (%697 (ReduceMean %696 (vec -1) 1))
  (let (%698 (Constant 9.999999960041972e-13))
  (let (%699 (Add %697 %698))
  (let (%700 (Sqrt %699))
  (let (%701 (Div %693 %700))
  (let (%702 (Mul %701 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%703 (Add %702 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%705 (MatMul %703 %932))
  (let (%706 (Add %705 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%707 (Constant 1.4142135381698608))
  (let (%708 (Div %706 %707))
  (let (%709 (Erf %708))
  (let (%710 (Constant 1.0))
  (let (%711 (Add %709 %710))
  (let (%712 (Mul %706 %711))
  (let (%713 (Constant 0.5))
  (let (%714 (Mul %712 %713))
  (let (%716 (MatMul %714 %933))
  (let (%717 (Add %716 bert.encoder.layer.4.output.dense.bias))
  (let (%718 (Add %717 %703))
  (let (%720 (ReduceMean %718 (vec -1) 1))
  (let (%721 (Sub %718 %720))
  (let (%722 (Cast_FLOAT %721))
  (let (%724 (Pow %722 %934))
  (let (%725 (ReduceMean %724 (vec -1) 1))
  (let (%726 (Constant 9.999999960041972e-13))
  (let (%727 (Add %725 %726))
  (let (%728 (Sqrt %727))
  (let (%729 (Div %721 %728))
  (let (%730 (Mul %729 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%731 (Add %730 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%733 (MatMul %731 %935))
  (let (%734 (Add %733 bert.encoder.layer.5.attention.self.query.bias))
  (let (%736 (MatMul %731 %936))
  (let (%737 (Add %736 bert.encoder.layer.5.attention.self.key.bias))
  (let (%739 (MatMul %731 %937))
  (let (%740 (Add %739 bert.encoder.layer.5.attention.self.value.bias))
  (let (%741 (Shape %734))
  (let (%742 (Constant 0))
  (let (%743 (Gather %741 %742 0))
  (let (%744 (Shape %734))
  (let (%745 (Constant 1))
  (let (%746 (Gather %744 %745 0))
  (let (%749 (Unsqueeze %743 (vec 0)))
  (let (%750 (Unsqueeze %746 (vec 0)))
  (let (%753 (Concat %749 %750 %938 %939 0))
  (let (%754 (Reshape %734 %753))
  (let (%755 (Transpose %754 (vec 0 2 1 3)))
  (let (%756 (Shape %737))
  (let (%757 (Constant 0))
  (let (%758 (Gather %756 %757 0))
  (let (%759 (Shape %737))
  (let (%760 (Constant 1))
  (let (%761 (Gather %759 %760 0))
  (let (%764 (Unsqueeze %758 (vec 0)))
  (let (%765 (Unsqueeze %761 (vec 0)))
  (let (%768 (Concat %764 %765 %940 %941 0))
  (let (%769 (Reshape %737 %768))
  (let (%770 (Shape %740))
  (let (%771 (Constant 0))
  (let (%772 (Gather %770 %771 0))
  (let (%773 (Shape %740))
  (let (%774 (Constant 1))
  (let (%775 (Gather %773 %774 0))
  (let (%778 (Unsqueeze %772 (vec 0)))
  (let (%779 (Unsqueeze %775 (vec 0)))
  (let (%782 (Concat %778 %779 %942 %943 0))
  (let (%783 (Reshape %740 %782))
  (let (%784 (Transpose %783 (vec 0 2 1 3)))
  (let (%785 (Transpose %769 (vec 0 2 3 1)))
  (let (%786 (MatMul %755 %785))
  (let (%787 (Constant 8.0))
  (let (%788 (Div %786 %787))
  (let (%789 (Add %788 %113))
  (let (%790 (Softmax %789 3))
  (let (%791 (MatMul %790 %784))
  (let (%792 (Transpose %791 (vec 0 2 1 3)))
  (let (%793 (Shape %792))
  (let (%794 (Constant 0))
  (let (%795 (Gather %793 %794 0))
  (let (%796 (Shape %792))
  (let (%797 (Constant 1))
  (let (%798 (Gather %796 %797 0))
  (let (%800 (Unsqueeze %795 (vec 0)))
  (let (%801 (Unsqueeze %798 (vec 0)))
  (let (%803 (Concat %800 %801 %944 0))
  (let (%804 (Reshape %792 %803))
  (let (%806 (MatMul %804 %945))
  (let (%807 (Add %806 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%808 (Add %807 %731))
  (let (%810 (ReduceMean %808 (vec -1) 1))
  (let (%811 (Sub %808 %810))
  (let (%812 (Cast_FLOAT %811))
  (let (%814 (Pow %812 %946))
  (let (%815 (ReduceMean %814 (vec -1) 1))
  (let (%816 (Constant 9.999999960041972e-13))
  (let (%817 (Add %815 %816))
  (let (%818 (Sqrt %817))
  (let (%819 (Div %811 %818))
  (let (%820 (Mul %819 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%821 (Add %820 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%823 (MatMul %821 %947))
  (let (%824 (Add %823 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%825 (Constant 1.4142135381698608))
  (let (%826 (Div %824 %825))
  (let (%827 (Erf %826))
  (let (%828 (Constant 1.0))
  (let (%829 (Add %827 %828))
  (let (%830 (Mul %824 %829))
  (let (%831 (Constant 0.5))
  (let (%832 (Mul %830 %831))
  (let (%834 (MatMul %832 %948))
  (let (%835 (Add %834 bert.encoder.layer.5.output.dense.bias))
  (let (%836 (Add %835 %821))
  (let (%838 (ReduceMean %836 (vec -1) 1))
  (let (%839 (Sub %836 %838))
  (let (%840 (Cast_FLOAT %839))
  (let (%842 (Pow %840 %949))
  (let (%843 (ReduceMean %842 (vec -1) 1))
  (let (%844 (Constant 9.999999960041972e-13))
  (let (%845 (Add %843 %844))
  (let (%846 (Sqrt %845))
  (let (%847 (Div %839 %846))
  (let (%848 (Mul %847 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%849 (Add %848 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%851 (MatMul %849 %950))
  (let (%852 (Add %851 qa_outputs.bias))
  (let ((%853 %854) (Split %852 (vec 1 1) -1))
  (let (output_0 (Squeeze %853 (vec -1)))
  (let (output_1 (Squeeze %854 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

