;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert15.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2063 (vec 0))
  (let (%2064 (vec 1))
  (let (%2065 2.0)
  (let (%2066 (load-from-onnx-float32 768 768 "%2066"))
  (let (%2067 (load-from-onnx-float32 768 768 "%2067"))
  (let (%2068 (load-from-onnx-float32 768 768 "%2068"))
  (let (%2069 (vec 12))
  (let (%2070 (vec 64))
  (let (%2071 (vec 12))
  (let (%2072 (vec 64))
  (let (%2073 (vec 12))
  (let (%2074 (vec 64))
  (let (%2075 (vec 768))
  (let (%2076 (load-from-onnx-float32 768 768 "%2076"))
  (let (%2077 2.0)
  (let (%2078 (load-from-onnx-float32 768 3072 "%2078"))
  (let (%2079 (load-from-onnx-float32 3072 768 "%2079"))
  (let (%2080 2.0)
  (let (%2081 (load-from-onnx-float32 768 768 "%2081"))
  (let (%2082 (load-from-onnx-float32 768 768 "%2082"))
  (let (%2083 (load-from-onnx-float32 768 768 "%2083"))
  (let (%2084 (vec 12))
  (let (%2085 (vec 64))
  (let (%2086 (vec 12))
  (let (%2087 (vec 64))
  (let (%2088 (vec 12))
  (let (%2089 (vec 64))
  (let (%2090 (vec 768))
  (let (%2091 (load-from-onnx-float32 768 768 "%2091"))
  (let (%2092 2.0)
  (let (%2093 (load-from-onnx-float32 768 3072 "%2093"))
  (let (%2094 (load-from-onnx-float32 3072 768 "%2094"))
  (let (%2095 2.0)
  (let (%2096 (load-from-onnx-float32 768 768 "%2096"))
  (let (%2097 (load-from-onnx-float32 768 768 "%2097"))
  (let (%2098 (load-from-onnx-float32 768 768 "%2098"))
  (let (%2099 (vec 12))
  (let (%2100 (vec 64))
  (let (%2101 (vec 12))
  (let (%2102 (vec 64))
  (let (%2103 (vec 12))
  (let (%2104 (vec 64))
  (let (%2105 (vec 768))
  (let (%2106 (load-from-onnx-float32 768 768 "%2106"))
  (let (%2107 2.0)
  (let (%2108 (load-from-onnx-float32 768 3072 "%2108"))
  (let (%2109 (load-from-onnx-float32 3072 768 "%2109"))
  (let (%2110 2.0)
  (let (%2111 (load-from-onnx-float32 768 768 "%2111"))
  (let (%2112 (load-from-onnx-float32 768 768 "%2112"))
  (let (%2113 (load-from-onnx-float32 768 768 "%2113"))
  (let (%2114 (vec 12))
  (let (%2115 (vec 64))
  (let (%2116 (vec 12))
  (let (%2117 (vec 64))
  (let (%2118 (vec 12))
  (let (%2119 (vec 64))
  (let (%2120 (vec 768))
  (let (%2121 (load-from-onnx-float32 768 768 "%2121"))
  (let (%2122 2.0)
  (let (%2123 (load-from-onnx-float32 768 3072 "%2123"))
  (let (%2124 (load-from-onnx-float32 3072 768 "%2124"))
  (let (%2125 2.0)
  (let (%2126 (load-from-onnx-float32 768 768 "%2126"))
  (let (%2127 (load-from-onnx-float32 768 768 "%2127"))
  (let (%2128 (load-from-onnx-float32 768 768 "%2128"))
  (let (%2129 (vec 12))
  (let (%2130 (vec 64))
  (let (%2131 (vec 12))
  (let (%2132 (vec 64))
  (let (%2133 (vec 12))
  (let (%2134 (vec 64))
  (let (%2135 (vec 768))
  (let (%2136 (load-from-onnx-float32 768 768 "%2136"))
  (let (%2137 2.0)
  (let (%2138 (load-from-onnx-float32 768 3072 "%2138"))
  (let (%2139 (load-from-onnx-float32 3072 768 "%2139"))
  (let (%2140 2.0)
  (let (%2141 (load-from-onnx-float32 768 768 "%2141"))
  (let (%2142 (load-from-onnx-float32 768 768 "%2142"))
  (let (%2143 (load-from-onnx-float32 768 768 "%2143"))
  (let (%2144 (vec 12))
  (let (%2145 (vec 64))
  (let (%2146 (vec 12))
  (let (%2147 (vec 64))
  (let (%2148 (vec 12))
  (let (%2149 (vec 64))
  (let (%2150 (vec 768))
  (let (%2151 (load-from-onnx-float32 768 768 "%2151"))
  (let (%2152 2.0)
  (let (%2153 (load-from-onnx-float32 768 3072 "%2153"))
  (let (%2154 (load-from-onnx-float32 3072 768 "%2154"))
  (let (%2155 2.0)
  (let (%2156 (load-from-onnx-float32 768 768 "%2156"))
  (let (%2157 (load-from-onnx-float32 768 768 "%2157"))
  (let (%2158 (load-from-onnx-float32 768 768 "%2158"))
  (let (%2159 (vec 12))
  (let (%2160 (vec 64))
  (let (%2161 (vec 12))
  (let (%2162 (vec 64))
  (let (%2163 (vec 12))
  (let (%2164 (vec 64))
  (let (%2165 (vec 768))
  (let (%2166 (load-from-onnx-float32 768 768 "%2166"))
  (let (%2167 2.0)
  (let (%2168 (load-from-onnx-float32 768 3072 "%2168"))
  (let (%2169 (load-from-onnx-float32 3072 768 "%2169"))
  (let (%2170 2.0)
  (let (%2171 (load-from-onnx-float32 768 768 "%2171"))
  (let (%2172 (load-from-onnx-float32 768 768 "%2172"))
  (let (%2173 (load-from-onnx-float32 768 768 "%2173"))
  (let (%2174 (vec 12))
  (let (%2175 (vec 64))
  (let (%2176 (vec 12))
  (let (%2177 (vec 64))
  (let (%2178 (vec 12))
  (let (%2179 (vec 64))
  (let (%2180 (vec 768))
  (let (%2181 (load-from-onnx-float32 768 768 "%2181"))
  (let (%2182 2.0)
  (let (%2183 (load-from-onnx-float32 768 3072 "%2183"))
  (let (%2184 (load-from-onnx-float32 3072 768 "%2184"))
  (let (%2185 2.0)
  (let (%2186 (load-from-onnx-float32 768 768 "%2186"))
  (let (%2187 (load-from-onnx-float32 768 768 "%2187"))
  (let (%2188 (load-from-onnx-float32 768 768 "%2188"))
  (let (%2189 (vec 12))
  (let (%2190 (vec 64))
  (let (%2191 (vec 12))
  (let (%2192 (vec 64))
  (let (%2193 (vec 12))
  (let (%2194 (vec 64))
  (let (%2195 (vec 768))
  (let (%2196 (load-from-onnx-float32 768 768 "%2196"))
  (let (%2197 2.0)
  (let (%2198 (load-from-onnx-float32 768 3072 "%2198"))
  (let (%2199 (load-from-onnx-float32 3072 768 "%2199"))
  (let (%2200 2.0)
  (let (%2201 (load-from-onnx-float32 768 768 "%2201"))
  (let (%2202 (load-from-onnx-float32 768 768 "%2202"))
  (let (%2203 (load-from-onnx-float32 768 768 "%2203"))
  (let (%2204 (vec 12))
  (let (%2205 (vec 64))
  (let (%2206 (vec 12))
  (let (%2207 (vec 64))
  (let (%2208 (vec 12))
  (let (%2209 (vec 64))
  (let (%2210 (vec 768))
  (let (%2211 (load-from-onnx-float32 768 768 "%2211"))
  (let (%2212 2.0)
  (let (%2213 (load-from-onnx-float32 768 3072 "%2213"))
  (let (%2214 (load-from-onnx-float32 3072 768 "%2214"))
  (let (%2215 2.0)
  (let (%2216 (load-from-onnx-float32 768 768 "%2216"))
  (let (%2217 (load-from-onnx-float32 768 768 "%2217"))
  (let (%2218 (load-from-onnx-float32 768 768 "%2218"))
  (let (%2219 (vec 12))
  (let (%2220 (vec 64))
  (let (%2221 (vec 12))
  (let (%2222 (vec 64))
  (let (%2223 (vec 12))
  (let (%2224 (vec 64))
  (let (%2225 (vec 768))
  (let (%2226 (load-from-onnx-float32 768 768 "%2226"))
  (let (%2227 2.0)
  (let (%2228 (load-from-onnx-float32 768 3072 "%2228"))
  (let (%2229 (load-from-onnx-float32 3072 768 "%2229"))
  (let (%2230 2.0)
  (let (%2231 (load-from-onnx-float32 768 768 "%2231"))
  (let (%2232 (load-from-onnx-float32 768 768 "%2232"))
  (let (%2233 (load-from-onnx-float32 768 768 "%2233"))
  (let (%2234 (vec 12))
  (let (%2235 (vec 64))
  (let (%2236 (vec 12))
  (let (%2237 (vec 64))
  (let (%2238 (vec 12))
  (let (%2239 (vec 64))
  (let (%2240 (vec 768))
  (let (%2241 (load-from-onnx-float32 768 768 "%2241"))
  (let (%2242 2.0)
  (let (%2243 (load-from-onnx-float32 768 3072 "%2243"))
  (let (%2244 (load-from-onnx-float32 3072 768 "%2244"))
  (let (%2245 2.0)
  (let (%2246 (load-from-onnx-float32 768 768 "%2246"))
  (let (%2247 (load-from-onnx-float32 768 768 "%2247"))
  (let (%2248 (load-from-onnx-float32 768 768 "%2248"))
  (let (%2249 (vec 12))
  (let (%2250 (vec 64))
  (let (%2251 (vec 12))
  (let (%2252 (vec 64))
  (let (%2253 (vec 12))
  (let (%2254 (vec 64))
  (let (%2255 (vec 768))
  (let (%2256 (load-from-onnx-float32 768 768 "%2256"))
  (let (%2257 2.0)
  (let (%2258 (load-from-onnx-float32 768 3072 "%2258"))
  (let (%2259 (load-from-onnx-float32 3072 768 "%2259"))
  (let (%2260 2.0)
  (let (%2261 (load-from-onnx-float32 768 768 "%2261"))
  (let (%2262 (load-from-onnx-float32 768 768 "%2262"))
  (let (%2263 (load-from-onnx-float32 768 768 "%2263"))
  (let (%2264 (vec 12))
  (let (%2265 (vec 64))
  (let (%2266 (vec 12))
  (let (%2267 (vec 64))
  (let (%2268 (vec 12))
  (let (%2269 (vec 64))
  (let (%2270 (vec 768))
  (let (%2271 (load-from-onnx-float32 768 768 "%2271"))
  (let (%2272 2.0)
  (let (%2273 (load-from-onnx-float32 768 3072 "%2273"))
  (let (%2274 (load-from-onnx-float32 3072 768 "%2274"))
  (let (%2275 2.0)
  (let (%2276 (load-from-onnx-float32 768 768 "%2276"))
  (let (%2277 (load-from-onnx-float32 768 768 "%2277"))
  (let (%2278 (load-from-onnx-float32 768 768 "%2278"))
  (let (%2279 (vec 12))
  (let (%2280 (vec 64))
  (let (%2281 (vec 12))
  (let (%2282 (vec 64))
  (let (%2283 (vec 12))
  (let (%2284 (vec 64))
  (let (%2285 (vec 768))
  (let (%2286 (load-from-onnx-float32 768 768 "%2286"))
  (let (%2287 2.0)
  (let (%2288 (load-from-onnx-float32 768 3072 "%2288"))
  (let (%2289 (load-from-onnx-float32 3072 768 "%2289"))
  (let (%2290 2.0)
  (let (%2291 (load-from-onnx-float32 768 2 "%2291"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%251 (Unsqueeze attention_mask (vec 1)))
  (let (%252 (Unsqueeze %251 (vec 2)))
  (let (%253 (Cast_FLOAT %252))
  (let (%254 (Constant 1.0))
  (let (%255 (Sub %254 %253))
  (let (%256 (Constant -10000.0))
  (let (%257 (Mul %255 %256))
  (let (%258 (Shape input_ids))
  (let (%259 (Constant 1))
  (let (%260 (Gather %258 %259 0))
  (let (%264 (Unsqueeze %260 (vec 0)))
  (let (%266 (Constant (vec 1)))
  (let (%267 (Slice bert.embeddings.position_ids %2063 %264 %2064 %266))
  (let (%268 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%269 (Gather bert.embeddings.position_embeddings.weight %267 0))
  (let (%270 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%271 (Add %268 %269))
  (let (%272 (Add %271 %270))
  (let (%274 (ReduceMean %272 (vec -1) 1))
  (let (%275 (Sub %272 %274))
  (let (%276 (Cast_FLOAT %275))
  (let (%278 (Pow %276 %2065))
  (let (%279 (ReduceMean %278 (vec -1) 1))
  (let (%280 (Constant 9.999999960041972e-13))
  (let (%281 (Add %279 %280))
  (let (%282 (Sqrt %281))
  (let (%283 (Div %275 %282))
  (let (%284 (Mul %283 bert.embeddings.LayerNorm.weight))
  (let (%285 (Add %284 bert.embeddings.LayerNorm.bias))
  (let (%287 (MatMul %285 %2066))
  (let (%288 (Add %287 bert.encoder.layer.0.attention.self.query.bias))
  (let (%290 (MatMul %285 %2067))
  (let (%291 (Add %290 bert.encoder.layer.0.attention.self.key.bias))
  (let (%293 (MatMul %285 %2068))
  (let (%294 (Add %293 bert.encoder.layer.0.attention.self.value.bias))
  (let (%295 (Shape %288))
  (let (%296 (Constant 0))
  (let (%297 (Gather %295 %296 0))
  (let (%298 (Shape %288))
  (let (%299 (Constant 1))
  (let (%300 (Gather %298 %299 0))
  (let (%303 (Unsqueeze %297 (vec 0)))
  (let (%304 (Unsqueeze %300 (vec 0)))
  (let (%307 (Concat %303 %304 %2069 %2070 0))
  (let (%308 (Reshape %288 %307))
  (let (%309 (Transpose %308 (vec 0 2 1 3)))
  (let (%310 (Shape %291))
  (let (%311 (Constant 0))
  (let (%312 (Gather %310 %311 0))
  (let (%313 (Shape %291))
  (let (%314 (Constant 1))
  (let (%315 (Gather %313 %314 0))
  (let (%318 (Unsqueeze %312 (vec 0)))
  (let (%319 (Unsqueeze %315 (vec 0)))
  (let (%322 (Concat %318 %319 %2071 %2072 0))
  (let (%323 (Reshape %291 %322))
  (let (%324 (Shape %294))
  (let (%325 (Constant 0))
  (let (%326 (Gather %324 %325 0))
  (let (%327 (Shape %294))
  (let (%328 (Constant 1))
  (let (%329 (Gather %327 %328 0))
  (let (%332 (Unsqueeze %326 (vec 0)))
  (let (%333 (Unsqueeze %329 (vec 0)))
  (let (%336 (Concat %332 %333 %2073 %2074 0))
  (let (%337 (Reshape %294 %336))
  (let (%338 (Transpose %337 (vec 0 2 1 3)))
  (let (%339 (Transpose %323 (vec 0 2 3 1)))
  (let (%340 (MatMul %309 %339))
  (let (%341 (Constant 8.0))
  (let (%342 (Div %340 %341))
  (let (%343 (Add %342 %257))
  (let (%344 (Softmax %343 3))
  (let (%345 (MatMul %344 %338))
  (let (%346 (Transpose %345 (vec 0 2 1 3)))
  (let (%347 (Shape %346))
  (let (%348 (Constant 0))
  (let (%349 (Gather %347 %348 0))
  (let (%350 (Shape %346))
  (let (%351 (Constant 1))
  (let (%352 (Gather %350 %351 0))
  (let (%354 (Unsqueeze %349 (vec 0)))
  (let (%355 (Unsqueeze %352 (vec 0)))
  (let (%357 (Concat %354 %355 %2075 0))
  (let (%358 (Reshape %346 %357))
  (let (%360 (MatMul %358 %2076))
  (let (%361 (Add %360 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%362 (Add %361 %285))
  (let (%364 (ReduceMean %362 (vec -1) 1))
  (let (%365 (Sub %362 %364))
  (let (%366 (Cast_FLOAT %365))
  (let (%368 (Pow %366 %2077))
  (let (%369 (ReduceMean %368 (vec -1) 1))
  (let (%370 (Constant 9.999999960041972e-13))
  (let (%371 (Add %369 %370))
  (let (%372 (Sqrt %371))
  (let (%373 (Div %365 %372))
  (let (%374 (Mul %373 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%375 (Add %374 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%377 (MatMul %375 %2078))
  (let (%378 (Add %377 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%379 (Constant 1.4142135381698608))
  (let (%380 (Div %378 %379))
  (let (%381 (Erf %380))
  (let (%382 (Constant 1.0))
  (let (%383 (Add %381 %382))
  (let (%384 (Mul %378 %383))
  (let (%385 (Constant 0.5))
  (let (%386 (Mul %384 %385))
  (let (%388 (MatMul %386 %2079))
  (let (%389 (Add %388 bert.encoder.layer.0.output.dense.bias))
  (let (%390 (Add %389 %375))
  (let (%392 (ReduceMean %390 (vec -1) 1))
  (let (%393 (Sub %390 %392))
  (let (%394 (Cast_FLOAT %393))
  (let (%396 (Pow %394 %2080))
  (let (%397 (ReduceMean %396 (vec -1) 1))
  (let (%398 (Constant 9.999999960041972e-13))
  (let (%399 (Add %397 %398))
  (let (%400 (Sqrt %399))
  (let (%401 (Div %393 %400))
  (let (%402 (Mul %401 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%403 (Add %402 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%405 (MatMul %403 %2081))
  (let (%406 (Add %405 bert.encoder.layer.1.attention.self.query.bias))
  (let (%408 (MatMul %403 %2082))
  (let (%409 (Add %408 bert.encoder.layer.1.attention.self.key.bias))
  (let (%411 (MatMul %403 %2083))
  (let (%412 (Add %411 bert.encoder.layer.1.attention.self.value.bias))
  (let (%413 (Shape %406))
  (let (%414 (Constant 0))
  (let (%415 (Gather %413 %414 0))
  (let (%416 (Shape %406))
  (let (%417 (Constant 1))
  (let (%418 (Gather %416 %417 0))
  (let (%421 (Unsqueeze %415 (vec 0)))
  (let (%422 (Unsqueeze %418 (vec 0)))
  (let (%425 (Concat %421 %422 %2084 %2085 0))
  (let (%426 (Reshape %406 %425))
  (let (%427 (Transpose %426 (vec 0 2 1 3)))
  (let (%428 (Shape %409))
  (let (%429 (Constant 0))
  (let (%430 (Gather %428 %429 0))
  (let (%431 (Shape %409))
  (let (%432 (Constant 1))
  (let (%433 (Gather %431 %432 0))
  (let (%436 (Unsqueeze %430 (vec 0)))
  (let (%437 (Unsqueeze %433 (vec 0)))
  (let (%440 (Concat %436 %437 %2086 %2087 0))
  (let (%441 (Reshape %409 %440))
  (let (%442 (Shape %412))
  (let (%443 (Constant 0))
  (let (%444 (Gather %442 %443 0))
  (let (%445 (Shape %412))
  (let (%446 (Constant 1))
  (let (%447 (Gather %445 %446 0))
  (let (%450 (Unsqueeze %444 (vec 0)))
  (let (%451 (Unsqueeze %447 (vec 0)))
  (let (%454 (Concat %450 %451 %2088 %2089 0))
  (let (%455 (Reshape %412 %454))
  (let (%456 (Transpose %455 (vec 0 2 1 3)))
  (let (%457 (Transpose %441 (vec 0 2 3 1)))
  (let (%458 (MatMul %427 %457))
  (let (%459 (Constant 8.0))
  (let (%460 (Div %458 %459))
  (let (%461 (Add %460 %257))
  (let (%462 (Softmax %461 3))
  (let (%463 (MatMul %462 %456))
  (let (%464 (Transpose %463 (vec 0 2 1 3)))
  (let (%465 (Shape %464))
  (let (%466 (Constant 0))
  (let (%467 (Gather %465 %466 0))
  (let (%468 (Shape %464))
  (let (%469 (Constant 1))
  (let (%470 (Gather %468 %469 0))
  (let (%472 (Unsqueeze %467 (vec 0)))
  (let (%473 (Unsqueeze %470 (vec 0)))
  (let (%475 (Concat %472 %473 %2090 0))
  (let (%476 (Reshape %464 %475))
  (let (%478 (MatMul %476 %2091))
  (let (%479 (Add %478 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%480 (Add %479 %403))
  (let (%482 (ReduceMean %480 (vec -1) 1))
  (let (%483 (Sub %480 %482))
  (let (%484 (Cast_FLOAT %483))
  (let (%486 (Pow %484 %2092))
  (let (%487 (ReduceMean %486 (vec -1) 1))
  (let (%488 (Constant 9.999999960041972e-13))
  (let (%489 (Add %487 %488))
  (let (%490 (Sqrt %489))
  (let (%491 (Div %483 %490))
  (let (%492 (Mul %491 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%493 (Add %492 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%495 (MatMul %493 %2093))
  (let (%496 (Add %495 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%497 (Constant 1.4142135381698608))
  (let (%498 (Div %496 %497))
  (let (%499 (Erf %498))
  (let (%500 (Constant 1.0))
  (let (%501 (Add %499 %500))
  (let (%502 (Mul %496 %501))
  (let (%503 (Constant 0.5))
  (let (%504 (Mul %502 %503))
  (let (%506 (MatMul %504 %2094))
  (let (%507 (Add %506 bert.encoder.layer.1.output.dense.bias))
  (let (%508 (Add %507 %493))
  (let (%510 (ReduceMean %508 (vec -1) 1))
  (let (%511 (Sub %508 %510))
  (let (%512 (Cast_FLOAT %511))
  (let (%514 (Pow %512 %2095))
  (let (%515 (ReduceMean %514 (vec -1) 1))
  (let (%516 (Constant 9.999999960041972e-13))
  (let (%517 (Add %515 %516))
  (let (%518 (Sqrt %517))
  (let (%519 (Div %511 %518))
  (let (%520 (Mul %519 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%521 (Add %520 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%523 (MatMul %521 %2096))
  (let (%524 (Add %523 bert.encoder.layer.2.attention.self.query.bias))
  (let (%526 (MatMul %521 %2097))
  (let (%527 (Add %526 bert.encoder.layer.2.attention.self.key.bias))
  (let (%529 (MatMul %521 %2098))
  (let (%530 (Add %529 bert.encoder.layer.2.attention.self.value.bias))
  (let (%531 (Shape %524))
  (let (%532 (Constant 0))
  (let (%533 (Gather %531 %532 0))
  (let (%534 (Shape %524))
  (let (%535 (Constant 1))
  (let (%536 (Gather %534 %535 0))
  (let (%539 (Unsqueeze %533 (vec 0)))
  (let (%540 (Unsqueeze %536 (vec 0)))
  (let (%543 (Concat %539 %540 %2099 %2100 0))
  (let (%544 (Reshape %524 %543))
  (let (%545 (Transpose %544 (vec 0 2 1 3)))
  (let (%546 (Shape %527))
  (let (%547 (Constant 0))
  (let (%548 (Gather %546 %547 0))
  (let (%549 (Shape %527))
  (let (%550 (Constant 1))
  (let (%551 (Gather %549 %550 0))
  (let (%554 (Unsqueeze %548 (vec 0)))
  (let (%555 (Unsqueeze %551 (vec 0)))
  (let (%558 (Concat %554 %555 %2101 %2102 0))
  (let (%559 (Reshape %527 %558))
  (let (%560 (Shape %530))
  (let (%561 (Constant 0))
  (let (%562 (Gather %560 %561 0))
  (let (%563 (Shape %530))
  (let (%564 (Constant 1))
  (let (%565 (Gather %563 %564 0))
  (let (%568 (Unsqueeze %562 (vec 0)))
  (let (%569 (Unsqueeze %565 (vec 0)))
  (let (%572 (Concat %568 %569 %2103 %2104 0))
  (let (%573 (Reshape %530 %572))
  (let (%574 (Transpose %573 (vec 0 2 1 3)))
  (let (%575 (Transpose %559 (vec 0 2 3 1)))
  (let (%576 (MatMul %545 %575))
  (let (%577 (Constant 8.0))
  (let (%578 (Div %576 %577))
  (let (%579 (Add %578 %257))
  (let (%580 (Softmax %579 3))
  (let (%581 (MatMul %580 %574))
  (let (%582 (Transpose %581 (vec 0 2 1 3)))
  (let (%583 (Shape %582))
  (let (%584 (Constant 0))
  (let (%585 (Gather %583 %584 0))
  (let (%586 (Shape %582))
  (let (%587 (Constant 1))
  (let (%588 (Gather %586 %587 0))
  (let (%590 (Unsqueeze %585 (vec 0)))
  (let (%591 (Unsqueeze %588 (vec 0)))
  (let (%593 (Concat %590 %591 %2105 0))
  (let (%594 (Reshape %582 %593))
  (let (%596 (MatMul %594 %2106))
  (let (%597 (Add %596 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%598 (Add %597 %521))
  (let (%600 (ReduceMean %598 (vec -1) 1))
  (let (%601 (Sub %598 %600))
  (let (%602 (Cast_FLOAT %601))
  (let (%604 (Pow %602 %2107))
  (let (%605 (ReduceMean %604 (vec -1) 1))
  (let (%606 (Constant 9.999999960041972e-13))
  (let (%607 (Add %605 %606))
  (let (%608 (Sqrt %607))
  (let (%609 (Div %601 %608))
  (let (%610 (Mul %609 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%611 (Add %610 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%613 (MatMul %611 %2108))
  (let (%614 (Add %613 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%615 (Constant 1.4142135381698608))
  (let (%616 (Div %614 %615))
  (let (%617 (Erf %616))
  (let (%618 (Constant 1.0))
  (let (%619 (Add %617 %618))
  (let (%620 (Mul %614 %619))
  (let (%621 (Constant 0.5))
  (let (%622 (Mul %620 %621))
  (let (%624 (MatMul %622 %2109))
  (let (%625 (Add %624 bert.encoder.layer.2.output.dense.bias))
  (let (%626 (Add %625 %611))
  (let (%628 (ReduceMean %626 (vec -1) 1))
  (let (%629 (Sub %626 %628))
  (let (%630 (Cast_FLOAT %629))
  (let (%632 (Pow %630 %2110))
  (let (%633 (ReduceMean %632 (vec -1) 1))
  (let (%634 (Constant 9.999999960041972e-13))
  (let (%635 (Add %633 %634))
  (let (%636 (Sqrt %635))
  (let (%637 (Div %629 %636))
  (let (%638 (Mul %637 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%639 (Add %638 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%641 (MatMul %639 %2111))
  (let (%642 (Add %641 bert.encoder.layer.3.attention.self.query.bias))
  (let (%644 (MatMul %639 %2112))
  (let (%645 (Add %644 bert.encoder.layer.3.attention.self.key.bias))
  (let (%647 (MatMul %639 %2113))
  (let (%648 (Add %647 bert.encoder.layer.3.attention.self.value.bias))
  (let (%649 (Shape %642))
  (let (%650 (Constant 0))
  (let (%651 (Gather %649 %650 0))
  (let (%652 (Shape %642))
  (let (%653 (Constant 1))
  (let (%654 (Gather %652 %653 0))
  (let (%657 (Unsqueeze %651 (vec 0)))
  (let (%658 (Unsqueeze %654 (vec 0)))
  (let (%661 (Concat %657 %658 %2114 %2115 0))
  (let (%662 (Reshape %642 %661))
  (let (%663 (Transpose %662 (vec 0 2 1 3)))
  (let (%664 (Shape %645))
  (let (%665 (Constant 0))
  (let (%666 (Gather %664 %665 0))
  (let (%667 (Shape %645))
  (let (%668 (Constant 1))
  (let (%669 (Gather %667 %668 0))
  (let (%672 (Unsqueeze %666 (vec 0)))
  (let (%673 (Unsqueeze %669 (vec 0)))
  (let (%676 (Concat %672 %673 %2116 %2117 0))
  (let (%677 (Reshape %645 %676))
  (let (%678 (Shape %648))
  (let (%679 (Constant 0))
  (let (%680 (Gather %678 %679 0))
  (let (%681 (Shape %648))
  (let (%682 (Constant 1))
  (let (%683 (Gather %681 %682 0))
  (let (%686 (Unsqueeze %680 (vec 0)))
  (let (%687 (Unsqueeze %683 (vec 0)))
  (let (%690 (Concat %686 %687 %2118 %2119 0))
  (let (%691 (Reshape %648 %690))
  (let (%692 (Transpose %691 (vec 0 2 1 3)))
  (let (%693 (Transpose %677 (vec 0 2 3 1)))
  (let (%694 (MatMul %663 %693))
  (let (%695 (Constant 8.0))
  (let (%696 (Div %694 %695))
  (let (%697 (Add %696 %257))
  (let (%698 (Softmax %697 3))
  (let (%699 (MatMul %698 %692))
  (let (%700 (Transpose %699 (vec 0 2 1 3)))
  (let (%701 (Shape %700))
  (let (%702 (Constant 0))
  (let (%703 (Gather %701 %702 0))
  (let (%704 (Shape %700))
  (let (%705 (Constant 1))
  (let (%706 (Gather %704 %705 0))
  (let (%708 (Unsqueeze %703 (vec 0)))
  (let (%709 (Unsqueeze %706 (vec 0)))
  (let (%711 (Concat %708 %709 %2120 0))
  (let (%712 (Reshape %700 %711))
  (let (%714 (MatMul %712 %2121))
  (let (%715 (Add %714 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%716 (Add %715 %639))
  (let (%718 (ReduceMean %716 (vec -1) 1))
  (let (%719 (Sub %716 %718))
  (let (%720 (Cast_FLOAT %719))
  (let (%722 (Pow %720 %2122))
  (let (%723 (ReduceMean %722 (vec -1) 1))
  (let (%724 (Constant 9.999999960041972e-13))
  (let (%725 (Add %723 %724))
  (let (%726 (Sqrt %725))
  (let (%727 (Div %719 %726))
  (let (%728 (Mul %727 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%729 (Add %728 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%731 (MatMul %729 %2123))
  (let (%732 (Add %731 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%733 (Constant 1.4142135381698608))
  (let (%734 (Div %732 %733))
  (let (%735 (Erf %734))
  (let (%736 (Constant 1.0))
  (let (%737 (Add %735 %736))
  (let (%738 (Mul %732 %737))
  (let (%739 (Constant 0.5))
  (let (%740 (Mul %738 %739))
  (let (%742 (MatMul %740 %2124))
  (let (%743 (Add %742 bert.encoder.layer.3.output.dense.bias))
  (let (%744 (Add %743 %729))
  (let (%746 (ReduceMean %744 (vec -1) 1))
  (let (%747 (Sub %744 %746))
  (let (%748 (Cast_FLOAT %747))
  (let (%750 (Pow %748 %2125))
  (let (%751 (ReduceMean %750 (vec -1) 1))
  (let (%752 (Constant 9.999999960041972e-13))
  (let (%753 (Add %751 %752))
  (let (%754 (Sqrt %753))
  (let (%755 (Div %747 %754))
  (let (%756 (Mul %755 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%757 (Add %756 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%759 (MatMul %757 %2126))
  (let (%760 (Add %759 bert.encoder.layer.4.attention.self.query.bias))
  (let (%762 (MatMul %757 %2127))
  (let (%763 (Add %762 bert.encoder.layer.4.attention.self.key.bias))
  (let (%765 (MatMul %757 %2128))
  (let (%766 (Add %765 bert.encoder.layer.4.attention.self.value.bias))
  (let (%767 (Shape %760))
  (let (%768 (Constant 0))
  (let (%769 (Gather %767 %768 0))
  (let (%770 (Shape %760))
  (let (%771 (Constant 1))
  (let (%772 (Gather %770 %771 0))
  (let (%775 (Unsqueeze %769 (vec 0)))
  (let (%776 (Unsqueeze %772 (vec 0)))
  (let (%779 (Concat %775 %776 %2129 %2130 0))
  (let (%780 (Reshape %760 %779))
  (let (%781 (Transpose %780 (vec 0 2 1 3)))
  (let (%782 (Shape %763))
  (let (%783 (Constant 0))
  (let (%784 (Gather %782 %783 0))
  (let (%785 (Shape %763))
  (let (%786 (Constant 1))
  (let (%787 (Gather %785 %786 0))
  (let (%790 (Unsqueeze %784 (vec 0)))
  (let (%791 (Unsqueeze %787 (vec 0)))
  (let (%794 (Concat %790 %791 %2131 %2132 0))
  (let (%795 (Reshape %763 %794))
  (let (%796 (Shape %766))
  (let (%797 (Constant 0))
  (let (%798 (Gather %796 %797 0))
  (let (%799 (Shape %766))
  (let (%800 (Constant 1))
  (let (%801 (Gather %799 %800 0))
  (let (%804 (Unsqueeze %798 (vec 0)))
  (let (%805 (Unsqueeze %801 (vec 0)))
  (let (%808 (Concat %804 %805 %2133 %2134 0))
  (let (%809 (Reshape %766 %808))
  (let (%810 (Transpose %809 (vec 0 2 1 3)))
  (let (%811 (Transpose %795 (vec 0 2 3 1)))
  (let (%812 (MatMul %781 %811))
  (let (%813 (Constant 8.0))
  (let (%814 (Div %812 %813))
  (let (%815 (Add %814 %257))
  (let (%816 (Softmax %815 3))
  (let (%817 (MatMul %816 %810))
  (let (%818 (Transpose %817 (vec 0 2 1 3)))
  (let (%819 (Shape %818))
  (let (%820 (Constant 0))
  (let (%821 (Gather %819 %820 0))
  (let (%822 (Shape %818))
  (let (%823 (Constant 1))
  (let (%824 (Gather %822 %823 0))
  (let (%826 (Unsqueeze %821 (vec 0)))
  (let (%827 (Unsqueeze %824 (vec 0)))
  (let (%829 (Concat %826 %827 %2135 0))
  (let (%830 (Reshape %818 %829))
  (let (%832 (MatMul %830 %2136))
  (let (%833 (Add %832 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%834 (Add %833 %757))
  (let (%836 (ReduceMean %834 (vec -1) 1))
  (let (%837 (Sub %834 %836))
  (let (%838 (Cast_FLOAT %837))
  (let (%840 (Pow %838 %2137))
  (let (%841 (ReduceMean %840 (vec -1) 1))
  (let (%842 (Constant 9.999999960041972e-13))
  (let (%843 (Add %841 %842))
  (let (%844 (Sqrt %843))
  (let (%845 (Div %837 %844))
  (let (%846 (Mul %845 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%847 (Add %846 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%849 (MatMul %847 %2138))
  (let (%850 (Add %849 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%851 (Constant 1.4142135381698608))
  (let (%852 (Div %850 %851))
  (let (%853 (Erf %852))
  (let (%854 (Constant 1.0))
  (let (%855 (Add %853 %854))
  (let (%856 (Mul %850 %855))
  (let (%857 (Constant 0.5))
  (let (%858 (Mul %856 %857))
  (let (%860 (MatMul %858 %2139))
  (let (%861 (Add %860 bert.encoder.layer.4.output.dense.bias))
  (let (%862 (Add %861 %847))
  (let (%864 (ReduceMean %862 (vec -1) 1))
  (let (%865 (Sub %862 %864))
  (let (%866 (Cast_FLOAT %865))
  (let (%868 (Pow %866 %2140))
  (let (%869 (ReduceMean %868 (vec -1) 1))
  (let (%870 (Constant 9.999999960041972e-13))
  (let (%871 (Add %869 %870))
  (let (%872 (Sqrt %871))
  (let (%873 (Div %865 %872))
  (let (%874 (Mul %873 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%875 (Add %874 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%877 (MatMul %875 %2141))
  (let (%878 (Add %877 bert.encoder.layer.5.attention.self.query.bias))
  (let (%880 (MatMul %875 %2142))
  (let (%881 (Add %880 bert.encoder.layer.5.attention.self.key.bias))
  (let (%883 (MatMul %875 %2143))
  (let (%884 (Add %883 bert.encoder.layer.5.attention.self.value.bias))
  (let (%885 (Shape %878))
  (let (%886 (Constant 0))
  (let (%887 (Gather %885 %886 0))
  (let (%888 (Shape %878))
  (let (%889 (Constant 1))
  (let (%890 (Gather %888 %889 0))
  (let (%893 (Unsqueeze %887 (vec 0)))
  (let (%894 (Unsqueeze %890 (vec 0)))
  (let (%897 (Concat %893 %894 %2144 %2145 0))
  (let (%898 (Reshape %878 %897))
  (let (%899 (Transpose %898 (vec 0 2 1 3)))
  (let (%900 (Shape %881))
  (let (%901 (Constant 0))
  (let (%902 (Gather %900 %901 0))
  (let (%903 (Shape %881))
  (let (%904 (Constant 1))
  (let (%905 (Gather %903 %904 0))
  (let (%908 (Unsqueeze %902 (vec 0)))
  (let (%909 (Unsqueeze %905 (vec 0)))
  (let (%912 (Concat %908 %909 %2146 %2147 0))
  (let (%913 (Reshape %881 %912))
  (let (%914 (Shape %884))
  (let (%915 (Constant 0))
  (let (%916 (Gather %914 %915 0))
  (let (%917 (Shape %884))
  (let (%918 (Constant 1))
  (let (%919 (Gather %917 %918 0))
  (let (%922 (Unsqueeze %916 (vec 0)))
  (let (%923 (Unsqueeze %919 (vec 0)))
  (let (%926 (Concat %922 %923 %2148 %2149 0))
  (let (%927 (Reshape %884 %926))
  (let (%928 (Transpose %927 (vec 0 2 1 3)))
  (let (%929 (Transpose %913 (vec 0 2 3 1)))
  (let (%930 (MatMul %899 %929))
  (let (%931 (Constant 8.0))
  (let (%932 (Div %930 %931))
  (let (%933 (Add %932 %257))
  (let (%934 (Softmax %933 3))
  (let (%935 (MatMul %934 %928))
  (let (%936 (Transpose %935 (vec 0 2 1 3)))
  (let (%937 (Shape %936))
  (let (%938 (Constant 0))
  (let (%939 (Gather %937 %938 0))
  (let (%940 (Shape %936))
  (let (%941 (Constant 1))
  (let (%942 (Gather %940 %941 0))
  (let (%944 (Unsqueeze %939 (vec 0)))
  (let (%945 (Unsqueeze %942 (vec 0)))
  (let (%947 (Concat %944 %945 %2150 0))
  (let (%948 (Reshape %936 %947))
  (let (%950 (MatMul %948 %2151))
  (let (%951 (Add %950 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%952 (Add %951 %875))
  (let (%954 (ReduceMean %952 (vec -1) 1))
  (let (%955 (Sub %952 %954))
  (let (%956 (Cast_FLOAT %955))
  (let (%958 (Pow %956 %2152))
  (let (%959 (ReduceMean %958 (vec -1) 1))
  (let (%960 (Constant 9.999999960041972e-13))
  (let (%961 (Add %959 %960))
  (let (%962 (Sqrt %961))
  (let (%963 (Div %955 %962))
  (let (%964 (Mul %963 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%965 (Add %964 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%967 (MatMul %965 %2153))
  (let (%968 (Add %967 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%969 (Constant 1.4142135381698608))
  (let (%970 (Div %968 %969))
  (let (%971 (Erf %970))
  (let (%972 (Constant 1.0))
  (let (%973 (Add %971 %972))
  (let (%974 (Mul %968 %973))
  (let (%975 (Constant 0.5))
  (let (%976 (Mul %974 %975))
  (let (%978 (MatMul %976 %2154))
  (let (%979 (Add %978 bert.encoder.layer.5.output.dense.bias))
  (let (%980 (Add %979 %965))
  (let (%982 (ReduceMean %980 (vec -1) 1))
  (let (%983 (Sub %980 %982))
  (let (%984 (Cast_FLOAT %983))
  (let (%986 (Pow %984 %2155))
  (let (%987 (ReduceMean %986 (vec -1) 1))
  (let (%988 (Constant 9.999999960041972e-13))
  (let (%989 (Add %987 %988))
  (let (%990 (Sqrt %989))
  (let (%991 (Div %983 %990))
  (let (%992 (Mul %991 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%993 (Add %992 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%995 (MatMul %993 %2156))
  (let (%996 (Add %995 bert.encoder.layer.6.attention.self.query.bias))
  (let (%998 (MatMul %993 %2157))
  (let (%999 (Add %998 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1001 (MatMul %993 %2158))
  (let (%1002 (Add %1001 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1003 (Shape %996))
  (let (%1004 (Constant 0))
  (let (%1005 (Gather %1003 %1004 0))
  (let (%1006 (Shape %996))
  (let (%1007 (Constant 1))
  (let (%1008 (Gather %1006 %1007 0))
  (let (%1011 (Unsqueeze %1005 (vec 0)))
  (let (%1012 (Unsqueeze %1008 (vec 0)))
  (let (%1015 (Concat %1011 %1012 %2159 %2160 0))
  (let (%1016 (Reshape %996 %1015))
  (let (%1017 (Transpose %1016 (vec 0 2 1 3)))
  (let (%1018 (Shape %999))
  (let (%1019 (Constant 0))
  (let (%1020 (Gather %1018 %1019 0))
  (let (%1021 (Shape %999))
  (let (%1022 (Constant 1))
  (let (%1023 (Gather %1021 %1022 0))
  (let (%1026 (Unsqueeze %1020 (vec 0)))
  (let (%1027 (Unsqueeze %1023 (vec 0)))
  (let (%1030 (Concat %1026 %1027 %2161 %2162 0))
  (let (%1031 (Reshape %999 %1030))
  (let (%1032 (Shape %1002))
  (let (%1033 (Constant 0))
  (let (%1034 (Gather %1032 %1033 0))
  (let (%1035 (Shape %1002))
  (let (%1036 (Constant 1))
  (let (%1037 (Gather %1035 %1036 0))
  (let (%1040 (Unsqueeze %1034 (vec 0)))
  (let (%1041 (Unsqueeze %1037 (vec 0)))
  (let (%1044 (Concat %1040 %1041 %2163 %2164 0))
  (let (%1045 (Reshape %1002 %1044))
  (let (%1046 (Transpose %1045 (vec 0 2 1 3)))
  (let (%1047 (Transpose %1031 (vec 0 2 3 1)))
  (let (%1048 (MatMul %1017 %1047))
  (let (%1049 (Constant 8.0))
  (let (%1050 (Div %1048 %1049))
  (let (%1051 (Add %1050 %257))
  (let (%1052 (Softmax %1051 3))
  (let (%1053 (MatMul %1052 %1046))
  (let (%1054 (Transpose %1053 (vec 0 2 1 3)))
  (let (%1055 (Shape %1054))
  (let (%1056 (Constant 0))
  (let (%1057 (Gather %1055 %1056 0))
  (let (%1058 (Shape %1054))
  (let (%1059 (Constant 1))
  (let (%1060 (Gather %1058 %1059 0))
  (let (%1062 (Unsqueeze %1057 (vec 0)))
  (let (%1063 (Unsqueeze %1060 (vec 0)))
  (let (%1065 (Concat %1062 %1063 %2165 0))
  (let (%1066 (Reshape %1054 %1065))
  (let (%1068 (MatMul %1066 %2166))
  (let (%1069 (Add %1068 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1070 (Add %1069 %993))
  (let (%1072 (ReduceMean %1070 (vec -1) 1))
  (let (%1073 (Sub %1070 %1072))
  (let (%1074 (Cast_FLOAT %1073))
  (let (%1076 (Pow %1074 %2167))
  (let (%1077 (ReduceMean %1076 (vec -1) 1))
  (let (%1078 (Constant 9.999999960041972e-13))
  (let (%1079 (Add %1077 %1078))
  (let (%1080 (Sqrt %1079))
  (let (%1081 (Div %1073 %1080))
  (let (%1082 (Mul %1081 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1083 (Add %1082 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1085 (MatMul %1083 %2168))
  (let (%1086 (Add %1085 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1087 (Constant 1.4142135381698608))
  (let (%1088 (Div %1086 %1087))
  (let (%1089 (Erf %1088))
  (let (%1090 (Constant 1.0))
  (let (%1091 (Add %1089 %1090))
  (let (%1092 (Mul %1086 %1091))
  (let (%1093 (Constant 0.5))
  (let (%1094 (Mul %1092 %1093))
  (let (%1096 (MatMul %1094 %2169))
  (let (%1097 (Add %1096 bert.encoder.layer.6.output.dense.bias))
  (let (%1098 (Add %1097 %1083))
  (let (%1100 (ReduceMean %1098 (vec -1) 1))
  (let (%1101 (Sub %1098 %1100))
  (let (%1102 (Cast_FLOAT %1101))
  (let (%1104 (Pow %1102 %2170))
  (let (%1105 (ReduceMean %1104 (vec -1) 1))
  (let (%1106 (Constant 9.999999960041972e-13))
  (let (%1107 (Add %1105 %1106))
  (let (%1108 (Sqrt %1107))
  (let (%1109 (Div %1101 %1108))
  (let (%1110 (Mul %1109 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1111 (Add %1110 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1113 (MatMul %1111 %2171))
  (let (%1114 (Add %1113 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1116 (MatMul %1111 %2172))
  (let (%1117 (Add %1116 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1119 (MatMul %1111 %2173))
  (let (%1120 (Add %1119 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1121 (Shape %1114))
  (let (%1122 (Constant 0))
  (let (%1123 (Gather %1121 %1122 0))
  (let (%1124 (Shape %1114))
  (let (%1125 (Constant 1))
  (let (%1126 (Gather %1124 %1125 0))
  (let (%1129 (Unsqueeze %1123 (vec 0)))
  (let (%1130 (Unsqueeze %1126 (vec 0)))
  (let (%1133 (Concat %1129 %1130 %2174 %2175 0))
  (let (%1134 (Reshape %1114 %1133))
  (let (%1135 (Transpose %1134 (vec 0 2 1 3)))
  (let (%1136 (Shape %1117))
  (let (%1137 (Constant 0))
  (let (%1138 (Gather %1136 %1137 0))
  (let (%1139 (Shape %1117))
  (let (%1140 (Constant 1))
  (let (%1141 (Gather %1139 %1140 0))
  (let (%1144 (Unsqueeze %1138 (vec 0)))
  (let (%1145 (Unsqueeze %1141 (vec 0)))
  (let (%1148 (Concat %1144 %1145 %2176 %2177 0))
  (let (%1149 (Reshape %1117 %1148))
  (let (%1150 (Shape %1120))
  (let (%1151 (Constant 0))
  (let (%1152 (Gather %1150 %1151 0))
  (let (%1153 (Shape %1120))
  (let (%1154 (Constant 1))
  (let (%1155 (Gather %1153 %1154 0))
  (let (%1158 (Unsqueeze %1152 (vec 0)))
  (let (%1159 (Unsqueeze %1155 (vec 0)))
  (let (%1162 (Concat %1158 %1159 %2178 %2179 0))
  (let (%1163 (Reshape %1120 %1162))
  (let (%1164 (Transpose %1163 (vec 0 2 1 3)))
  (let (%1165 (Transpose %1149 (vec 0 2 3 1)))
  (let (%1166 (MatMul %1135 %1165))
  (let (%1167 (Constant 8.0))
  (let (%1168 (Div %1166 %1167))
  (let (%1169 (Add %1168 %257))
  (let (%1170 (Softmax %1169 3))
  (let (%1171 (MatMul %1170 %1164))
  (let (%1172 (Transpose %1171 (vec 0 2 1 3)))
  (let (%1173 (Shape %1172))
  (let (%1174 (Constant 0))
  (let (%1175 (Gather %1173 %1174 0))
  (let (%1176 (Shape %1172))
  (let (%1177 (Constant 1))
  (let (%1178 (Gather %1176 %1177 0))
  (let (%1180 (Unsqueeze %1175 (vec 0)))
  (let (%1181 (Unsqueeze %1178 (vec 0)))
  (let (%1183 (Concat %1180 %1181 %2180 0))
  (let (%1184 (Reshape %1172 %1183))
  (let (%1186 (MatMul %1184 %2181))
  (let (%1187 (Add %1186 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1188 (Add %1187 %1111))
  (let (%1190 (ReduceMean %1188 (vec -1) 1))
  (let (%1191 (Sub %1188 %1190))
  (let (%1192 (Cast_FLOAT %1191))
  (let (%1194 (Pow %1192 %2182))
  (let (%1195 (ReduceMean %1194 (vec -1) 1))
  (let (%1196 (Constant 9.999999960041972e-13))
  (let (%1197 (Add %1195 %1196))
  (let (%1198 (Sqrt %1197))
  (let (%1199 (Div %1191 %1198))
  (let (%1200 (Mul %1199 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1201 (Add %1200 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1203 (MatMul %1201 %2183))
  (let (%1204 (Add %1203 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1205 (Constant 1.4142135381698608))
  (let (%1206 (Div %1204 %1205))
  (let (%1207 (Erf %1206))
  (let (%1208 (Constant 1.0))
  (let (%1209 (Add %1207 %1208))
  (let (%1210 (Mul %1204 %1209))
  (let (%1211 (Constant 0.5))
  (let (%1212 (Mul %1210 %1211))
  (let (%1214 (MatMul %1212 %2184))
  (let (%1215 (Add %1214 bert.encoder.layer.7.output.dense.bias))
  (let (%1216 (Add %1215 %1201))
  (let (%1218 (ReduceMean %1216 (vec -1) 1))
  (let (%1219 (Sub %1216 %1218))
  (let (%1220 (Cast_FLOAT %1219))
  (let (%1222 (Pow %1220 %2185))
  (let (%1223 (ReduceMean %1222 (vec -1) 1))
  (let (%1224 (Constant 9.999999960041972e-13))
  (let (%1225 (Add %1223 %1224))
  (let (%1226 (Sqrt %1225))
  (let (%1227 (Div %1219 %1226))
  (let (%1228 (Mul %1227 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1229 (Add %1228 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1231 (MatMul %1229 %2186))
  (let (%1232 (Add %1231 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1234 (MatMul %1229 %2187))
  (let (%1235 (Add %1234 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1237 (MatMul %1229 %2188))
  (let (%1238 (Add %1237 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1239 (Shape %1232))
  (let (%1240 (Constant 0))
  (let (%1241 (Gather %1239 %1240 0))
  (let (%1242 (Shape %1232))
  (let (%1243 (Constant 1))
  (let (%1244 (Gather %1242 %1243 0))
  (let (%1247 (Unsqueeze %1241 (vec 0)))
  (let (%1248 (Unsqueeze %1244 (vec 0)))
  (let (%1251 (Concat %1247 %1248 %2189 %2190 0))
  (let (%1252 (Reshape %1232 %1251))
  (let (%1253 (Transpose %1252 (vec 0 2 1 3)))
  (let (%1254 (Shape %1235))
  (let (%1255 (Constant 0))
  (let (%1256 (Gather %1254 %1255 0))
  (let (%1257 (Shape %1235))
  (let (%1258 (Constant 1))
  (let (%1259 (Gather %1257 %1258 0))
  (let (%1262 (Unsqueeze %1256 (vec 0)))
  (let (%1263 (Unsqueeze %1259 (vec 0)))
  (let (%1266 (Concat %1262 %1263 %2191 %2192 0))
  (let (%1267 (Reshape %1235 %1266))
  (let (%1268 (Shape %1238))
  (let (%1269 (Constant 0))
  (let (%1270 (Gather %1268 %1269 0))
  (let (%1271 (Shape %1238))
  (let (%1272 (Constant 1))
  (let (%1273 (Gather %1271 %1272 0))
  (let (%1276 (Unsqueeze %1270 (vec 0)))
  (let (%1277 (Unsqueeze %1273 (vec 0)))
  (let (%1280 (Concat %1276 %1277 %2193 %2194 0))
  (let (%1281 (Reshape %1238 %1280))
  (let (%1282 (Transpose %1281 (vec 0 2 1 3)))
  (let (%1283 (Transpose %1267 (vec 0 2 3 1)))
  (let (%1284 (MatMul %1253 %1283))
  (let (%1285 (Constant 8.0))
  (let (%1286 (Div %1284 %1285))
  (let (%1287 (Add %1286 %257))
  (let (%1288 (Softmax %1287 3))
  (let (%1289 (MatMul %1288 %1282))
  (let (%1290 (Transpose %1289 (vec 0 2 1 3)))
  (let (%1291 (Shape %1290))
  (let (%1292 (Constant 0))
  (let (%1293 (Gather %1291 %1292 0))
  (let (%1294 (Shape %1290))
  (let (%1295 (Constant 1))
  (let (%1296 (Gather %1294 %1295 0))
  (let (%1298 (Unsqueeze %1293 (vec 0)))
  (let (%1299 (Unsqueeze %1296 (vec 0)))
  (let (%1301 (Concat %1298 %1299 %2195 0))
  (let (%1302 (Reshape %1290 %1301))
  (let (%1304 (MatMul %1302 %2196))
  (let (%1305 (Add %1304 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1306 (Add %1305 %1229))
  (let (%1308 (ReduceMean %1306 (vec -1) 1))
  (let (%1309 (Sub %1306 %1308))
  (let (%1310 (Cast_FLOAT %1309))
  (let (%1312 (Pow %1310 %2197))
  (let (%1313 (ReduceMean %1312 (vec -1) 1))
  (let (%1314 (Constant 9.999999960041972e-13))
  (let (%1315 (Add %1313 %1314))
  (let (%1316 (Sqrt %1315))
  (let (%1317 (Div %1309 %1316))
  (let (%1318 (Mul %1317 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1319 (Add %1318 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1321 (MatMul %1319 %2198))
  (let (%1322 (Add %1321 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1323 (Constant 1.4142135381698608))
  (let (%1324 (Div %1322 %1323))
  (let (%1325 (Erf %1324))
  (let (%1326 (Constant 1.0))
  (let (%1327 (Add %1325 %1326))
  (let (%1328 (Mul %1322 %1327))
  (let (%1329 (Constant 0.5))
  (let (%1330 (Mul %1328 %1329))
  (let (%1332 (MatMul %1330 %2199))
  (let (%1333 (Add %1332 bert.encoder.layer.8.output.dense.bias))
  (let (%1334 (Add %1333 %1319))
  (let (%1336 (ReduceMean %1334 (vec -1) 1))
  (let (%1337 (Sub %1334 %1336))
  (let (%1338 (Cast_FLOAT %1337))
  (let (%1340 (Pow %1338 %2200))
  (let (%1341 (ReduceMean %1340 (vec -1) 1))
  (let (%1342 (Constant 9.999999960041972e-13))
  (let (%1343 (Add %1341 %1342))
  (let (%1344 (Sqrt %1343))
  (let (%1345 (Div %1337 %1344))
  (let (%1346 (Mul %1345 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1347 (Add %1346 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1349 (MatMul %1347 %2201))
  (let (%1350 (Add %1349 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1352 (MatMul %1347 %2202))
  (let (%1353 (Add %1352 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1355 (MatMul %1347 %2203))
  (let (%1356 (Add %1355 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1357 (Shape %1350))
  (let (%1358 (Constant 0))
  (let (%1359 (Gather %1357 %1358 0))
  (let (%1360 (Shape %1350))
  (let (%1361 (Constant 1))
  (let (%1362 (Gather %1360 %1361 0))
  (let (%1365 (Unsqueeze %1359 (vec 0)))
  (let (%1366 (Unsqueeze %1362 (vec 0)))
  (let (%1369 (Concat %1365 %1366 %2204 %2205 0))
  (let (%1370 (Reshape %1350 %1369))
  (let (%1371 (Transpose %1370 (vec 0 2 1 3)))
  (let (%1372 (Shape %1353))
  (let (%1373 (Constant 0))
  (let (%1374 (Gather %1372 %1373 0))
  (let (%1375 (Shape %1353))
  (let (%1376 (Constant 1))
  (let (%1377 (Gather %1375 %1376 0))
  (let (%1380 (Unsqueeze %1374 (vec 0)))
  (let (%1381 (Unsqueeze %1377 (vec 0)))
  (let (%1384 (Concat %1380 %1381 %2206 %2207 0))
  (let (%1385 (Reshape %1353 %1384))
  (let (%1386 (Shape %1356))
  (let (%1387 (Constant 0))
  (let (%1388 (Gather %1386 %1387 0))
  (let (%1389 (Shape %1356))
  (let (%1390 (Constant 1))
  (let (%1391 (Gather %1389 %1390 0))
  (let (%1394 (Unsqueeze %1388 (vec 0)))
  (let (%1395 (Unsqueeze %1391 (vec 0)))
  (let (%1398 (Concat %1394 %1395 %2208 %2209 0))
  (let (%1399 (Reshape %1356 %1398))
  (let (%1400 (Transpose %1399 (vec 0 2 1 3)))
  (let (%1401 (Transpose %1385 (vec 0 2 3 1)))
  (let (%1402 (MatMul %1371 %1401))
  (let (%1403 (Constant 8.0))
  (let (%1404 (Div %1402 %1403))
  (let (%1405 (Add %1404 %257))
  (let (%1406 (Softmax %1405 3))
  (let (%1407 (MatMul %1406 %1400))
  (let (%1408 (Transpose %1407 (vec 0 2 1 3)))
  (let (%1409 (Shape %1408))
  (let (%1410 (Constant 0))
  (let (%1411 (Gather %1409 %1410 0))
  (let (%1412 (Shape %1408))
  (let (%1413 (Constant 1))
  (let (%1414 (Gather %1412 %1413 0))
  (let (%1416 (Unsqueeze %1411 (vec 0)))
  (let (%1417 (Unsqueeze %1414 (vec 0)))
  (let (%1419 (Concat %1416 %1417 %2210 0))
  (let (%1420 (Reshape %1408 %1419))
  (let (%1422 (MatMul %1420 %2211))
  (let (%1423 (Add %1422 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1424 (Add %1423 %1347))
  (let (%1426 (ReduceMean %1424 (vec -1) 1))
  (let (%1427 (Sub %1424 %1426))
  (let (%1428 (Cast_FLOAT %1427))
  (let (%1430 (Pow %1428 %2212))
  (let (%1431 (ReduceMean %1430 (vec -1) 1))
  (let (%1432 (Constant 9.999999960041972e-13))
  (let (%1433 (Add %1431 %1432))
  (let (%1434 (Sqrt %1433))
  (let (%1435 (Div %1427 %1434))
  (let (%1436 (Mul %1435 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1437 (Add %1436 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1439 (MatMul %1437 %2213))
  (let (%1440 (Add %1439 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1441 (Constant 1.4142135381698608))
  (let (%1442 (Div %1440 %1441))
  (let (%1443 (Erf %1442))
  (let (%1444 (Constant 1.0))
  (let (%1445 (Add %1443 %1444))
  (let (%1446 (Mul %1440 %1445))
  (let (%1447 (Constant 0.5))
  (let (%1448 (Mul %1446 %1447))
  (let (%1450 (MatMul %1448 %2214))
  (let (%1451 (Add %1450 bert.encoder.layer.9.output.dense.bias))
  (let (%1452 (Add %1451 %1437))
  (let (%1454 (ReduceMean %1452 (vec -1) 1))
  (let (%1455 (Sub %1452 %1454))
  (let (%1456 (Cast_FLOAT %1455))
  (let (%1458 (Pow %1456 %2215))
  (let (%1459 (ReduceMean %1458 (vec -1) 1))
  (let (%1460 (Constant 9.999999960041972e-13))
  (let (%1461 (Add %1459 %1460))
  (let (%1462 (Sqrt %1461))
  (let (%1463 (Div %1455 %1462))
  (let (%1464 (Mul %1463 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1465 (Add %1464 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1467 (MatMul %1465 %2216))
  (let (%1468 (Add %1467 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1470 (MatMul %1465 %2217))
  (let (%1471 (Add %1470 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1473 (MatMul %1465 %2218))
  (let (%1474 (Add %1473 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1475 (Shape %1468))
  (let (%1476 (Constant 0))
  (let (%1477 (Gather %1475 %1476 0))
  (let (%1478 (Shape %1468))
  (let (%1479 (Constant 1))
  (let (%1480 (Gather %1478 %1479 0))
  (let (%1483 (Unsqueeze %1477 (vec 0)))
  (let (%1484 (Unsqueeze %1480 (vec 0)))
  (let (%1487 (Concat %1483 %1484 %2219 %2220 0))
  (let (%1488 (Reshape %1468 %1487))
  (let (%1489 (Transpose %1488 (vec 0 2 1 3)))
  (let (%1490 (Shape %1471))
  (let (%1491 (Constant 0))
  (let (%1492 (Gather %1490 %1491 0))
  (let (%1493 (Shape %1471))
  (let (%1494 (Constant 1))
  (let (%1495 (Gather %1493 %1494 0))
  (let (%1498 (Unsqueeze %1492 (vec 0)))
  (let (%1499 (Unsqueeze %1495 (vec 0)))
  (let (%1502 (Concat %1498 %1499 %2221 %2222 0))
  (let (%1503 (Reshape %1471 %1502))
  (let (%1504 (Shape %1474))
  (let (%1505 (Constant 0))
  (let (%1506 (Gather %1504 %1505 0))
  (let (%1507 (Shape %1474))
  (let (%1508 (Constant 1))
  (let (%1509 (Gather %1507 %1508 0))
  (let (%1512 (Unsqueeze %1506 (vec 0)))
  (let (%1513 (Unsqueeze %1509 (vec 0)))
  (let (%1516 (Concat %1512 %1513 %2223 %2224 0))
  (let (%1517 (Reshape %1474 %1516))
  (let (%1518 (Transpose %1517 (vec 0 2 1 3)))
  (let (%1519 (Transpose %1503 (vec 0 2 3 1)))
  (let (%1520 (MatMul %1489 %1519))
  (let (%1521 (Constant 8.0))
  (let (%1522 (Div %1520 %1521))
  (let (%1523 (Add %1522 %257))
  (let (%1524 (Softmax %1523 3))
  (let (%1525 (MatMul %1524 %1518))
  (let (%1526 (Transpose %1525 (vec 0 2 1 3)))
  (let (%1527 (Shape %1526))
  (let (%1528 (Constant 0))
  (let (%1529 (Gather %1527 %1528 0))
  (let (%1530 (Shape %1526))
  (let (%1531 (Constant 1))
  (let (%1532 (Gather %1530 %1531 0))
  (let (%1534 (Unsqueeze %1529 (vec 0)))
  (let (%1535 (Unsqueeze %1532 (vec 0)))
  (let (%1537 (Concat %1534 %1535 %2225 0))
  (let (%1538 (Reshape %1526 %1537))
  (let (%1540 (MatMul %1538 %2226))
  (let (%1541 (Add %1540 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1542 (Add %1541 %1465))
  (let (%1544 (ReduceMean %1542 (vec -1) 1))
  (let (%1545 (Sub %1542 %1544))
  (let (%1546 (Cast_FLOAT %1545))
  (let (%1548 (Pow %1546 %2227))
  (let (%1549 (ReduceMean %1548 (vec -1) 1))
  (let (%1550 (Constant 9.999999960041972e-13))
  (let (%1551 (Add %1549 %1550))
  (let (%1552 (Sqrt %1551))
  (let (%1553 (Div %1545 %1552))
  (let (%1554 (Mul %1553 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1555 (Add %1554 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1557 (MatMul %1555 %2228))
  (let (%1558 (Add %1557 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1559 (Constant 1.4142135381698608))
  (let (%1560 (Div %1558 %1559))
  (let (%1561 (Erf %1560))
  (let (%1562 (Constant 1.0))
  (let (%1563 (Add %1561 %1562))
  (let (%1564 (Mul %1558 %1563))
  (let (%1565 (Constant 0.5))
  (let (%1566 (Mul %1564 %1565))
  (let (%1568 (MatMul %1566 %2229))
  (let (%1569 (Add %1568 bert.encoder.layer.10.output.dense.bias))
  (let (%1570 (Add %1569 %1555))
  (let (%1572 (ReduceMean %1570 (vec -1) 1))
  (let (%1573 (Sub %1570 %1572))
  (let (%1574 (Cast_FLOAT %1573))
  (let (%1576 (Pow %1574 %2230))
  (let (%1577 (ReduceMean %1576 (vec -1) 1))
  (let (%1578 (Constant 9.999999960041972e-13))
  (let (%1579 (Add %1577 %1578))
  (let (%1580 (Sqrt %1579))
  (let (%1581 (Div %1573 %1580))
  (let (%1582 (Mul %1581 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1583 (Add %1582 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1585 (MatMul %1583 %2231))
  (let (%1586 (Add %1585 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1588 (MatMul %1583 %2232))
  (let (%1589 (Add %1588 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1591 (MatMul %1583 %2233))
  (let (%1592 (Add %1591 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1593 (Shape %1586))
  (let (%1594 (Constant 0))
  (let (%1595 (Gather %1593 %1594 0))
  (let (%1596 (Shape %1586))
  (let (%1597 (Constant 1))
  (let (%1598 (Gather %1596 %1597 0))
  (let (%1601 (Unsqueeze %1595 (vec 0)))
  (let (%1602 (Unsqueeze %1598 (vec 0)))
  (let (%1605 (Concat %1601 %1602 %2234 %2235 0))
  (let (%1606 (Reshape %1586 %1605))
  (let (%1607 (Transpose %1606 (vec 0 2 1 3)))
  (let (%1608 (Shape %1589))
  (let (%1609 (Constant 0))
  (let (%1610 (Gather %1608 %1609 0))
  (let (%1611 (Shape %1589))
  (let (%1612 (Constant 1))
  (let (%1613 (Gather %1611 %1612 0))
  (let (%1616 (Unsqueeze %1610 (vec 0)))
  (let (%1617 (Unsqueeze %1613 (vec 0)))
  (let (%1620 (Concat %1616 %1617 %2236 %2237 0))
  (let (%1621 (Reshape %1589 %1620))
  (let (%1622 (Shape %1592))
  (let (%1623 (Constant 0))
  (let (%1624 (Gather %1622 %1623 0))
  (let (%1625 (Shape %1592))
  (let (%1626 (Constant 1))
  (let (%1627 (Gather %1625 %1626 0))
  (let (%1630 (Unsqueeze %1624 (vec 0)))
  (let (%1631 (Unsqueeze %1627 (vec 0)))
  (let (%1634 (Concat %1630 %1631 %2238 %2239 0))
  (let (%1635 (Reshape %1592 %1634))
  (let (%1636 (Transpose %1635 (vec 0 2 1 3)))
  (let (%1637 (Transpose %1621 (vec 0 2 3 1)))
  (let (%1638 (MatMul %1607 %1637))
  (let (%1639 (Constant 8.0))
  (let (%1640 (Div %1638 %1639))
  (let (%1641 (Add %1640 %257))
  (let (%1642 (Softmax %1641 3))
  (let (%1643 (MatMul %1642 %1636))
  (let (%1644 (Transpose %1643 (vec 0 2 1 3)))
  (let (%1645 (Shape %1644))
  (let (%1646 (Constant 0))
  (let (%1647 (Gather %1645 %1646 0))
  (let (%1648 (Shape %1644))
  (let (%1649 (Constant 1))
  (let (%1650 (Gather %1648 %1649 0))
  (let (%1652 (Unsqueeze %1647 (vec 0)))
  (let (%1653 (Unsqueeze %1650 (vec 0)))
  (let (%1655 (Concat %1652 %1653 %2240 0))
  (let (%1656 (Reshape %1644 %1655))
  (let (%1658 (MatMul %1656 %2241))
  (let (%1659 (Add %1658 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1660 (Add %1659 %1583))
  (let (%1662 (ReduceMean %1660 (vec -1) 1))
  (let (%1663 (Sub %1660 %1662))
  (let (%1664 (Cast_FLOAT %1663))
  (let (%1666 (Pow %1664 %2242))
  (let (%1667 (ReduceMean %1666 (vec -1) 1))
  (let (%1668 (Constant 9.999999960041972e-13))
  (let (%1669 (Add %1667 %1668))
  (let (%1670 (Sqrt %1669))
  (let (%1671 (Div %1663 %1670))
  (let (%1672 (Mul %1671 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1673 (Add %1672 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1675 (MatMul %1673 %2243))
  (let (%1676 (Add %1675 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1677 (Constant 1.4142135381698608))
  (let (%1678 (Div %1676 %1677))
  (let (%1679 (Erf %1678))
  (let (%1680 (Constant 1.0))
  (let (%1681 (Add %1679 %1680))
  (let (%1682 (Mul %1676 %1681))
  (let (%1683 (Constant 0.5))
  (let (%1684 (Mul %1682 %1683))
  (let (%1686 (MatMul %1684 %2244))
  (let (%1687 (Add %1686 bert.encoder.layer.11.output.dense.bias))
  (let (%1688 (Add %1687 %1673))
  (let (%1690 (ReduceMean %1688 (vec -1) 1))
  (let (%1691 (Sub %1688 %1690))
  (let (%1692 (Cast_FLOAT %1691))
  (let (%1694 (Pow %1692 %2245))
  (let (%1695 (ReduceMean %1694 (vec -1) 1))
  (let (%1696 (Constant 9.999999960041972e-13))
  (let (%1697 (Add %1695 %1696))
  (let (%1698 (Sqrt %1697))
  (let (%1699 (Div %1691 %1698))
  (let (%1700 (Mul %1699 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1701 (Add %1700 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1703 (MatMul %1701 %2246))
  (let (%1704 (Add %1703 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1706 (MatMul %1701 %2247))
  (let (%1707 (Add %1706 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1709 (MatMul %1701 %2248))
  (let (%1710 (Add %1709 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1711 (Shape %1704))
  (let (%1712 (Constant 0))
  (let (%1713 (Gather %1711 %1712 0))
  (let (%1714 (Shape %1704))
  (let (%1715 (Constant 1))
  (let (%1716 (Gather %1714 %1715 0))
  (let (%1719 (Unsqueeze %1713 (vec 0)))
  (let (%1720 (Unsqueeze %1716 (vec 0)))
  (let (%1723 (Concat %1719 %1720 %2249 %2250 0))
  (let (%1724 (Reshape %1704 %1723))
  (let (%1725 (Transpose %1724 (vec 0 2 1 3)))
  (let (%1726 (Shape %1707))
  (let (%1727 (Constant 0))
  (let (%1728 (Gather %1726 %1727 0))
  (let (%1729 (Shape %1707))
  (let (%1730 (Constant 1))
  (let (%1731 (Gather %1729 %1730 0))
  (let (%1734 (Unsqueeze %1728 (vec 0)))
  (let (%1735 (Unsqueeze %1731 (vec 0)))
  (let (%1738 (Concat %1734 %1735 %2251 %2252 0))
  (let (%1739 (Reshape %1707 %1738))
  (let (%1740 (Shape %1710))
  (let (%1741 (Constant 0))
  (let (%1742 (Gather %1740 %1741 0))
  (let (%1743 (Shape %1710))
  (let (%1744 (Constant 1))
  (let (%1745 (Gather %1743 %1744 0))
  (let (%1748 (Unsqueeze %1742 (vec 0)))
  (let (%1749 (Unsqueeze %1745 (vec 0)))
  (let (%1752 (Concat %1748 %1749 %2253 %2254 0))
  (let (%1753 (Reshape %1710 %1752))
  (let (%1754 (Transpose %1753 (vec 0 2 1 3)))
  (let (%1755 (Transpose %1739 (vec 0 2 3 1)))
  (let (%1756 (MatMul %1725 %1755))
  (let (%1757 (Constant 8.0))
  (let (%1758 (Div %1756 %1757))
  (let (%1759 (Add %1758 %257))
  (let (%1760 (Softmax %1759 3))
  (let (%1761 (MatMul %1760 %1754))
  (let (%1762 (Transpose %1761 (vec 0 2 1 3)))
  (let (%1763 (Shape %1762))
  (let (%1764 (Constant 0))
  (let (%1765 (Gather %1763 %1764 0))
  (let (%1766 (Shape %1762))
  (let (%1767 (Constant 1))
  (let (%1768 (Gather %1766 %1767 0))
  (let (%1770 (Unsqueeze %1765 (vec 0)))
  (let (%1771 (Unsqueeze %1768 (vec 0)))
  (let (%1773 (Concat %1770 %1771 %2255 0))
  (let (%1774 (Reshape %1762 %1773))
  (let (%1776 (MatMul %1774 %2256))
  (let (%1777 (Add %1776 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1778 (Add %1777 %1701))
  (let (%1780 (ReduceMean %1778 (vec -1) 1))
  (let (%1781 (Sub %1778 %1780))
  (let (%1782 (Cast_FLOAT %1781))
  (let (%1784 (Pow %1782 %2257))
  (let (%1785 (ReduceMean %1784 (vec -1) 1))
  (let (%1786 (Constant 9.999999960041972e-13))
  (let (%1787 (Add %1785 %1786))
  (let (%1788 (Sqrt %1787))
  (let (%1789 (Div %1781 %1788))
  (let (%1790 (Mul %1789 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1791 (Add %1790 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1793 (MatMul %1791 %2258))
  (let (%1794 (Add %1793 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1795 (Constant 1.4142135381698608))
  (let (%1796 (Div %1794 %1795))
  (let (%1797 (Erf %1796))
  (let (%1798 (Constant 1.0))
  (let (%1799 (Add %1797 %1798))
  (let (%1800 (Mul %1794 %1799))
  (let (%1801 (Constant 0.5))
  (let (%1802 (Mul %1800 %1801))
  (let (%1804 (MatMul %1802 %2259))
  (let (%1805 (Add %1804 bert.encoder.layer.12.output.dense.bias))
  (let (%1806 (Add %1805 %1791))
  (let (%1808 (ReduceMean %1806 (vec -1) 1))
  (let (%1809 (Sub %1806 %1808))
  (let (%1810 (Cast_FLOAT %1809))
  (let (%1812 (Pow %1810 %2260))
  (let (%1813 (ReduceMean %1812 (vec -1) 1))
  (let (%1814 (Constant 9.999999960041972e-13))
  (let (%1815 (Add %1813 %1814))
  (let (%1816 (Sqrt %1815))
  (let (%1817 (Div %1809 %1816))
  (let (%1818 (Mul %1817 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1819 (Add %1818 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1821 (MatMul %1819 %2261))
  (let (%1822 (Add %1821 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1824 (MatMul %1819 %2262))
  (let (%1825 (Add %1824 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1827 (MatMul %1819 %2263))
  (let (%1828 (Add %1827 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1829 (Shape %1822))
  (let (%1830 (Constant 0))
  (let (%1831 (Gather %1829 %1830 0))
  (let (%1832 (Shape %1822))
  (let (%1833 (Constant 1))
  (let (%1834 (Gather %1832 %1833 0))
  (let (%1837 (Unsqueeze %1831 (vec 0)))
  (let (%1838 (Unsqueeze %1834 (vec 0)))
  (let (%1841 (Concat %1837 %1838 %2264 %2265 0))
  (let (%1842 (Reshape %1822 %1841))
  (let (%1843 (Transpose %1842 (vec 0 2 1 3)))
  (let (%1844 (Shape %1825))
  (let (%1845 (Constant 0))
  (let (%1846 (Gather %1844 %1845 0))
  (let (%1847 (Shape %1825))
  (let (%1848 (Constant 1))
  (let (%1849 (Gather %1847 %1848 0))
  (let (%1852 (Unsqueeze %1846 (vec 0)))
  (let (%1853 (Unsqueeze %1849 (vec 0)))
  (let (%1856 (Concat %1852 %1853 %2266 %2267 0))
  (let (%1857 (Reshape %1825 %1856))
  (let (%1858 (Shape %1828))
  (let (%1859 (Constant 0))
  (let (%1860 (Gather %1858 %1859 0))
  (let (%1861 (Shape %1828))
  (let (%1862 (Constant 1))
  (let (%1863 (Gather %1861 %1862 0))
  (let (%1866 (Unsqueeze %1860 (vec 0)))
  (let (%1867 (Unsqueeze %1863 (vec 0)))
  (let (%1870 (Concat %1866 %1867 %2268 %2269 0))
  (let (%1871 (Reshape %1828 %1870))
  (let (%1872 (Transpose %1871 (vec 0 2 1 3)))
  (let (%1873 (Transpose %1857 (vec 0 2 3 1)))
  (let (%1874 (MatMul %1843 %1873))
  (let (%1875 (Constant 8.0))
  (let (%1876 (Div %1874 %1875))
  (let (%1877 (Add %1876 %257))
  (let (%1878 (Softmax %1877 3))
  (let (%1879 (MatMul %1878 %1872))
  (let (%1880 (Transpose %1879 (vec 0 2 1 3)))
  (let (%1881 (Shape %1880))
  (let (%1882 (Constant 0))
  (let (%1883 (Gather %1881 %1882 0))
  (let (%1884 (Shape %1880))
  (let (%1885 (Constant 1))
  (let (%1886 (Gather %1884 %1885 0))
  (let (%1888 (Unsqueeze %1883 (vec 0)))
  (let (%1889 (Unsqueeze %1886 (vec 0)))
  (let (%1891 (Concat %1888 %1889 %2270 0))
  (let (%1892 (Reshape %1880 %1891))
  (let (%1894 (MatMul %1892 %2271))
  (let (%1895 (Add %1894 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1896 (Add %1895 %1819))
  (let (%1898 (ReduceMean %1896 (vec -1) 1))
  (let (%1899 (Sub %1896 %1898))
  (let (%1900 (Cast_FLOAT %1899))
  (let (%1902 (Pow %1900 %2272))
  (let (%1903 (ReduceMean %1902 (vec -1) 1))
  (let (%1904 (Constant 9.999999960041972e-13))
  (let (%1905 (Add %1903 %1904))
  (let (%1906 (Sqrt %1905))
  (let (%1907 (Div %1899 %1906))
  (let (%1908 (Mul %1907 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1909 (Add %1908 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1911 (MatMul %1909 %2273))
  (let (%1912 (Add %1911 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1913 (Constant 1.4142135381698608))
  (let (%1914 (Div %1912 %1913))
  (let (%1915 (Erf %1914))
  (let (%1916 (Constant 1.0))
  (let (%1917 (Add %1915 %1916))
  (let (%1918 (Mul %1912 %1917))
  (let (%1919 (Constant 0.5))
  (let (%1920 (Mul %1918 %1919))
  (let (%1922 (MatMul %1920 %2274))
  (let (%1923 (Add %1922 bert.encoder.layer.13.output.dense.bias))
  (let (%1924 (Add %1923 %1909))
  (let (%1926 (ReduceMean %1924 (vec -1) 1))
  (let (%1927 (Sub %1924 %1926))
  (let (%1928 (Cast_FLOAT %1927))
  (let (%1930 (Pow %1928 %2275))
  (let (%1931 (ReduceMean %1930 (vec -1) 1))
  (let (%1932 (Constant 9.999999960041972e-13))
  (let (%1933 (Add %1931 %1932))
  (let (%1934 (Sqrt %1933))
  (let (%1935 (Div %1927 %1934))
  (let (%1936 (Mul %1935 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%1937 (Add %1936 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%1939 (MatMul %1937 %2276))
  (let (%1940 (Add %1939 bert.encoder.layer.14.attention.self.query.bias))
  (let (%1942 (MatMul %1937 %2277))
  (let (%1943 (Add %1942 bert.encoder.layer.14.attention.self.key.bias))
  (let (%1945 (MatMul %1937 %2278))
  (let (%1946 (Add %1945 bert.encoder.layer.14.attention.self.value.bias))
  (let (%1947 (Shape %1940))
  (let (%1948 (Constant 0))
  (let (%1949 (Gather %1947 %1948 0))
  (let (%1950 (Shape %1940))
  (let (%1951 (Constant 1))
  (let (%1952 (Gather %1950 %1951 0))
  (let (%1955 (Unsqueeze %1949 (vec 0)))
  (let (%1956 (Unsqueeze %1952 (vec 0)))
  (let (%1959 (Concat %1955 %1956 %2279 %2280 0))
  (let (%1960 (Reshape %1940 %1959))
  (let (%1961 (Transpose %1960 (vec 0 2 1 3)))
  (let (%1962 (Shape %1943))
  (let (%1963 (Constant 0))
  (let (%1964 (Gather %1962 %1963 0))
  (let (%1965 (Shape %1943))
  (let (%1966 (Constant 1))
  (let (%1967 (Gather %1965 %1966 0))
  (let (%1970 (Unsqueeze %1964 (vec 0)))
  (let (%1971 (Unsqueeze %1967 (vec 0)))
  (let (%1974 (Concat %1970 %1971 %2281 %2282 0))
  (let (%1975 (Reshape %1943 %1974))
  (let (%1976 (Shape %1946))
  (let (%1977 (Constant 0))
  (let (%1978 (Gather %1976 %1977 0))
  (let (%1979 (Shape %1946))
  (let (%1980 (Constant 1))
  (let (%1981 (Gather %1979 %1980 0))
  (let (%1984 (Unsqueeze %1978 (vec 0)))
  (let (%1985 (Unsqueeze %1981 (vec 0)))
  (let (%1988 (Concat %1984 %1985 %2283 %2284 0))
  (let (%1989 (Reshape %1946 %1988))
  (let (%1990 (Transpose %1989 (vec 0 2 1 3)))
  (let (%1991 (Transpose %1975 (vec 0 2 3 1)))
  (let (%1992 (MatMul %1961 %1991))
  (let (%1993 (Constant 8.0))
  (let (%1994 (Div %1992 %1993))
  (let (%1995 (Add %1994 %257))
  (let (%1996 (Softmax %1995 3))
  (let (%1997 (MatMul %1996 %1990))
  (let (%1998 (Transpose %1997 (vec 0 2 1 3)))
  (let (%1999 (Shape %1998))
  (let (%2000 (Constant 0))
  (let (%2001 (Gather %1999 %2000 0))
  (let (%2002 (Shape %1998))
  (let (%2003 (Constant 1))
  (let (%2004 (Gather %2002 %2003 0))
  (let (%2006 (Unsqueeze %2001 (vec 0)))
  (let (%2007 (Unsqueeze %2004 (vec 0)))
  (let (%2009 (Concat %2006 %2007 %2285 0))
  (let (%2010 (Reshape %1998 %2009))
  (let (%2012 (MatMul %2010 %2286))
  (let (%2013 (Add %2012 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2014 (Add %2013 %1937))
  (let (%2016 (ReduceMean %2014 (vec -1) 1))
  (let (%2017 (Sub %2014 %2016))
  (let (%2018 (Cast_FLOAT %2017))
  (let (%2020 (Pow %2018 %2287))
  (let (%2021 (ReduceMean %2020 (vec -1) 1))
  (let (%2022 (Constant 9.999999960041972e-13))
  (let (%2023 (Add %2021 %2022))
  (let (%2024 (Sqrt %2023))
  (let (%2025 (Div %2017 %2024))
  (let (%2026 (Mul %2025 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2027 (Add %2026 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2029 (MatMul %2027 %2288))
  (let (%2030 (Add %2029 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2031 (Constant 1.4142135381698608))
  (let (%2032 (Div %2030 %2031))
  (let (%2033 (Erf %2032))
  (let (%2034 (Constant 1.0))
  (let (%2035 (Add %2033 %2034))
  (let (%2036 (Mul %2030 %2035))
  (let (%2037 (Constant 0.5))
  (let (%2038 (Mul %2036 %2037))
  (let (%2040 (MatMul %2038 %2289))
  (let (%2041 (Add %2040 bert.encoder.layer.14.output.dense.bias))
  (let (%2042 (Add %2041 %2027))
  (let (%2044 (ReduceMean %2042 (vec -1) 1))
  (let (%2045 (Sub %2042 %2044))
  (let (%2046 (Cast_FLOAT %2045))
  (let (%2048 (Pow %2046 %2290))
  (let (%2049 (ReduceMean %2048 (vec -1) 1))
  (let (%2050 (Constant 9.999999960041972e-13))
  (let (%2051 (Add %2049 %2050))
  (let (%2052 (Sqrt %2051))
  (let (%2053 (Div %2045 %2052))
  (let (%2054 (Mul %2053 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2055 (Add %2054 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2057 (MatMul %2055 %2291))
  (let (%2058 (Add %2057 qa_outputs.bias))
  (let ((%2059 %2060) (Split %2058 (vec 1 1) -1))
  (let (output_0 (Squeeze %2059 (vec -1)))
  (let (output_1 (Squeeze %2060 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

