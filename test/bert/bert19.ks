;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert19.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2599 (vec 0))
  (let (%2600 (vec 1))
  (let (%2601 2.0)
  (let (%2602 (load-from-onnx-float32 768 768 "%2602"))
  (let (%2603 (load-from-onnx-float32 768 768 "%2603"))
  (let (%2604 (load-from-onnx-float32 768 768 "%2604"))
  (let (%2605 (vec 12))
  (let (%2606 (vec 64))
  (let (%2607 (vec 12))
  (let (%2608 (vec 64))
  (let (%2609 (vec 12))
  (let (%2610 (vec 64))
  (let (%2611 (vec 768))
  (let (%2612 (load-from-onnx-float32 768 768 "%2612"))
  (let (%2613 2.0)
  (let (%2614 (load-from-onnx-float32 768 3072 "%2614"))
  (let (%2615 (load-from-onnx-float32 3072 768 "%2615"))
  (let (%2616 2.0)
  (let (%2617 (load-from-onnx-float32 768 768 "%2617"))
  (let (%2618 (load-from-onnx-float32 768 768 "%2618"))
  (let (%2619 (load-from-onnx-float32 768 768 "%2619"))
  (let (%2620 (vec 12))
  (let (%2621 (vec 64))
  (let (%2622 (vec 12))
  (let (%2623 (vec 64))
  (let (%2624 (vec 12))
  (let (%2625 (vec 64))
  (let (%2626 (vec 768))
  (let (%2627 (load-from-onnx-float32 768 768 "%2627"))
  (let (%2628 2.0)
  (let (%2629 (load-from-onnx-float32 768 3072 "%2629"))
  (let (%2630 (load-from-onnx-float32 3072 768 "%2630"))
  (let (%2631 2.0)
  (let (%2632 (load-from-onnx-float32 768 768 "%2632"))
  (let (%2633 (load-from-onnx-float32 768 768 "%2633"))
  (let (%2634 (load-from-onnx-float32 768 768 "%2634"))
  (let (%2635 (vec 12))
  (let (%2636 (vec 64))
  (let (%2637 (vec 12))
  (let (%2638 (vec 64))
  (let (%2639 (vec 12))
  (let (%2640 (vec 64))
  (let (%2641 (vec 768))
  (let (%2642 (load-from-onnx-float32 768 768 "%2642"))
  (let (%2643 2.0)
  (let (%2644 (load-from-onnx-float32 768 3072 "%2644"))
  (let (%2645 (load-from-onnx-float32 3072 768 "%2645"))
  (let (%2646 2.0)
  (let (%2647 (load-from-onnx-float32 768 768 "%2647"))
  (let (%2648 (load-from-onnx-float32 768 768 "%2648"))
  (let (%2649 (load-from-onnx-float32 768 768 "%2649"))
  (let (%2650 (vec 12))
  (let (%2651 (vec 64))
  (let (%2652 (vec 12))
  (let (%2653 (vec 64))
  (let (%2654 (vec 12))
  (let (%2655 (vec 64))
  (let (%2656 (vec 768))
  (let (%2657 (load-from-onnx-float32 768 768 "%2657"))
  (let (%2658 2.0)
  (let (%2659 (load-from-onnx-float32 768 3072 "%2659"))
  (let (%2660 (load-from-onnx-float32 3072 768 "%2660"))
  (let (%2661 2.0)
  (let (%2662 (load-from-onnx-float32 768 768 "%2662"))
  (let (%2663 (load-from-onnx-float32 768 768 "%2663"))
  (let (%2664 (load-from-onnx-float32 768 768 "%2664"))
  (let (%2665 (vec 12))
  (let (%2666 (vec 64))
  (let (%2667 (vec 12))
  (let (%2668 (vec 64))
  (let (%2669 (vec 12))
  (let (%2670 (vec 64))
  (let (%2671 (vec 768))
  (let (%2672 (load-from-onnx-float32 768 768 "%2672"))
  (let (%2673 2.0)
  (let (%2674 (load-from-onnx-float32 768 3072 "%2674"))
  (let (%2675 (load-from-onnx-float32 3072 768 "%2675"))
  (let (%2676 2.0)
  (let (%2677 (load-from-onnx-float32 768 768 "%2677"))
  (let (%2678 (load-from-onnx-float32 768 768 "%2678"))
  (let (%2679 (load-from-onnx-float32 768 768 "%2679"))
  (let (%2680 (vec 12))
  (let (%2681 (vec 64))
  (let (%2682 (vec 12))
  (let (%2683 (vec 64))
  (let (%2684 (vec 12))
  (let (%2685 (vec 64))
  (let (%2686 (vec 768))
  (let (%2687 (load-from-onnx-float32 768 768 "%2687"))
  (let (%2688 2.0)
  (let (%2689 (load-from-onnx-float32 768 3072 "%2689"))
  (let (%2690 (load-from-onnx-float32 3072 768 "%2690"))
  (let (%2691 2.0)
  (let (%2692 (load-from-onnx-float32 768 768 "%2692"))
  (let (%2693 (load-from-onnx-float32 768 768 "%2693"))
  (let (%2694 (load-from-onnx-float32 768 768 "%2694"))
  (let (%2695 (vec 12))
  (let (%2696 (vec 64))
  (let (%2697 (vec 12))
  (let (%2698 (vec 64))
  (let (%2699 (vec 12))
  (let (%2700 (vec 64))
  (let (%2701 (vec 768))
  (let (%2702 (load-from-onnx-float32 768 768 "%2702"))
  (let (%2703 2.0)
  (let (%2704 (load-from-onnx-float32 768 3072 "%2704"))
  (let (%2705 (load-from-onnx-float32 3072 768 "%2705"))
  (let (%2706 2.0)
  (let (%2707 (load-from-onnx-float32 768 768 "%2707"))
  (let (%2708 (load-from-onnx-float32 768 768 "%2708"))
  (let (%2709 (load-from-onnx-float32 768 768 "%2709"))
  (let (%2710 (vec 12))
  (let (%2711 (vec 64))
  (let (%2712 (vec 12))
  (let (%2713 (vec 64))
  (let (%2714 (vec 12))
  (let (%2715 (vec 64))
  (let (%2716 (vec 768))
  (let (%2717 (load-from-onnx-float32 768 768 "%2717"))
  (let (%2718 2.0)
  (let (%2719 (load-from-onnx-float32 768 3072 "%2719"))
  (let (%2720 (load-from-onnx-float32 3072 768 "%2720"))
  (let (%2721 2.0)
  (let (%2722 (load-from-onnx-float32 768 768 "%2722"))
  (let (%2723 (load-from-onnx-float32 768 768 "%2723"))
  (let (%2724 (load-from-onnx-float32 768 768 "%2724"))
  (let (%2725 (vec 12))
  (let (%2726 (vec 64))
  (let (%2727 (vec 12))
  (let (%2728 (vec 64))
  (let (%2729 (vec 12))
  (let (%2730 (vec 64))
  (let (%2731 (vec 768))
  (let (%2732 (load-from-onnx-float32 768 768 "%2732"))
  (let (%2733 2.0)
  (let (%2734 (load-from-onnx-float32 768 3072 "%2734"))
  (let (%2735 (load-from-onnx-float32 3072 768 "%2735"))
  (let (%2736 2.0)
  (let (%2737 (load-from-onnx-float32 768 768 "%2737"))
  (let (%2738 (load-from-onnx-float32 768 768 "%2738"))
  (let (%2739 (load-from-onnx-float32 768 768 "%2739"))
  (let (%2740 (vec 12))
  (let (%2741 (vec 64))
  (let (%2742 (vec 12))
  (let (%2743 (vec 64))
  (let (%2744 (vec 12))
  (let (%2745 (vec 64))
  (let (%2746 (vec 768))
  (let (%2747 (load-from-onnx-float32 768 768 "%2747"))
  (let (%2748 2.0)
  (let (%2749 (load-from-onnx-float32 768 3072 "%2749"))
  (let (%2750 (load-from-onnx-float32 3072 768 "%2750"))
  (let (%2751 2.0)
  (let (%2752 (load-from-onnx-float32 768 768 "%2752"))
  (let (%2753 (load-from-onnx-float32 768 768 "%2753"))
  (let (%2754 (load-from-onnx-float32 768 768 "%2754"))
  (let (%2755 (vec 12))
  (let (%2756 (vec 64))
  (let (%2757 (vec 12))
  (let (%2758 (vec 64))
  (let (%2759 (vec 12))
  (let (%2760 (vec 64))
  (let (%2761 (vec 768))
  (let (%2762 (load-from-onnx-float32 768 768 "%2762"))
  (let (%2763 2.0)
  (let (%2764 (load-from-onnx-float32 768 3072 "%2764"))
  (let (%2765 (load-from-onnx-float32 3072 768 "%2765"))
  (let (%2766 2.0)
  (let (%2767 (load-from-onnx-float32 768 768 "%2767"))
  (let (%2768 (load-from-onnx-float32 768 768 "%2768"))
  (let (%2769 (load-from-onnx-float32 768 768 "%2769"))
  (let (%2770 (vec 12))
  (let (%2771 (vec 64))
  (let (%2772 (vec 12))
  (let (%2773 (vec 64))
  (let (%2774 (vec 12))
  (let (%2775 (vec 64))
  (let (%2776 (vec 768))
  (let (%2777 (load-from-onnx-float32 768 768 "%2777"))
  (let (%2778 2.0)
  (let (%2779 (load-from-onnx-float32 768 3072 "%2779"))
  (let (%2780 (load-from-onnx-float32 3072 768 "%2780"))
  (let (%2781 2.0)
  (let (%2782 (load-from-onnx-float32 768 768 "%2782"))
  (let (%2783 (load-from-onnx-float32 768 768 "%2783"))
  (let (%2784 (load-from-onnx-float32 768 768 "%2784"))
  (let (%2785 (vec 12))
  (let (%2786 (vec 64))
  (let (%2787 (vec 12))
  (let (%2788 (vec 64))
  (let (%2789 (vec 12))
  (let (%2790 (vec 64))
  (let (%2791 (vec 768))
  (let (%2792 (load-from-onnx-float32 768 768 "%2792"))
  (let (%2793 2.0)
  (let (%2794 (load-from-onnx-float32 768 3072 "%2794"))
  (let (%2795 (load-from-onnx-float32 3072 768 "%2795"))
  (let (%2796 2.0)
  (let (%2797 (load-from-onnx-float32 768 768 "%2797"))
  (let (%2798 (load-from-onnx-float32 768 768 "%2798"))
  (let (%2799 (load-from-onnx-float32 768 768 "%2799"))
  (let (%2800 (vec 12))
  (let (%2801 (vec 64))
  (let (%2802 (vec 12))
  (let (%2803 (vec 64))
  (let (%2804 (vec 12))
  (let (%2805 (vec 64))
  (let (%2806 (vec 768))
  (let (%2807 (load-from-onnx-float32 768 768 "%2807"))
  (let (%2808 2.0)
  (let (%2809 (load-from-onnx-float32 768 3072 "%2809"))
  (let (%2810 (load-from-onnx-float32 3072 768 "%2810"))
  (let (%2811 2.0)
  (let (%2812 (load-from-onnx-float32 768 768 "%2812"))
  (let (%2813 (load-from-onnx-float32 768 768 "%2813"))
  (let (%2814 (load-from-onnx-float32 768 768 "%2814"))
  (let (%2815 (vec 12))
  (let (%2816 (vec 64))
  (let (%2817 (vec 12))
  (let (%2818 (vec 64))
  (let (%2819 (vec 12))
  (let (%2820 (vec 64))
  (let (%2821 (vec 768))
  (let (%2822 (load-from-onnx-float32 768 768 "%2822"))
  (let (%2823 2.0)
  (let (%2824 (load-from-onnx-float32 768 3072 "%2824"))
  (let (%2825 (load-from-onnx-float32 3072 768 "%2825"))
  (let (%2826 2.0)
  (let (%2827 (load-from-onnx-float32 768 768 "%2827"))
  (let (%2828 (load-from-onnx-float32 768 768 "%2828"))
  (let (%2829 (load-from-onnx-float32 768 768 "%2829"))
  (let (%2830 (vec 12))
  (let (%2831 (vec 64))
  (let (%2832 (vec 12))
  (let (%2833 (vec 64))
  (let (%2834 (vec 12))
  (let (%2835 (vec 64))
  (let (%2836 (vec 768))
  (let (%2837 (load-from-onnx-float32 768 768 "%2837"))
  (let (%2838 2.0)
  (let (%2839 (load-from-onnx-float32 768 3072 "%2839"))
  (let (%2840 (load-from-onnx-float32 3072 768 "%2840"))
  (let (%2841 2.0)
  (let (%2842 (load-from-onnx-float32 768 768 "%2842"))
  (let (%2843 (load-from-onnx-float32 768 768 "%2843"))
  (let (%2844 (load-from-onnx-float32 768 768 "%2844"))
  (let (%2845 (vec 12))
  (let (%2846 (vec 64))
  (let (%2847 (vec 12))
  (let (%2848 (vec 64))
  (let (%2849 (vec 12))
  (let (%2850 (vec 64))
  (let (%2851 (vec 768))
  (let (%2852 (load-from-onnx-float32 768 768 "%2852"))
  (let (%2853 2.0)
  (let (%2854 (load-from-onnx-float32 768 3072 "%2854"))
  (let (%2855 (load-from-onnx-float32 3072 768 "%2855"))
  (let (%2856 2.0)
  (let (%2857 (load-from-onnx-float32 768 768 "%2857"))
  (let (%2858 (load-from-onnx-float32 768 768 "%2858"))
  (let (%2859 (load-from-onnx-float32 768 768 "%2859"))
  (let (%2860 (vec 12))
  (let (%2861 (vec 64))
  (let (%2862 (vec 12))
  (let (%2863 (vec 64))
  (let (%2864 (vec 12))
  (let (%2865 (vec 64))
  (let (%2866 (vec 768))
  (let (%2867 (load-from-onnx-float32 768 768 "%2867"))
  (let (%2868 2.0)
  (let (%2869 (load-from-onnx-float32 768 3072 "%2869"))
  (let (%2870 (load-from-onnx-float32 3072 768 "%2870"))
  (let (%2871 2.0)
  (let (%2872 (load-from-onnx-float32 768 768 "%2872"))
  (let (%2873 (load-from-onnx-float32 768 768 "%2873"))
  (let (%2874 (load-from-onnx-float32 768 768 "%2874"))
  (let (%2875 (vec 12))
  (let (%2876 (vec 64))
  (let (%2877 (vec 12))
  (let (%2878 (vec 64))
  (let (%2879 (vec 12))
  (let (%2880 (vec 64))
  (let (%2881 (vec 768))
  (let (%2882 (load-from-onnx-float32 768 768 "%2882"))
  (let (%2883 2.0)
  (let (%2884 (load-from-onnx-float32 768 3072 "%2884"))
  (let (%2885 (load-from-onnx-float32 3072 768 "%2885"))
  (let (%2886 2.0)
  (let (%2887 (load-from-onnx-float32 768 2 "%2887"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.key.bias"))
  (let (bert.encoder.layer.18.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.query.bias"))
  (let (bert.encoder.layer.18.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.value.bias"))
  (let (bert.encoder.layer.18.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.18.intermediate.dense.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%315 (Unsqueeze attention_mask (vec 1)))
  (let (%316 (Unsqueeze %315 (vec 2)))
  (let (%317 (Cast_FLOAT %316))
  (let (%318 (Constant 1.0))
  (let (%319 (Sub %318 %317))
  (let (%320 (Constant -10000.0))
  (let (%321 (Mul %319 %320))
  (let (%322 (Shape input_ids))
  (let (%323 (Constant 1))
  (let (%324 (Gather %322 %323 0))
  (let (%328 (Unsqueeze %324 (vec 0)))
  (let (%330 (Constant (vec 1)))
  (let (%331 (Slice bert.embeddings.position_ids %2599 %328 %2600 %330))
  (let (%332 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%333 (Gather bert.embeddings.position_embeddings.weight %331 0))
  (let (%334 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%335 (Add %332 %333))
  (let (%336 (Add %335 %334))
  (let (%338 (ReduceMean %336 (vec -1) 1))
  (let (%339 (Sub %336 %338))
  (let (%340 (Cast_FLOAT %339))
  (let (%342 (Pow %340 %2601))
  (let (%343 (ReduceMean %342 (vec -1) 1))
  (let (%344 (Constant 9.999999960041972e-13))
  (let (%345 (Add %343 %344))
  (let (%346 (Sqrt %345))
  (let (%347 (Div %339 %346))
  (let (%348 (Mul %347 bert.embeddings.LayerNorm.weight))
  (let (%349 (Add %348 bert.embeddings.LayerNorm.bias))
  (let (%351 (MatMul %349 %2602))
  (let (%352 (Add %351 bert.encoder.layer.0.attention.self.query.bias))
  (let (%354 (MatMul %349 %2603))
  (let (%355 (Add %354 bert.encoder.layer.0.attention.self.key.bias))
  (let (%357 (MatMul %349 %2604))
  (let (%358 (Add %357 bert.encoder.layer.0.attention.self.value.bias))
  (let (%359 (Shape %352))
  (let (%360 (Constant 0))
  (let (%361 (Gather %359 %360 0))
  (let (%362 (Shape %352))
  (let (%363 (Constant 1))
  (let (%364 (Gather %362 %363 0))
  (let (%367 (Unsqueeze %361 (vec 0)))
  (let (%368 (Unsqueeze %364 (vec 0)))
  (let (%371 (Concat %367 %368 %2605 %2606 0))
  (let (%372 (Reshape %352 %371))
  (let (%373 (Transpose %372 (vec 0 2 1 3)))
  (let (%374 (Shape %355))
  (let (%375 (Constant 0))
  (let (%376 (Gather %374 %375 0))
  (let (%377 (Shape %355))
  (let (%378 (Constant 1))
  (let (%379 (Gather %377 %378 0))
  (let (%382 (Unsqueeze %376 (vec 0)))
  (let (%383 (Unsqueeze %379 (vec 0)))
  (let (%386 (Concat %382 %383 %2607 %2608 0))
  (let (%387 (Reshape %355 %386))
  (let (%388 (Shape %358))
  (let (%389 (Constant 0))
  (let (%390 (Gather %388 %389 0))
  (let (%391 (Shape %358))
  (let (%392 (Constant 1))
  (let (%393 (Gather %391 %392 0))
  (let (%396 (Unsqueeze %390 (vec 0)))
  (let (%397 (Unsqueeze %393 (vec 0)))
  (let (%400 (Concat %396 %397 %2609 %2610 0))
  (let (%401 (Reshape %358 %400))
  (let (%402 (Transpose %401 (vec 0 2 1 3)))
  (let (%403 (Transpose %387 (vec 0 2 3 1)))
  (let (%404 (MatMul %373 %403))
  (let (%405 (Constant 8.0))
  (let (%406 (Div %404 %405))
  (let (%407 (Add %406 %321))
  (let (%408 (Softmax %407 3))
  (let (%409 (MatMul %408 %402))
  (let (%410 (Transpose %409 (vec 0 2 1 3)))
  (let (%411 (Shape %410))
  (let (%412 (Constant 0))
  (let (%413 (Gather %411 %412 0))
  (let (%414 (Shape %410))
  (let (%415 (Constant 1))
  (let (%416 (Gather %414 %415 0))
  (let (%418 (Unsqueeze %413 (vec 0)))
  (let (%419 (Unsqueeze %416 (vec 0)))
  (let (%421 (Concat %418 %419 %2611 0))
  (let (%422 (Reshape %410 %421))
  (let (%424 (MatMul %422 %2612))
  (let (%425 (Add %424 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%426 (Add %425 %349))
  (let (%428 (ReduceMean %426 (vec -1) 1))
  (let (%429 (Sub %426 %428))
  (let (%430 (Cast_FLOAT %429))
  (let (%432 (Pow %430 %2613))
  (let (%433 (ReduceMean %432 (vec -1) 1))
  (let (%434 (Constant 9.999999960041972e-13))
  (let (%435 (Add %433 %434))
  (let (%436 (Sqrt %435))
  (let (%437 (Div %429 %436))
  (let (%438 (Mul %437 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%439 (Add %438 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%441 (MatMul %439 %2614))
  (let (%442 (Add %441 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%443 (Constant 1.4142135381698608))
  (let (%444 (Div %442 %443))
  (let (%445 (Erf %444))
  (let (%446 (Constant 1.0))
  (let (%447 (Add %445 %446))
  (let (%448 (Mul %442 %447))
  (let (%449 (Constant 0.5))
  (let (%450 (Mul %448 %449))
  (let (%452 (MatMul %450 %2615))
  (let (%453 (Add %452 bert.encoder.layer.0.output.dense.bias))
  (let (%454 (Add %453 %439))
  (let (%456 (ReduceMean %454 (vec -1) 1))
  (let (%457 (Sub %454 %456))
  (let (%458 (Cast_FLOAT %457))
  (let (%460 (Pow %458 %2616))
  (let (%461 (ReduceMean %460 (vec -1) 1))
  (let (%462 (Constant 9.999999960041972e-13))
  (let (%463 (Add %461 %462))
  (let (%464 (Sqrt %463))
  (let (%465 (Div %457 %464))
  (let (%466 (Mul %465 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%467 (Add %466 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%469 (MatMul %467 %2617))
  (let (%470 (Add %469 bert.encoder.layer.1.attention.self.query.bias))
  (let (%472 (MatMul %467 %2618))
  (let (%473 (Add %472 bert.encoder.layer.1.attention.self.key.bias))
  (let (%475 (MatMul %467 %2619))
  (let (%476 (Add %475 bert.encoder.layer.1.attention.self.value.bias))
  (let (%477 (Shape %470))
  (let (%478 (Constant 0))
  (let (%479 (Gather %477 %478 0))
  (let (%480 (Shape %470))
  (let (%481 (Constant 1))
  (let (%482 (Gather %480 %481 0))
  (let (%485 (Unsqueeze %479 (vec 0)))
  (let (%486 (Unsqueeze %482 (vec 0)))
  (let (%489 (Concat %485 %486 %2620 %2621 0))
  (let (%490 (Reshape %470 %489))
  (let (%491 (Transpose %490 (vec 0 2 1 3)))
  (let (%492 (Shape %473))
  (let (%493 (Constant 0))
  (let (%494 (Gather %492 %493 0))
  (let (%495 (Shape %473))
  (let (%496 (Constant 1))
  (let (%497 (Gather %495 %496 0))
  (let (%500 (Unsqueeze %494 (vec 0)))
  (let (%501 (Unsqueeze %497 (vec 0)))
  (let (%504 (Concat %500 %501 %2622 %2623 0))
  (let (%505 (Reshape %473 %504))
  (let (%506 (Shape %476))
  (let (%507 (Constant 0))
  (let (%508 (Gather %506 %507 0))
  (let (%509 (Shape %476))
  (let (%510 (Constant 1))
  (let (%511 (Gather %509 %510 0))
  (let (%514 (Unsqueeze %508 (vec 0)))
  (let (%515 (Unsqueeze %511 (vec 0)))
  (let (%518 (Concat %514 %515 %2624 %2625 0))
  (let (%519 (Reshape %476 %518))
  (let (%520 (Transpose %519 (vec 0 2 1 3)))
  (let (%521 (Transpose %505 (vec 0 2 3 1)))
  (let (%522 (MatMul %491 %521))
  (let (%523 (Constant 8.0))
  (let (%524 (Div %522 %523))
  (let (%525 (Add %524 %321))
  (let (%526 (Softmax %525 3))
  (let (%527 (MatMul %526 %520))
  (let (%528 (Transpose %527 (vec 0 2 1 3)))
  (let (%529 (Shape %528))
  (let (%530 (Constant 0))
  (let (%531 (Gather %529 %530 0))
  (let (%532 (Shape %528))
  (let (%533 (Constant 1))
  (let (%534 (Gather %532 %533 0))
  (let (%536 (Unsqueeze %531 (vec 0)))
  (let (%537 (Unsqueeze %534 (vec 0)))
  (let (%539 (Concat %536 %537 %2626 0))
  (let (%540 (Reshape %528 %539))
  (let (%542 (MatMul %540 %2627))
  (let (%543 (Add %542 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%544 (Add %543 %467))
  (let (%546 (ReduceMean %544 (vec -1) 1))
  (let (%547 (Sub %544 %546))
  (let (%548 (Cast_FLOAT %547))
  (let (%550 (Pow %548 %2628))
  (let (%551 (ReduceMean %550 (vec -1) 1))
  (let (%552 (Constant 9.999999960041972e-13))
  (let (%553 (Add %551 %552))
  (let (%554 (Sqrt %553))
  (let (%555 (Div %547 %554))
  (let (%556 (Mul %555 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%557 (Add %556 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%559 (MatMul %557 %2629))
  (let (%560 (Add %559 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%561 (Constant 1.4142135381698608))
  (let (%562 (Div %560 %561))
  (let (%563 (Erf %562))
  (let (%564 (Constant 1.0))
  (let (%565 (Add %563 %564))
  (let (%566 (Mul %560 %565))
  (let (%567 (Constant 0.5))
  (let (%568 (Mul %566 %567))
  (let (%570 (MatMul %568 %2630))
  (let (%571 (Add %570 bert.encoder.layer.1.output.dense.bias))
  (let (%572 (Add %571 %557))
  (let (%574 (ReduceMean %572 (vec -1) 1))
  (let (%575 (Sub %572 %574))
  (let (%576 (Cast_FLOAT %575))
  (let (%578 (Pow %576 %2631))
  (let (%579 (ReduceMean %578 (vec -1) 1))
  (let (%580 (Constant 9.999999960041972e-13))
  (let (%581 (Add %579 %580))
  (let (%582 (Sqrt %581))
  (let (%583 (Div %575 %582))
  (let (%584 (Mul %583 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%585 (Add %584 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%587 (MatMul %585 %2632))
  (let (%588 (Add %587 bert.encoder.layer.2.attention.self.query.bias))
  (let (%590 (MatMul %585 %2633))
  (let (%591 (Add %590 bert.encoder.layer.2.attention.self.key.bias))
  (let (%593 (MatMul %585 %2634))
  (let (%594 (Add %593 bert.encoder.layer.2.attention.self.value.bias))
  (let (%595 (Shape %588))
  (let (%596 (Constant 0))
  (let (%597 (Gather %595 %596 0))
  (let (%598 (Shape %588))
  (let (%599 (Constant 1))
  (let (%600 (Gather %598 %599 0))
  (let (%603 (Unsqueeze %597 (vec 0)))
  (let (%604 (Unsqueeze %600 (vec 0)))
  (let (%607 (Concat %603 %604 %2635 %2636 0))
  (let (%608 (Reshape %588 %607))
  (let (%609 (Transpose %608 (vec 0 2 1 3)))
  (let (%610 (Shape %591))
  (let (%611 (Constant 0))
  (let (%612 (Gather %610 %611 0))
  (let (%613 (Shape %591))
  (let (%614 (Constant 1))
  (let (%615 (Gather %613 %614 0))
  (let (%618 (Unsqueeze %612 (vec 0)))
  (let (%619 (Unsqueeze %615 (vec 0)))
  (let (%622 (Concat %618 %619 %2637 %2638 0))
  (let (%623 (Reshape %591 %622))
  (let (%624 (Shape %594))
  (let (%625 (Constant 0))
  (let (%626 (Gather %624 %625 0))
  (let (%627 (Shape %594))
  (let (%628 (Constant 1))
  (let (%629 (Gather %627 %628 0))
  (let (%632 (Unsqueeze %626 (vec 0)))
  (let (%633 (Unsqueeze %629 (vec 0)))
  (let (%636 (Concat %632 %633 %2639 %2640 0))
  (let (%637 (Reshape %594 %636))
  (let (%638 (Transpose %637 (vec 0 2 1 3)))
  (let (%639 (Transpose %623 (vec 0 2 3 1)))
  (let (%640 (MatMul %609 %639))
  (let (%641 (Constant 8.0))
  (let (%642 (Div %640 %641))
  (let (%643 (Add %642 %321))
  (let (%644 (Softmax %643 3))
  (let (%645 (MatMul %644 %638))
  (let (%646 (Transpose %645 (vec 0 2 1 3)))
  (let (%647 (Shape %646))
  (let (%648 (Constant 0))
  (let (%649 (Gather %647 %648 0))
  (let (%650 (Shape %646))
  (let (%651 (Constant 1))
  (let (%652 (Gather %650 %651 0))
  (let (%654 (Unsqueeze %649 (vec 0)))
  (let (%655 (Unsqueeze %652 (vec 0)))
  (let (%657 (Concat %654 %655 %2641 0))
  (let (%658 (Reshape %646 %657))
  (let (%660 (MatMul %658 %2642))
  (let (%661 (Add %660 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%662 (Add %661 %585))
  (let (%664 (ReduceMean %662 (vec -1) 1))
  (let (%665 (Sub %662 %664))
  (let (%666 (Cast_FLOAT %665))
  (let (%668 (Pow %666 %2643))
  (let (%669 (ReduceMean %668 (vec -1) 1))
  (let (%670 (Constant 9.999999960041972e-13))
  (let (%671 (Add %669 %670))
  (let (%672 (Sqrt %671))
  (let (%673 (Div %665 %672))
  (let (%674 (Mul %673 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%675 (Add %674 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%677 (MatMul %675 %2644))
  (let (%678 (Add %677 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%679 (Constant 1.4142135381698608))
  (let (%680 (Div %678 %679))
  (let (%681 (Erf %680))
  (let (%682 (Constant 1.0))
  (let (%683 (Add %681 %682))
  (let (%684 (Mul %678 %683))
  (let (%685 (Constant 0.5))
  (let (%686 (Mul %684 %685))
  (let (%688 (MatMul %686 %2645))
  (let (%689 (Add %688 bert.encoder.layer.2.output.dense.bias))
  (let (%690 (Add %689 %675))
  (let (%692 (ReduceMean %690 (vec -1) 1))
  (let (%693 (Sub %690 %692))
  (let (%694 (Cast_FLOAT %693))
  (let (%696 (Pow %694 %2646))
  (let (%697 (ReduceMean %696 (vec -1) 1))
  (let (%698 (Constant 9.999999960041972e-13))
  (let (%699 (Add %697 %698))
  (let (%700 (Sqrt %699))
  (let (%701 (Div %693 %700))
  (let (%702 (Mul %701 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%703 (Add %702 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%705 (MatMul %703 %2647))
  (let (%706 (Add %705 bert.encoder.layer.3.attention.self.query.bias))
  (let (%708 (MatMul %703 %2648))
  (let (%709 (Add %708 bert.encoder.layer.3.attention.self.key.bias))
  (let (%711 (MatMul %703 %2649))
  (let (%712 (Add %711 bert.encoder.layer.3.attention.self.value.bias))
  (let (%713 (Shape %706))
  (let (%714 (Constant 0))
  (let (%715 (Gather %713 %714 0))
  (let (%716 (Shape %706))
  (let (%717 (Constant 1))
  (let (%718 (Gather %716 %717 0))
  (let (%721 (Unsqueeze %715 (vec 0)))
  (let (%722 (Unsqueeze %718 (vec 0)))
  (let (%725 (Concat %721 %722 %2650 %2651 0))
  (let (%726 (Reshape %706 %725))
  (let (%727 (Transpose %726 (vec 0 2 1 3)))
  (let (%728 (Shape %709))
  (let (%729 (Constant 0))
  (let (%730 (Gather %728 %729 0))
  (let (%731 (Shape %709))
  (let (%732 (Constant 1))
  (let (%733 (Gather %731 %732 0))
  (let (%736 (Unsqueeze %730 (vec 0)))
  (let (%737 (Unsqueeze %733 (vec 0)))
  (let (%740 (Concat %736 %737 %2652 %2653 0))
  (let (%741 (Reshape %709 %740))
  (let (%742 (Shape %712))
  (let (%743 (Constant 0))
  (let (%744 (Gather %742 %743 0))
  (let (%745 (Shape %712))
  (let (%746 (Constant 1))
  (let (%747 (Gather %745 %746 0))
  (let (%750 (Unsqueeze %744 (vec 0)))
  (let (%751 (Unsqueeze %747 (vec 0)))
  (let (%754 (Concat %750 %751 %2654 %2655 0))
  (let (%755 (Reshape %712 %754))
  (let (%756 (Transpose %755 (vec 0 2 1 3)))
  (let (%757 (Transpose %741 (vec 0 2 3 1)))
  (let (%758 (MatMul %727 %757))
  (let (%759 (Constant 8.0))
  (let (%760 (Div %758 %759))
  (let (%761 (Add %760 %321))
  (let (%762 (Softmax %761 3))
  (let (%763 (MatMul %762 %756))
  (let (%764 (Transpose %763 (vec 0 2 1 3)))
  (let (%765 (Shape %764))
  (let (%766 (Constant 0))
  (let (%767 (Gather %765 %766 0))
  (let (%768 (Shape %764))
  (let (%769 (Constant 1))
  (let (%770 (Gather %768 %769 0))
  (let (%772 (Unsqueeze %767 (vec 0)))
  (let (%773 (Unsqueeze %770 (vec 0)))
  (let (%775 (Concat %772 %773 %2656 0))
  (let (%776 (Reshape %764 %775))
  (let (%778 (MatMul %776 %2657))
  (let (%779 (Add %778 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%780 (Add %779 %703))
  (let (%782 (ReduceMean %780 (vec -1) 1))
  (let (%783 (Sub %780 %782))
  (let (%784 (Cast_FLOAT %783))
  (let (%786 (Pow %784 %2658))
  (let (%787 (ReduceMean %786 (vec -1) 1))
  (let (%788 (Constant 9.999999960041972e-13))
  (let (%789 (Add %787 %788))
  (let (%790 (Sqrt %789))
  (let (%791 (Div %783 %790))
  (let (%792 (Mul %791 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%793 (Add %792 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%795 (MatMul %793 %2659))
  (let (%796 (Add %795 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%797 (Constant 1.4142135381698608))
  (let (%798 (Div %796 %797))
  (let (%799 (Erf %798))
  (let (%800 (Constant 1.0))
  (let (%801 (Add %799 %800))
  (let (%802 (Mul %796 %801))
  (let (%803 (Constant 0.5))
  (let (%804 (Mul %802 %803))
  (let (%806 (MatMul %804 %2660))
  (let (%807 (Add %806 bert.encoder.layer.3.output.dense.bias))
  (let (%808 (Add %807 %793))
  (let (%810 (ReduceMean %808 (vec -1) 1))
  (let (%811 (Sub %808 %810))
  (let (%812 (Cast_FLOAT %811))
  (let (%814 (Pow %812 %2661))
  (let (%815 (ReduceMean %814 (vec -1) 1))
  (let (%816 (Constant 9.999999960041972e-13))
  (let (%817 (Add %815 %816))
  (let (%818 (Sqrt %817))
  (let (%819 (Div %811 %818))
  (let (%820 (Mul %819 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%821 (Add %820 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%823 (MatMul %821 %2662))
  (let (%824 (Add %823 bert.encoder.layer.4.attention.self.query.bias))
  (let (%826 (MatMul %821 %2663))
  (let (%827 (Add %826 bert.encoder.layer.4.attention.self.key.bias))
  (let (%829 (MatMul %821 %2664))
  (let (%830 (Add %829 bert.encoder.layer.4.attention.self.value.bias))
  (let (%831 (Shape %824))
  (let (%832 (Constant 0))
  (let (%833 (Gather %831 %832 0))
  (let (%834 (Shape %824))
  (let (%835 (Constant 1))
  (let (%836 (Gather %834 %835 0))
  (let (%839 (Unsqueeze %833 (vec 0)))
  (let (%840 (Unsqueeze %836 (vec 0)))
  (let (%843 (Concat %839 %840 %2665 %2666 0))
  (let (%844 (Reshape %824 %843))
  (let (%845 (Transpose %844 (vec 0 2 1 3)))
  (let (%846 (Shape %827))
  (let (%847 (Constant 0))
  (let (%848 (Gather %846 %847 0))
  (let (%849 (Shape %827))
  (let (%850 (Constant 1))
  (let (%851 (Gather %849 %850 0))
  (let (%854 (Unsqueeze %848 (vec 0)))
  (let (%855 (Unsqueeze %851 (vec 0)))
  (let (%858 (Concat %854 %855 %2667 %2668 0))
  (let (%859 (Reshape %827 %858))
  (let (%860 (Shape %830))
  (let (%861 (Constant 0))
  (let (%862 (Gather %860 %861 0))
  (let (%863 (Shape %830))
  (let (%864 (Constant 1))
  (let (%865 (Gather %863 %864 0))
  (let (%868 (Unsqueeze %862 (vec 0)))
  (let (%869 (Unsqueeze %865 (vec 0)))
  (let (%872 (Concat %868 %869 %2669 %2670 0))
  (let (%873 (Reshape %830 %872))
  (let (%874 (Transpose %873 (vec 0 2 1 3)))
  (let (%875 (Transpose %859 (vec 0 2 3 1)))
  (let (%876 (MatMul %845 %875))
  (let (%877 (Constant 8.0))
  (let (%878 (Div %876 %877))
  (let (%879 (Add %878 %321))
  (let (%880 (Softmax %879 3))
  (let (%881 (MatMul %880 %874))
  (let (%882 (Transpose %881 (vec 0 2 1 3)))
  (let (%883 (Shape %882))
  (let (%884 (Constant 0))
  (let (%885 (Gather %883 %884 0))
  (let (%886 (Shape %882))
  (let (%887 (Constant 1))
  (let (%888 (Gather %886 %887 0))
  (let (%890 (Unsqueeze %885 (vec 0)))
  (let (%891 (Unsqueeze %888 (vec 0)))
  (let (%893 (Concat %890 %891 %2671 0))
  (let (%894 (Reshape %882 %893))
  (let (%896 (MatMul %894 %2672))
  (let (%897 (Add %896 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%898 (Add %897 %821))
  (let (%900 (ReduceMean %898 (vec -1) 1))
  (let (%901 (Sub %898 %900))
  (let (%902 (Cast_FLOAT %901))
  (let (%904 (Pow %902 %2673))
  (let (%905 (ReduceMean %904 (vec -1) 1))
  (let (%906 (Constant 9.999999960041972e-13))
  (let (%907 (Add %905 %906))
  (let (%908 (Sqrt %907))
  (let (%909 (Div %901 %908))
  (let (%910 (Mul %909 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%911 (Add %910 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%913 (MatMul %911 %2674))
  (let (%914 (Add %913 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%915 (Constant 1.4142135381698608))
  (let (%916 (Div %914 %915))
  (let (%917 (Erf %916))
  (let (%918 (Constant 1.0))
  (let (%919 (Add %917 %918))
  (let (%920 (Mul %914 %919))
  (let (%921 (Constant 0.5))
  (let (%922 (Mul %920 %921))
  (let (%924 (MatMul %922 %2675))
  (let (%925 (Add %924 bert.encoder.layer.4.output.dense.bias))
  (let (%926 (Add %925 %911))
  (let (%928 (ReduceMean %926 (vec -1) 1))
  (let (%929 (Sub %926 %928))
  (let (%930 (Cast_FLOAT %929))
  (let (%932 (Pow %930 %2676))
  (let (%933 (ReduceMean %932 (vec -1) 1))
  (let (%934 (Constant 9.999999960041972e-13))
  (let (%935 (Add %933 %934))
  (let (%936 (Sqrt %935))
  (let (%937 (Div %929 %936))
  (let (%938 (Mul %937 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%939 (Add %938 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%941 (MatMul %939 %2677))
  (let (%942 (Add %941 bert.encoder.layer.5.attention.self.query.bias))
  (let (%944 (MatMul %939 %2678))
  (let (%945 (Add %944 bert.encoder.layer.5.attention.self.key.bias))
  (let (%947 (MatMul %939 %2679))
  (let (%948 (Add %947 bert.encoder.layer.5.attention.self.value.bias))
  (let (%949 (Shape %942))
  (let (%950 (Constant 0))
  (let (%951 (Gather %949 %950 0))
  (let (%952 (Shape %942))
  (let (%953 (Constant 1))
  (let (%954 (Gather %952 %953 0))
  (let (%957 (Unsqueeze %951 (vec 0)))
  (let (%958 (Unsqueeze %954 (vec 0)))
  (let (%961 (Concat %957 %958 %2680 %2681 0))
  (let (%962 (Reshape %942 %961))
  (let (%963 (Transpose %962 (vec 0 2 1 3)))
  (let (%964 (Shape %945))
  (let (%965 (Constant 0))
  (let (%966 (Gather %964 %965 0))
  (let (%967 (Shape %945))
  (let (%968 (Constant 1))
  (let (%969 (Gather %967 %968 0))
  (let (%972 (Unsqueeze %966 (vec 0)))
  (let (%973 (Unsqueeze %969 (vec 0)))
  (let (%976 (Concat %972 %973 %2682 %2683 0))
  (let (%977 (Reshape %945 %976))
  (let (%978 (Shape %948))
  (let (%979 (Constant 0))
  (let (%980 (Gather %978 %979 0))
  (let (%981 (Shape %948))
  (let (%982 (Constant 1))
  (let (%983 (Gather %981 %982 0))
  (let (%986 (Unsqueeze %980 (vec 0)))
  (let (%987 (Unsqueeze %983 (vec 0)))
  (let (%990 (Concat %986 %987 %2684 %2685 0))
  (let (%991 (Reshape %948 %990))
  (let (%992 (Transpose %991 (vec 0 2 1 3)))
  (let (%993 (Transpose %977 (vec 0 2 3 1)))
  (let (%994 (MatMul %963 %993))
  (let (%995 (Constant 8.0))
  (let (%996 (Div %994 %995))
  (let (%997 (Add %996 %321))
  (let (%998 (Softmax %997 3))
  (let (%999 (MatMul %998 %992))
  (let (%1000 (Transpose %999 (vec 0 2 1 3)))
  (let (%1001 (Shape %1000))
  (let (%1002 (Constant 0))
  (let (%1003 (Gather %1001 %1002 0))
  (let (%1004 (Shape %1000))
  (let (%1005 (Constant 1))
  (let (%1006 (Gather %1004 %1005 0))
  (let (%1008 (Unsqueeze %1003 (vec 0)))
  (let (%1009 (Unsqueeze %1006 (vec 0)))
  (let (%1011 (Concat %1008 %1009 %2686 0))
  (let (%1012 (Reshape %1000 %1011))
  (let (%1014 (MatMul %1012 %2687))
  (let (%1015 (Add %1014 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1016 (Add %1015 %939))
  (let (%1018 (ReduceMean %1016 (vec -1) 1))
  (let (%1019 (Sub %1016 %1018))
  (let (%1020 (Cast_FLOAT %1019))
  (let (%1022 (Pow %1020 %2688))
  (let (%1023 (ReduceMean %1022 (vec -1) 1))
  (let (%1024 (Constant 9.999999960041972e-13))
  (let (%1025 (Add %1023 %1024))
  (let (%1026 (Sqrt %1025))
  (let (%1027 (Div %1019 %1026))
  (let (%1028 (Mul %1027 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1029 (Add %1028 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1031 (MatMul %1029 %2689))
  (let (%1032 (Add %1031 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1033 (Constant 1.4142135381698608))
  (let (%1034 (Div %1032 %1033))
  (let (%1035 (Erf %1034))
  (let (%1036 (Constant 1.0))
  (let (%1037 (Add %1035 %1036))
  (let (%1038 (Mul %1032 %1037))
  (let (%1039 (Constant 0.5))
  (let (%1040 (Mul %1038 %1039))
  (let (%1042 (MatMul %1040 %2690))
  (let (%1043 (Add %1042 bert.encoder.layer.5.output.dense.bias))
  (let (%1044 (Add %1043 %1029))
  (let (%1046 (ReduceMean %1044 (vec -1) 1))
  (let (%1047 (Sub %1044 %1046))
  (let (%1048 (Cast_FLOAT %1047))
  (let (%1050 (Pow %1048 %2691))
  (let (%1051 (ReduceMean %1050 (vec -1) 1))
  (let (%1052 (Constant 9.999999960041972e-13))
  (let (%1053 (Add %1051 %1052))
  (let (%1054 (Sqrt %1053))
  (let (%1055 (Div %1047 %1054))
  (let (%1056 (Mul %1055 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1057 (Add %1056 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1059 (MatMul %1057 %2692))
  (let (%1060 (Add %1059 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1062 (MatMul %1057 %2693))
  (let (%1063 (Add %1062 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1065 (MatMul %1057 %2694))
  (let (%1066 (Add %1065 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1067 (Shape %1060))
  (let (%1068 (Constant 0))
  (let (%1069 (Gather %1067 %1068 0))
  (let (%1070 (Shape %1060))
  (let (%1071 (Constant 1))
  (let (%1072 (Gather %1070 %1071 0))
  (let (%1075 (Unsqueeze %1069 (vec 0)))
  (let (%1076 (Unsqueeze %1072 (vec 0)))
  (let (%1079 (Concat %1075 %1076 %2695 %2696 0))
  (let (%1080 (Reshape %1060 %1079))
  (let (%1081 (Transpose %1080 (vec 0 2 1 3)))
  (let (%1082 (Shape %1063))
  (let (%1083 (Constant 0))
  (let (%1084 (Gather %1082 %1083 0))
  (let (%1085 (Shape %1063))
  (let (%1086 (Constant 1))
  (let (%1087 (Gather %1085 %1086 0))
  (let (%1090 (Unsqueeze %1084 (vec 0)))
  (let (%1091 (Unsqueeze %1087 (vec 0)))
  (let (%1094 (Concat %1090 %1091 %2697 %2698 0))
  (let (%1095 (Reshape %1063 %1094))
  (let (%1096 (Shape %1066))
  (let (%1097 (Constant 0))
  (let (%1098 (Gather %1096 %1097 0))
  (let (%1099 (Shape %1066))
  (let (%1100 (Constant 1))
  (let (%1101 (Gather %1099 %1100 0))
  (let (%1104 (Unsqueeze %1098 (vec 0)))
  (let (%1105 (Unsqueeze %1101 (vec 0)))
  (let (%1108 (Concat %1104 %1105 %2699 %2700 0))
  (let (%1109 (Reshape %1066 %1108))
  (let (%1110 (Transpose %1109 (vec 0 2 1 3)))
  (let (%1111 (Transpose %1095 (vec 0 2 3 1)))
  (let (%1112 (MatMul %1081 %1111))
  (let (%1113 (Constant 8.0))
  (let (%1114 (Div %1112 %1113))
  (let (%1115 (Add %1114 %321))
  (let (%1116 (Softmax %1115 3))
  (let (%1117 (MatMul %1116 %1110))
  (let (%1118 (Transpose %1117 (vec 0 2 1 3)))
  (let (%1119 (Shape %1118))
  (let (%1120 (Constant 0))
  (let (%1121 (Gather %1119 %1120 0))
  (let (%1122 (Shape %1118))
  (let (%1123 (Constant 1))
  (let (%1124 (Gather %1122 %1123 0))
  (let (%1126 (Unsqueeze %1121 (vec 0)))
  (let (%1127 (Unsqueeze %1124 (vec 0)))
  (let (%1129 (Concat %1126 %1127 %2701 0))
  (let (%1130 (Reshape %1118 %1129))
  (let (%1132 (MatMul %1130 %2702))
  (let (%1133 (Add %1132 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1134 (Add %1133 %1057))
  (let (%1136 (ReduceMean %1134 (vec -1) 1))
  (let (%1137 (Sub %1134 %1136))
  (let (%1138 (Cast_FLOAT %1137))
  (let (%1140 (Pow %1138 %2703))
  (let (%1141 (ReduceMean %1140 (vec -1) 1))
  (let (%1142 (Constant 9.999999960041972e-13))
  (let (%1143 (Add %1141 %1142))
  (let (%1144 (Sqrt %1143))
  (let (%1145 (Div %1137 %1144))
  (let (%1146 (Mul %1145 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1147 (Add %1146 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1149 (MatMul %1147 %2704))
  (let (%1150 (Add %1149 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1151 (Constant 1.4142135381698608))
  (let (%1152 (Div %1150 %1151))
  (let (%1153 (Erf %1152))
  (let (%1154 (Constant 1.0))
  (let (%1155 (Add %1153 %1154))
  (let (%1156 (Mul %1150 %1155))
  (let (%1157 (Constant 0.5))
  (let (%1158 (Mul %1156 %1157))
  (let (%1160 (MatMul %1158 %2705))
  (let (%1161 (Add %1160 bert.encoder.layer.6.output.dense.bias))
  (let (%1162 (Add %1161 %1147))
  (let (%1164 (ReduceMean %1162 (vec -1) 1))
  (let (%1165 (Sub %1162 %1164))
  (let (%1166 (Cast_FLOAT %1165))
  (let (%1168 (Pow %1166 %2706))
  (let (%1169 (ReduceMean %1168 (vec -1) 1))
  (let (%1170 (Constant 9.999999960041972e-13))
  (let (%1171 (Add %1169 %1170))
  (let (%1172 (Sqrt %1171))
  (let (%1173 (Div %1165 %1172))
  (let (%1174 (Mul %1173 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1175 (Add %1174 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1177 (MatMul %1175 %2707))
  (let (%1178 (Add %1177 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1180 (MatMul %1175 %2708))
  (let (%1181 (Add %1180 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1183 (MatMul %1175 %2709))
  (let (%1184 (Add %1183 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1185 (Shape %1178))
  (let (%1186 (Constant 0))
  (let (%1187 (Gather %1185 %1186 0))
  (let (%1188 (Shape %1178))
  (let (%1189 (Constant 1))
  (let (%1190 (Gather %1188 %1189 0))
  (let (%1193 (Unsqueeze %1187 (vec 0)))
  (let (%1194 (Unsqueeze %1190 (vec 0)))
  (let (%1197 (Concat %1193 %1194 %2710 %2711 0))
  (let (%1198 (Reshape %1178 %1197))
  (let (%1199 (Transpose %1198 (vec 0 2 1 3)))
  (let (%1200 (Shape %1181))
  (let (%1201 (Constant 0))
  (let (%1202 (Gather %1200 %1201 0))
  (let (%1203 (Shape %1181))
  (let (%1204 (Constant 1))
  (let (%1205 (Gather %1203 %1204 0))
  (let (%1208 (Unsqueeze %1202 (vec 0)))
  (let (%1209 (Unsqueeze %1205 (vec 0)))
  (let (%1212 (Concat %1208 %1209 %2712 %2713 0))
  (let (%1213 (Reshape %1181 %1212))
  (let (%1214 (Shape %1184))
  (let (%1215 (Constant 0))
  (let (%1216 (Gather %1214 %1215 0))
  (let (%1217 (Shape %1184))
  (let (%1218 (Constant 1))
  (let (%1219 (Gather %1217 %1218 0))
  (let (%1222 (Unsqueeze %1216 (vec 0)))
  (let (%1223 (Unsqueeze %1219 (vec 0)))
  (let (%1226 (Concat %1222 %1223 %2714 %2715 0))
  (let (%1227 (Reshape %1184 %1226))
  (let (%1228 (Transpose %1227 (vec 0 2 1 3)))
  (let (%1229 (Transpose %1213 (vec 0 2 3 1)))
  (let (%1230 (MatMul %1199 %1229))
  (let (%1231 (Constant 8.0))
  (let (%1232 (Div %1230 %1231))
  (let (%1233 (Add %1232 %321))
  (let (%1234 (Softmax %1233 3))
  (let (%1235 (MatMul %1234 %1228))
  (let (%1236 (Transpose %1235 (vec 0 2 1 3)))
  (let (%1237 (Shape %1236))
  (let (%1238 (Constant 0))
  (let (%1239 (Gather %1237 %1238 0))
  (let (%1240 (Shape %1236))
  (let (%1241 (Constant 1))
  (let (%1242 (Gather %1240 %1241 0))
  (let (%1244 (Unsqueeze %1239 (vec 0)))
  (let (%1245 (Unsqueeze %1242 (vec 0)))
  (let (%1247 (Concat %1244 %1245 %2716 0))
  (let (%1248 (Reshape %1236 %1247))
  (let (%1250 (MatMul %1248 %2717))
  (let (%1251 (Add %1250 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1252 (Add %1251 %1175))
  (let (%1254 (ReduceMean %1252 (vec -1) 1))
  (let (%1255 (Sub %1252 %1254))
  (let (%1256 (Cast_FLOAT %1255))
  (let (%1258 (Pow %1256 %2718))
  (let (%1259 (ReduceMean %1258 (vec -1) 1))
  (let (%1260 (Constant 9.999999960041972e-13))
  (let (%1261 (Add %1259 %1260))
  (let (%1262 (Sqrt %1261))
  (let (%1263 (Div %1255 %1262))
  (let (%1264 (Mul %1263 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1265 (Add %1264 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1267 (MatMul %1265 %2719))
  (let (%1268 (Add %1267 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1269 (Constant 1.4142135381698608))
  (let (%1270 (Div %1268 %1269))
  (let (%1271 (Erf %1270))
  (let (%1272 (Constant 1.0))
  (let (%1273 (Add %1271 %1272))
  (let (%1274 (Mul %1268 %1273))
  (let (%1275 (Constant 0.5))
  (let (%1276 (Mul %1274 %1275))
  (let (%1278 (MatMul %1276 %2720))
  (let (%1279 (Add %1278 bert.encoder.layer.7.output.dense.bias))
  (let (%1280 (Add %1279 %1265))
  (let (%1282 (ReduceMean %1280 (vec -1) 1))
  (let (%1283 (Sub %1280 %1282))
  (let (%1284 (Cast_FLOAT %1283))
  (let (%1286 (Pow %1284 %2721))
  (let (%1287 (ReduceMean %1286 (vec -1) 1))
  (let (%1288 (Constant 9.999999960041972e-13))
  (let (%1289 (Add %1287 %1288))
  (let (%1290 (Sqrt %1289))
  (let (%1291 (Div %1283 %1290))
  (let (%1292 (Mul %1291 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1293 (Add %1292 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1295 (MatMul %1293 %2722))
  (let (%1296 (Add %1295 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1298 (MatMul %1293 %2723))
  (let (%1299 (Add %1298 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1301 (MatMul %1293 %2724))
  (let (%1302 (Add %1301 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1303 (Shape %1296))
  (let (%1304 (Constant 0))
  (let (%1305 (Gather %1303 %1304 0))
  (let (%1306 (Shape %1296))
  (let (%1307 (Constant 1))
  (let (%1308 (Gather %1306 %1307 0))
  (let (%1311 (Unsqueeze %1305 (vec 0)))
  (let (%1312 (Unsqueeze %1308 (vec 0)))
  (let (%1315 (Concat %1311 %1312 %2725 %2726 0))
  (let (%1316 (Reshape %1296 %1315))
  (let (%1317 (Transpose %1316 (vec 0 2 1 3)))
  (let (%1318 (Shape %1299))
  (let (%1319 (Constant 0))
  (let (%1320 (Gather %1318 %1319 0))
  (let (%1321 (Shape %1299))
  (let (%1322 (Constant 1))
  (let (%1323 (Gather %1321 %1322 0))
  (let (%1326 (Unsqueeze %1320 (vec 0)))
  (let (%1327 (Unsqueeze %1323 (vec 0)))
  (let (%1330 (Concat %1326 %1327 %2727 %2728 0))
  (let (%1331 (Reshape %1299 %1330))
  (let (%1332 (Shape %1302))
  (let (%1333 (Constant 0))
  (let (%1334 (Gather %1332 %1333 0))
  (let (%1335 (Shape %1302))
  (let (%1336 (Constant 1))
  (let (%1337 (Gather %1335 %1336 0))
  (let (%1340 (Unsqueeze %1334 (vec 0)))
  (let (%1341 (Unsqueeze %1337 (vec 0)))
  (let (%1344 (Concat %1340 %1341 %2729 %2730 0))
  (let (%1345 (Reshape %1302 %1344))
  (let (%1346 (Transpose %1345 (vec 0 2 1 3)))
  (let (%1347 (Transpose %1331 (vec 0 2 3 1)))
  (let (%1348 (MatMul %1317 %1347))
  (let (%1349 (Constant 8.0))
  (let (%1350 (Div %1348 %1349))
  (let (%1351 (Add %1350 %321))
  (let (%1352 (Softmax %1351 3))
  (let (%1353 (MatMul %1352 %1346))
  (let (%1354 (Transpose %1353 (vec 0 2 1 3)))
  (let (%1355 (Shape %1354))
  (let (%1356 (Constant 0))
  (let (%1357 (Gather %1355 %1356 0))
  (let (%1358 (Shape %1354))
  (let (%1359 (Constant 1))
  (let (%1360 (Gather %1358 %1359 0))
  (let (%1362 (Unsqueeze %1357 (vec 0)))
  (let (%1363 (Unsqueeze %1360 (vec 0)))
  (let (%1365 (Concat %1362 %1363 %2731 0))
  (let (%1366 (Reshape %1354 %1365))
  (let (%1368 (MatMul %1366 %2732))
  (let (%1369 (Add %1368 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1370 (Add %1369 %1293))
  (let (%1372 (ReduceMean %1370 (vec -1) 1))
  (let (%1373 (Sub %1370 %1372))
  (let (%1374 (Cast_FLOAT %1373))
  (let (%1376 (Pow %1374 %2733))
  (let (%1377 (ReduceMean %1376 (vec -1) 1))
  (let (%1378 (Constant 9.999999960041972e-13))
  (let (%1379 (Add %1377 %1378))
  (let (%1380 (Sqrt %1379))
  (let (%1381 (Div %1373 %1380))
  (let (%1382 (Mul %1381 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1383 (Add %1382 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1385 (MatMul %1383 %2734))
  (let (%1386 (Add %1385 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1387 (Constant 1.4142135381698608))
  (let (%1388 (Div %1386 %1387))
  (let (%1389 (Erf %1388))
  (let (%1390 (Constant 1.0))
  (let (%1391 (Add %1389 %1390))
  (let (%1392 (Mul %1386 %1391))
  (let (%1393 (Constant 0.5))
  (let (%1394 (Mul %1392 %1393))
  (let (%1396 (MatMul %1394 %2735))
  (let (%1397 (Add %1396 bert.encoder.layer.8.output.dense.bias))
  (let (%1398 (Add %1397 %1383))
  (let (%1400 (ReduceMean %1398 (vec -1) 1))
  (let (%1401 (Sub %1398 %1400))
  (let (%1402 (Cast_FLOAT %1401))
  (let (%1404 (Pow %1402 %2736))
  (let (%1405 (ReduceMean %1404 (vec -1) 1))
  (let (%1406 (Constant 9.999999960041972e-13))
  (let (%1407 (Add %1405 %1406))
  (let (%1408 (Sqrt %1407))
  (let (%1409 (Div %1401 %1408))
  (let (%1410 (Mul %1409 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1411 (Add %1410 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1413 (MatMul %1411 %2737))
  (let (%1414 (Add %1413 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1416 (MatMul %1411 %2738))
  (let (%1417 (Add %1416 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1419 (MatMul %1411 %2739))
  (let (%1420 (Add %1419 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1421 (Shape %1414))
  (let (%1422 (Constant 0))
  (let (%1423 (Gather %1421 %1422 0))
  (let (%1424 (Shape %1414))
  (let (%1425 (Constant 1))
  (let (%1426 (Gather %1424 %1425 0))
  (let (%1429 (Unsqueeze %1423 (vec 0)))
  (let (%1430 (Unsqueeze %1426 (vec 0)))
  (let (%1433 (Concat %1429 %1430 %2740 %2741 0))
  (let (%1434 (Reshape %1414 %1433))
  (let (%1435 (Transpose %1434 (vec 0 2 1 3)))
  (let (%1436 (Shape %1417))
  (let (%1437 (Constant 0))
  (let (%1438 (Gather %1436 %1437 0))
  (let (%1439 (Shape %1417))
  (let (%1440 (Constant 1))
  (let (%1441 (Gather %1439 %1440 0))
  (let (%1444 (Unsqueeze %1438 (vec 0)))
  (let (%1445 (Unsqueeze %1441 (vec 0)))
  (let (%1448 (Concat %1444 %1445 %2742 %2743 0))
  (let (%1449 (Reshape %1417 %1448))
  (let (%1450 (Shape %1420))
  (let (%1451 (Constant 0))
  (let (%1452 (Gather %1450 %1451 0))
  (let (%1453 (Shape %1420))
  (let (%1454 (Constant 1))
  (let (%1455 (Gather %1453 %1454 0))
  (let (%1458 (Unsqueeze %1452 (vec 0)))
  (let (%1459 (Unsqueeze %1455 (vec 0)))
  (let (%1462 (Concat %1458 %1459 %2744 %2745 0))
  (let (%1463 (Reshape %1420 %1462))
  (let (%1464 (Transpose %1463 (vec 0 2 1 3)))
  (let (%1465 (Transpose %1449 (vec 0 2 3 1)))
  (let (%1466 (MatMul %1435 %1465))
  (let (%1467 (Constant 8.0))
  (let (%1468 (Div %1466 %1467))
  (let (%1469 (Add %1468 %321))
  (let (%1470 (Softmax %1469 3))
  (let (%1471 (MatMul %1470 %1464))
  (let (%1472 (Transpose %1471 (vec 0 2 1 3)))
  (let (%1473 (Shape %1472))
  (let (%1474 (Constant 0))
  (let (%1475 (Gather %1473 %1474 0))
  (let (%1476 (Shape %1472))
  (let (%1477 (Constant 1))
  (let (%1478 (Gather %1476 %1477 0))
  (let (%1480 (Unsqueeze %1475 (vec 0)))
  (let (%1481 (Unsqueeze %1478 (vec 0)))
  (let (%1483 (Concat %1480 %1481 %2746 0))
  (let (%1484 (Reshape %1472 %1483))
  (let (%1486 (MatMul %1484 %2747))
  (let (%1487 (Add %1486 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1488 (Add %1487 %1411))
  (let (%1490 (ReduceMean %1488 (vec -1) 1))
  (let (%1491 (Sub %1488 %1490))
  (let (%1492 (Cast_FLOAT %1491))
  (let (%1494 (Pow %1492 %2748))
  (let (%1495 (ReduceMean %1494 (vec -1) 1))
  (let (%1496 (Constant 9.999999960041972e-13))
  (let (%1497 (Add %1495 %1496))
  (let (%1498 (Sqrt %1497))
  (let (%1499 (Div %1491 %1498))
  (let (%1500 (Mul %1499 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1501 (Add %1500 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1503 (MatMul %1501 %2749))
  (let (%1504 (Add %1503 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1505 (Constant 1.4142135381698608))
  (let (%1506 (Div %1504 %1505))
  (let (%1507 (Erf %1506))
  (let (%1508 (Constant 1.0))
  (let (%1509 (Add %1507 %1508))
  (let (%1510 (Mul %1504 %1509))
  (let (%1511 (Constant 0.5))
  (let (%1512 (Mul %1510 %1511))
  (let (%1514 (MatMul %1512 %2750))
  (let (%1515 (Add %1514 bert.encoder.layer.9.output.dense.bias))
  (let (%1516 (Add %1515 %1501))
  (let (%1518 (ReduceMean %1516 (vec -1) 1))
  (let (%1519 (Sub %1516 %1518))
  (let (%1520 (Cast_FLOAT %1519))
  (let (%1522 (Pow %1520 %2751))
  (let (%1523 (ReduceMean %1522 (vec -1) 1))
  (let (%1524 (Constant 9.999999960041972e-13))
  (let (%1525 (Add %1523 %1524))
  (let (%1526 (Sqrt %1525))
  (let (%1527 (Div %1519 %1526))
  (let (%1528 (Mul %1527 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1529 (Add %1528 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1531 (MatMul %1529 %2752))
  (let (%1532 (Add %1531 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1534 (MatMul %1529 %2753))
  (let (%1535 (Add %1534 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1537 (MatMul %1529 %2754))
  (let (%1538 (Add %1537 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1539 (Shape %1532))
  (let (%1540 (Constant 0))
  (let (%1541 (Gather %1539 %1540 0))
  (let (%1542 (Shape %1532))
  (let (%1543 (Constant 1))
  (let (%1544 (Gather %1542 %1543 0))
  (let (%1547 (Unsqueeze %1541 (vec 0)))
  (let (%1548 (Unsqueeze %1544 (vec 0)))
  (let (%1551 (Concat %1547 %1548 %2755 %2756 0))
  (let (%1552 (Reshape %1532 %1551))
  (let (%1553 (Transpose %1552 (vec 0 2 1 3)))
  (let (%1554 (Shape %1535))
  (let (%1555 (Constant 0))
  (let (%1556 (Gather %1554 %1555 0))
  (let (%1557 (Shape %1535))
  (let (%1558 (Constant 1))
  (let (%1559 (Gather %1557 %1558 0))
  (let (%1562 (Unsqueeze %1556 (vec 0)))
  (let (%1563 (Unsqueeze %1559 (vec 0)))
  (let (%1566 (Concat %1562 %1563 %2757 %2758 0))
  (let (%1567 (Reshape %1535 %1566))
  (let (%1568 (Shape %1538))
  (let (%1569 (Constant 0))
  (let (%1570 (Gather %1568 %1569 0))
  (let (%1571 (Shape %1538))
  (let (%1572 (Constant 1))
  (let (%1573 (Gather %1571 %1572 0))
  (let (%1576 (Unsqueeze %1570 (vec 0)))
  (let (%1577 (Unsqueeze %1573 (vec 0)))
  (let (%1580 (Concat %1576 %1577 %2759 %2760 0))
  (let (%1581 (Reshape %1538 %1580))
  (let (%1582 (Transpose %1581 (vec 0 2 1 3)))
  (let (%1583 (Transpose %1567 (vec 0 2 3 1)))
  (let (%1584 (MatMul %1553 %1583))
  (let (%1585 (Constant 8.0))
  (let (%1586 (Div %1584 %1585))
  (let (%1587 (Add %1586 %321))
  (let (%1588 (Softmax %1587 3))
  (let (%1589 (MatMul %1588 %1582))
  (let (%1590 (Transpose %1589 (vec 0 2 1 3)))
  (let (%1591 (Shape %1590))
  (let (%1592 (Constant 0))
  (let (%1593 (Gather %1591 %1592 0))
  (let (%1594 (Shape %1590))
  (let (%1595 (Constant 1))
  (let (%1596 (Gather %1594 %1595 0))
  (let (%1598 (Unsqueeze %1593 (vec 0)))
  (let (%1599 (Unsqueeze %1596 (vec 0)))
  (let (%1601 (Concat %1598 %1599 %2761 0))
  (let (%1602 (Reshape %1590 %1601))
  (let (%1604 (MatMul %1602 %2762))
  (let (%1605 (Add %1604 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1606 (Add %1605 %1529))
  (let (%1608 (ReduceMean %1606 (vec -1) 1))
  (let (%1609 (Sub %1606 %1608))
  (let (%1610 (Cast_FLOAT %1609))
  (let (%1612 (Pow %1610 %2763))
  (let (%1613 (ReduceMean %1612 (vec -1) 1))
  (let (%1614 (Constant 9.999999960041972e-13))
  (let (%1615 (Add %1613 %1614))
  (let (%1616 (Sqrt %1615))
  (let (%1617 (Div %1609 %1616))
  (let (%1618 (Mul %1617 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1619 (Add %1618 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1621 (MatMul %1619 %2764))
  (let (%1622 (Add %1621 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1623 (Constant 1.4142135381698608))
  (let (%1624 (Div %1622 %1623))
  (let (%1625 (Erf %1624))
  (let (%1626 (Constant 1.0))
  (let (%1627 (Add %1625 %1626))
  (let (%1628 (Mul %1622 %1627))
  (let (%1629 (Constant 0.5))
  (let (%1630 (Mul %1628 %1629))
  (let (%1632 (MatMul %1630 %2765))
  (let (%1633 (Add %1632 bert.encoder.layer.10.output.dense.bias))
  (let (%1634 (Add %1633 %1619))
  (let (%1636 (ReduceMean %1634 (vec -1) 1))
  (let (%1637 (Sub %1634 %1636))
  (let (%1638 (Cast_FLOAT %1637))
  (let (%1640 (Pow %1638 %2766))
  (let (%1641 (ReduceMean %1640 (vec -1) 1))
  (let (%1642 (Constant 9.999999960041972e-13))
  (let (%1643 (Add %1641 %1642))
  (let (%1644 (Sqrt %1643))
  (let (%1645 (Div %1637 %1644))
  (let (%1646 (Mul %1645 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1647 (Add %1646 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1649 (MatMul %1647 %2767))
  (let (%1650 (Add %1649 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1652 (MatMul %1647 %2768))
  (let (%1653 (Add %1652 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1655 (MatMul %1647 %2769))
  (let (%1656 (Add %1655 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1657 (Shape %1650))
  (let (%1658 (Constant 0))
  (let (%1659 (Gather %1657 %1658 0))
  (let (%1660 (Shape %1650))
  (let (%1661 (Constant 1))
  (let (%1662 (Gather %1660 %1661 0))
  (let (%1665 (Unsqueeze %1659 (vec 0)))
  (let (%1666 (Unsqueeze %1662 (vec 0)))
  (let (%1669 (Concat %1665 %1666 %2770 %2771 0))
  (let (%1670 (Reshape %1650 %1669))
  (let (%1671 (Transpose %1670 (vec 0 2 1 3)))
  (let (%1672 (Shape %1653))
  (let (%1673 (Constant 0))
  (let (%1674 (Gather %1672 %1673 0))
  (let (%1675 (Shape %1653))
  (let (%1676 (Constant 1))
  (let (%1677 (Gather %1675 %1676 0))
  (let (%1680 (Unsqueeze %1674 (vec 0)))
  (let (%1681 (Unsqueeze %1677 (vec 0)))
  (let (%1684 (Concat %1680 %1681 %2772 %2773 0))
  (let (%1685 (Reshape %1653 %1684))
  (let (%1686 (Shape %1656))
  (let (%1687 (Constant 0))
  (let (%1688 (Gather %1686 %1687 0))
  (let (%1689 (Shape %1656))
  (let (%1690 (Constant 1))
  (let (%1691 (Gather %1689 %1690 0))
  (let (%1694 (Unsqueeze %1688 (vec 0)))
  (let (%1695 (Unsqueeze %1691 (vec 0)))
  (let (%1698 (Concat %1694 %1695 %2774 %2775 0))
  (let (%1699 (Reshape %1656 %1698))
  (let (%1700 (Transpose %1699 (vec 0 2 1 3)))
  (let (%1701 (Transpose %1685 (vec 0 2 3 1)))
  (let (%1702 (MatMul %1671 %1701))
  (let (%1703 (Constant 8.0))
  (let (%1704 (Div %1702 %1703))
  (let (%1705 (Add %1704 %321))
  (let (%1706 (Softmax %1705 3))
  (let (%1707 (MatMul %1706 %1700))
  (let (%1708 (Transpose %1707 (vec 0 2 1 3)))
  (let (%1709 (Shape %1708))
  (let (%1710 (Constant 0))
  (let (%1711 (Gather %1709 %1710 0))
  (let (%1712 (Shape %1708))
  (let (%1713 (Constant 1))
  (let (%1714 (Gather %1712 %1713 0))
  (let (%1716 (Unsqueeze %1711 (vec 0)))
  (let (%1717 (Unsqueeze %1714 (vec 0)))
  (let (%1719 (Concat %1716 %1717 %2776 0))
  (let (%1720 (Reshape %1708 %1719))
  (let (%1722 (MatMul %1720 %2777))
  (let (%1723 (Add %1722 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1724 (Add %1723 %1647))
  (let (%1726 (ReduceMean %1724 (vec -1) 1))
  (let (%1727 (Sub %1724 %1726))
  (let (%1728 (Cast_FLOAT %1727))
  (let (%1730 (Pow %1728 %2778))
  (let (%1731 (ReduceMean %1730 (vec -1) 1))
  (let (%1732 (Constant 9.999999960041972e-13))
  (let (%1733 (Add %1731 %1732))
  (let (%1734 (Sqrt %1733))
  (let (%1735 (Div %1727 %1734))
  (let (%1736 (Mul %1735 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1737 (Add %1736 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1739 (MatMul %1737 %2779))
  (let (%1740 (Add %1739 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1741 (Constant 1.4142135381698608))
  (let (%1742 (Div %1740 %1741))
  (let (%1743 (Erf %1742))
  (let (%1744 (Constant 1.0))
  (let (%1745 (Add %1743 %1744))
  (let (%1746 (Mul %1740 %1745))
  (let (%1747 (Constant 0.5))
  (let (%1748 (Mul %1746 %1747))
  (let (%1750 (MatMul %1748 %2780))
  (let (%1751 (Add %1750 bert.encoder.layer.11.output.dense.bias))
  (let (%1752 (Add %1751 %1737))
  (let (%1754 (ReduceMean %1752 (vec -1) 1))
  (let (%1755 (Sub %1752 %1754))
  (let (%1756 (Cast_FLOAT %1755))
  (let (%1758 (Pow %1756 %2781))
  (let (%1759 (ReduceMean %1758 (vec -1) 1))
  (let (%1760 (Constant 9.999999960041972e-13))
  (let (%1761 (Add %1759 %1760))
  (let (%1762 (Sqrt %1761))
  (let (%1763 (Div %1755 %1762))
  (let (%1764 (Mul %1763 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1765 (Add %1764 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1767 (MatMul %1765 %2782))
  (let (%1768 (Add %1767 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1770 (MatMul %1765 %2783))
  (let (%1771 (Add %1770 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1773 (MatMul %1765 %2784))
  (let (%1774 (Add %1773 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1775 (Shape %1768))
  (let (%1776 (Constant 0))
  (let (%1777 (Gather %1775 %1776 0))
  (let (%1778 (Shape %1768))
  (let (%1779 (Constant 1))
  (let (%1780 (Gather %1778 %1779 0))
  (let (%1783 (Unsqueeze %1777 (vec 0)))
  (let (%1784 (Unsqueeze %1780 (vec 0)))
  (let (%1787 (Concat %1783 %1784 %2785 %2786 0))
  (let (%1788 (Reshape %1768 %1787))
  (let (%1789 (Transpose %1788 (vec 0 2 1 3)))
  (let (%1790 (Shape %1771))
  (let (%1791 (Constant 0))
  (let (%1792 (Gather %1790 %1791 0))
  (let (%1793 (Shape %1771))
  (let (%1794 (Constant 1))
  (let (%1795 (Gather %1793 %1794 0))
  (let (%1798 (Unsqueeze %1792 (vec 0)))
  (let (%1799 (Unsqueeze %1795 (vec 0)))
  (let (%1802 (Concat %1798 %1799 %2787 %2788 0))
  (let (%1803 (Reshape %1771 %1802))
  (let (%1804 (Shape %1774))
  (let (%1805 (Constant 0))
  (let (%1806 (Gather %1804 %1805 0))
  (let (%1807 (Shape %1774))
  (let (%1808 (Constant 1))
  (let (%1809 (Gather %1807 %1808 0))
  (let (%1812 (Unsqueeze %1806 (vec 0)))
  (let (%1813 (Unsqueeze %1809 (vec 0)))
  (let (%1816 (Concat %1812 %1813 %2789 %2790 0))
  (let (%1817 (Reshape %1774 %1816))
  (let (%1818 (Transpose %1817 (vec 0 2 1 3)))
  (let (%1819 (Transpose %1803 (vec 0 2 3 1)))
  (let (%1820 (MatMul %1789 %1819))
  (let (%1821 (Constant 8.0))
  (let (%1822 (Div %1820 %1821))
  (let (%1823 (Add %1822 %321))
  (let (%1824 (Softmax %1823 3))
  (let (%1825 (MatMul %1824 %1818))
  (let (%1826 (Transpose %1825 (vec 0 2 1 3)))
  (let (%1827 (Shape %1826))
  (let (%1828 (Constant 0))
  (let (%1829 (Gather %1827 %1828 0))
  (let (%1830 (Shape %1826))
  (let (%1831 (Constant 1))
  (let (%1832 (Gather %1830 %1831 0))
  (let (%1834 (Unsqueeze %1829 (vec 0)))
  (let (%1835 (Unsqueeze %1832 (vec 0)))
  (let (%1837 (Concat %1834 %1835 %2791 0))
  (let (%1838 (Reshape %1826 %1837))
  (let (%1840 (MatMul %1838 %2792))
  (let (%1841 (Add %1840 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1842 (Add %1841 %1765))
  (let (%1844 (ReduceMean %1842 (vec -1) 1))
  (let (%1845 (Sub %1842 %1844))
  (let (%1846 (Cast_FLOAT %1845))
  (let (%1848 (Pow %1846 %2793))
  (let (%1849 (ReduceMean %1848 (vec -1) 1))
  (let (%1850 (Constant 9.999999960041972e-13))
  (let (%1851 (Add %1849 %1850))
  (let (%1852 (Sqrt %1851))
  (let (%1853 (Div %1845 %1852))
  (let (%1854 (Mul %1853 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1855 (Add %1854 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1857 (MatMul %1855 %2794))
  (let (%1858 (Add %1857 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1859 (Constant 1.4142135381698608))
  (let (%1860 (Div %1858 %1859))
  (let (%1861 (Erf %1860))
  (let (%1862 (Constant 1.0))
  (let (%1863 (Add %1861 %1862))
  (let (%1864 (Mul %1858 %1863))
  (let (%1865 (Constant 0.5))
  (let (%1866 (Mul %1864 %1865))
  (let (%1868 (MatMul %1866 %2795))
  (let (%1869 (Add %1868 bert.encoder.layer.12.output.dense.bias))
  (let (%1870 (Add %1869 %1855))
  (let (%1872 (ReduceMean %1870 (vec -1) 1))
  (let (%1873 (Sub %1870 %1872))
  (let (%1874 (Cast_FLOAT %1873))
  (let (%1876 (Pow %1874 %2796))
  (let (%1877 (ReduceMean %1876 (vec -1) 1))
  (let (%1878 (Constant 9.999999960041972e-13))
  (let (%1879 (Add %1877 %1878))
  (let (%1880 (Sqrt %1879))
  (let (%1881 (Div %1873 %1880))
  (let (%1882 (Mul %1881 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1883 (Add %1882 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1885 (MatMul %1883 %2797))
  (let (%1886 (Add %1885 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1888 (MatMul %1883 %2798))
  (let (%1889 (Add %1888 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1891 (MatMul %1883 %2799))
  (let (%1892 (Add %1891 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1893 (Shape %1886))
  (let (%1894 (Constant 0))
  (let (%1895 (Gather %1893 %1894 0))
  (let (%1896 (Shape %1886))
  (let (%1897 (Constant 1))
  (let (%1898 (Gather %1896 %1897 0))
  (let (%1901 (Unsqueeze %1895 (vec 0)))
  (let (%1902 (Unsqueeze %1898 (vec 0)))
  (let (%1905 (Concat %1901 %1902 %2800 %2801 0))
  (let (%1906 (Reshape %1886 %1905))
  (let (%1907 (Transpose %1906 (vec 0 2 1 3)))
  (let (%1908 (Shape %1889))
  (let (%1909 (Constant 0))
  (let (%1910 (Gather %1908 %1909 0))
  (let (%1911 (Shape %1889))
  (let (%1912 (Constant 1))
  (let (%1913 (Gather %1911 %1912 0))
  (let (%1916 (Unsqueeze %1910 (vec 0)))
  (let (%1917 (Unsqueeze %1913 (vec 0)))
  (let (%1920 (Concat %1916 %1917 %2802 %2803 0))
  (let (%1921 (Reshape %1889 %1920))
  (let (%1922 (Shape %1892))
  (let (%1923 (Constant 0))
  (let (%1924 (Gather %1922 %1923 0))
  (let (%1925 (Shape %1892))
  (let (%1926 (Constant 1))
  (let (%1927 (Gather %1925 %1926 0))
  (let (%1930 (Unsqueeze %1924 (vec 0)))
  (let (%1931 (Unsqueeze %1927 (vec 0)))
  (let (%1934 (Concat %1930 %1931 %2804 %2805 0))
  (let (%1935 (Reshape %1892 %1934))
  (let (%1936 (Transpose %1935 (vec 0 2 1 3)))
  (let (%1937 (Transpose %1921 (vec 0 2 3 1)))
  (let (%1938 (MatMul %1907 %1937))
  (let (%1939 (Constant 8.0))
  (let (%1940 (Div %1938 %1939))
  (let (%1941 (Add %1940 %321))
  (let (%1942 (Softmax %1941 3))
  (let (%1943 (MatMul %1942 %1936))
  (let (%1944 (Transpose %1943 (vec 0 2 1 3)))
  (let (%1945 (Shape %1944))
  (let (%1946 (Constant 0))
  (let (%1947 (Gather %1945 %1946 0))
  (let (%1948 (Shape %1944))
  (let (%1949 (Constant 1))
  (let (%1950 (Gather %1948 %1949 0))
  (let (%1952 (Unsqueeze %1947 (vec 0)))
  (let (%1953 (Unsqueeze %1950 (vec 0)))
  (let (%1955 (Concat %1952 %1953 %2806 0))
  (let (%1956 (Reshape %1944 %1955))
  (let (%1958 (MatMul %1956 %2807))
  (let (%1959 (Add %1958 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1960 (Add %1959 %1883))
  (let (%1962 (ReduceMean %1960 (vec -1) 1))
  (let (%1963 (Sub %1960 %1962))
  (let (%1964 (Cast_FLOAT %1963))
  (let (%1966 (Pow %1964 %2808))
  (let (%1967 (ReduceMean %1966 (vec -1) 1))
  (let (%1968 (Constant 9.999999960041972e-13))
  (let (%1969 (Add %1967 %1968))
  (let (%1970 (Sqrt %1969))
  (let (%1971 (Div %1963 %1970))
  (let (%1972 (Mul %1971 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1973 (Add %1972 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1975 (MatMul %1973 %2809))
  (let (%1976 (Add %1975 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1977 (Constant 1.4142135381698608))
  (let (%1978 (Div %1976 %1977))
  (let (%1979 (Erf %1978))
  (let (%1980 (Constant 1.0))
  (let (%1981 (Add %1979 %1980))
  (let (%1982 (Mul %1976 %1981))
  (let (%1983 (Constant 0.5))
  (let (%1984 (Mul %1982 %1983))
  (let (%1986 (MatMul %1984 %2810))
  (let (%1987 (Add %1986 bert.encoder.layer.13.output.dense.bias))
  (let (%1988 (Add %1987 %1973))
  (let (%1990 (ReduceMean %1988 (vec -1) 1))
  (let (%1991 (Sub %1988 %1990))
  (let (%1992 (Cast_FLOAT %1991))
  (let (%1994 (Pow %1992 %2811))
  (let (%1995 (ReduceMean %1994 (vec -1) 1))
  (let (%1996 (Constant 9.999999960041972e-13))
  (let (%1997 (Add %1995 %1996))
  (let (%1998 (Sqrt %1997))
  (let (%1999 (Div %1991 %1998))
  (let (%2000 (Mul %1999 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%2001 (Add %2000 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%2003 (MatMul %2001 %2812))
  (let (%2004 (Add %2003 bert.encoder.layer.14.attention.self.query.bias))
  (let (%2006 (MatMul %2001 %2813))
  (let (%2007 (Add %2006 bert.encoder.layer.14.attention.self.key.bias))
  (let (%2009 (MatMul %2001 %2814))
  (let (%2010 (Add %2009 bert.encoder.layer.14.attention.self.value.bias))
  (let (%2011 (Shape %2004))
  (let (%2012 (Constant 0))
  (let (%2013 (Gather %2011 %2012 0))
  (let (%2014 (Shape %2004))
  (let (%2015 (Constant 1))
  (let (%2016 (Gather %2014 %2015 0))
  (let (%2019 (Unsqueeze %2013 (vec 0)))
  (let (%2020 (Unsqueeze %2016 (vec 0)))
  (let (%2023 (Concat %2019 %2020 %2815 %2816 0))
  (let (%2024 (Reshape %2004 %2023))
  (let (%2025 (Transpose %2024 (vec 0 2 1 3)))
  (let (%2026 (Shape %2007))
  (let (%2027 (Constant 0))
  (let (%2028 (Gather %2026 %2027 0))
  (let (%2029 (Shape %2007))
  (let (%2030 (Constant 1))
  (let (%2031 (Gather %2029 %2030 0))
  (let (%2034 (Unsqueeze %2028 (vec 0)))
  (let (%2035 (Unsqueeze %2031 (vec 0)))
  (let (%2038 (Concat %2034 %2035 %2817 %2818 0))
  (let (%2039 (Reshape %2007 %2038))
  (let (%2040 (Shape %2010))
  (let (%2041 (Constant 0))
  (let (%2042 (Gather %2040 %2041 0))
  (let (%2043 (Shape %2010))
  (let (%2044 (Constant 1))
  (let (%2045 (Gather %2043 %2044 0))
  (let (%2048 (Unsqueeze %2042 (vec 0)))
  (let (%2049 (Unsqueeze %2045 (vec 0)))
  (let (%2052 (Concat %2048 %2049 %2819 %2820 0))
  (let (%2053 (Reshape %2010 %2052))
  (let (%2054 (Transpose %2053 (vec 0 2 1 3)))
  (let (%2055 (Transpose %2039 (vec 0 2 3 1)))
  (let (%2056 (MatMul %2025 %2055))
  (let (%2057 (Constant 8.0))
  (let (%2058 (Div %2056 %2057))
  (let (%2059 (Add %2058 %321))
  (let (%2060 (Softmax %2059 3))
  (let (%2061 (MatMul %2060 %2054))
  (let (%2062 (Transpose %2061 (vec 0 2 1 3)))
  (let (%2063 (Shape %2062))
  (let (%2064 (Constant 0))
  (let (%2065 (Gather %2063 %2064 0))
  (let (%2066 (Shape %2062))
  (let (%2067 (Constant 1))
  (let (%2068 (Gather %2066 %2067 0))
  (let (%2070 (Unsqueeze %2065 (vec 0)))
  (let (%2071 (Unsqueeze %2068 (vec 0)))
  (let (%2073 (Concat %2070 %2071 %2821 0))
  (let (%2074 (Reshape %2062 %2073))
  (let (%2076 (MatMul %2074 %2822))
  (let (%2077 (Add %2076 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2078 (Add %2077 %2001))
  (let (%2080 (ReduceMean %2078 (vec -1) 1))
  (let (%2081 (Sub %2078 %2080))
  (let (%2082 (Cast_FLOAT %2081))
  (let (%2084 (Pow %2082 %2823))
  (let (%2085 (ReduceMean %2084 (vec -1) 1))
  (let (%2086 (Constant 9.999999960041972e-13))
  (let (%2087 (Add %2085 %2086))
  (let (%2088 (Sqrt %2087))
  (let (%2089 (Div %2081 %2088))
  (let (%2090 (Mul %2089 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2091 (Add %2090 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2093 (MatMul %2091 %2824))
  (let (%2094 (Add %2093 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2095 (Constant 1.4142135381698608))
  (let (%2096 (Div %2094 %2095))
  (let (%2097 (Erf %2096))
  (let (%2098 (Constant 1.0))
  (let (%2099 (Add %2097 %2098))
  (let (%2100 (Mul %2094 %2099))
  (let (%2101 (Constant 0.5))
  (let (%2102 (Mul %2100 %2101))
  (let (%2104 (MatMul %2102 %2825))
  (let (%2105 (Add %2104 bert.encoder.layer.14.output.dense.bias))
  (let (%2106 (Add %2105 %2091))
  (let (%2108 (ReduceMean %2106 (vec -1) 1))
  (let (%2109 (Sub %2106 %2108))
  (let (%2110 (Cast_FLOAT %2109))
  (let (%2112 (Pow %2110 %2826))
  (let (%2113 (ReduceMean %2112 (vec -1) 1))
  (let (%2114 (Constant 9.999999960041972e-13))
  (let (%2115 (Add %2113 %2114))
  (let (%2116 (Sqrt %2115))
  (let (%2117 (Div %2109 %2116))
  (let (%2118 (Mul %2117 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2119 (Add %2118 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2121 (MatMul %2119 %2827))
  (let (%2122 (Add %2121 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2124 (MatMul %2119 %2828))
  (let (%2125 (Add %2124 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2127 (MatMul %2119 %2829))
  (let (%2128 (Add %2127 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2129 (Shape %2122))
  (let (%2130 (Constant 0))
  (let (%2131 (Gather %2129 %2130 0))
  (let (%2132 (Shape %2122))
  (let (%2133 (Constant 1))
  (let (%2134 (Gather %2132 %2133 0))
  (let (%2137 (Unsqueeze %2131 (vec 0)))
  (let (%2138 (Unsqueeze %2134 (vec 0)))
  (let (%2141 (Concat %2137 %2138 %2830 %2831 0))
  (let (%2142 (Reshape %2122 %2141))
  (let (%2143 (Transpose %2142 (vec 0 2 1 3)))
  (let (%2144 (Shape %2125))
  (let (%2145 (Constant 0))
  (let (%2146 (Gather %2144 %2145 0))
  (let (%2147 (Shape %2125))
  (let (%2148 (Constant 1))
  (let (%2149 (Gather %2147 %2148 0))
  (let (%2152 (Unsqueeze %2146 (vec 0)))
  (let (%2153 (Unsqueeze %2149 (vec 0)))
  (let (%2156 (Concat %2152 %2153 %2832 %2833 0))
  (let (%2157 (Reshape %2125 %2156))
  (let (%2158 (Shape %2128))
  (let (%2159 (Constant 0))
  (let (%2160 (Gather %2158 %2159 0))
  (let (%2161 (Shape %2128))
  (let (%2162 (Constant 1))
  (let (%2163 (Gather %2161 %2162 0))
  (let (%2166 (Unsqueeze %2160 (vec 0)))
  (let (%2167 (Unsqueeze %2163 (vec 0)))
  (let (%2170 (Concat %2166 %2167 %2834 %2835 0))
  (let (%2171 (Reshape %2128 %2170))
  (let (%2172 (Transpose %2171 (vec 0 2 1 3)))
  (let (%2173 (Transpose %2157 (vec 0 2 3 1)))
  (let (%2174 (MatMul %2143 %2173))
  (let (%2175 (Constant 8.0))
  (let (%2176 (Div %2174 %2175))
  (let (%2177 (Add %2176 %321))
  (let (%2178 (Softmax %2177 3))
  (let (%2179 (MatMul %2178 %2172))
  (let (%2180 (Transpose %2179 (vec 0 2 1 3)))
  (let (%2181 (Shape %2180))
  (let (%2182 (Constant 0))
  (let (%2183 (Gather %2181 %2182 0))
  (let (%2184 (Shape %2180))
  (let (%2185 (Constant 1))
  (let (%2186 (Gather %2184 %2185 0))
  (let (%2188 (Unsqueeze %2183 (vec 0)))
  (let (%2189 (Unsqueeze %2186 (vec 0)))
  (let (%2191 (Concat %2188 %2189 %2836 0))
  (let (%2192 (Reshape %2180 %2191))
  (let (%2194 (MatMul %2192 %2837))
  (let (%2195 (Add %2194 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2196 (Add %2195 %2119))
  (let (%2198 (ReduceMean %2196 (vec -1) 1))
  (let (%2199 (Sub %2196 %2198))
  (let (%2200 (Cast_FLOAT %2199))
  (let (%2202 (Pow %2200 %2838))
  (let (%2203 (ReduceMean %2202 (vec -1) 1))
  (let (%2204 (Constant 9.999999960041972e-13))
  (let (%2205 (Add %2203 %2204))
  (let (%2206 (Sqrt %2205))
  (let (%2207 (Div %2199 %2206))
  (let (%2208 (Mul %2207 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2209 (Add %2208 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2211 (MatMul %2209 %2839))
  (let (%2212 (Add %2211 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2213 (Constant 1.4142135381698608))
  (let (%2214 (Div %2212 %2213))
  (let (%2215 (Erf %2214))
  (let (%2216 (Constant 1.0))
  (let (%2217 (Add %2215 %2216))
  (let (%2218 (Mul %2212 %2217))
  (let (%2219 (Constant 0.5))
  (let (%2220 (Mul %2218 %2219))
  (let (%2222 (MatMul %2220 %2840))
  (let (%2223 (Add %2222 bert.encoder.layer.15.output.dense.bias))
  (let (%2224 (Add %2223 %2209))
  (let (%2226 (ReduceMean %2224 (vec -1) 1))
  (let (%2227 (Sub %2224 %2226))
  (let (%2228 (Cast_FLOAT %2227))
  (let (%2230 (Pow %2228 %2841))
  (let (%2231 (ReduceMean %2230 (vec -1) 1))
  (let (%2232 (Constant 9.999999960041972e-13))
  (let (%2233 (Add %2231 %2232))
  (let (%2234 (Sqrt %2233))
  (let (%2235 (Div %2227 %2234))
  (let (%2236 (Mul %2235 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2237 (Add %2236 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2239 (MatMul %2237 %2842))
  (let (%2240 (Add %2239 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2242 (MatMul %2237 %2843))
  (let (%2243 (Add %2242 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2245 (MatMul %2237 %2844))
  (let (%2246 (Add %2245 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2247 (Shape %2240))
  (let (%2248 (Constant 0))
  (let (%2249 (Gather %2247 %2248 0))
  (let (%2250 (Shape %2240))
  (let (%2251 (Constant 1))
  (let (%2252 (Gather %2250 %2251 0))
  (let (%2255 (Unsqueeze %2249 (vec 0)))
  (let (%2256 (Unsqueeze %2252 (vec 0)))
  (let (%2259 (Concat %2255 %2256 %2845 %2846 0))
  (let (%2260 (Reshape %2240 %2259))
  (let (%2261 (Transpose %2260 (vec 0 2 1 3)))
  (let (%2262 (Shape %2243))
  (let (%2263 (Constant 0))
  (let (%2264 (Gather %2262 %2263 0))
  (let (%2265 (Shape %2243))
  (let (%2266 (Constant 1))
  (let (%2267 (Gather %2265 %2266 0))
  (let (%2270 (Unsqueeze %2264 (vec 0)))
  (let (%2271 (Unsqueeze %2267 (vec 0)))
  (let (%2274 (Concat %2270 %2271 %2847 %2848 0))
  (let (%2275 (Reshape %2243 %2274))
  (let (%2276 (Shape %2246))
  (let (%2277 (Constant 0))
  (let (%2278 (Gather %2276 %2277 0))
  (let (%2279 (Shape %2246))
  (let (%2280 (Constant 1))
  (let (%2281 (Gather %2279 %2280 0))
  (let (%2284 (Unsqueeze %2278 (vec 0)))
  (let (%2285 (Unsqueeze %2281 (vec 0)))
  (let (%2288 (Concat %2284 %2285 %2849 %2850 0))
  (let (%2289 (Reshape %2246 %2288))
  (let (%2290 (Transpose %2289 (vec 0 2 1 3)))
  (let (%2291 (Transpose %2275 (vec 0 2 3 1)))
  (let (%2292 (MatMul %2261 %2291))
  (let (%2293 (Constant 8.0))
  (let (%2294 (Div %2292 %2293))
  (let (%2295 (Add %2294 %321))
  (let (%2296 (Softmax %2295 3))
  (let (%2297 (MatMul %2296 %2290))
  (let (%2298 (Transpose %2297 (vec 0 2 1 3)))
  (let (%2299 (Shape %2298))
  (let (%2300 (Constant 0))
  (let (%2301 (Gather %2299 %2300 0))
  (let (%2302 (Shape %2298))
  (let (%2303 (Constant 1))
  (let (%2304 (Gather %2302 %2303 0))
  (let (%2306 (Unsqueeze %2301 (vec 0)))
  (let (%2307 (Unsqueeze %2304 (vec 0)))
  (let (%2309 (Concat %2306 %2307 %2851 0))
  (let (%2310 (Reshape %2298 %2309))
  (let (%2312 (MatMul %2310 %2852))
  (let (%2313 (Add %2312 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2314 (Add %2313 %2237))
  (let (%2316 (ReduceMean %2314 (vec -1) 1))
  (let (%2317 (Sub %2314 %2316))
  (let (%2318 (Cast_FLOAT %2317))
  (let (%2320 (Pow %2318 %2853))
  (let (%2321 (ReduceMean %2320 (vec -1) 1))
  (let (%2322 (Constant 9.999999960041972e-13))
  (let (%2323 (Add %2321 %2322))
  (let (%2324 (Sqrt %2323))
  (let (%2325 (Div %2317 %2324))
  (let (%2326 (Mul %2325 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2327 (Add %2326 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2329 (MatMul %2327 %2854))
  (let (%2330 (Add %2329 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2331 (Constant 1.4142135381698608))
  (let (%2332 (Div %2330 %2331))
  (let (%2333 (Erf %2332))
  (let (%2334 (Constant 1.0))
  (let (%2335 (Add %2333 %2334))
  (let (%2336 (Mul %2330 %2335))
  (let (%2337 (Constant 0.5))
  (let (%2338 (Mul %2336 %2337))
  (let (%2340 (MatMul %2338 %2855))
  (let (%2341 (Add %2340 bert.encoder.layer.16.output.dense.bias))
  (let (%2342 (Add %2341 %2327))
  (let (%2344 (ReduceMean %2342 (vec -1) 1))
  (let (%2345 (Sub %2342 %2344))
  (let (%2346 (Cast_FLOAT %2345))
  (let (%2348 (Pow %2346 %2856))
  (let (%2349 (ReduceMean %2348 (vec -1) 1))
  (let (%2350 (Constant 9.999999960041972e-13))
  (let (%2351 (Add %2349 %2350))
  (let (%2352 (Sqrt %2351))
  (let (%2353 (Div %2345 %2352))
  (let (%2354 (Mul %2353 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2355 (Add %2354 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2357 (MatMul %2355 %2857))
  (let (%2358 (Add %2357 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2360 (MatMul %2355 %2858))
  (let (%2361 (Add %2360 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2363 (MatMul %2355 %2859))
  (let (%2364 (Add %2363 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2365 (Shape %2358))
  (let (%2366 (Constant 0))
  (let (%2367 (Gather %2365 %2366 0))
  (let (%2368 (Shape %2358))
  (let (%2369 (Constant 1))
  (let (%2370 (Gather %2368 %2369 0))
  (let (%2373 (Unsqueeze %2367 (vec 0)))
  (let (%2374 (Unsqueeze %2370 (vec 0)))
  (let (%2377 (Concat %2373 %2374 %2860 %2861 0))
  (let (%2378 (Reshape %2358 %2377))
  (let (%2379 (Transpose %2378 (vec 0 2 1 3)))
  (let (%2380 (Shape %2361))
  (let (%2381 (Constant 0))
  (let (%2382 (Gather %2380 %2381 0))
  (let (%2383 (Shape %2361))
  (let (%2384 (Constant 1))
  (let (%2385 (Gather %2383 %2384 0))
  (let (%2388 (Unsqueeze %2382 (vec 0)))
  (let (%2389 (Unsqueeze %2385 (vec 0)))
  (let (%2392 (Concat %2388 %2389 %2862 %2863 0))
  (let (%2393 (Reshape %2361 %2392))
  (let (%2394 (Shape %2364))
  (let (%2395 (Constant 0))
  (let (%2396 (Gather %2394 %2395 0))
  (let (%2397 (Shape %2364))
  (let (%2398 (Constant 1))
  (let (%2399 (Gather %2397 %2398 0))
  (let (%2402 (Unsqueeze %2396 (vec 0)))
  (let (%2403 (Unsqueeze %2399 (vec 0)))
  (let (%2406 (Concat %2402 %2403 %2864 %2865 0))
  (let (%2407 (Reshape %2364 %2406))
  (let (%2408 (Transpose %2407 (vec 0 2 1 3)))
  (let (%2409 (Transpose %2393 (vec 0 2 3 1)))
  (let (%2410 (MatMul %2379 %2409))
  (let (%2411 (Constant 8.0))
  (let (%2412 (Div %2410 %2411))
  (let (%2413 (Add %2412 %321))
  (let (%2414 (Softmax %2413 3))
  (let (%2415 (MatMul %2414 %2408))
  (let (%2416 (Transpose %2415 (vec 0 2 1 3)))
  (let (%2417 (Shape %2416))
  (let (%2418 (Constant 0))
  (let (%2419 (Gather %2417 %2418 0))
  (let (%2420 (Shape %2416))
  (let (%2421 (Constant 1))
  (let (%2422 (Gather %2420 %2421 0))
  (let (%2424 (Unsqueeze %2419 (vec 0)))
  (let (%2425 (Unsqueeze %2422 (vec 0)))
  (let (%2427 (Concat %2424 %2425 %2866 0))
  (let (%2428 (Reshape %2416 %2427))
  (let (%2430 (MatMul %2428 %2867))
  (let (%2431 (Add %2430 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2432 (Add %2431 %2355))
  (let (%2434 (ReduceMean %2432 (vec -1) 1))
  (let (%2435 (Sub %2432 %2434))
  (let (%2436 (Cast_FLOAT %2435))
  (let (%2438 (Pow %2436 %2868))
  (let (%2439 (ReduceMean %2438 (vec -1) 1))
  (let (%2440 (Constant 9.999999960041972e-13))
  (let (%2441 (Add %2439 %2440))
  (let (%2442 (Sqrt %2441))
  (let (%2443 (Div %2435 %2442))
  (let (%2444 (Mul %2443 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2445 (Add %2444 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2447 (MatMul %2445 %2869))
  (let (%2448 (Add %2447 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2449 (Constant 1.4142135381698608))
  (let (%2450 (Div %2448 %2449))
  (let (%2451 (Erf %2450))
  (let (%2452 (Constant 1.0))
  (let (%2453 (Add %2451 %2452))
  (let (%2454 (Mul %2448 %2453))
  (let (%2455 (Constant 0.5))
  (let (%2456 (Mul %2454 %2455))
  (let (%2458 (MatMul %2456 %2870))
  (let (%2459 (Add %2458 bert.encoder.layer.17.output.dense.bias))
  (let (%2460 (Add %2459 %2445))
  (let (%2462 (ReduceMean %2460 (vec -1) 1))
  (let (%2463 (Sub %2460 %2462))
  (let (%2464 (Cast_FLOAT %2463))
  (let (%2466 (Pow %2464 %2871))
  (let (%2467 (ReduceMean %2466 (vec -1) 1))
  (let (%2468 (Constant 9.999999960041972e-13))
  (let (%2469 (Add %2467 %2468))
  (let (%2470 (Sqrt %2469))
  (let (%2471 (Div %2463 %2470))
  (let (%2472 (Mul %2471 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2473 (Add %2472 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2475 (MatMul %2473 %2872))
  (let (%2476 (Add %2475 bert.encoder.layer.18.attention.self.query.bias))
  (let (%2478 (MatMul %2473 %2873))
  (let (%2479 (Add %2478 bert.encoder.layer.18.attention.self.key.bias))
  (let (%2481 (MatMul %2473 %2874))
  (let (%2482 (Add %2481 bert.encoder.layer.18.attention.self.value.bias))
  (let (%2483 (Shape %2476))
  (let (%2484 (Constant 0))
  (let (%2485 (Gather %2483 %2484 0))
  (let (%2486 (Shape %2476))
  (let (%2487 (Constant 1))
  (let (%2488 (Gather %2486 %2487 0))
  (let (%2491 (Unsqueeze %2485 (vec 0)))
  (let (%2492 (Unsqueeze %2488 (vec 0)))
  (let (%2495 (Concat %2491 %2492 %2875 %2876 0))
  (let (%2496 (Reshape %2476 %2495))
  (let (%2497 (Transpose %2496 (vec 0 2 1 3)))
  (let (%2498 (Shape %2479))
  (let (%2499 (Constant 0))
  (let (%2500 (Gather %2498 %2499 0))
  (let (%2501 (Shape %2479))
  (let (%2502 (Constant 1))
  (let (%2503 (Gather %2501 %2502 0))
  (let (%2506 (Unsqueeze %2500 (vec 0)))
  (let (%2507 (Unsqueeze %2503 (vec 0)))
  (let (%2510 (Concat %2506 %2507 %2877 %2878 0))
  (let (%2511 (Reshape %2479 %2510))
  (let (%2512 (Shape %2482))
  (let (%2513 (Constant 0))
  (let (%2514 (Gather %2512 %2513 0))
  (let (%2515 (Shape %2482))
  (let (%2516 (Constant 1))
  (let (%2517 (Gather %2515 %2516 0))
  (let (%2520 (Unsqueeze %2514 (vec 0)))
  (let (%2521 (Unsqueeze %2517 (vec 0)))
  (let (%2524 (Concat %2520 %2521 %2879 %2880 0))
  (let (%2525 (Reshape %2482 %2524))
  (let (%2526 (Transpose %2525 (vec 0 2 1 3)))
  (let (%2527 (Transpose %2511 (vec 0 2 3 1)))
  (let (%2528 (MatMul %2497 %2527))
  (let (%2529 (Constant 8.0))
  (let (%2530 (Div %2528 %2529))
  (let (%2531 (Add %2530 %321))
  (let (%2532 (Softmax %2531 3))
  (let (%2533 (MatMul %2532 %2526))
  (let (%2534 (Transpose %2533 (vec 0 2 1 3)))
  (let (%2535 (Shape %2534))
  (let (%2536 (Constant 0))
  (let (%2537 (Gather %2535 %2536 0))
  (let (%2538 (Shape %2534))
  (let (%2539 (Constant 1))
  (let (%2540 (Gather %2538 %2539 0))
  (let (%2542 (Unsqueeze %2537 (vec 0)))
  (let (%2543 (Unsqueeze %2540 (vec 0)))
  (let (%2545 (Concat %2542 %2543 %2881 0))
  (let (%2546 (Reshape %2534 %2545))
  (let (%2548 (MatMul %2546 %2882))
  (let (%2549 (Add %2548 bert.encoder.layer.18.attention.output.dense.bias))
  (let (%2550 (Add %2549 %2473))
  (let (%2552 (ReduceMean %2550 (vec -1) 1))
  (let (%2553 (Sub %2550 %2552))
  (let (%2554 (Cast_FLOAT %2553))
  (let (%2556 (Pow %2554 %2883))
  (let (%2557 (ReduceMean %2556 (vec -1) 1))
  (let (%2558 (Constant 9.999999960041972e-13))
  (let (%2559 (Add %2557 %2558))
  (let (%2560 (Sqrt %2559))
  (let (%2561 (Div %2553 %2560))
  (let (%2562 (Mul %2561 bert.encoder.layer.18.attention.output.LayerNorm.weight))
  (let (%2563 (Add %2562 bert.encoder.layer.18.attention.output.LayerNorm.bias))
  (let (%2565 (MatMul %2563 %2884))
  (let (%2566 (Add %2565 bert.encoder.layer.18.intermediate.dense.bias))
  (let (%2567 (Constant 1.4142135381698608))
  (let (%2568 (Div %2566 %2567))
  (let (%2569 (Erf %2568))
  (let (%2570 (Constant 1.0))
  (let (%2571 (Add %2569 %2570))
  (let (%2572 (Mul %2566 %2571))
  (let (%2573 (Constant 0.5))
  (let (%2574 (Mul %2572 %2573))
  (let (%2576 (MatMul %2574 %2885))
  (let (%2577 (Add %2576 bert.encoder.layer.18.output.dense.bias))
  (let (%2578 (Add %2577 %2563))
  (let (%2580 (ReduceMean %2578 (vec -1) 1))
  (let (%2581 (Sub %2578 %2580))
  (let (%2582 (Cast_FLOAT %2581))
  (let (%2584 (Pow %2582 %2886))
  (let (%2585 (ReduceMean %2584 (vec -1) 1))
  (let (%2586 (Constant 9.999999960041972e-13))
  (let (%2587 (Add %2585 %2586))
  (let (%2588 (Sqrt %2587))
  (let (%2589 (Div %2581 %2588))
  (let (%2590 (Mul %2589 bert.encoder.layer.18.output.LayerNorm.weight))
  (let (%2591 (Add %2590 bert.encoder.layer.18.output.LayerNorm.bias))
  (let (%2593 (MatMul %2591 %2887))
  (let (%2594 (Add %2593 qa_outputs.bias))
  (let ((%2595 %2596) (Split %2594 (vec 1 1) -1))
  (let (output_0 (Squeeze %2595 (vec -1)))
  (let (output_1 (Squeeze %2596 (vec -1)))
  output_1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

