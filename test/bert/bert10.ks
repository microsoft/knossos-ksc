;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert10.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1393 (vec 0))
  (let (%1394 (vec 1))
  (let (%1395 2.0)
  (let (%1396 (load-from-onnx-float32 768 768 "%1396"))
  (let (%1397 (load-from-onnx-float32 768 768 "%1397"))
  (let (%1398 (load-from-onnx-float32 768 768 "%1398"))
  (let (%1399 (vec 12))
  (let (%1400 (vec 64))
  (let (%1401 (vec 12))
  (let (%1402 (vec 64))
  (let (%1403 (vec 12))
  (let (%1404 (vec 64))
  (let (%1405 (vec 768))
  (let (%1406 (load-from-onnx-float32 768 768 "%1406"))
  (let (%1407 2.0)
  (let (%1408 (load-from-onnx-float32 768 3072 "%1408"))
  (let (%1409 (load-from-onnx-float32 3072 768 "%1409"))
  (let (%1410 2.0)
  (let (%1411 (load-from-onnx-float32 768 768 "%1411"))
  (let (%1412 (load-from-onnx-float32 768 768 "%1412"))
  (let (%1413 (load-from-onnx-float32 768 768 "%1413"))
  (let (%1414 (vec 12))
  (let (%1415 (vec 64))
  (let (%1416 (vec 12))
  (let (%1417 (vec 64))
  (let (%1418 (vec 12))
  (let (%1419 (vec 64))
  (let (%1420 (vec 768))
  (let (%1421 (load-from-onnx-float32 768 768 "%1421"))
  (let (%1422 2.0)
  (let (%1423 (load-from-onnx-float32 768 3072 "%1423"))
  (let (%1424 (load-from-onnx-float32 3072 768 "%1424"))
  (let (%1425 2.0)
  (let (%1426 (load-from-onnx-float32 768 768 "%1426"))
  (let (%1427 (load-from-onnx-float32 768 768 "%1427"))
  (let (%1428 (load-from-onnx-float32 768 768 "%1428"))
  (let (%1429 (vec 12))
  (let (%1430 (vec 64))
  (let (%1431 (vec 12))
  (let (%1432 (vec 64))
  (let (%1433 (vec 12))
  (let (%1434 (vec 64))
  (let (%1435 (vec 768))
  (let (%1436 (load-from-onnx-float32 768 768 "%1436"))
  (let (%1437 2.0)
  (let (%1438 (load-from-onnx-float32 768 3072 "%1438"))
  (let (%1439 (load-from-onnx-float32 3072 768 "%1439"))
  (let (%1440 2.0)
  (let (%1441 (load-from-onnx-float32 768 768 "%1441"))
  (let (%1442 (load-from-onnx-float32 768 768 "%1442"))
  (let (%1443 (load-from-onnx-float32 768 768 "%1443"))
  (let (%1444 (vec 12))
  (let (%1445 (vec 64))
  (let (%1446 (vec 12))
  (let (%1447 (vec 64))
  (let (%1448 (vec 12))
  (let (%1449 (vec 64))
  (let (%1450 (vec 768))
  (let (%1451 (load-from-onnx-float32 768 768 "%1451"))
  (let (%1452 2.0)
  (let (%1453 (load-from-onnx-float32 768 3072 "%1453"))
  (let (%1454 (load-from-onnx-float32 3072 768 "%1454"))
  (let (%1455 2.0)
  (let (%1456 (load-from-onnx-float32 768 768 "%1456"))
  (let (%1457 (load-from-onnx-float32 768 768 "%1457"))
  (let (%1458 (load-from-onnx-float32 768 768 "%1458"))
  (let (%1459 (vec 12))
  (let (%1460 (vec 64))
  (let (%1461 (vec 12))
  (let (%1462 (vec 64))
  (let (%1463 (vec 12))
  (let (%1464 (vec 64))
  (let (%1465 (vec 768))
  (let (%1466 (load-from-onnx-float32 768 768 "%1466"))
  (let (%1467 2.0)
  (let (%1468 (load-from-onnx-float32 768 3072 "%1468"))
  (let (%1469 (load-from-onnx-float32 3072 768 "%1469"))
  (let (%1470 2.0)
  (let (%1471 (load-from-onnx-float32 768 768 "%1471"))
  (let (%1472 (load-from-onnx-float32 768 768 "%1472"))
  (let (%1473 (load-from-onnx-float32 768 768 "%1473"))
  (let (%1474 (vec 12))
  (let (%1475 (vec 64))
  (let (%1476 (vec 12))
  (let (%1477 (vec 64))
  (let (%1478 (vec 12))
  (let (%1479 (vec 64))
  (let (%1480 (vec 768))
  (let (%1481 (load-from-onnx-float32 768 768 "%1481"))
  (let (%1482 2.0)
  (let (%1483 (load-from-onnx-float32 768 3072 "%1483"))
  (let (%1484 (load-from-onnx-float32 3072 768 "%1484"))
  (let (%1485 2.0)
  (let (%1486 (load-from-onnx-float32 768 768 "%1486"))
  (let (%1487 (load-from-onnx-float32 768 768 "%1487"))
  (let (%1488 (load-from-onnx-float32 768 768 "%1488"))
  (let (%1489 (vec 12))
  (let (%1490 (vec 64))
  (let (%1491 (vec 12))
  (let (%1492 (vec 64))
  (let (%1493 (vec 12))
  (let (%1494 (vec 64))
  (let (%1495 (vec 768))
  (let (%1496 (load-from-onnx-float32 768 768 "%1496"))
  (let (%1497 2.0)
  (let (%1498 (load-from-onnx-float32 768 3072 "%1498"))
  (let (%1499 (load-from-onnx-float32 3072 768 "%1499"))
  (let (%1500 2.0)
  (let (%1501 (load-from-onnx-float32 768 768 "%1501"))
  (let (%1502 (load-from-onnx-float32 768 768 "%1502"))
  (let (%1503 (load-from-onnx-float32 768 768 "%1503"))
  (let (%1504 (vec 12))
  (let (%1505 (vec 64))
  (let (%1506 (vec 12))
  (let (%1507 (vec 64))
  (let (%1508 (vec 12))
  (let (%1509 (vec 64))
  (let (%1510 (vec 768))
  (let (%1511 (load-from-onnx-float32 768 768 "%1511"))
  (let (%1512 2.0)
  (let (%1513 (load-from-onnx-float32 768 3072 "%1513"))
  (let (%1514 (load-from-onnx-float32 3072 768 "%1514"))
  (let (%1515 2.0)
  (let (%1516 (load-from-onnx-float32 768 768 "%1516"))
  (let (%1517 (load-from-onnx-float32 768 768 "%1517"))
  (let (%1518 (load-from-onnx-float32 768 768 "%1518"))
  (let (%1519 (vec 12))
  (let (%1520 (vec 64))
  (let (%1521 (vec 12))
  (let (%1522 (vec 64))
  (let (%1523 (vec 12))
  (let (%1524 (vec 64))
  (let (%1525 (vec 768))
  (let (%1526 (load-from-onnx-float32 768 768 "%1526"))
  (let (%1527 2.0)
  (let (%1528 (load-from-onnx-float32 768 3072 "%1528"))
  (let (%1529 (load-from-onnx-float32 3072 768 "%1529"))
  (let (%1530 2.0)
  (let (%1531 (load-from-onnx-float32 768 768 "%1531"))
  (let (%1532 (load-from-onnx-float32 768 768 "%1532"))
  (let (%1533 (load-from-onnx-float32 768 768 "%1533"))
  (let (%1534 (vec 12))
  (let (%1535 (vec 64))
  (let (%1536 (vec 12))
  (let (%1537 (vec 64))
  (let (%1538 (vec 12))
  (let (%1539 (vec 64))
  (let (%1540 (vec 768))
  (let (%1541 (load-from-onnx-float32 768 768 "%1541"))
  (let (%1542 2.0)
  (let (%1543 (load-from-onnx-float32 768 3072 "%1543"))
  (let (%1544 (load-from-onnx-float32 3072 768 "%1544"))
  (let (%1545 2.0)
  (let (%1546 (load-from-onnx-float32 768 2 "%1546"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%171 (Unsqueeze attention_mask (vec 1)))
  (let (%172 (Unsqueeze %171 (vec 2)))
  (let (%173 (Cast_FLOAT %172))
  (let (%174 (Constant 1.0))
  (let (%175 (Sub %174 %173))
  (let (%176 (Constant -10000.0))
  (let (%177 (Mul %175 %176))
  (let (%178 (Shape input_ids))
  (let (%179 (Constant 1))
  (let (%180 (Gather %178 %179 0))
  (let (%184 (Unsqueeze %180 (vec 0)))
  (let (%186 (Constant (vec 1)))
  (let (%187 (Slice bert.embeddings.position_ids %1393 %184 %1394 %186))
  (let (%188 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%189 (Gather bert.embeddings.position_embeddings.weight %187 0))
  (let (%190 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%191 (Add %188 %189))
  (let (%192 (Add %191 %190))
  (let (%194 (ReduceMean %192 (vec -1) 1))
  (let (%195 (Sub %192 %194))
  (let (%196 (Cast_FLOAT %195))
  (let (%198 (Pow %196 %1395))
  (let (%199 (ReduceMean %198 (vec -1) 1))
  (let (%200 (Constant 9.999999960041972e-13))
  (let (%201 (Add %199 %200))
  (let (%202 (Sqrt %201))
  (let (%203 (Div %195 %202))
  (let (%204 (Mul %203 bert.embeddings.LayerNorm.weight))
  (let (%205 (Add %204 bert.embeddings.LayerNorm.bias))
  (let (%207 (MatMul %205 %1396))
  (let (%208 (Add %207 bert.encoder.layer.0.attention.self.query.bias))
  (let (%210 (MatMul %205 %1397))
  (let (%211 (Add %210 bert.encoder.layer.0.attention.self.key.bias))
  (let (%213 (MatMul %205 %1398))
  (let (%214 (Add %213 bert.encoder.layer.0.attention.self.value.bias))
  (let (%215 (Shape %208))
  (let (%216 (Constant 0))
  (let (%217 (Gather %215 %216 0))
  (let (%218 (Shape %208))
  (let (%219 (Constant 1))
  (let (%220 (Gather %218 %219 0))
  (let (%223 (Unsqueeze %217 (vec 0)))
  (let (%224 (Unsqueeze %220 (vec 0)))
  (let (%227 (Concat %223 %224 %1399 %1400 0))
  (let (%228 (Reshape %208 %227))
  (let (%229 (Transpose %228 (vec 0 2 1 3)))
  (let (%230 (Shape %211))
  (let (%231 (Constant 0))
  (let (%232 (Gather %230 %231 0))
  (let (%233 (Shape %211))
  (let (%234 (Constant 1))
  (let (%235 (Gather %233 %234 0))
  (let (%238 (Unsqueeze %232 (vec 0)))
  (let (%239 (Unsqueeze %235 (vec 0)))
  (let (%242 (Concat %238 %239 %1401 %1402 0))
  (let (%243 (Reshape %211 %242))
  (let (%244 (Shape %214))
  (let (%245 (Constant 0))
  (let (%246 (Gather %244 %245 0))
  (let (%247 (Shape %214))
  (let (%248 (Constant 1))
  (let (%249 (Gather %247 %248 0))
  (let (%252 (Unsqueeze %246 (vec 0)))
  (let (%253 (Unsqueeze %249 (vec 0)))
  (let (%256 (Concat %252 %253 %1403 %1404 0))
  (let (%257 (Reshape %214 %256))
  (let (%258 (Transpose %257 (vec 0 2 1 3)))
  (let (%259 (Transpose %243 (vec 0 2 3 1)))
  (let (%260 (MatMul %229 %259))
  (let (%261 (Constant 8.0))
  (let (%262 (Div %260 %261))
  (let (%263 (Add %262 %177))
  (let (%264 (Softmax %263 3))
  (let (%265 (MatMul %264 %258))
  (let (%266 (Transpose %265 (vec 0 2 1 3)))
  (let (%267 (Shape %266))
  (let (%268 (Constant 0))
  (let (%269 (Gather %267 %268 0))
  (let (%270 (Shape %266))
  (let (%271 (Constant 1))
  (let (%272 (Gather %270 %271 0))
  (let (%274 (Unsqueeze %269 (vec 0)))
  (let (%275 (Unsqueeze %272 (vec 0)))
  (let (%277 (Concat %274 %275 %1405 0))
  (let (%278 (Reshape %266 %277))
  (let (%280 (MatMul %278 %1406))
  (let (%281 (Add %280 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%282 (Add %281 %205))
  (let (%284 (ReduceMean %282 (vec -1) 1))
  (let (%285 (Sub %282 %284))
  (let (%286 (Cast_FLOAT %285))
  (let (%288 (Pow %286 %1407))
  (let (%289 (ReduceMean %288 (vec -1) 1))
  (let (%290 (Constant 9.999999960041972e-13))
  (let (%291 (Add %289 %290))
  (let (%292 (Sqrt %291))
  (let (%293 (Div %285 %292))
  (let (%294 (Mul %293 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%295 (Add %294 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%297 (MatMul %295 %1408))
  (let (%298 (Add %297 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%299 (Constant 1.4142135381698608))
  (let (%300 (Div %298 %299))
  (let (%301 (Erf %300))
  (let (%302 (Constant 1.0))
  (let (%303 (Add %301 %302))
  (let (%304 (Mul %298 %303))
  (let (%305 (Constant 0.5))
  (let (%306 (Mul %304 %305))
  (let (%308 (MatMul %306 %1409))
  (let (%309 (Add %308 bert.encoder.layer.0.output.dense.bias))
  (let (%310 (Add %309 %295))
  (let (%312 (ReduceMean %310 (vec -1) 1))
  (let (%313 (Sub %310 %312))
  (let (%314 (Cast_FLOAT %313))
  (let (%316 (Pow %314 %1410))
  (let (%317 (ReduceMean %316 (vec -1) 1))
  (let (%318 (Constant 9.999999960041972e-13))
  (let (%319 (Add %317 %318))
  (let (%320 (Sqrt %319))
  (let (%321 (Div %313 %320))
  (let (%322 (Mul %321 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%323 (Add %322 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%325 (MatMul %323 %1411))
  (let (%326 (Add %325 bert.encoder.layer.1.attention.self.query.bias))
  (let (%328 (MatMul %323 %1412))
  (let (%329 (Add %328 bert.encoder.layer.1.attention.self.key.bias))
  (let (%331 (MatMul %323 %1413))
  (let (%332 (Add %331 bert.encoder.layer.1.attention.self.value.bias))
  (let (%333 (Shape %326))
  (let (%334 (Constant 0))
  (let (%335 (Gather %333 %334 0))
  (let (%336 (Shape %326))
  (let (%337 (Constant 1))
  (let (%338 (Gather %336 %337 0))
  (let (%341 (Unsqueeze %335 (vec 0)))
  (let (%342 (Unsqueeze %338 (vec 0)))
  (let (%345 (Concat %341 %342 %1414 %1415 0))
  (let (%346 (Reshape %326 %345))
  (let (%347 (Transpose %346 (vec 0 2 1 3)))
  (let (%348 (Shape %329))
  (let (%349 (Constant 0))
  (let (%350 (Gather %348 %349 0))
  (let (%351 (Shape %329))
  (let (%352 (Constant 1))
  (let (%353 (Gather %351 %352 0))
  (let (%356 (Unsqueeze %350 (vec 0)))
  (let (%357 (Unsqueeze %353 (vec 0)))
  (let (%360 (Concat %356 %357 %1416 %1417 0))
  (let (%361 (Reshape %329 %360))
  (let (%362 (Shape %332))
  (let (%363 (Constant 0))
  (let (%364 (Gather %362 %363 0))
  (let (%365 (Shape %332))
  (let (%366 (Constant 1))
  (let (%367 (Gather %365 %366 0))
  (let (%370 (Unsqueeze %364 (vec 0)))
  (let (%371 (Unsqueeze %367 (vec 0)))
  (let (%374 (Concat %370 %371 %1418 %1419 0))
  (let (%375 (Reshape %332 %374))
  (let (%376 (Transpose %375 (vec 0 2 1 3)))
  (let (%377 (Transpose %361 (vec 0 2 3 1)))
  (let (%378 (MatMul %347 %377))
  (let (%379 (Constant 8.0))
  (let (%380 (Div %378 %379))
  (let (%381 (Add %380 %177))
  (let (%382 (Softmax %381 3))
  (let (%383 (MatMul %382 %376))
  (let (%384 (Transpose %383 (vec 0 2 1 3)))
  (let (%385 (Shape %384))
  (let (%386 (Constant 0))
  (let (%387 (Gather %385 %386 0))
  (let (%388 (Shape %384))
  (let (%389 (Constant 1))
  (let (%390 (Gather %388 %389 0))
  (let (%392 (Unsqueeze %387 (vec 0)))
  (let (%393 (Unsqueeze %390 (vec 0)))
  (let (%395 (Concat %392 %393 %1420 0))
  (let (%396 (Reshape %384 %395))
  (let (%398 (MatMul %396 %1421))
  (let (%399 (Add %398 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%400 (Add %399 %323))
  (let (%402 (ReduceMean %400 (vec -1) 1))
  (let (%403 (Sub %400 %402))
  (let (%404 (Cast_FLOAT %403))
  (let (%406 (Pow %404 %1422))
  (let (%407 (ReduceMean %406 (vec -1) 1))
  (let (%408 (Constant 9.999999960041972e-13))
  (let (%409 (Add %407 %408))
  (let (%410 (Sqrt %409))
  (let (%411 (Div %403 %410))
  (let (%412 (Mul %411 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%413 (Add %412 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%415 (MatMul %413 %1423))
  (let (%416 (Add %415 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%417 (Constant 1.4142135381698608))
  (let (%418 (Div %416 %417))
  (let (%419 (Erf %418))
  (let (%420 (Constant 1.0))
  (let (%421 (Add %419 %420))
  (let (%422 (Mul %416 %421))
  (let (%423 (Constant 0.5))
  (let (%424 (Mul %422 %423))
  (let (%426 (MatMul %424 %1424))
  (let (%427 (Add %426 bert.encoder.layer.1.output.dense.bias))
  (let (%428 (Add %427 %413))
  (let (%430 (ReduceMean %428 (vec -1) 1))
  (let (%431 (Sub %428 %430))
  (let (%432 (Cast_FLOAT %431))
  (let (%434 (Pow %432 %1425))
  (let (%435 (ReduceMean %434 (vec -1) 1))
  (let (%436 (Constant 9.999999960041972e-13))
  (let (%437 (Add %435 %436))
  (let (%438 (Sqrt %437))
  (let (%439 (Div %431 %438))
  (let (%440 (Mul %439 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%441 (Add %440 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%443 (MatMul %441 %1426))
  (let (%444 (Add %443 bert.encoder.layer.2.attention.self.query.bias))
  (let (%446 (MatMul %441 %1427))
  (let (%447 (Add %446 bert.encoder.layer.2.attention.self.key.bias))
  (let (%449 (MatMul %441 %1428))
  (let (%450 (Add %449 bert.encoder.layer.2.attention.self.value.bias))
  (let (%451 (Shape %444))
  (let (%452 (Constant 0))
  (let (%453 (Gather %451 %452 0))
  (let (%454 (Shape %444))
  (let (%455 (Constant 1))
  (let (%456 (Gather %454 %455 0))
  (let (%459 (Unsqueeze %453 (vec 0)))
  (let (%460 (Unsqueeze %456 (vec 0)))
  (let (%463 (Concat %459 %460 %1429 %1430 0))
  (let (%464 (Reshape %444 %463))
  (let (%465 (Transpose %464 (vec 0 2 1 3)))
  (let (%466 (Shape %447))
  (let (%467 (Constant 0))
  (let (%468 (Gather %466 %467 0))
  (let (%469 (Shape %447))
  (let (%470 (Constant 1))
  (let (%471 (Gather %469 %470 0))
  (let (%474 (Unsqueeze %468 (vec 0)))
  (let (%475 (Unsqueeze %471 (vec 0)))
  (let (%478 (Concat %474 %475 %1431 %1432 0))
  (let (%479 (Reshape %447 %478))
  (let (%480 (Shape %450))
  (let (%481 (Constant 0))
  (let (%482 (Gather %480 %481 0))
  (let (%483 (Shape %450))
  (let (%484 (Constant 1))
  (let (%485 (Gather %483 %484 0))
  (let (%488 (Unsqueeze %482 (vec 0)))
  (let (%489 (Unsqueeze %485 (vec 0)))
  (let (%492 (Concat %488 %489 %1433 %1434 0))
  (let (%493 (Reshape %450 %492))
  (let (%494 (Transpose %493 (vec 0 2 1 3)))
  (let (%495 (Transpose %479 (vec 0 2 3 1)))
  (let (%496 (MatMul %465 %495))
  (let (%497 (Constant 8.0))
  (let (%498 (Div %496 %497))
  (let (%499 (Add %498 %177))
  (let (%500 (Softmax %499 3))
  (let (%501 (MatMul %500 %494))
  (let (%502 (Transpose %501 (vec 0 2 1 3)))
  (let (%503 (Shape %502))
  (let (%504 (Constant 0))
  (let (%505 (Gather %503 %504 0))
  (let (%506 (Shape %502))
  (let (%507 (Constant 1))
  (let (%508 (Gather %506 %507 0))
  (let (%510 (Unsqueeze %505 (vec 0)))
  (let (%511 (Unsqueeze %508 (vec 0)))
  (let (%513 (Concat %510 %511 %1435 0))
  (let (%514 (Reshape %502 %513))
  (let (%516 (MatMul %514 %1436))
  (let (%517 (Add %516 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%518 (Add %517 %441))
  (let (%520 (ReduceMean %518 (vec -1) 1))
  (let (%521 (Sub %518 %520))
  (let (%522 (Cast_FLOAT %521))
  (let (%524 (Pow %522 %1437))
  (let (%525 (ReduceMean %524 (vec -1) 1))
  (let (%526 (Constant 9.999999960041972e-13))
  (let (%527 (Add %525 %526))
  (let (%528 (Sqrt %527))
  (let (%529 (Div %521 %528))
  (let (%530 (Mul %529 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%531 (Add %530 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%533 (MatMul %531 %1438))
  (let (%534 (Add %533 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%535 (Constant 1.4142135381698608))
  (let (%536 (Div %534 %535))
  (let (%537 (Erf %536))
  (let (%538 (Constant 1.0))
  (let (%539 (Add %537 %538))
  (let (%540 (Mul %534 %539))
  (let (%541 (Constant 0.5))
  (let (%542 (Mul %540 %541))
  (let (%544 (MatMul %542 %1439))
  (let (%545 (Add %544 bert.encoder.layer.2.output.dense.bias))
  (let (%546 (Add %545 %531))
  (let (%548 (ReduceMean %546 (vec -1) 1))
  (let (%549 (Sub %546 %548))
  (let (%550 (Cast_FLOAT %549))
  (let (%552 (Pow %550 %1440))
  (let (%553 (ReduceMean %552 (vec -1) 1))
  (let (%554 (Constant 9.999999960041972e-13))
  (let (%555 (Add %553 %554))
  (let (%556 (Sqrt %555))
  (let (%557 (Div %549 %556))
  (let (%558 (Mul %557 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%559 (Add %558 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%561 (MatMul %559 %1441))
  (let (%562 (Add %561 bert.encoder.layer.3.attention.self.query.bias))
  (let (%564 (MatMul %559 %1442))
  (let (%565 (Add %564 bert.encoder.layer.3.attention.self.key.bias))
  (let (%567 (MatMul %559 %1443))
  (let (%568 (Add %567 bert.encoder.layer.3.attention.self.value.bias))
  (let (%569 (Shape %562))
  (let (%570 (Constant 0))
  (let (%571 (Gather %569 %570 0))
  (let (%572 (Shape %562))
  (let (%573 (Constant 1))
  (let (%574 (Gather %572 %573 0))
  (let (%577 (Unsqueeze %571 (vec 0)))
  (let (%578 (Unsqueeze %574 (vec 0)))
  (let (%581 (Concat %577 %578 %1444 %1445 0))
  (let (%582 (Reshape %562 %581))
  (let (%583 (Transpose %582 (vec 0 2 1 3)))
  (let (%584 (Shape %565))
  (let (%585 (Constant 0))
  (let (%586 (Gather %584 %585 0))
  (let (%587 (Shape %565))
  (let (%588 (Constant 1))
  (let (%589 (Gather %587 %588 0))
  (let (%592 (Unsqueeze %586 (vec 0)))
  (let (%593 (Unsqueeze %589 (vec 0)))
  (let (%596 (Concat %592 %593 %1446 %1447 0))
  (let (%597 (Reshape %565 %596))
  (let (%598 (Shape %568))
  (let (%599 (Constant 0))
  (let (%600 (Gather %598 %599 0))
  (let (%601 (Shape %568))
  (let (%602 (Constant 1))
  (let (%603 (Gather %601 %602 0))
  (let (%606 (Unsqueeze %600 (vec 0)))
  (let (%607 (Unsqueeze %603 (vec 0)))
  (let (%610 (Concat %606 %607 %1448 %1449 0))
  (let (%611 (Reshape %568 %610))
  (let (%612 (Transpose %611 (vec 0 2 1 3)))
  (let (%613 (Transpose %597 (vec 0 2 3 1)))
  (let (%614 (MatMul %583 %613))
  (let (%615 (Constant 8.0))
  (let (%616 (Div %614 %615))
  (let (%617 (Add %616 %177))
  (let (%618 (Softmax %617 3))
  (let (%619 (MatMul %618 %612))
  (let (%620 (Transpose %619 (vec 0 2 1 3)))
  (let (%621 (Shape %620))
  (let (%622 (Constant 0))
  (let (%623 (Gather %621 %622 0))
  (let (%624 (Shape %620))
  (let (%625 (Constant 1))
  (let (%626 (Gather %624 %625 0))
  (let (%628 (Unsqueeze %623 (vec 0)))
  (let (%629 (Unsqueeze %626 (vec 0)))
  (let (%631 (Concat %628 %629 %1450 0))
  (let (%632 (Reshape %620 %631))
  (let (%634 (MatMul %632 %1451))
  (let (%635 (Add %634 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%636 (Add %635 %559))
  (let (%638 (ReduceMean %636 (vec -1) 1))
  (let (%639 (Sub %636 %638))
  (let (%640 (Cast_FLOAT %639))
  (let (%642 (Pow %640 %1452))
  (let (%643 (ReduceMean %642 (vec -1) 1))
  (let (%644 (Constant 9.999999960041972e-13))
  (let (%645 (Add %643 %644))
  (let (%646 (Sqrt %645))
  (let (%647 (Div %639 %646))
  (let (%648 (Mul %647 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%649 (Add %648 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%651 (MatMul %649 %1453))
  (let (%652 (Add %651 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%653 (Constant 1.4142135381698608))
  (let (%654 (Div %652 %653))
  (let (%655 (Erf %654))
  (let (%656 (Constant 1.0))
  (let (%657 (Add %655 %656))
  (let (%658 (Mul %652 %657))
  (let (%659 (Constant 0.5))
  (let (%660 (Mul %658 %659))
  (let (%662 (MatMul %660 %1454))
  (let (%663 (Add %662 bert.encoder.layer.3.output.dense.bias))
  (let (%664 (Add %663 %649))
  (let (%666 (ReduceMean %664 (vec -1) 1))
  (let (%667 (Sub %664 %666))
  (let (%668 (Cast_FLOAT %667))
  (let (%670 (Pow %668 %1455))
  (let (%671 (ReduceMean %670 (vec -1) 1))
  (let (%672 (Constant 9.999999960041972e-13))
  (let (%673 (Add %671 %672))
  (let (%674 (Sqrt %673))
  (let (%675 (Div %667 %674))
  (let (%676 (Mul %675 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%677 (Add %676 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%679 (MatMul %677 %1456))
  (let (%680 (Add %679 bert.encoder.layer.4.attention.self.query.bias))
  (let (%682 (MatMul %677 %1457))
  (let (%683 (Add %682 bert.encoder.layer.4.attention.self.key.bias))
  (let (%685 (MatMul %677 %1458))
  (let (%686 (Add %685 bert.encoder.layer.4.attention.self.value.bias))
  (let (%687 (Shape %680))
  (let (%688 (Constant 0))
  (let (%689 (Gather %687 %688 0))
  (let (%690 (Shape %680))
  (let (%691 (Constant 1))
  (let (%692 (Gather %690 %691 0))
  (let (%695 (Unsqueeze %689 (vec 0)))
  (let (%696 (Unsqueeze %692 (vec 0)))
  (let (%699 (Concat %695 %696 %1459 %1460 0))
  (let (%700 (Reshape %680 %699))
  (let (%701 (Transpose %700 (vec 0 2 1 3)))
  (let (%702 (Shape %683))
  (let (%703 (Constant 0))
  (let (%704 (Gather %702 %703 0))
  (let (%705 (Shape %683))
  (let (%706 (Constant 1))
  (let (%707 (Gather %705 %706 0))
  (let (%710 (Unsqueeze %704 (vec 0)))
  (let (%711 (Unsqueeze %707 (vec 0)))
  (let (%714 (Concat %710 %711 %1461 %1462 0))
  (let (%715 (Reshape %683 %714))
  (let (%716 (Shape %686))
  (let (%717 (Constant 0))
  (let (%718 (Gather %716 %717 0))
  (let (%719 (Shape %686))
  (let (%720 (Constant 1))
  (let (%721 (Gather %719 %720 0))
  (let (%724 (Unsqueeze %718 (vec 0)))
  (let (%725 (Unsqueeze %721 (vec 0)))
  (let (%728 (Concat %724 %725 %1463 %1464 0))
  (let (%729 (Reshape %686 %728))
  (let (%730 (Transpose %729 (vec 0 2 1 3)))
  (let (%731 (Transpose %715 (vec 0 2 3 1)))
  (let (%732 (MatMul %701 %731))
  (let (%733 (Constant 8.0))
  (let (%734 (Div %732 %733))
  (let (%735 (Add %734 %177))
  (let (%736 (Softmax %735 3))
  (let (%737 (MatMul %736 %730))
  (let (%738 (Transpose %737 (vec 0 2 1 3)))
  (let (%739 (Shape %738))
  (let (%740 (Constant 0))
  (let (%741 (Gather %739 %740 0))
  (let (%742 (Shape %738))
  (let (%743 (Constant 1))
  (let (%744 (Gather %742 %743 0))
  (let (%746 (Unsqueeze %741 (vec 0)))
  (let (%747 (Unsqueeze %744 (vec 0)))
  (let (%749 (Concat %746 %747 %1465 0))
  (let (%750 (Reshape %738 %749))
  (let (%752 (MatMul %750 %1466))
  (let (%753 (Add %752 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%754 (Add %753 %677))
  (let (%756 (ReduceMean %754 (vec -1) 1))
  (let (%757 (Sub %754 %756))
  (let (%758 (Cast_FLOAT %757))
  (let (%760 (Pow %758 %1467))
  (let (%761 (ReduceMean %760 (vec -1) 1))
  (let (%762 (Constant 9.999999960041972e-13))
  (let (%763 (Add %761 %762))
  (let (%764 (Sqrt %763))
  (let (%765 (Div %757 %764))
  (let (%766 (Mul %765 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%767 (Add %766 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%769 (MatMul %767 %1468))
  (let (%770 (Add %769 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%771 (Constant 1.4142135381698608))
  (let (%772 (Div %770 %771))
  (let (%773 (Erf %772))
  (let (%774 (Constant 1.0))
  (let (%775 (Add %773 %774))
  (let (%776 (Mul %770 %775))
  (let (%777 (Constant 0.5))
  (let (%778 (Mul %776 %777))
  (let (%780 (MatMul %778 %1469))
  (let (%781 (Add %780 bert.encoder.layer.4.output.dense.bias))
  (let (%782 (Add %781 %767))
  (let (%784 (ReduceMean %782 (vec -1) 1))
  (let (%785 (Sub %782 %784))
  (let (%786 (Cast_FLOAT %785))
  (let (%788 (Pow %786 %1470))
  (let (%789 (ReduceMean %788 (vec -1) 1))
  (let (%790 (Constant 9.999999960041972e-13))
  (let (%791 (Add %789 %790))
  (let (%792 (Sqrt %791))
  (let (%793 (Div %785 %792))
  (let (%794 (Mul %793 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%795 (Add %794 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%797 (MatMul %795 %1471))
  (let (%798 (Add %797 bert.encoder.layer.5.attention.self.query.bias))
  (let (%800 (MatMul %795 %1472))
  (let (%801 (Add %800 bert.encoder.layer.5.attention.self.key.bias))
  (let (%803 (MatMul %795 %1473))
  (let (%804 (Add %803 bert.encoder.layer.5.attention.self.value.bias))
  (let (%805 (Shape %798))
  (let (%806 (Constant 0))
  (let (%807 (Gather %805 %806 0))
  (let (%808 (Shape %798))
  (let (%809 (Constant 1))
  (let (%810 (Gather %808 %809 0))
  (let (%813 (Unsqueeze %807 (vec 0)))
  (let (%814 (Unsqueeze %810 (vec 0)))
  (let (%817 (Concat %813 %814 %1474 %1475 0))
  (let (%818 (Reshape %798 %817))
  (let (%819 (Transpose %818 (vec 0 2 1 3)))
  (let (%820 (Shape %801))
  (let (%821 (Constant 0))
  (let (%822 (Gather %820 %821 0))
  (let (%823 (Shape %801))
  (let (%824 (Constant 1))
  (let (%825 (Gather %823 %824 0))
  (let (%828 (Unsqueeze %822 (vec 0)))
  (let (%829 (Unsqueeze %825 (vec 0)))
  (let (%832 (Concat %828 %829 %1476 %1477 0))
  (let (%833 (Reshape %801 %832))
  (let (%834 (Shape %804))
  (let (%835 (Constant 0))
  (let (%836 (Gather %834 %835 0))
  (let (%837 (Shape %804))
  (let (%838 (Constant 1))
  (let (%839 (Gather %837 %838 0))
  (let (%842 (Unsqueeze %836 (vec 0)))
  (let (%843 (Unsqueeze %839 (vec 0)))
  (let (%846 (Concat %842 %843 %1478 %1479 0))
  (let (%847 (Reshape %804 %846))
  (let (%848 (Transpose %847 (vec 0 2 1 3)))
  (let (%849 (Transpose %833 (vec 0 2 3 1)))
  (let (%850 (MatMul %819 %849))
  (let (%851 (Constant 8.0))
  (let (%852 (Div %850 %851))
  (let (%853 (Add %852 %177))
  (let (%854 (Softmax %853 3))
  (let (%855 (MatMul %854 %848))
  (let (%856 (Transpose %855 (vec 0 2 1 3)))
  (let (%857 (Shape %856))
  (let (%858 (Constant 0))
  (let (%859 (Gather %857 %858 0))
  (let (%860 (Shape %856))
  (let (%861 (Constant 1))
  (let (%862 (Gather %860 %861 0))
  (let (%864 (Unsqueeze %859 (vec 0)))
  (let (%865 (Unsqueeze %862 (vec 0)))
  (let (%867 (Concat %864 %865 %1480 0))
  (let (%868 (Reshape %856 %867))
  (let (%870 (MatMul %868 %1481))
  (let (%871 (Add %870 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%872 (Add %871 %795))
  (let (%874 (ReduceMean %872 (vec -1) 1))
  (let (%875 (Sub %872 %874))
  (let (%876 (Cast_FLOAT %875))
  (let (%878 (Pow %876 %1482))
  (let (%879 (ReduceMean %878 (vec -1) 1))
  (let (%880 (Constant 9.999999960041972e-13))
  (let (%881 (Add %879 %880))
  (let (%882 (Sqrt %881))
  (let (%883 (Div %875 %882))
  (let (%884 (Mul %883 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%885 (Add %884 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%887 (MatMul %885 %1483))
  (let (%888 (Add %887 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%889 (Constant 1.4142135381698608))
  (let (%890 (Div %888 %889))
  (let (%891 (Erf %890))
  (let (%892 (Constant 1.0))
  (let (%893 (Add %891 %892))
  (let (%894 (Mul %888 %893))
  (let (%895 (Constant 0.5))
  (let (%896 (Mul %894 %895))
  (let (%898 (MatMul %896 %1484))
  (let (%899 (Add %898 bert.encoder.layer.5.output.dense.bias))
  (let (%900 (Add %899 %885))
  (let (%902 (ReduceMean %900 (vec -1) 1))
  (let (%903 (Sub %900 %902))
  (let (%904 (Cast_FLOAT %903))
  (let (%906 (Pow %904 %1485))
  (let (%907 (ReduceMean %906 (vec -1) 1))
  (let (%908 (Constant 9.999999960041972e-13))
  (let (%909 (Add %907 %908))
  (let (%910 (Sqrt %909))
  (let (%911 (Div %903 %910))
  (let (%912 (Mul %911 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%913 (Add %912 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%915 (MatMul %913 %1486))
  (let (%916 (Add %915 bert.encoder.layer.6.attention.self.query.bias))
  (let (%918 (MatMul %913 %1487))
  (let (%919 (Add %918 bert.encoder.layer.6.attention.self.key.bias))
  (let (%921 (MatMul %913 %1488))
  (let (%922 (Add %921 bert.encoder.layer.6.attention.self.value.bias))
  (let (%923 (Shape %916))
  (let (%924 (Constant 0))
  (let (%925 (Gather %923 %924 0))
  (let (%926 (Shape %916))
  (let (%927 (Constant 1))
  (let (%928 (Gather %926 %927 0))
  (let (%931 (Unsqueeze %925 (vec 0)))
  (let (%932 (Unsqueeze %928 (vec 0)))
  (let (%935 (Concat %931 %932 %1489 %1490 0))
  (let (%936 (Reshape %916 %935))
  (let (%937 (Transpose %936 (vec 0 2 1 3)))
  (let (%938 (Shape %919))
  (let (%939 (Constant 0))
  (let (%940 (Gather %938 %939 0))
  (let (%941 (Shape %919))
  (let (%942 (Constant 1))
  (let (%943 (Gather %941 %942 0))
  (let (%946 (Unsqueeze %940 (vec 0)))
  (let (%947 (Unsqueeze %943 (vec 0)))
  (let (%950 (Concat %946 %947 %1491 %1492 0))
  (let (%951 (Reshape %919 %950))
  (let (%952 (Shape %922))
  (let (%953 (Constant 0))
  (let (%954 (Gather %952 %953 0))
  (let (%955 (Shape %922))
  (let (%956 (Constant 1))
  (let (%957 (Gather %955 %956 0))
  (let (%960 (Unsqueeze %954 (vec 0)))
  (let (%961 (Unsqueeze %957 (vec 0)))
  (let (%964 (Concat %960 %961 %1493 %1494 0))
  (let (%965 (Reshape %922 %964))
  (let (%966 (Transpose %965 (vec 0 2 1 3)))
  (let (%967 (Transpose %951 (vec 0 2 3 1)))
  (let (%968 (MatMul %937 %967))
  (let (%969 (Constant 8.0))
  (let (%970 (Div %968 %969))
  (let (%971 (Add %970 %177))
  (let (%972 (Softmax %971 3))
  (let (%973 (MatMul %972 %966))
  (let (%974 (Transpose %973 (vec 0 2 1 3)))
  (let (%975 (Shape %974))
  (let (%976 (Constant 0))
  (let (%977 (Gather %975 %976 0))
  (let (%978 (Shape %974))
  (let (%979 (Constant 1))
  (let (%980 (Gather %978 %979 0))
  (let (%982 (Unsqueeze %977 (vec 0)))
  (let (%983 (Unsqueeze %980 (vec 0)))
  (let (%985 (Concat %982 %983 %1495 0))
  (let (%986 (Reshape %974 %985))
  (let (%988 (MatMul %986 %1496))
  (let (%989 (Add %988 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%990 (Add %989 %913))
  (let (%992 (ReduceMean %990 (vec -1) 1))
  (let (%993 (Sub %990 %992))
  (let (%994 (Cast_FLOAT %993))
  (let (%996 (Pow %994 %1497))
  (let (%997 (ReduceMean %996 (vec -1) 1))
  (let (%998 (Constant 9.999999960041972e-13))
  (let (%999 (Add %997 %998))
  (let (%1000 (Sqrt %999))
  (let (%1001 (Div %993 %1000))
  (let (%1002 (Mul %1001 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1003 (Add %1002 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1005 (MatMul %1003 %1498))
  (let (%1006 (Add %1005 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1007 (Constant 1.4142135381698608))
  (let (%1008 (Div %1006 %1007))
  (let (%1009 (Erf %1008))
  (let (%1010 (Constant 1.0))
  (let (%1011 (Add %1009 %1010))
  (let (%1012 (Mul %1006 %1011))
  (let (%1013 (Constant 0.5))
  (let (%1014 (Mul %1012 %1013))
  (let (%1016 (MatMul %1014 %1499))
  (let (%1017 (Add %1016 bert.encoder.layer.6.output.dense.bias))
  (let (%1018 (Add %1017 %1003))
  (let (%1020 (ReduceMean %1018 (vec -1) 1))
  (let (%1021 (Sub %1018 %1020))
  (let (%1022 (Cast_FLOAT %1021))
  (let (%1024 (Pow %1022 %1500))
  (let (%1025 (ReduceMean %1024 (vec -1) 1))
  (let (%1026 (Constant 9.999999960041972e-13))
  (let (%1027 (Add %1025 %1026))
  (let (%1028 (Sqrt %1027))
  (let (%1029 (Div %1021 %1028))
  (let (%1030 (Mul %1029 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1031 (Add %1030 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1033 (MatMul %1031 %1501))
  (let (%1034 (Add %1033 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1036 (MatMul %1031 %1502))
  (let (%1037 (Add %1036 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1039 (MatMul %1031 %1503))
  (let (%1040 (Add %1039 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1041 (Shape %1034))
  (let (%1042 (Constant 0))
  (let (%1043 (Gather %1041 %1042 0))
  (let (%1044 (Shape %1034))
  (let (%1045 (Constant 1))
  (let (%1046 (Gather %1044 %1045 0))
  (let (%1049 (Unsqueeze %1043 (vec 0)))
  (let (%1050 (Unsqueeze %1046 (vec 0)))
  (let (%1053 (Concat %1049 %1050 %1504 %1505 0))
  (let (%1054 (Reshape %1034 %1053))
  (let (%1055 (Transpose %1054 (vec 0 2 1 3)))
  (let (%1056 (Shape %1037))
  (let (%1057 (Constant 0))
  (let (%1058 (Gather %1056 %1057 0))
  (let (%1059 (Shape %1037))
  (let (%1060 (Constant 1))
  (let (%1061 (Gather %1059 %1060 0))
  (let (%1064 (Unsqueeze %1058 (vec 0)))
  (let (%1065 (Unsqueeze %1061 (vec 0)))
  (let (%1068 (Concat %1064 %1065 %1506 %1507 0))
  (let (%1069 (Reshape %1037 %1068))
  (let (%1070 (Shape %1040))
  (let (%1071 (Constant 0))
  (let (%1072 (Gather %1070 %1071 0))
  (let (%1073 (Shape %1040))
  (let (%1074 (Constant 1))
  (let (%1075 (Gather %1073 %1074 0))
  (let (%1078 (Unsqueeze %1072 (vec 0)))
  (let (%1079 (Unsqueeze %1075 (vec 0)))
  (let (%1082 (Concat %1078 %1079 %1508 %1509 0))
  (let (%1083 (Reshape %1040 %1082))
  (let (%1084 (Transpose %1083 (vec 0 2 1 3)))
  (let (%1085 (Transpose %1069 (vec 0 2 3 1)))
  (let (%1086 (MatMul %1055 %1085))
  (let (%1087 (Constant 8.0))
  (let (%1088 (Div %1086 %1087))
  (let (%1089 (Add %1088 %177))
  (let (%1090 (Softmax %1089 3))
  (let (%1091 (MatMul %1090 %1084))
  (let (%1092 (Transpose %1091 (vec 0 2 1 3)))
  (let (%1093 (Shape %1092))
  (let (%1094 (Constant 0))
  (let (%1095 (Gather %1093 %1094 0))
  (let (%1096 (Shape %1092))
  (let (%1097 (Constant 1))
  (let (%1098 (Gather %1096 %1097 0))
  (let (%1100 (Unsqueeze %1095 (vec 0)))
  (let (%1101 (Unsqueeze %1098 (vec 0)))
  (let (%1103 (Concat %1100 %1101 %1510 0))
  (let (%1104 (Reshape %1092 %1103))
  (let (%1106 (MatMul %1104 %1511))
  (let (%1107 (Add %1106 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1108 (Add %1107 %1031))
  (let (%1110 (ReduceMean %1108 (vec -1) 1))
  (let (%1111 (Sub %1108 %1110))
  (let (%1112 (Cast_FLOAT %1111))
  (let (%1114 (Pow %1112 %1512))
  (let (%1115 (ReduceMean %1114 (vec -1) 1))
  (let (%1116 (Constant 9.999999960041972e-13))
  (let (%1117 (Add %1115 %1116))
  (let (%1118 (Sqrt %1117))
  (let (%1119 (Div %1111 %1118))
  (let (%1120 (Mul %1119 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1121 (Add %1120 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1123 (MatMul %1121 %1513))
  (let (%1124 (Add %1123 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1125 (Constant 1.4142135381698608))
  (let (%1126 (Div %1124 %1125))
  (let (%1127 (Erf %1126))
  (let (%1128 (Constant 1.0))
  (let (%1129 (Add %1127 %1128))
  (let (%1130 (Mul %1124 %1129))
  (let (%1131 (Constant 0.5))
  (let (%1132 (Mul %1130 %1131))
  (let (%1134 (MatMul %1132 %1514))
  (let (%1135 (Add %1134 bert.encoder.layer.7.output.dense.bias))
  (let (%1136 (Add %1135 %1121))
  (let (%1138 (ReduceMean %1136 (vec -1) 1))
  (let (%1139 (Sub %1136 %1138))
  (let (%1140 (Cast_FLOAT %1139))
  (let (%1142 (Pow %1140 %1515))
  (let (%1143 (ReduceMean %1142 (vec -1) 1))
  (let (%1144 (Constant 9.999999960041972e-13))
  (let (%1145 (Add %1143 %1144))
  (let (%1146 (Sqrt %1145))
  (let (%1147 (Div %1139 %1146))
  (let (%1148 (Mul %1147 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1149 (Add %1148 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1151 (MatMul %1149 %1516))
  (let (%1152 (Add %1151 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1154 (MatMul %1149 %1517))
  (let (%1155 (Add %1154 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1157 (MatMul %1149 %1518))
  (let (%1158 (Add %1157 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1159 (Shape %1152))
  (let (%1160 (Constant 0))
  (let (%1161 (Gather %1159 %1160 0))
  (let (%1162 (Shape %1152))
  (let (%1163 (Constant 1))
  (let (%1164 (Gather %1162 %1163 0))
  (let (%1167 (Unsqueeze %1161 (vec 0)))
  (let (%1168 (Unsqueeze %1164 (vec 0)))
  (let (%1171 (Concat %1167 %1168 %1519 %1520 0))
  (let (%1172 (Reshape %1152 %1171))
  (let (%1173 (Transpose %1172 (vec 0 2 1 3)))
  (let (%1174 (Shape %1155))
  (let (%1175 (Constant 0))
  (let (%1176 (Gather %1174 %1175 0))
  (let (%1177 (Shape %1155))
  (let (%1178 (Constant 1))
  (let (%1179 (Gather %1177 %1178 0))
  (let (%1182 (Unsqueeze %1176 (vec 0)))
  (let (%1183 (Unsqueeze %1179 (vec 0)))
  (let (%1186 (Concat %1182 %1183 %1521 %1522 0))
  (let (%1187 (Reshape %1155 %1186))
  (let (%1188 (Shape %1158))
  (let (%1189 (Constant 0))
  (let (%1190 (Gather %1188 %1189 0))
  (let (%1191 (Shape %1158))
  (let (%1192 (Constant 1))
  (let (%1193 (Gather %1191 %1192 0))
  (let (%1196 (Unsqueeze %1190 (vec 0)))
  (let (%1197 (Unsqueeze %1193 (vec 0)))
  (let (%1200 (Concat %1196 %1197 %1523 %1524 0))
  (let (%1201 (Reshape %1158 %1200))
  (let (%1202 (Transpose %1201 (vec 0 2 1 3)))
  (let (%1203 (Transpose %1187 (vec 0 2 3 1)))
  (let (%1204 (MatMul %1173 %1203))
  (let (%1205 (Constant 8.0))
  (let (%1206 (Div %1204 %1205))
  (let (%1207 (Add %1206 %177))
  (let (%1208 (Softmax %1207 3))
  (let (%1209 (MatMul %1208 %1202))
  (let (%1210 (Transpose %1209 (vec 0 2 1 3)))
  (let (%1211 (Shape %1210))
  (let (%1212 (Constant 0))
  (let (%1213 (Gather %1211 %1212 0))
  (let (%1214 (Shape %1210))
  (let (%1215 (Constant 1))
  (let (%1216 (Gather %1214 %1215 0))
  (let (%1218 (Unsqueeze %1213 (vec 0)))
  (let (%1219 (Unsqueeze %1216 (vec 0)))
  (let (%1221 (Concat %1218 %1219 %1525 0))
  (let (%1222 (Reshape %1210 %1221))
  (let (%1224 (MatMul %1222 %1526))
  (let (%1225 (Add %1224 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1226 (Add %1225 %1149))
  (let (%1228 (ReduceMean %1226 (vec -1) 1))
  (let (%1229 (Sub %1226 %1228))
  (let (%1230 (Cast_FLOAT %1229))
  (let (%1232 (Pow %1230 %1527))
  (let (%1233 (ReduceMean %1232 (vec -1) 1))
  (let (%1234 (Constant 9.999999960041972e-13))
  (let (%1235 (Add %1233 %1234))
  (let (%1236 (Sqrt %1235))
  (let (%1237 (Div %1229 %1236))
  (let (%1238 (Mul %1237 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1239 (Add %1238 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1241 (MatMul %1239 %1528))
  (let (%1242 (Add %1241 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1243 (Constant 1.4142135381698608))
  (let (%1244 (Div %1242 %1243))
  (let (%1245 (Erf %1244))
  (let (%1246 (Constant 1.0))
  (let (%1247 (Add %1245 %1246))
  (let (%1248 (Mul %1242 %1247))
  (let (%1249 (Constant 0.5))
  (let (%1250 (Mul %1248 %1249))
  (let (%1252 (MatMul %1250 %1529))
  (let (%1253 (Add %1252 bert.encoder.layer.8.output.dense.bias))
  (let (%1254 (Add %1253 %1239))
  (let (%1256 (ReduceMean %1254 (vec -1) 1))
  (let (%1257 (Sub %1254 %1256))
  (let (%1258 (Cast_FLOAT %1257))
  (let (%1260 (Pow %1258 %1530))
  (let (%1261 (ReduceMean %1260 (vec -1) 1))
  (let (%1262 (Constant 9.999999960041972e-13))
  (let (%1263 (Add %1261 %1262))
  (let (%1264 (Sqrt %1263))
  (let (%1265 (Div %1257 %1264))
  (let (%1266 (Mul %1265 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1267 (Add %1266 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1269 (MatMul %1267 %1531))
  (let (%1270 (Add %1269 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1272 (MatMul %1267 %1532))
  (let (%1273 (Add %1272 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1275 (MatMul %1267 %1533))
  (let (%1276 (Add %1275 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1277 (Shape %1270))
  (let (%1278 (Constant 0))
  (let (%1279 (Gather %1277 %1278 0))
  (let (%1280 (Shape %1270))
  (let (%1281 (Constant 1))
  (let (%1282 (Gather %1280 %1281 0))
  (let (%1285 (Unsqueeze %1279 (vec 0)))
  (let (%1286 (Unsqueeze %1282 (vec 0)))
  (let (%1289 (Concat %1285 %1286 %1534 %1535 0))
  (let (%1290 (Reshape %1270 %1289))
  (let (%1291 (Transpose %1290 (vec 0 2 1 3)))
  (let (%1292 (Shape %1273))
  (let (%1293 (Constant 0))
  (let (%1294 (Gather %1292 %1293 0))
  (let (%1295 (Shape %1273))
  (let (%1296 (Constant 1))
  (let (%1297 (Gather %1295 %1296 0))
  (let (%1300 (Unsqueeze %1294 (vec 0)))
  (let (%1301 (Unsqueeze %1297 (vec 0)))
  (let (%1304 (Concat %1300 %1301 %1536 %1537 0))
  (let (%1305 (Reshape %1273 %1304))
  (let (%1306 (Shape %1276))
  (let (%1307 (Constant 0))
  (let (%1308 (Gather %1306 %1307 0))
  (let (%1309 (Shape %1276))
  (let (%1310 (Constant 1))
  (let (%1311 (Gather %1309 %1310 0))
  (let (%1314 (Unsqueeze %1308 (vec 0)))
  (let (%1315 (Unsqueeze %1311 (vec 0)))
  (let (%1318 (Concat %1314 %1315 %1538 %1539 0))
  (let (%1319 (Reshape %1276 %1318))
  (let (%1320 (Transpose %1319 (vec 0 2 1 3)))
  (let (%1321 (Transpose %1305 (vec 0 2 3 1)))
  (let (%1322 (MatMul %1291 %1321))
  (let (%1323 (Constant 8.0))
  (let (%1324 (Div %1322 %1323))
  (let (%1325 (Add %1324 %177))
  (let (%1326 (Softmax %1325 3))
  (let (%1327 (MatMul %1326 %1320))
  (let (%1328 (Transpose %1327 (vec 0 2 1 3)))
  (let (%1329 (Shape %1328))
  (let (%1330 (Constant 0))
  (let (%1331 (Gather %1329 %1330 0))
  (let (%1332 (Shape %1328))
  (let (%1333 (Constant 1))
  (let (%1334 (Gather %1332 %1333 0))
  (let (%1336 (Unsqueeze %1331 (vec 0)))
  (let (%1337 (Unsqueeze %1334 (vec 0)))
  (let (%1339 (Concat %1336 %1337 %1540 0))
  (let (%1340 (Reshape %1328 %1339))
  (let (%1342 (MatMul %1340 %1541))
  (let (%1343 (Add %1342 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1344 (Add %1343 %1267))
  (let (%1346 (ReduceMean %1344 (vec -1) 1))
  (let (%1347 (Sub %1344 %1346))
  (let (%1348 (Cast_FLOAT %1347))
  (let (%1350 (Pow %1348 %1542))
  (let (%1351 (ReduceMean %1350 (vec -1) 1))
  (let (%1352 (Constant 9.999999960041972e-13))
  (let (%1353 (Add %1351 %1352))
  (let (%1354 (Sqrt %1353))
  (let (%1355 (Div %1347 %1354))
  (let (%1356 (Mul %1355 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1357 (Add %1356 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1359 (MatMul %1357 %1543))
  (let (%1360 (Add %1359 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1361 (Constant 1.4142135381698608))
  (let (%1362 (Div %1360 %1361))
  (let (%1363 (Erf %1362))
  (let (%1364 (Constant 1.0))
  (let (%1365 (Add %1363 %1364))
  (let (%1366 (Mul %1360 %1365))
  (let (%1367 (Constant 0.5))
  (let (%1368 (Mul %1366 %1367))
  (let (%1370 (MatMul %1368 %1544))
  (let (%1371 (Add %1370 bert.encoder.layer.9.output.dense.bias))
  (let (%1372 (Add %1371 %1357))
  (let (%1374 (ReduceMean %1372 (vec -1) 1))
  (let (%1375 (Sub %1372 %1374))
  (let (%1376 (Cast_FLOAT %1375))
  (let (%1378 (Pow %1376 %1545))
  (let (%1379 (ReduceMean %1378 (vec -1) 1))
  (let (%1380 (Constant 9.999999960041972e-13))
  (let (%1381 (Add %1379 %1380))
  (let (%1382 (Sqrt %1381))
  (let (%1383 (Div %1375 %1382))
  (let (%1384 (Mul %1383 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1385 (Add %1384 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1387 (MatMul %1385 %1546))
  (let (%1388 (Add %1387 qa_outputs.bias))
  (let ((%1389 %1390) (Split %1388 (vec 1 1) -1))
  (let (output_0 (Squeeze %1389 (vec -1)))
  (let (output_1 (Squeeze %1390 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

