;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert20.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2733 (vec 0))
  (let (%2734 (vec 1))
  (let (%2735 2.0)
  (let (%2736 (load-from-onnx-float32 768 768 "%2736"))
  (let (%2737 (load-from-onnx-float32 768 768 "%2737"))
  (let (%2738 (load-from-onnx-float32 768 768 "%2738"))
  (let (%2739 (vec 12))
  (let (%2740 (vec 64))
  (let (%2741 (vec 12))
  (let (%2742 (vec 64))
  (let (%2743 (vec 12))
  (let (%2744 (vec 64))
  (let (%2745 (vec 768))
  (let (%2746 (load-from-onnx-float32 768 768 "%2746"))
  (let (%2747 2.0)
  (let (%2748 (load-from-onnx-float32 768 3072 "%2748"))
  (let (%2749 (load-from-onnx-float32 3072 768 "%2749"))
  (let (%2750 2.0)
  (let (%2751 (load-from-onnx-float32 768 768 "%2751"))
  (let (%2752 (load-from-onnx-float32 768 768 "%2752"))
  (let (%2753 (load-from-onnx-float32 768 768 "%2753"))
  (let (%2754 (vec 12))
  (let (%2755 (vec 64))
  (let (%2756 (vec 12))
  (let (%2757 (vec 64))
  (let (%2758 (vec 12))
  (let (%2759 (vec 64))
  (let (%2760 (vec 768))
  (let (%2761 (load-from-onnx-float32 768 768 "%2761"))
  (let (%2762 2.0)
  (let (%2763 (load-from-onnx-float32 768 3072 "%2763"))
  (let (%2764 (load-from-onnx-float32 3072 768 "%2764"))
  (let (%2765 2.0)
  (let (%2766 (load-from-onnx-float32 768 768 "%2766"))
  (let (%2767 (load-from-onnx-float32 768 768 "%2767"))
  (let (%2768 (load-from-onnx-float32 768 768 "%2768"))
  (let (%2769 (vec 12))
  (let (%2770 (vec 64))
  (let (%2771 (vec 12))
  (let (%2772 (vec 64))
  (let (%2773 (vec 12))
  (let (%2774 (vec 64))
  (let (%2775 (vec 768))
  (let (%2776 (load-from-onnx-float32 768 768 "%2776"))
  (let (%2777 2.0)
  (let (%2778 (load-from-onnx-float32 768 3072 "%2778"))
  (let (%2779 (load-from-onnx-float32 3072 768 "%2779"))
  (let (%2780 2.0)
  (let (%2781 (load-from-onnx-float32 768 768 "%2781"))
  (let (%2782 (load-from-onnx-float32 768 768 "%2782"))
  (let (%2783 (load-from-onnx-float32 768 768 "%2783"))
  (let (%2784 (vec 12))
  (let (%2785 (vec 64))
  (let (%2786 (vec 12))
  (let (%2787 (vec 64))
  (let (%2788 (vec 12))
  (let (%2789 (vec 64))
  (let (%2790 (vec 768))
  (let (%2791 (load-from-onnx-float32 768 768 "%2791"))
  (let (%2792 2.0)
  (let (%2793 (load-from-onnx-float32 768 3072 "%2793"))
  (let (%2794 (load-from-onnx-float32 3072 768 "%2794"))
  (let (%2795 2.0)
  (let (%2796 (load-from-onnx-float32 768 768 "%2796"))
  (let (%2797 (load-from-onnx-float32 768 768 "%2797"))
  (let (%2798 (load-from-onnx-float32 768 768 "%2798"))
  (let (%2799 (vec 12))
  (let (%2800 (vec 64))
  (let (%2801 (vec 12))
  (let (%2802 (vec 64))
  (let (%2803 (vec 12))
  (let (%2804 (vec 64))
  (let (%2805 (vec 768))
  (let (%2806 (load-from-onnx-float32 768 768 "%2806"))
  (let (%2807 2.0)
  (let (%2808 (load-from-onnx-float32 768 3072 "%2808"))
  (let (%2809 (load-from-onnx-float32 3072 768 "%2809"))
  (let (%2810 2.0)
  (let (%2811 (load-from-onnx-float32 768 768 "%2811"))
  (let (%2812 (load-from-onnx-float32 768 768 "%2812"))
  (let (%2813 (load-from-onnx-float32 768 768 "%2813"))
  (let (%2814 (vec 12))
  (let (%2815 (vec 64))
  (let (%2816 (vec 12))
  (let (%2817 (vec 64))
  (let (%2818 (vec 12))
  (let (%2819 (vec 64))
  (let (%2820 (vec 768))
  (let (%2821 (load-from-onnx-float32 768 768 "%2821"))
  (let (%2822 2.0)
  (let (%2823 (load-from-onnx-float32 768 3072 "%2823"))
  (let (%2824 (load-from-onnx-float32 3072 768 "%2824"))
  (let (%2825 2.0)
  (let (%2826 (load-from-onnx-float32 768 768 "%2826"))
  (let (%2827 (load-from-onnx-float32 768 768 "%2827"))
  (let (%2828 (load-from-onnx-float32 768 768 "%2828"))
  (let (%2829 (vec 12))
  (let (%2830 (vec 64))
  (let (%2831 (vec 12))
  (let (%2832 (vec 64))
  (let (%2833 (vec 12))
  (let (%2834 (vec 64))
  (let (%2835 (vec 768))
  (let (%2836 (load-from-onnx-float32 768 768 "%2836"))
  (let (%2837 2.0)
  (let (%2838 (load-from-onnx-float32 768 3072 "%2838"))
  (let (%2839 (load-from-onnx-float32 3072 768 "%2839"))
  (let (%2840 2.0)
  (let (%2841 (load-from-onnx-float32 768 768 "%2841"))
  (let (%2842 (load-from-onnx-float32 768 768 "%2842"))
  (let (%2843 (load-from-onnx-float32 768 768 "%2843"))
  (let (%2844 (vec 12))
  (let (%2845 (vec 64))
  (let (%2846 (vec 12))
  (let (%2847 (vec 64))
  (let (%2848 (vec 12))
  (let (%2849 (vec 64))
  (let (%2850 (vec 768))
  (let (%2851 (load-from-onnx-float32 768 768 "%2851"))
  (let (%2852 2.0)
  (let (%2853 (load-from-onnx-float32 768 3072 "%2853"))
  (let (%2854 (load-from-onnx-float32 3072 768 "%2854"))
  (let (%2855 2.0)
  (let (%2856 (load-from-onnx-float32 768 768 "%2856"))
  (let (%2857 (load-from-onnx-float32 768 768 "%2857"))
  (let (%2858 (load-from-onnx-float32 768 768 "%2858"))
  (let (%2859 (vec 12))
  (let (%2860 (vec 64))
  (let (%2861 (vec 12))
  (let (%2862 (vec 64))
  (let (%2863 (vec 12))
  (let (%2864 (vec 64))
  (let (%2865 (vec 768))
  (let (%2866 (load-from-onnx-float32 768 768 "%2866"))
  (let (%2867 2.0)
  (let (%2868 (load-from-onnx-float32 768 3072 "%2868"))
  (let (%2869 (load-from-onnx-float32 3072 768 "%2869"))
  (let (%2870 2.0)
  (let (%2871 (load-from-onnx-float32 768 768 "%2871"))
  (let (%2872 (load-from-onnx-float32 768 768 "%2872"))
  (let (%2873 (load-from-onnx-float32 768 768 "%2873"))
  (let (%2874 (vec 12))
  (let (%2875 (vec 64))
  (let (%2876 (vec 12))
  (let (%2877 (vec 64))
  (let (%2878 (vec 12))
  (let (%2879 (vec 64))
  (let (%2880 (vec 768))
  (let (%2881 (load-from-onnx-float32 768 768 "%2881"))
  (let (%2882 2.0)
  (let (%2883 (load-from-onnx-float32 768 3072 "%2883"))
  (let (%2884 (load-from-onnx-float32 3072 768 "%2884"))
  (let (%2885 2.0)
  (let (%2886 (load-from-onnx-float32 768 768 "%2886"))
  (let (%2887 (load-from-onnx-float32 768 768 "%2887"))
  (let (%2888 (load-from-onnx-float32 768 768 "%2888"))
  (let (%2889 (vec 12))
  (let (%2890 (vec 64))
  (let (%2891 (vec 12))
  (let (%2892 (vec 64))
  (let (%2893 (vec 12))
  (let (%2894 (vec 64))
  (let (%2895 (vec 768))
  (let (%2896 (load-from-onnx-float32 768 768 "%2896"))
  (let (%2897 2.0)
  (let (%2898 (load-from-onnx-float32 768 3072 "%2898"))
  (let (%2899 (load-from-onnx-float32 3072 768 "%2899"))
  (let (%2900 2.0)
  (let (%2901 (load-from-onnx-float32 768 768 "%2901"))
  (let (%2902 (load-from-onnx-float32 768 768 "%2902"))
  (let (%2903 (load-from-onnx-float32 768 768 "%2903"))
  (let (%2904 (vec 12))
  (let (%2905 (vec 64))
  (let (%2906 (vec 12))
  (let (%2907 (vec 64))
  (let (%2908 (vec 12))
  (let (%2909 (vec 64))
  (let (%2910 (vec 768))
  (let (%2911 (load-from-onnx-float32 768 768 "%2911"))
  (let (%2912 2.0)
  (let (%2913 (load-from-onnx-float32 768 3072 "%2913"))
  (let (%2914 (load-from-onnx-float32 3072 768 "%2914"))
  (let (%2915 2.0)
  (let (%2916 (load-from-onnx-float32 768 768 "%2916"))
  (let (%2917 (load-from-onnx-float32 768 768 "%2917"))
  (let (%2918 (load-from-onnx-float32 768 768 "%2918"))
  (let (%2919 (vec 12))
  (let (%2920 (vec 64))
  (let (%2921 (vec 12))
  (let (%2922 (vec 64))
  (let (%2923 (vec 12))
  (let (%2924 (vec 64))
  (let (%2925 (vec 768))
  (let (%2926 (load-from-onnx-float32 768 768 "%2926"))
  (let (%2927 2.0)
  (let (%2928 (load-from-onnx-float32 768 3072 "%2928"))
  (let (%2929 (load-from-onnx-float32 3072 768 "%2929"))
  (let (%2930 2.0)
  (let (%2931 (load-from-onnx-float32 768 768 "%2931"))
  (let (%2932 (load-from-onnx-float32 768 768 "%2932"))
  (let (%2933 (load-from-onnx-float32 768 768 "%2933"))
  (let (%2934 (vec 12))
  (let (%2935 (vec 64))
  (let (%2936 (vec 12))
  (let (%2937 (vec 64))
  (let (%2938 (vec 12))
  (let (%2939 (vec 64))
  (let (%2940 (vec 768))
  (let (%2941 (load-from-onnx-float32 768 768 "%2941"))
  (let (%2942 2.0)
  (let (%2943 (load-from-onnx-float32 768 3072 "%2943"))
  (let (%2944 (load-from-onnx-float32 3072 768 "%2944"))
  (let (%2945 2.0)
  (let (%2946 (load-from-onnx-float32 768 768 "%2946"))
  (let (%2947 (load-from-onnx-float32 768 768 "%2947"))
  (let (%2948 (load-from-onnx-float32 768 768 "%2948"))
  (let (%2949 (vec 12))
  (let (%2950 (vec 64))
  (let (%2951 (vec 12))
  (let (%2952 (vec 64))
  (let (%2953 (vec 12))
  (let (%2954 (vec 64))
  (let (%2955 (vec 768))
  (let (%2956 (load-from-onnx-float32 768 768 "%2956"))
  (let (%2957 2.0)
  (let (%2958 (load-from-onnx-float32 768 3072 "%2958"))
  (let (%2959 (load-from-onnx-float32 3072 768 "%2959"))
  (let (%2960 2.0)
  (let (%2961 (load-from-onnx-float32 768 768 "%2961"))
  (let (%2962 (load-from-onnx-float32 768 768 "%2962"))
  (let (%2963 (load-from-onnx-float32 768 768 "%2963"))
  (let (%2964 (vec 12))
  (let (%2965 (vec 64))
  (let (%2966 (vec 12))
  (let (%2967 (vec 64))
  (let (%2968 (vec 12))
  (let (%2969 (vec 64))
  (let (%2970 (vec 768))
  (let (%2971 (load-from-onnx-float32 768 768 "%2971"))
  (let (%2972 2.0)
  (let (%2973 (load-from-onnx-float32 768 3072 "%2973"))
  (let (%2974 (load-from-onnx-float32 3072 768 "%2974"))
  (let (%2975 2.0)
  (let (%2976 (load-from-onnx-float32 768 768 "%2976"))
  (let (%2977 (load-from-onnx-float32 768 768 "%2977"))
  (let (%2978 (load-from-onnx-float32 768 768 "%2978"))
  (let (%2979 (vec 12))
  (let (%2980 (vec 64))
  (let (%2981 (vec 12))
  (let (%2982 (vec 64))
  (let (%2983 (vec 12))
  (let (%2984 (vec 64))
  (let (%2985 (vec 768))
  (let (%2986 (load-from-onnx-float32 768 768 "%2986"))
  (let (%2987 2.0)
  (let (%2988 (load-from-onnx-float32 768 3072 "%2988"))
  (let (%2989 (load-from-onnx-float32 3072 768 "%2989"))
  (let (%2990 2.0)
  (let (%2991 (load-from-onnx-float32 768 768 "%2991"))
  (let (%2992 (load-from-onnx-float32 768 768 "%2992"))
  (let (%2993 (load-from-onnx-float32 768 768 "%2993"))
  (let (%2994 (vec 12))
  (let (%2995 (vec 64))
  (let (%2996 (vec 12))
  (let (%2997 (vec 64))
  (let (%2998 (vec 12))
  (let (%2999 (vec 64))
  (let (%3000 (vec 768))
  (let (%3001 (load-from-onnx-float32 768 768 "%3001"))
  (let (%3002 2.0)
  (let (%3003 (load-from-onnx-float32 768 3072 "%3003"))
  (let (%3004 (load-from-onnx-float32 3072 768 "%3004"))
  (let (%3005 2.0)
  (let (%3006 (load-from-onnx-float32 768 768 "%3006"))
  (let (%3007 (load-from-onnx-float32 768 768 "%3007"))
  (let (%3008 (load-from-onnx-float32 768 768 "%3008"))
  (let (%3009 (vec 12))
  (let (%3010 (vec 64))
  (let (%3011 (vec 12))
  (let (%3012 (vec 64))
  (let (%3013 (vec 12))
  (let (%3014 (vec 64))
  (let (%3015 (vec 768))
  (let (%3016 (load-from-onnx-float32 768 768 "%3016"))
  (let (%3017 2.0)
  (let (%3018 (load-from-onnx-float32 768 3072 "%3018"))
  (let (%3019 (load-from-onnx-float32 3072 768 "%3019"))
  (let (%3020 2.0)
  (let (%3021 (load-from-onnx-float32 768 768 "%3021"))
  (let (%3022 (load-from-onnx-float32 768 768 "%3022"))
  (let (%3023 (load-from-onnx-float32 768 768 "%3023"))
  (let (%3024 (vec 12))
  (let (%3025 (vec 64))
  (let (%3026 (vec 12))
  (let (%3027 (vec 64))
  (let (%3028 (vec 12))
  (let (%3029 (vec 64))
  (let (%3030 (vec 768))
  (let (%3031 (load-from-onnx-float32 768 768 "%3031"))
  (let (%3032 2.0)
  (let (%3033 (load-from-onnx-float32 768 3072 "%3033"))
  (let (%3034 (load-from-onnx-float32 3072 768 "%3034"))
  (let (%3035 2.0)
  (let (%3036 (load-from-onnx-float32 768 2 "%3036"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.key.bias"))
  (let (bert.encoder.layer.18.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.query.bias"))
  (let (bert.encoder.layer.18.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.value.bias"))
  (let (bert.encoder.layer.18.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.18.intermediate.dense.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.key.bias"))
  (let (bert.encoder.layer.19.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.query.bias"))
  (let (bert.encoder.layer.19.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.value.bias"))
  (let (bert.encoder.layer.19.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.19.intermediate.dense.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%331 (Unsqueeze attention_mask (vec 1)))
  (let (%332 (Unsqueeze %331 (vec 2)))
  (let (%333 (Cast_FLOAT %332))
  (let (%334 (Constant 1.0))
  (let (%335 (Sub %334 %333))
  (let (%336 (Constant -10000.0))
  (let (%337 (Mul %335 %336))
  (let (%338 (Shape input_ids))
  (let (%339 (Constant 1))
  (let (%340 (Gather %338 %339 0))
  (let (%344 (Unsqueeze %340 (vec 0)))
  (let (%346 (Constant (vec 1)))
  (let (%347 (Slice bert.embeddings.position_ids %2733 %344 %2734 %346))
  (let (%348 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%349 (Gather bert.embeddings.position_embeddings.weight %347 0))
  (let (%350 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%351 (Add %348 %349))
  (let (%352 (Add %351 %350))
  (let (%354 (ReduceMean %352 (vec -1) 1))
  (let (%355 (Sub %352 %354))
  (let (%356 (Cast_FLOAT %355))
  (let (%358 (Pow %356 %2735))
  (let (%359 (ReduceMean %358 (vec -1) 1))
  (let (%360 (Constant 9.999999960041972e-13))
  (let (%361 (Add %359 %360))
  (let (%362 (Sqrt %361))
  (let (%363 (Div %355 %362))
  (let (%364 (Mul %363 bert.embeddings.LayerNorm.weight))
  (let (%365 (Add %364 bert.embeddings.LayerNorm.bias))
  (let (%367 (MatMul %365 %2736))
  (let (%368 (Add %367 bert.encoder.layer.0.attention.self.query.bias))
  (let (%370 (MatMul %365 %2737))
  (let (%371 (Add %370 bert.encoder.layer.0.attention.self.key.bias))
  (let (%373 (MatMul %365 %2738))
  (let (%374 (Add %373 bert.encoder.layer.0.attention.self.value.bias))
  (let (%375 (Shape %368))
  (let (%376 (Constant 0))
  (let (%377 (Gather %375 %376 0))
  (let (%378 (Shape %368))
  (let (%379 (Constant 1))
  (let (%380 (Gather %378 %379 0))
  (let (%383 (Unsqueeze %377 (vec 0)))
  (let (%384 (Unsqueeze %380 (vec 0)))
  (let (%387 (Concat %383 %384 %2739 %2740 0))
  (let (%388 (Reshape %368 %387))
  (let (%389 (Transpose %388 (vec 0 2 1 3)))
  (let (%390 (Shape %371))
  (let (%391 (Constant 0))
  (let (%392 (Gather %390 %391 0))
  (let (%393 (Shape %371))
  (let (%394 (Constant 1))
  (let (%395 (Gather %393 %394 0))
  (let (%398 (Unsqueeze %392 (vec 0)))
  (let (%399 (Unsqueeze %395 (vec 0)))
  (let (%402 (Concat %398 %399 %2741 %2742 0))
  (let (%403 (Reshape %371 %402))
  (let (%404 (Shape %374))
  (let (%405 (Constant 0))
  (let (%406 (Gather %404 %405 0))
  (let (%407 (Shape %374))
  (let (%408 (Constant 1))
  (let (%409 (Gather %407 %408 0))
  (let (%412 (Unsqueeze %406 (vec 0)))
  (let (%413 (Unsqueeze %409 (vec 0)))
  (let (%416 (Concat %412 %413 %2743 %2744 0))
  (let (%417 (Reshape %374 %416))
  (let (%418 (Transpose %417 (vec 0 2 1 3)))
  (let (%419 (Transpose %403 (vec 0 2 3 1)))
  (let (%420 (MatMul %389 %419))
  (let (%421 (Constant 8.0))
  (let (%422 (Div %420 %421))
  (let (%423 (Add %422 %337))
  (let (%424 (Softmax %423 3))
  (let (%425 (MatMul %424 %418))
  (let (%426 (Transpose %425 (vec 0 2 1 3)))
  (let (%427 (Shape %426))
  (let (%428 (Constant 0))
  (let (%429 (Gather %427 %428 0))
  (let (%430 (Shape %426))
  (let (%431 (Constant 1))
  (let (%432 (Gather %430 %431 0))
  (let (%434 (Unsqueeze %429 (vec 0)))
  (let (%435 (Unsqueeze %432 (vec 0)))
  (let (%437 (Concat %434 %435 %2745 0))
  (let (%438 (Reshape %426 %437))
  (let (%440 (MatMul %438 %2746))
  (let (%441 (Add %440 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%442 (Add %441 %365))
  (let (%444 (ReduceMean %442 (vec -1) 1))
  (let (%445 (Sub %442 %444))
  (let (%446 (Cast_FLOAT %445))
  (let (%448 (Pow %446 %2747))
  (let (%449 (ReduceMean %448 (vec -1) 1))
  (let (%450 (Constant 9.999999960041972e-13))
  (let (%451 (Add %449 %450))
  (let (%452 (Sqrt %451))
  (let (%453 (Div %445 %452))
  (let (%454 (Mul %453 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%455 (Add %454 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%457 (MatMul %455 %2748))
  (let (%458 (Add %457 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%459 (Constant 1.4142135381698608))
  (let (%460 (Div %458 %459))
  (let (%461 (Erf %460))
  (let (%462 (Constant 1.0))
  (let (%463 (Add %461 %462))
  (let (%464 (Mul %458 %463))
  (let (%465 (Constant 0.5))
  (let (%466 (Mul %464 %465))
  (let (%468 (MatMul %466 %2749))
  (let (%469 (Add %468 bert.encoder.layer.0.output.dense.bias))
  (let (%470 (Add %469 %455))
  (let (%472 (ReduceMean %470 (vec -1) 1))
  (let (%473 (Sub %470 %472))
  (let (%474 (Cast_FLOAT %473))
  (let (%476 (Pow %474 %2750))
  (let (%477 (ReduceMean %476 (vec -1) 1))
  (let (%478 (Constant 9.999999960041972e-13))
  (let (%479 (Add %477 %478))
  (let (%480 (Sqrt %479))
  (let (%481 (Div %473 %480))
  (let (%482 (Mul %481 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%483 (Add %482 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%485 (MatMul %483 %2751))
  (let (%486 (Add %485 bert.encoder.layer.1.attention.self.query.bias))
  (let (%488 (MatMul %483 %2752))
  (let (%489 (Add %488 bert.encoder.layer.1.attention.self.key.bias))
  (let (%491 (MatMul %483 %2753))
  (let (%492 (Add %491 bert.encoder.layer.1.attention.self.value.bias))
  (let (%493 (Shape %486))
  (let (%494 (Constant 0))
  (let (%495 (Gather %493 %494 0))
  (let (%496 (Shape %486))
  (let (%497 (Constant 1))
  (let (%498 (Gather %496 %497 0))
  (let (%501 (Unsqueeze %495 (vec 0)))
  (let (%502 (Unsqueeze %498 (vec 0)))
  (let (%505 (Concat %501 %502 %2754 %2755 0))
  (let (%506 (Reshape %486 %505))
  (let (%507 (Transpose %506 (vec 0 2 1 3)))
  (let (%508 (Shape %489))
  (let (%509 (Constant 0))
  (let (%510 (Gather %508 %509 0))
  (let (%511 (Shape %489))
  (let (%512 (Constant 1))
  (let (%513 (Gather %511 %512 0))
  (let (%516 (Unsqueeze %510 (vec 0)))
  (let (%517 (Unsqueeze %513 (vec 0)))
  (let (%520 (Concat %516 %517 %2756 %2757 0))
  (let (%521 (Reshape %489 %520))
  (let (%522 (Shape %492))
  (let (%523 (Constant 0))
  (let (%524 (Gather %522 %523 0))
  (let (%525 (Shape %492))
  (let (%526 (Constant 1))
  (let (%527 (Gather %525 %526 0))
  (let (%530 (Unsqueeze %524 (vec 0)))
  (let (%531 (Unsqueeze %527 (vec 0)))
  (let (%534 (Concat %530 %531 %2758 %2759 0))
  (let (%535 (Reshape %492 %534))
  (let (%536 (Transpose %535 (vec 0 2 1 3)))
  (let (%537 (Transpose %521 (vec 0 2 3 1)))
  (let (%538 (MatMul %507 %537))
  (let (%539 (Constant 8.0))
  (let (%540 (Div %538 %539))
  (let (%541 (Add %540 %337))
  (let (%542 (Softmax %541 3))
  (let (%543 (MatMul %542 %536))
  (let (%544 (Transpose %543 (vec 0 2 1 3)))
  (let (%545 (Shape %544))
  (let (%546 (Constant 0))
  (let (%547 (Gather %545 %546 0))
  (let (%548 (Shape %544))
  (let (%549 (Constant 1))
  (let (%550 (Gather %548 %549 0))
  (let (%552 (Unsqueeze %547 (vec 0)))
  (let (%553 (Unsqueeze %550 (vec 0)))
  (let (%555 (Concat %552 %553 %2760 0))
  (let (%556 (Reshape %544 %555))
  (let (%558 (MatMul %556 %2761))
  (let (%559 (Add %558 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%560 (Add %559 %483))
  (let (%562 (ReduceMean %560 (vec -1) 1))
  (let (%563 (Sub %560 %562))
  (let (%564 (Cast_FLOAT %563))
  (let (%566 (Pow %564 %2762))
  (let (%567 (ReduceMean %566 (vec -1) 1))
  (let (%568 (Constant 9.999999960041972e-13))
  (let (%569 (Add %567 %568))
  (let (%570 (Sqrt %569))
  (let (%571 (Div %563 %570))
  (let (%572 (Mul %571 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%573 (Add %572 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%575 (MatMul %573 %2763))
  (let (%576 (Add %575 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%577 (Constant 1.4142135381698608))
  (let (%578 (Div %576 %577))
  (let (%579 (Erf %578))
  (let (%580 (Constant 1.0))
  (let (%581 (Add %579 %580))
  (let (%582 (Mul %576 %581))
  (let (%583 (Constant 0.5))
  (let (%584 (Mul %582 %583))
  (let (%586 (MatMul %584 %2764))
  (let (%587 (Add %586 bert.encoder.layer.1.output.dense.bias))
  (let (%588 (Add %587 %573))
  (let (%590 (ReduceMean %588 (vec -1) 1))
  (let (%591 (Sub %588 %590))
  (let (%592 (Cast_FLOAT %591))
  (let (%594 (Pow %592 %2765))
  (let (%595 (ReduceMean %594 (vec -1) 1))
  (let (%596 (Constant 9.999999960041972e-13))
  (let (%597 (Add %595 %596))
  (let (%598 (Sqrt %597))
  (let (%599 (Div %591 %598))
  (let (%600 (Mul %599 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%601 (Add %600 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%603 (MatMul %601 %2766))
  (let (%604 (Add %603 bert.encoder.layer.2.attention.self.query.bias))
  (let (%606 (MatMul %601 %2767))
  (let (%607 (Add %606 bert.encoder.layer.2.attention.self.key.bias))
  (let (%609 (MatMul %601 %2768))
  (let (%610 (Add %609 bert.encoder.layer.2.attention.self.value.bias))
  (let (%611 (Shape %604))
  (let (%612 (Constant 0))
  (let (%613 (Gather %611 %612 0))
  (let (%614 (Shape %604))
  (let (%615 (Constant 1))
  (let (%616 (Gather %614 %615 0))
  (let (%619 (Unsqueeze %613 (vec 0)))
  (let (%620 (Unsqueeze %616 (vec 0)))
  (let (%623 (Concat %619 %620 %2769 %2770 0))
  (let (%624 (Reshape %604 %623))
  (let (%625 (Transpose %624 (vec 0 2 1 3)))
  (let (%626 (Shape %607))
  (let (%627 (Constant 0))
  (let (%628 (Gather %626 %627 0))
  (let (%629 (Shape %607))
  (let (%630 (Constant 1))
  (let (%631 (Gather %629 %630 0))
  (let (%634 (Unsqueeze %628 (vec 0)))
  (let (%635 (Unsqueeze %631 (vec 0)))
  (let (%638 (Concat %634 %635 %2771 %2772 0))
  (let (%639 (Reshape %607 %638))
  (let (%640 (Shape %610))
  (let (%641 (Constant 0))
  (let (%642 (Gather %640 %641 0))
  (let (%643 (Shape %610))
  (let (%644 (Constant 1))
  (let (%645 (Gather %643 %644 0))
  (let (%648 (Unsqueeze %642 (vec 0)))
  (let (%649 (Unsqueeze %645 (vec 0)))
  (let (%652 (Concat %648 %649 %2773 %2774 0))
  (let (%653 (Reshape %610 %652))
  (let (%654 (Transpose %653 (vec 0 2 1 3)))
  (let (%655 (Transpose %639 (vec 0 2 3 1)))
  (let (%656 (MatMul %625 %655))
  (let (%657 (Constant 8.0))
  (let (%658 (Div %656 %657))
  (let (%659 (Add %658 %337))
  (let (%660 (Softmax %659 3))
  (let (%661 (MatMul %660 %654))
  (let (%662 (Transpose %661 (vec 0 2 1 3)))
  (let (%663 (Shape %662))
  (let (%664 (Constant 0))
  (let (%665 (Gather %663 %664 0))
  (let (%666 (Shape %662))
  (let (%667 (Constant 1))
  (let (%668 (Gather %666 %667 0))
  (let (%670 (Unsqueeze %665 (vec 0)))
  (let (%671 (Unsqueeze %668 (vec 0)))
  (let (%673 (Concat %670 %671 %2775 0))
  (let (%674 (Reshape %662 %673))
  (let (%676 (MatMul %674 %2776))
  (let (%677 (Add %676 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%678 (Add %677 %601))
  (let (%680 (ReduceMean %678 (vec -1) 1))
  (let (%681 (Sub %678 %680))
  (let (%682 (Cast_FLOAT %681))
  (let (%684 (Pow %682 %2777))
  (let (%685 (ReduceMean %684 (vec -1) 1))
  (let (%686 (Constant 9.999999960041972e-13))
  (let (%687 (Add %685 %686))
  (let (%688 (Sqrt %687))
  (let (%689 (Div %681 %688))
  (let (%690 (Mul %689 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%691 (Add %690 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%693 (MatMul %691 %2778))
  (let (%694 (Add %693 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%695 (Constant 1.4142135381698608))
  (let (%696 (Div %694 %695))
  (let (%697 (Erf %696))
  (let (%698 (Constant 1.0))
  (let (%699 (Add %697 %698))
  (let (%700 (Mul %694 %699))
  (let (%701 (Constant 0.5))
  (let (%702 (Mul %700 %701))
  (let (%704 (MatMul %702 %2779))
  (let (%705 (Add %704 bert.encoder.layer.2.output.dense.bias))
  (let (%706 (Add %705 %691))
  (let (%708 (ReduceMean %706 (vec -1) 1))
  (let (%709 (Sub %706 %708))
  (let (%710 (Cast_FLOAT %709))
  (let (%712 (Pow %710 %2780))
  (let (%713 (ReduceMean %712 (vec -1) 1))
  (let (%714 (Constant 9.999999960041972e-13))
  (let (%715 (Add %713 %714))
  (let (%716 (Sqrt %715))
  (let (%717 (Div %709 %716))
  (let (%718 (Mul %717 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%719 (Add %718 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%721 (MatMul %719 %2781))
  (let (%722 (Add %721 bert.encoder.layer.3.attention.self.query.bias))
  (let (%724 (MatMul %719 %2782))
  (let (%725 (Add %724 bert.encoder.layer.3.attention.self.key.bias))
  (let (%727 (MatMul %719 %2783))
  (let (%728 (Add %727 bert.encoder.layer.3.attention.self.value.bias))
  (let (%729 (Shape %722))
  (let (%730 (Constant 0))
  (let (%731 (Gather %729 %730 0))
  (let (%732 (Shape %722))
  (let (%733 (Constant 1))
  (let (%734 (Gather %732 %733 0))
  (let (%737 (Unsqueeze %731 (vec 0)))
  (let (%738 (Unsqueeze %734 (vec 0)))
  (let (%741 (Concat %737 %738 %2784 %2785 0))
  (let (%742 (Reshape %722 %741))
  (let (%743 (Transpose %742 (vec 0 2 1 3)))
  (let (%744 (Shape %725))
  (let (%745 (Constant 0))
  (let (%746 (Gather %744 %745 0))
  (let (%747 (Shape %725))
  (let (%748 (Constant 1))
  (let (%749 (Gather %747 %748 0))
  (let (%752 (Unsqueeze %746 (vec 0)))
  (let (%753 (Unsqueeze %749 (vec 0)))
  (let (%756 (Concat %752 %753 %2786 %2787 0))
  (let (%757 (Reshape %725 %756))
  (let (%758 (Shape %728))
  (let (%759 (Constant 0))
  (let (%760 (Gather %758 %759 0))
  (let (%761 (Shape %728))
  (let (%762 (Constant 1))
  (let (%763 (Gather %761 %762 0))
  (let (%766 (Unsqueeze %760 (vec 0)))
  (let (%767 (Unsqueeze %763 (vec 0)))
  (let (%770 (Concat %766 %767 %2788 %2789 0))
  (let (%771 (Reshape %728 %770))
  (let (%772 (Transpose %771 (vec 0 2 1 3)))
  (let (%773 (Transpose %757 (vec 0 2 3 1)))
  (let (%774 (MatMul %743 %773))
  (let (%775 (Constant 8.0))
  (let (%776 (Div %774 %775))
  (let (%777 (Add %776 %337))
  (let (%778 (Softmax %777 3))
  (let (%779 (MatMul %778 %772))
  (let (%780 (Transpose %779 (vec 0 2 1 3)))
  (let (%781 (Shape %780))
  (let (%782 (Constant 0))
  (let (%783 (Gather %781 %782 0))
  (let (%784 (Shape %780))
  (let (%785 (Constant 1))
  (let (%786 (Gather %784 %785 0))
  (let (%788 (Unsqueeze %783 (vec 0)))
  (let (%789 (Unsqueeze %786 (vec 0)))
  (let (%791 (Concat %788 %789 %2790 0))
  (let (%792 (Reshape %780 %791))
  (let (%794 (MatMul %792 %2791))
  (let (%795 (Add %794 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%796 (Add %795 %719))
  (let (%798 (ReduceMean %796 (vec -1) 1))
  (let (%799 (Sub %796 %798))
  (let (%800 (Cast_FLOAT %799))
  (let (%802 (Pow %800 %2792))
  (let (%803 (ReduceMean %802 (vec -1) 1))
  (let (%804 (Constant 9.999999960041972e-13))
  (let (%805 (Add %803 %804))
  (let (%806 (Sqrt %805))
  (let (%807 (Div %799 %806))
  (let (%808 (Mul %807 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%809 (Add %808 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%811 (MatMul %809 %2793))
  (let (%812 (Add %811 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%813 (Constant 1.4142135381698608))
  (let (%814 (Div %812 %813))
  (let (%815 (Erf %814))
  (let (%816 (Constant 1.0))
  (let (%817 (Add %815 %816))
  (let (%818 (Mul %812 %817))
  (let (%819 (Constant 0.5))
  (let (%820 (Mul %818 %819))
  (let (%822 (MatMul %820 %2794))
  (let (%823 (Add %822 bert.encoder.layer.3.output.dense.bias))
  (let (%824 (Add %823 %809))
  (let (%826 (ReduceMean %824 (vec -1) 1))
  (let (%827 (Sub %824 %826))
  (let (%828 (Cast_FLOAT %827))
  (let (%830 (Pow %828 %2795))
  (let (%831 (ReduceMean %830 (vec -1) 1))
  (let (%832 (Constant 9.999999960041972e-13))
  (let (%833 (Add %831 %832))
  (let (%834 (Sqrt %833))
  (let (%835 (Div %827 %834))
  (let (%836 (Mul %835 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%837 (Add %836 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%839 (MatMul %837 %2796))
  (let (%840 (Add %839 bert.encoder.layer.4.attention.self.query.bias))
  (let (%842 (MatMul %837 %2797))
  (let (%843 (Add %842 bert.encoder.layer.4.attention.self.key.bias))
  (let (%845 (MatMul %837 %2798))
  (let (%846 (Add %845 bert.encoder.layer.4.attention.self.value.bias))
  (let (%847 (Shape %840))
  (let (%848 (Constant 0))
  (let (%849 (Gather %847 %848 0))
  (let (%850 (Shape %840))
  (let (%851 (Constant 1))
  (let (%852 (Gather %850 %851 0))
  (let (%855 (Unsqueeze %849 (vec 0)))
  (let (%856 (Unsqueeze %852 (vec 0)))
  (let (%859 (Concat %855 %856 %2799 %2800 0))
  (let (%860 (Reshape %840 %859))
  (let (%861 (Transpose %860 (vec 0 2 1 3)))
  (let (%862 (Shape %843))
  (let (%863 (Constant 0))
  (let (%864 (Gather %862 %863 0))
  (let (%865 (Shape %843))
  (let (%866 (Constant 1))
  (let (%867 (Gather %865 %866 0))
  (let (%870 (Unsqueeze %864 (vec 0)))
  (let (%871 (Unsqueeze %867 (vec 0)))
  (let (%874 (Concat %870 %871 %2801 %2802 0))
  (let (%875 (Reshape %843 %874))
  (let (%876 (Shape %846))
  (let (%877 (Constant 0))
  (let (%878 (Gather %876 %877 0))
  (let (%879 (Shape %846))
  (let (%880 (Constant 1))
  (let (%881 (Gather %879 %880 0))
  (let (%884 (Unsqueeze %878 (vec 0)))
  (let (%885 (Unsqueeze %881 (vec 0)))
  (let (%888 (Concat %884 %885 %2803 %2804 0))
  (let (%889 (Reshape %846 %888))
  (let (%890 (Transpose %889 (vec 0 2 1 3)))
  (let (%891 (Transpose %875 (vec 0 2 3 1)))
  (let (%892 (MatMul %861 %891))
  (let (%893 (Constant 8.0))
  (let (%894 (Div %892 %893))
  (let (%895 (Add %894 %337))
  (let (%896 (Softmax %895 3))
  (let (%897 (MatMul %896 %890))
  (let (%898 (Transpose %897 (vec 0 2 1 3)))
  (let (%899 (Shape %898))
  (let (%900 (Constant 0))
  (let (%901 (Gather %899 %900 0))
  (let (%902 (Shape %898))
  (let (%903 (Constant 1))
  (let (%904 (Gather %902 %903 0))
  (let (%906 (Unsqueeze %901 (vec 0)))
  (let (%907 (Unsqueeze %904 (vec 0)))
  (let (%909 (Concat %906 %907 %2805 0))
  (let (%910 (Reshape %898 %909))
  (let (%912 (MatMul %910 %2806))
  (let (%913 (Add %912 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%914 (Add %913 %837))
  (let (%916 (ReduceMean %914 (vec -1) 1))
  (let (%917 (Sub %914 %916))
  (let (%918 (Cast_FLOAT %917))
  (let (%920 (Pow %918 %2807))
  (let (%921 (ReduceMean %920 (vec -1) 1))
  (let (%922 (Constant 9.999999960041972e-13))
  (let (%923 (Add %921 %922))
  (let (%924 (Sqrt %923))
  (let (%925 (Div %917 %924))
  (let (%926 (Mul %925 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%927 (Add %926 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%929 (MatMul %927 %2808))
  (let (%930 (Add %929 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%931 (Constant 1.4142135381698608))
  (let (%932 (Div %930 %931))
  (let (%933 (Erf %932))
  (let (%934 (Constant 1.0))
  (let (%935 (Add %933 %934))
  (let (%936 (Mul %930 %935))
  (let (%937 (Constant 0.5))
  (let (%938 (Mul %936 %937))
  (let (%940 (MatMul %938 %2809))
  (let (%941 (Add %940 bert.encoder.layer.4.output.dense.bias))
  (let (%942 (Add %941 %927))
  (let (%944 (ReduceMean %942 (vec -1) 1))
  (let (%945 (Sub %942 %944))
  (let (%946 (Cast_FLOAT %945))
  (let (%948 (Pow %946 %2810))
  (let (%949 (ReduceMean %948 (vec -1) 1))
  (let (%950 (Constant 9.999999960041972e-13))
  (let (%951 (Add %949 %950))
  (let (%952 (Sqrt %951))
  (let (%953 (Div %945 %952))
  (let (%954 (Mul %953 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%955 (Add %954 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%957 (MatMul %955 %2811))
  (let (%958 (Add %957 bert.encoder.layer.5.attention.self.query.bias))
  (let (%960 (MatMul %955 %2812))
  (let (%961 (Add %960 bert.encoder.layer.5.attention.self.key.bias))
  (let (%963 (MatMul %955 %2813))
  (let (%964 (Add %963 bert.encoder.layer.5.attention.self.value.bias))
  (let (%965 (Shape %958))
  (let (%966 (Constant 0))
  (let (%967 (Gather %965 %966 0))
  (let (%968 (Shape %958))
  (let (%969 (Constant 1))
  (let (%970 (Gather %968 %969 0))
  (let (%973 (Unsqueeze %967 (vec 0)))
  (let (%974 (Unsqueeze %970 (vec 0)))
  (let (%977 (Concat %973 %974 %2814 %2815 0))
  (let (%978 (Reshape %958 %977))
  (let (%979 (Transpose %978 (vec 0 2 1 3)))
  (let (%980 (Shape %961))
  (let (%981 (Constant 0))
  (let (%982 (Gather %980 %981 0))
  (let (%983 (Shape %961))
  (let (%984 (Constant 1))
  (let (%985 (Gather %983 %984 0))
  (let (%988 (Unsqueeze %982 (vec 0)))
  (let (%989 (Unsqueeze %985 (vec 0)))
  (let (%992 (Concat %988 %989 %2816 %2817 0))
  (let (%993 (Reshape %961 %992))
  (let (%994 (Shape %964))
  (let (%995 (Constant 0))
  (let (%996 (Gather %994 %995 0))
  (let (%997 (Shape %964))
  (let (%998 (Constant 1))
  (let (%999 (Gather %997 %998 0))
  (let (%1002 (Unsqueeze %996 (vec 0)))
  (let (%1003 (Unsqueeze %999 (vec 0)))
  (let (%1006 (Concat %1002 %1003 %2818 %2819 0))
  (let (%1007 (Reshape %964 %1006))
  (let (%1008 (Transpose %1007 (vec 0 2 1 3)))
  (let (%1009 (Transpose %993 (vec 0 2 3 1)))
  (let (%1010 (MatMul %979 %1009))
  (let (%1011 (Constant 8.0))
  (let (%1012 (Div %1010 %1011))
  (let (%1013 (Add %1012 %337))
  (let (%1014 (Softmax %1013 3))
  (let (%1015 (MatMul %1014 %1008))
  (let (%1016 (Transpose %1015 (vec 0 2 1 3)))
  (let (%1017 (Shape %1016))
  (let (%1018 (Constant 0))
  (let (%1019 (Gather %1017 %1018 0))
  (let (%1020 (Shape %1016))
  (let (%1021 (Constant 1))
  (let (%1022 (Gather %1020 %1021 0))
  (let (%1024 (Unsqueeze %1019 (vec 0)))
  (let (%1025 (Unsqueeze %1022 (vec 0)))
  (let (%1027 (Concat %1024 %1025 %2820 0))
  (let (%1028 (Reshape %1016 %1027))
  (let (%1030 (MatMul %1028 %2821))
  (let (%1031 (Add %1030 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1032 (Add %1031 %955))
  (let (%1034 (ReduceMean %1032 (vec -1) 1))
  (let (%1035 (Sub %1032 %1034))
  (let (%1036 (Cast_FLOAT %1035))
  (let (%1038 (Pow %1036 %2822))
  (let (%1039 (ReduceMean %1038 (vec -1) 1))
  (let (%1040 (Constant 9.999999960041972e-13))
  (let (%1041 (Add %1039 %1040))
  (let (%1042 (Sqrt %1041))
  (let (%1043 (Div %1035 %1042))
  (let (%1044 (Mul %1043 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1045 (Add %1044 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1047 (MatMul %1045 %2823))
  (let (%1048 (Add %1047 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1049 (Constant 1.4142135381698608))
  (let (%1050 (Div %1048 %1049))
  (let (%1051 (Erf %1050))
  (let (%1052 (Constant 1.0))
  (let (%1053 (Add %1051 %1052))
  (let (%1054 (Mul %1048 %1053))
  (let (%1055 (Constant 0.5))
  (let (%1056 (Mul %1054 %1055))
  (let (%1058 (MatMul %1056 %2824))
  (let (%1059 (Add %1058 bert.encoder.layer.5.output.dense.bias))
  (let (%1060 (Add %1059 %1045))
  (let (%1062 (ReduceMean %1060 (vec -1) 1))
  (let (%1063 (Sub %1060 %1062))
  (let (%1064 (Cast_FLOAT %1063))
  (let (%1066 (Pow %1064 %2825))
  (let (%1067 (ReduceMean %1066 (vec -1) 1))
  (let (%1068 (Constant 9.999999960041972e-13))
  (let (%1069 (Add %1067 %1068))
  (let (%1070 (Sqrt %1069))
  (let (%1071 (Div %1063 %1070))
  (let (%1072 (Mul %1071 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1073 (Add %1072 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1075 (MatMul %1073 %2826))
  (let (%1076 (Add %1075 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1078 (MatMul %1073 %2827))
  (let (%1079 (Add %1078 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1081 (MatMul %1073 %2828))
  (let (%1082 (Add %1081 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1083 (Shape %1076))
  (let (%1084 (Constant 0))
  (let (%1085 (Gather %1083 %1084 0))
  (let (%1086 (Shape %1076))
  (let (%1087 (Constant 1))
  (let (%1088 (Gather %1086 %1087 0))
  (let (%1091 (Unsqueeze %1085 (vec 0)))
  (let (%1092 (Unsqueeze %1088 (vec 0)))
  (let (%1095 (Concat %1091 %1092 %2829 %2830 0))
  (let (%1096 (Reshape %1076 %1095))
  (let (%1097 (Transpose %1096 (vec 0 2 1 3)))
  (let (%1098 (Shape %1079))
  (let (%1099 (Constant 0))
  (let (%1100 (Gather %1098 %1099 0))
  (let (%1101 (Shape %1079))
  (let (%1102 (Constant 1))
  (let (%1103 (Gather %1101 %1102 0))
  (let (%1106 (Unsqueeze %1100 (vec 0)))
  (let (%1107 (Unsqueeze %1103 (vec 0)))
  (let (%1110 (Concat %1106 %1107 %2831 %2832 0))
  (let (%1111 (Reshape %1079 %1110))
  (let (%1112 (Shape %1082))
  (let (%1113 (Constant 0))
  (let (%1114 (Gather %1112 %1113 0))
  (let (%1115 (Shape %1082))
  (let (%1116 (Constant 1))
  (let (%1117 (Gather %1115 %1116 0))
  (let (%1120 (Unsqueeze %1114 (vec 0)))
  (let (%1121 (Unsqueeze %1117 (vec 0)))
  (let (%1124 (Concat %1120 %1121 %2833 %2834 0))
  (let (%1125 (Reshape %1082 %1124))
  (let (%1126 (Transpose %1125 (vec 0 2 1 3)))
  (let (%1127 (Transpose %1111 (vec 0 2 3 1)))
  (let (%1128 (MatMul %1097 %1127))
  (let (%1129 (Constant 8.0))
  (let (%1130 (Div %1128 %1129))
  (let (%1131 (Add %1130 %337))
  (let (%1132 (Softmax %1131 3))
  (let (%1133 (MatMul %1132 %1126))
  (let (%1134 (Transpose %1133 (vec 0 2 1 3)))
  (let (%1135 (Shape %1134))
  (let (%1136 (Constant 0))
  (let (%1137 (Gather %1135 %1136 0))
  (let (%1138 (Shape %1134))
  (let (%1139 (Constant 1))
  (let (%1140 (Gather %1138 %1139 0))
  (let (%1142 (Unsqueeze %1137 (vec 0)))
  (let (%1143 (Unsqueeze %1140 (vec 0)))
  (let (%1145 (Concat %1142 %1143 %2835 0))
  (let (%1146 (Reshape %1134 %1145))
  (let (%1148 (MatMul %1146 %2836))
  (let (%1149 (Add %1148 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1150 (Add %1149 %1073))
  (let (%1152 (ReduceMean %1150 (vec -1) 1))
  (let (%1153 (Sub %1150 %1152))
  (let (%1154 (Cast_FLOAT %1153))
  (let (%1156 (Pow %1154 %2837))
  (let (%1157 (ReduceMean %1156 (vec -1) 1))
  (let (%1158 (Constant 9.999999960041972e-13))
  (let (%1159 (Add %1157 %1158))
  (let (%1160 (Sqrt %1159))
  (let (%1161 (Div %1153 %1160))
  (let (%1162 (Mul %1161 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1163 (Add %1162 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1165 (MatMul %1163 %2838))
  (let (%1166 (Add %1165 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1167 (Constant 1.4142135381698608))
  (let (%1168 (Div %1166 %1167))
  (let (%1169 (Erf %1168))
  (let (%1170 (Constant 1.0))
  (let (%1171 (Add %1169 %1170))
  (let (%1172 (Mul %1166 %1171))
  (let (%1173 (Constant 0.5))
  (let (%1174 (Mul %1172 %1173))
  (let (%1176 (MatMul %1174 %2839))
  (let (%1177 (Add %1176 bert.encoder.layer.6.output.dense.bias))
  (let (%1178 (Add %1177 %1163))
  (let (%1180 (ReduceMean %1178 (vec -1) 1))
  (let (%1181 (Sub %1178 %1180))
  (let (%1182 (Cast_FLOAT %1181))
  (let (%1184 (Pow %1182 %2840))
  (let (%1185 (ReduceMean %1184 (vec -1) 1))
  (let (%1186 (Constant 9.999999960041972e-13))
  (let (%1187 (Add %1185 %1186))
  (let (%1188 (Sqrt %1187))
  (let (%1189 (Div %1181 %1188))
  (let (%1190 (Mul %1189 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1191 (Add %1190 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1193 (MatMul %1191 %2841))
  (let (%1194 (Add %1193 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1196 (MatMul %1191 %2842))
  (let (%1197 (Add %1196 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1199 (MatMul %1191 %2843))
  (let (%1200 (Add %1199 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1201 (Shape %1194))
  (let (%1202 (Constant 0))
  (let (%1203 (Gather %1201 %1202 0))
  (let (%1204 (Shape %1194))
  (let (%1205 (Constant 1))
  (let (%1206 (Gather %1204 %1205 0))
  (let (%1209 (Unsqueeze %1203 (vec 0)))
  (let (%1210 (Unsqueeze %1206 (vec 0)))
  (let (%1213 (Concat %1209 %1210 %2844 %2845 0))
  (let (%1214 (Reshape %1194 %1213))
  (let (%1215 (Transpose %1214 (vec 0 2 1 3)))
  (let (%1216 (Shape %1197))
  (let (%1217 (Constant 0))
  (let (%1218 (Gather %1216 %1217 0))
  (let (%1219 (Shape %1197))
  (let (%1220 (Constant 1))
  (let (%1221 (Gather %1219 %1220 0))
  (let (%1224 (Unsqueeze %1218 (vec 0)))
  (let (%1225 (Unsqueeze %1221 (vec 0)))
  (let (%1228 (Concat %1224 %1225 %2846 %2847 0))
  (let (%1229 (Reshape %1197 %1228))
  (let (%1230 (Shape %1200))
  (let (%1231 (Constant 0))
  (let (%1232 (Gather %1230 %1231 0))
  (let (%1233 (Shape %1200))
  (let (%1234 (Constant 1))
  (let (%1235 (Gather %1233 %1234 0))
  (let (%1238 (Unsqueeze %1232 (vec 0)))
  (let (%1239 (Unsqueeze %1235 (vec 0)))
  (let (%1242 (Concat %1238 %1239 %2848 %2849 0))
  (let (%1243 (Reshape %1200 %1242))
  (let (%1244 (Transpose %1243 (vec 0 2 1 3)))
  (let (%1245 (Transpose %1229 (vec 0 2 3 1)))
  (let (%1246 (MatMul %1215 %1245))
  (let (%1247 (Constant 8.0))
  (let (%1248 (Div %1246 %1247))
  (let (%1249 (Add %1248 %337))
  (let (%1250 (Softmax %1249 3))
  (let (%1251 (MatMul %1250 %1244))
  (let (%1252 (Transpose %1251 (vec 0 2 1 3)))
  (let (%1253 (Shape %1252))
  (let (%1254 (Constant 0))
  (let (%1255 (Gather %1253 %1254 0))
  (let (%1256 (Shape %1252))
  (let (%1257 (Constant 1))
  (let (%1258 (Gather %1256 %1257 0))
  (let (%1260 (Unsqueeze %1255 (vec 0)))
  (let (%1261 (Unsqueeze %1258 (vec 0)))
  (let (%1263 (Concat %1260 %1261 %2850 0))
  (let (%1264 (Reshape %1252 %1263))
  (let (%1266 (MatMul %1264 %2851))
  (let (%1267 (Add %1266 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1268 (Add %1267 %1191))
  (let (%1270 (ReduceMean %1268 (vec -1) 1))
  (let (%1271 (Sub %1268 %1270))
  (let (%1272 (Cast_FLOAT %1271))
  (let (%1274 (Pow %1272 %2852))
  (let (%1275 (ReduceMean %1274 (vec -1) 1))
  (let (%1276 (Constant 9.999999960041972e-13))
  (let (%1277 (Add %1275 %1276))
  (let (%1278 (Sqrt %1277))
  (let (%1279 (Div %1271 %1278))
  (let (%1280 (Mul %1279 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1281 (Add %1280 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1283 (MatMul %1281 %2853))
  (let (%1284 (Add %1283 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1285 (Constant 1.4142135381698608))
  (let (%1286 (Div %1284 %1285))
  (let (%1287 (Erf %1286))
  (let (%1288 (Constant 1.0))
  (let (%1289 (Add %1287 %1288))
  (let (%1290 (Mul %1284 %1289))
  (let (%1291 (Constant 0.5))
  (let (%1292 (Mul %1290 %1291))
  (let (%1294 (MatMul %1292 %2854))
  (let (%1295 (Add %1294 bert.encoder.layer.7.output.dense.bias))
  (let (%1296 (Add %1295 %1281))
  (let (%1298 (ReduceMean %1296 (vec -1) 1))
  (let (%1299 (Sub %1296 %1298))
  (let (%1300 (Cast_FLOAT %1299))
  (let (%1302 (Pow %1300 %2855))
  (let (%1303 (ReduceMean %1302 (vec -1) 1))
  (let (%1304 (Constant 9.999999960041972e-13))
  (let (%1305 (Add %1303 %1304))
  (let (%1306 (Sqrt %1305))
  (let (%1307 (Div %1299 %1306))
  (let (%1308 (Mul %1307 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1309 (Add %1308 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1311 (MatMul %1309 %2856))
  (let (%1312 (Add %1311 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1314 (MatMul %1309 %2857))
  (let (%1315 (Add %1314 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1317 (MatMul %1309 %2858))
  (let (%1318 (Add %1317 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1319 (Shape %1312))
  (let (%1320 (Constant 0))
  (let (%1321 (Gather %1319 %1320 0))
  (let (%1322 (Shape %1312))
  (let (%1323 (Constant 1))
  (let (%1324 (Gather %1322 %1323 0))
  (let (%1327 (Unsqueeze %1321 (vec 0)))
  (let (%1328 (Unsqueeze %1324 (vec 0)))
  (let (%1331 (Concat %1327 %1328 %2859 %2860 0))
  (let (%1332 (Reshape %1312 %1331))
  (let (%1333 (Transpose %1332 (vec 0 2 1 3)))
  (let (%1334 (Shape %1315))
  (let (%1335 (Constant 0))
  (let (%1336 (Gather %1334 %1335 0))
  (let (%1337 (Shape %1315))
  (let (%1338 (Constant 1))
  (let (%1339 (Gather %1337 %1338 0))
  (let (%1342 (Unsqueeze %1336 (vec 0)))
  (let (%1343 (Unsqueeze %1339 (vec 0)))
  (let (%1346 (Concat %1342 %1343 %2861 %2862 0))
  (let (%1347 (Reshape %1315 %1346))
  (let (%1348 (Shape %1318))
  (let (%1349 (Constant 0))
  (let (%1350 (Gather %1348 %1349 0))
  (let (%1351 (Shape %1318))
  (let (%1352 (Constant 1))
  (let (%1353 (Gather %1351 %1352 0))
  (let (%1356 (Unsqueeze %1350 (vec 0)))
  (let (%1357 (Unsqueeze %1353 (vec 0)))
  (let (%1360 (Concat %1356 %1357 %2863 %2864 0))
  (let (%1361 (Reshape %1318 %1360))
  (let (%1362 (Transpose %1361 (vec 0 2 1 3)))
  (let (%1363 (Transpose %1347 (vec 0 2 3 1)))
  (let (%1364 (MatMul %1333 %1363))
  (let (%1365 (Constant 8.0))
  (let (%1366 (Div %1364 %1365))
  (let (%1367 (Add %1366 %337))
  (let (%1368 (Softmax %1367 3))
  (let (%1369 (MatMul %1368 %1362))
  (let (%1370 (Transpose %1369 (vec 0 2 1 3)))
  (let (%1371 (Shape %1370))
  (let (%1372 (Constant 0))
  (let (%1373 (Gather %1371 %1372 0))
  (let (%1374 (Shape %1370))
  (let (%1375 (Constant 1))
  (let (%1376 (Gather %1374 %1375 0))
  (let (%1378 (Unsqueeze %1373 (vec 0)))
  (let (%1379 (Unsqueeze %1376 (vec 0)))
  (let (%1381 (Concat %1378 %1379 %2865 0))
  (let (%1382 (Reshape %1370 %1381))
  (let (%1384 (MatMul %1382 %2866))
  (let (%1385 (Add %1384 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1386 (Add %1385 %1309))
  (let (%1388 (ReduceMean %1386 (vec -1) 1))
  (let (%1389 (Sub %1386 %1388))
  (let (%1390 (Cast_FLOAT %1389))
  (let (%1392 (Pow %1390 %2867))
  (let (%1393 (ReduceMean %1392 (vec -1) 1))
  (let (%1394 (Constant 9.999999960041972e-13))
  (let (%1395 (Add %1393 %1394))
  (let (%1396 (Sqrt %1395))
  (let (%1397 (Div %1389 %1396))
  (let (%1398 (Mul %1397 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1399 (Add %1398 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1401 (MatMul %1399 %2868))
  (let (%1402 (Add %1401 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1403 (Constant 1.4142135381698608))
  (let (%1404 (Div %1402 %1403))
  (let (%1405 (Erf %1404))
  (let (%1406 (Constant 1.0))
  (let (%1407 (Add %1405 %1406))
  (let (%1408 (Mul %1402 %1407))
  (let (%1409 (Constant 0.5))
  (let (%1410 (Mul %1408 %1409))
  (let (%1412 (MatMul %1410 %2869))
  (let (%1413 (Add %1412 bert.encoder.layer.8.output.dense.bias))
  (let (%1414 (Add %1413 %1399))
  (let (%1416 (ReduceMean %1414 (vec -1) 1))
  (let (%1417 (Sub %1414 %1416))
  (let (%1418 (Cast_FLOAT %1417))
  (let (%1420 (Pow %1418 %2870))
  (let (%1421 (ReduceMean %1420 (vec -1) 1))
  (let (%1422 (Constant 9.999999960041972e-13))
  (let (%1423 (Add %1421 %1422))
  (let (%1424 (Sqrt %1423))
  (let (%1425 (Div %1417 %1424))
  (let (%1426 (Mul %1425 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1427 (Add %1426 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1429 (MatMul %1427 %2871))
  (let (%1430 (Add %1429 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1432 (MatMul %1427 %2872))
  (let (%1433 (Add %1432 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1435 (MatMul %1427 %2873))
  (let (%1436 (Add %1435 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1437 (Shape %1430))
  (let (%1438 (Constant 0))
  (let (%1439 (Gather %1437 %1438 0))
  (let (%1440 (Shape %1430))
  (let (%1441 (Constant 1))
  (let (%1442 (Gather %1440 %1441 0))
  (let (%1445 (Unsqueeze %1439 (vec 0)))
  (let (%1446 (Unsqueeze %1442 (vec 0)))
  (let (%1449 (Concat %1445 %1446 %2874 %2875 0))
  (let (%1450 (Reshape %1430 %1449))
  (let (%1451 (Transpose %1450 (vec 0 2 1 3)))
  (let (%1452 (Shape %1433))
  (let (%1453 (Constant 0))
  (let (%1454 (Gather %1452 %1453 0))
  (let (%1455 (Shape %1433))
  (let (%1456 (Constant 1))
  (let (%1457 (Gather %1455 %1456 0))
  (let (%1460 (Unsqueeze %1454 (vec 0)))
  (let (%1461 (Unsqueeze %1457 (vec 0)))
  (let (%1464 (Concat %1460 %1461 %2876 %2877 0))
  (let (%1465 (Reshape %1433 %1464))
  (let (%1466 (Shape %1436))
  (let (%1467 (Constant 0))
  (let (%1468 (Gather %1466 %1467 0))
  (let (%1469 (Shape %1436))
  (let (%1470 (Constant 1))
  (let (%1471 (Gather %1469 %1470 0))
  (let (%1474 (Unsqueeze %1468 (vec 0)))
  (let (%1475 (Unsqueeze %1471 (vec 0)))
  (let (%1478 (Concat %1474 %1475 %2878 %2879 0))
  (let (%1479 (Reshape %1436 %1478))
  (let (%1480 (Transpose %1479 (vec 0 2 1 3)))
  (let (%1481 (Transpose %1465 (vec 0 2 3 1)))
  (let (%1482 (MatMul %1451 %1481))
  (let (%1483 (Constant 8.0))
  (let (%1484 (Div %1482 %1483))
  (let (%1485 (Add %1484 %337))
  (let (%1486 (Softmax %1485 3))
  (let (%1487 (MatMul %1486 %1480))
  (let (%1488 (Transpose %1487 (vec 0 2 1 3)))
  (let (%1489 (Shape %1488))
  (let (%1490 (Constant 0))
  (let (%1491 (Gather %1489 %1490 0))
  (let (%1492 (Shape %1488))
  (let (%1493 (Constant 1))
  (let (%1494 (Gather %1492 %1493 0))
  (let (%1496 (Unsqueeze %1491 (vec 0)))
  (let (%1497 (Unsqueeze %1494 (vec 0)))
  (let (%1499 (Concat %1496 %1497 %2880 0))
  (let (%1500 (Reshape %1488 %1499))
  (let (%1502 (MatMul %1500 %2881))
  (let (%1503 (Add %1502 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1504 (Add %1503 %1427))
  (let (%1506 (ReduceMean %1504 (vec -1) 1))
  (let (%1507 (Sub %1504 %1506))
  (let (%1508 (Cast_FLOAT %1507))
  (let (%1510 (Pow %1508 %2882))
  (let (%1511 (ReduceMean %1510 (vec -1) 1))
  (let (%1512 (Constant 9.999999960041972e-13))
  (let (%1513 (Add %1511 %1512))
  (let (%1514 (Sqrt %1513))
  (let (%1515 (Div %1507 %1514))
  (let (%1516 (Mul %1515 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1517 (Add %1516 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1519 (MatMul %1517 %2883))
  (let (%1520 (Add %1519 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1521 (Constant 1.4142135381698608))
  (let (%1522 (Div %1520 %1521))
  (let (%1523 (Erf %1522))
  (let (%1524 (Constant 1.0))
  (let (%1525 (Add %1523 %1524))
  (let (%1526 (Mul %1520 %1525))
  (let (%1527 (Constant 0.5))
  (let (%1528 (Mul %1526 %1527))
  (let (%1530 (MatMul %1528 %2884))
  (let (%1531 (Add %1530 bert.encoder.layer.9.output.dense.bias))
  (let (%1532 (Add %1531 %1517))
  (let (%1534 (ReduceMean %1532 (vec -1) 1))
  (let (%1535 (Sub %1532 %1534))
  (let (%1536 (Cast_FLOAT %1535))
  (let (%1538 (Pow %1536 %2885))
  (let (%1539 (ReduceMean %1538 (vec -1) 1))
  (let (%1540 (Constant 9.999999960041972e-13))
  (let (%1541 (Add %1539 %1540))
  (let (%1542 (Sqrt %1541))
  (let (%1543 (Div %1535 %1542))
  (let (%1544 (Mul %1543 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1545 (Add %1544 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1547 (MatMul %1545 %2886))
  (let (%1548 (Add %1547 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1550 (MatMul %1545 %2887))
  (let (%1551 (Add %1550 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1553 (MatMul %1545 %2888))
  (let (%1554 (Add %1553 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1555 (Shape %1548))
  (let (%1556 (Constant 0))
  (let (%1557 (Gather %1555 %1556 0))
  (let (%1558 (Shape %1548))
  (let (%1559 (Constant 1))
  (let (%1560 (Gather %1558 %1559 0))
  (let (%1563 (Unsqueeze %1557 (vec 0)))
  (let (%1564 (Unsqueeze %1560 (vec 0)))
  (let (%1567 (Concat %1563 %1564 %2889 %2890 0))
  (let (%1568 (Reshape %1548 %1567))
  (let (%1569 (Transpose %1568 (vec 0 2 1 3)))
  (let (%1570 (Shape %1551))
  (let (%1571 (Constant 0))
  (let (%1572 (Gather %1570 %1571 0))
  (let (%1573 (Shape %1551))
  (let (%1574 (Constant 1))
  (let (%1575 (Gather %1573 %1574 0))
  (let (%1578 (Unsqueeze %1572 (vec 0)))
  (let (%1579 (Unsqueeze %1575 (vec 0)))
  (let (%1582 (Concat %1578 %1579 %2891 %2892 0))
  (let (%1583 (Reshape %1551 %1582))
  (let (%1584 (Shape %1554))
  (let (%1585 (Constant 0))
  (let (%1586 (Gather %1584 %1585 0))
  (let (%1587 (Shape %1554))
  (let (%1588 (Constant 1))
  (let (%1589 (Gather %1587 %1588 0))
  (let (%1592 (Unsqueeze %1586 (vec 0)))
  (let (%1593 (Unsqueeze %1589 (vec 0)))
  (let (%1596 (Concat %1592 %1593 %2893 %2894 0))
  (let (%1597 (Reshape %1554 %1596))
  (let (%1598 (Transpose %1597 (vec 0 2 1 3)))
  (let (%1599 (Transpose %1583 (vec 0 2 3 1)))
  (let (%1600 (MatMul %1569 %1599))
  (let (%1601 (Constant 8.0))
  (let (%1602 (Div %1600 %1601))
  (let (%1603 (Add %1602 %337))
  (let (%1604 (Softmax %1603 3))
  (let (%1605 (MatMul %1604 %1598))
  (let (%1606 (Transpose %1605 (vec 0 2 1 3)))
  (let (%1607 (Shape %1606))
  (let (%1608 (Constant 0))
  (let (%1609 (Gather %1607 %1608 0))
  (let (%1610 (Shape %1606))
  (let (%1611 (Constant 1))
  (let (%1612 (Gather %1610 %1611 0))
  (let (%1614 (Unsqueeze %1609 (vec 0)))
  (let (%1615 (Unsqueeze %1612 (vec 0)))
  (let (%1617 (Concat %1614 %1615 %2895 0))
  (let (%1618 (Reshape %1606 %1617))
  (let (%1620 (MatMul %1618 %2896))
  (let (%1621 (Add %1620 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1622 (Add %1621 %1545))
  (let (%1624 (ReduceMean %1622 (vec -1) 1))
  (let (%1625 (Sub %1622 %1624))
  (let (%1626 (Cast_FLOAT %1625))
  (let (%1628 (Pow %1626 %2897))
  (let (%1629 (ReduceMean %1628 (vec -1) 1))
  (let (%1630 (Constant 9.999999960041972e-13))
  (let (%1631 (Add %1629 %1630))
  (let (%1632 (Sqrt %1631))
  (let (%1633 (Div %1625 %1632))
  (let (%1634 (Mul %1633 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1635 (Add %1634 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1637 (MatMul %1635 %2898))
  (let (%1638 (Add %1637 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1639 (Constant 1.4142135381698608))
  (let (%1640 (Div %1638 %1639))
  (let (%1641 (Erf %1640))
  (let (%1642 (Constant 1.0))
  (let (%1643 (Add %1641 %1642))
  (let (%1644 (Mul %1638 %1643))
  (let (%1645 (Constant 0.5))
  (let (%1646 (Mul %1644 %1645))
  (let (%1648 (MatMul %1646 %2899))
  (let (%1649 (Add %1648 bert.encoder.layer.10.output.dense.bias))
  (let (%1650 (Add %1649 %1635))
  (let (%1652 (ReduceMean %1650 (vec -1) 1))
  (let (%1653 (Sub %1650 %1652))
  (let (%1654 (Cast_FLOAT %1653))
  (let (%1656 (Pow %1654 %2900))
  (let (%1657 (ReduceMean %1656 (vec -1) 1))
  (let (%1658 (Constant 9.999999960041972e-13))
  (let (%1659 (Add %1657 %1658))
  (let (%1660 (Sqrt %1659))
  (let (%1661 (Div %1653 %1660))
  (let (%1662 (Mul %1661 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1663 (Add %1662 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1665 (MatMul %1663 %2901))
  (let (%1666 (Add %1665 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1668 (MatMul %1663 %2902))
  (let (%1669 (Add %1668 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1671 (MatMul %1663 %2903))
  (let (%1672 (Add %1671 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1673 (Shape %1666))
  (let (%1674 (Constant 0))
  (let (%1675 (Gather %1673 %1674 0))
  (let (%1676 (Shape %1666))
  (let (%1677 (Constant 1))
  (let (%1678 (Gather %1676 %1677 0))
  (let (%1681 (Unsqueeze %1675 (vec 0)))
  (let (%1682 (Unsqueeze %1678 (vec 0)))
  (let (%1685 (Concat %1681 %1682 %2904 %2905 0))
  (let (%1686 (Reshape %1666 %1685))
  (let (%1687 (Transpose %1686 (vec 0 2 1 3)))
  (let (%1688 (Shape %1669))
  (let (%1689 (Constant 0))
  (let (%1690 (Gather %1688 %1689 0))
  (let (%1691 (Shape %1669))
  (let (%1692 (Constant 1))
  (let (%1693 (Gather %1691 %1692 0))
  (let (%1696 (Unsqueeze %1690 (vec 0)))
  (let (%1697 (Unsqueeze %1693 (vec 0)))
  (let (%1700 (Concat %1696 %1697 %2906 %2907 0))
  (let (%1701 (Reshape %1669 %1700))
  (let (%1702 (Shape %1672))
  (let (%1703 (Constant 0))
  (let (%1704 (Gather %1702 %1703 0))
  (let (%1705 (Shape %1672))
  (let (%1706 (Constant 1))
  (let (%1707 (Gather %1705 %1706 0))
  (let (%1710 (Unsqueeze %1704 (vec 0)))
  (let (%1711 (Unsqueeze %1707 (vec 0)))
  (let (%1714 (Concat %1710 %1711 %2908 %2909 0))
  (let (%1715 (Reshape %1672 %1714))
  (let (%1716 (Transpose %1715 (vec 0 2 1 3)))
  (let (%1717 (Transpose %1701 (vec 0 2 3 1)))
  (let (%1718 (MatMul %1687 %1717))
  (let (%1719 (Constant 8.0))
  (let (%1720 (Div %1718 %1719))
  (let (%1721 (Add %1720 %337))
  (let (%1722 (Softmax %1721 3))
  (let (%1723 (MatMul %1722 %1716))
  (let (%1724 (Transpose %1723 (vec 0 2 1 3)))
  (let (%1725 (Shape %1724))
  (let (%1726 (Constant 0))
  (let (%1727 (Gather %1725 %1726 0))
  (let (%1728 (Shape %1724))
  (let (%1729 (Constant 1))
  (let (%1730 (Gather %1728 %1729 0))
  (let (%1732 (Unsqueeze %1727 (vec 0)))
  (let (%1733 (Unsqueeze %1730 (vec 0)))
  (let (%1735 (Concat %1732 %1733 %2910 0))
  (let (%1736 (Reshape %1724 %1735))
  (let (%1738 (MatMul %1736 %2911))
  (let (%1739 (Add %1738 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1740 (Add %1739 %1663))
  (let (%1742 (ReduceMean %1740 (vec -1) 1))
  (let (%1743 (Sub %1740 %1742))
  (let (%1744 (Cast_FLOAT %1743))
  (let (%1746 (Pow %1744 %2912))
  (let (%1747 (ReduceMean %1746 (vec -1) 1))
  (let (%1748 (Constant 9.999999960041972e-13))
  (let (%1749 (Add %1747 %1748))
  (let (%1750 (Sqrt %1749))
  (let (%1751 (Div %1743 %1750))
  (let (%1752 (Mul %1751 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1753 (Add %1752 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1755 (MatMul %1753 %2913))
  (let (%1756 (Add %1755 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1757 (Constant 1.4142135381698608))
  (let (%1758 (Div %1756 %1757))
  (let (%1759 (Erf %1758))
  (let (%1760 (Constant 1.0))
  (let (%1761 (Add %1759 %1760))
  (let (%1762 (Mul %1756 %1761))
  (let (%1763 (Constant 0.5))
  (let (%1764 (Mul %1762 %1763))
  (let (%1766 (MatMul %1764 %2914))
  (let (%1767 (Add %1766 bert.encoder.layer.11.output.dense.bias))
  (let (%1768 (Add %1767 %1753))
  (let (%1770 (ReduceMean %1768 (vec -1) 1))
  (let (%1771 (Sub %1768 %1770))
  (let (%1772 (Cast_FLOAT %1771))
  (let (%1774 (Pow %1772 %2915))
  (let (%1775 (ReduceMean %1774 (vec -1) 1))
  (let (%1776 (Constant 9.999999960041972e-13))
  (let (%1777 (Add %1775 %1776))
  (let (%1778 (Sqrt %1777))
  (let (%1779 (Div %1771 %1778))
  (let (%1780 (Mul %1779 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1781 (Add %1780 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1783 (MatMul %1781 %2916))
  (let (%1784 (Add %1783 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1786 (MatMul %1781 %2917))
  (let (%1787 (Add %1786 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1789 (MatMul %1781 %2918))
  (let (%1790 (Add %1789 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1791 (Shape %1784))
  (let (%1792 (Constant 0))
  (let (%1793 (Gather %1791 %1792 0))
  (let (%1794 (Shape %1784))
  (let (%1795 (Constant 1))
  (let (%1796 (Gather %1794 %1795 0))
  (let (%1799 (Unsqueeze %1793 (vec 0)))
  (let (%1800 (Unsqueeze %1796 (vec 0)))
  (let (%1803 (Concat %1799 %1800 %2919 %2920 0))
  (let (%1804 (Reshape %1784 %1803))
  (let (%1805 (Transpose %1804 (vec 0 2 1 3)))
  (let (%1806 (Shape %1787))
  (let (%1807 (Constant 0))
  (let (%1808 (Gather %1806 %1807 0))
  (let (%1809 (Shape %1787))
  (let (%1810 (Constant 1))
  (let (%1811 (Gather %1809 %1810 0))
  (let (%1814 (Unsqueeze %1808 (vec 0)))
  (let (%1815 (Unsqueeze %1811 (vec 0)))
  (let (%1818 (Concat %1814 %1815 %2921 %2922 0))
  (let (%1819 (Reshape %1787 %1818))
  (let (%1820 (Shape %1790))
  (let (%1821 (Constant 0))
  (let (%1822 (Gather %1820 %1821 0))
  (let (%1823 (Shape %1790))
  (let (%1824 (Constant 1))
  (let (%1825 (Gather %1823 %1824 0))
  (let (%1828 (Unsqueeze %1822 (vec 0)))
  (let (%1829 (Unsqueeze %1825 (vec 0)))
  (let (%1832 (Concat %1828 %1829 %2923 %2924 0))
  (let (%1833 (Reshape %1790 %1832))
  (let (%1834 (Transpose %1833 (vec 0 2 1 3)))
  (let (%1835 (Transpose %1819 (vec 0 2 3 1)))
  (let (%1836 (MatMul %1805 %1835))
  (let (%1837 (Constant 8.0))
  (let (%1838 (Div %1836 %1837))
  (let (%1839 (Add %1838 %337))
  (let (%1840 (Softmax %1839 3))
  (let (%1841 (MatMul %1840 %1834))
  (let (%1842 (Transpose %1841 (vec 0 2 1 3)))
  (let (%1843 (Shape %1842))
  (let (%1844 (Constant 0))
  (let (%1845 (Gather %1843 %1844 0))
  (let (%1846 (Shape %1842))
  (let (%1847 (Constant 1))
  (let (%1848 (Gather %1846 %1847 0))
  (let (%1850 (Unsqueeze %1845 (vec 0)))
  (let (%1851 (Unsqueeze %1848 (vec 0)))
  (let (%1853 (Concat %1850 %1851 %2925 0))
  (let (%1854 (Reshape %1842 %1853))
  (let (%1856 (MatMul %1854 %2926))
  (let (%1857 (Add %1856 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1858 (Add %1857 %1781))
  (let (%1860 (ReduceMean %1858 (vec -1) 1))
  (let (%1861 (Sub %1858 %1860))
  (let (%1862 (Cast_FLOAT %1861))
  (let (%1864 (Pow %1862 %2927))
  (let (%1865 (ReduceMean %1864 (vec -1) 1))
  (let (%1866 (Constant 9.999999960041972e-13))
  (let (%1867 (Add %1865 %1866))
  (let (%1868 (Sqrt %1867))
  (let (%1869 (Div %1861 %1868))
  (let (%1870 (Mul %1869 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1871 (Add %1870 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1873 (MatMul %1871 %2928))
  (let (%1874 (Add %1873 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1875 (Constant 1.4142135381698608))
  (let (%1876 (Div %1874 %1875))
  (let (%1877 (Erf %1876))
  (let (%1878 (Constant 1.0))
  (let (%1879 (Add %1877 %1878))
  (let (%1880 (Mul %1874 %1879))
  (let (%1881 (Constant 0.5))
  (let (%1882 (Mul %1880 %1881))
  (let (%1884 (MatMul %1882 %2929))
  (let (%1885 (Add %1884 bert.encoder.layer.12.output.dense.bias))
  (let (%1886 (Add %1885 %1871))
  (let (%1888 (ReduceMean %1886 (vec -1) 1))
  (let (%1889 (Sub %1886 %1888))
  (let (%1890 (Cast_FLOAT %1889))
  (let (%1892 (Pow %1890 %2930))
  (let (%1893 (ReduceMean %1892 (vec -1) 1))
  (let (%1894 (Constant 9.999999960041972e-13))
  (let (%1895 (Add %1893 %1894))
  (let (%1896 (Sqrt %1895))
  (let (%1897 (Div %1889 %1896))
  (let (%1898 (Mul %1897 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1899 (Add %1898 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1901 (MatMul %1899 %2931))
  (let (%1902 (Add %1901 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1904 (MatMul %1899 %2932))
  (let (%1905 (Add %1904 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1907 (MatMul %1899 %2933))
  (let (%1908 (Add %1907 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1909 (Shape %1902))
  (let (%1910 (Constant 0))
  (let (%1911 (Gather %1909 %1910 0))
  (let (%1912 (Shape %1902))
  (let (%1913 (Constant 1))
  (let (%1914 (Gather %1912 %1913 0))
  (let (%1917 (Unsqueeze %1911 (vec 0)))
  (let (%1918 (Unsqueeze %1914 (vec 0)))
  (let (%1921 (Concat %1917 %1918 %2934 %2935 0))
  (let (%1922 (Reshape %1902 %1921))
  (let (%1923 (Transpose %1922 (vec 0 2 1 3)))
  (let (%1924 (Shape %1905))
  (let (%1925 (Constant 0))
  (let (%1926 (Gather %1924 %1925 0))
  (let (%1927 (Shape %1905))
  (let (%1928 (Constant 1))
  (let (%1929 (Gather %1927 %1928 0))
  (let (%1932 (Unsqueeze %1926 (vec 0)))
  (let (%1933 (Unsqueeze %1929 (vec 0)))
  (let (%1936 (Concat %1932 %1933 %2936 %2937 0))
  (let (%1937 (Reshape %1905 %1936))
  (let (%1938 (Shape %1908))
  (let (%1939 (Constant 0))
  (let (%1940 (Gather %1938 %1939 0))
  (let (%1941 (Shape %1908))
  (let (%1942 (Constant 1))
  (let (%1943 (Gather %1941 %1942 0))
  (let (%1946 (Unsqueeze %1940 (vec 0)))
  (let (%1947 (Unsqueeze %1943 (vec 0)))
  (let (%1950 (Concat %1946 %1947 %2938 %2939 0))
  (let (%1951 (Reshape %1908 %1950))
  (let (%1952 (Transpose %1951 (vec 0 2 1 3)))
  (let (%1953 (Transpose %1937 (vec 0 2 3 1)))
  (let (%1954 (MatMul %1923 %1953))
  (let (%1955 (Constant 8.0))
  (let (%1956 (Div %1954 %1955))
  (let (%1957 (Add %1956 %337))
  (let (%1958 (Softmax %1957 3))
  (let (%1959 (MatMul %1958 %1952))
  (let (%1960 (Transpose %1959 (vec 0 2 1 3)))
  (let (%1961 (Shape %1960))
  (let (%1962 (Constant 0))
  (let (%1963 (Gather %1961 %1962 0))
  (let (%1964 (Shape %1960))
  (let (%1965 (Constant 1))
  (let (%1966 (Gather %1964 %1965 0))
  (let (%1968 (Unsqueeze %1963 (vec 0)))
  (let (%1969 (Unsqueeze %1966 (vec 0)))
  (let (%1971 (Concat %1968 %1969 %2940 0))
  (let (%1972 (Reshape %1960 %1971))
  (let (%1974 (MatMul %1972 %2941))
  (let (%1975 (Add %1974 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1976 (Add %1975 %1899))
  (let (%1978 (ReduceMean %1976 (vec -1) 1))
  (let (%1979 (Sub %1976 %1978))
  (let (%1980 (Cast_FLOAT %1979))
  (let (%1982 (Pow %1980 %2942))
  (let (%1983 (ReduceMean %1982 (vec -1) 1))
  (let (%1984 (Constant 9.999999960041972e-13))
  (let (%1985 (Add %1983 %1984))
  (let (%1986 (Sqrt %1985))
  (let (%1987 (Div %1979 %1986))
  (let (%1988 (Mul %1987 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1989 (Add %1988 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1991 (MatMul %1989 %2943))
  (let (%1992 (Add %1991 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1993 (Constant 1.4142135381698608))
  (let (%1994 (Div %1992 %1993))
  (let (%1995 (Erf %1994))
  (let (%1996 (Constant 1.0))
  (let (%1997 (Add %1995 %1996))
  (let (%1998 (Mul %1992 %1997))
  (let (%1999 (Constant 0.5))
  (let (%2000 (Mul %1998 %1999))
  (let (%2002 (MatMul %2000 %2944))
  (let (%2003 (Add %2002 bert.encoder.layer.13.output.dense.bias))
  (let (%2004 (Add %2003 %1989))
  (let (%2006 (ReduceMean %2004 (vec -1) 1))
  (let (%2007 (Sub %2004 %2006))
  (let (%2008 (Cast_FLOAT %2007))
  (let (%2010 (Pow %2008 %2945))
  (let (%2011 (ReduceMean %2010 (vec -1) 1))
  (let (%2012 (Constant 9.999999960041972e-13))
  (let (%2013 (Add %2011 %2012))
  (let (%2014 (Sqrt %2013))
  (let (%2015 (Div %2007 %2014))
  (let (%2016 (Mul %2015 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%2017 (Add %2016 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%2019 (MatMul %2017 %2946))
  (let (%2020 (Add %2019 bert.encoder.layer.14.attention.self.query.bias))
  (let (%2022 (MatMul %2017 %2947))
  (let (%2023 (Add %2022 bert.encoder.layer.14.attention.self.key.bias))
  (let (%2025 (MatMul %2017 %2948))
  (let (%2026 (Add %2025 bert.encoder.layer.14.attention.self.value.bias))
  (let (%2027 (Shape %2020))
  (let (%2028 (Constant 0))
  (let (%2029 (Gather %2027 %2028 0))
  (let (%2030 (Shape %2020))
  (let (%2031 (Constant 1))
  (let (%2032 (Gather %2030 %2031 0))
  (let (%2035 (Unsqueeze %2029 (vec 0)))
  (let (%2036 (Unsqueeze %2032 (vec 0)))
  (let (%2039 (Concat %2035 %2036 %2949 %2950 0))
  (let (%2040 (Reshape %2020 %2039))
  (let (%2041 (Transpose %2040 (vec 0 2 1 3)))
  (let (%2042 (Shape %2023))
  (let (%2043 (Constant 0))
  (let (%2044 (Gather %2042 %2043 0))
  (let (%2045 (Shape %2023))
  (let (%2046 (Constant 1))
  (let (%2047 (Gather %2045 %2046 0))
  (let (%2050 (Unsqueeze %2044 (vec 0)))
  (let (%2051 (Unsqueeze %2047 (vec 0)))
  (let (%2054 (Concat %2050 %2051 %2951 %2952 0))
  (let (%2055 (Reshape %2023 %2054))
  (let (%2056 (Shape %2026))
  (let (%2057 (Constant 0))
  (let (%2058 (Gather %2056 %2057 0))
  (let (%2059 (Shape %2026))
  (let (%2060 (Constant 1))
  (let (%2061 (Gather %2059 %2060 0))
  (let (%2064 (Unsqueeze %2058 (vec 0)))
  (let (%2065 (Unsqueeze %2061 (vec 0)))
  (let (%2068 (Concat %2064 %2065 %2953 %2954 0))
  (let (%2069 (Reshape %2026 %2068))
  (let (%2070 (Transpose %2069 (vec 0 2 1 3)))
  (let (%2071 (Transpose %2055 (vec 0 2 3 1)))
  (let (%2072 (MatMul %2041 %2071))
  (let (%2073 (Constant 8.0))
  (let (%2074 (Div %2072 %2073))
  (let (%2075 (Add %2074 %337))
  (let (%2076 (Softmax %2075 3))
  (let (%2077 (MatMul %2076 %2070))
  (let (%2078 (Transpose %2077 (vec 0 2 1 3)))
  (let (%2079 (Shape %2078))
  (let (%2080 (Constant 0))
  (let (%2081 (Gather %2079 %2080 0))
  (let (%2082 (Shape %2078))
  (let (%2083 (Constant 1))
  (let (%2084 (Gather %2082 %2083 0))
  (let (%2086 (Unsqueeze %2081 (vec 0)))
  (let (%2087 (Unsqueeze %2084 (vec 0)))
  (let (%2089 (Concat %2086 %2087 %2955 0))
  (let (%2090 (Reshape %2078 %2089))
  (let (%2092 (MatMul %2090 %2956))
  (let (%2093 (Add %2092 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2094 (Add %2093 %2017))
  (let (%2096 (ReduceMean %2094 (vec -1) 1))
  (let (%2097 (Sub %2094 %2096))
  (let (%2098 (Cast_FLOAT %2097))
  (let (%2100 (Pow %2098 %2957))
  (let (%2101 (ReduceMean %2100 (vec -1) 1))
  (let (%2102 (Constant 9.999999960041972e-13))
  (let (%2103 (Add %2101 %2102))
  (let (%2104 (Sqrt %2103))
  (let (%2105 (Div %2097 %2104))
  (let (%2106 (Mul %2105 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2107 (Add %2106 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2109 (MatMul %2107 %2958))
  (let (%2110 (Add %2109 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2111 (Constant 1.4142135381698608))
  (let (%2112 (Div %2110 %2111))
  (let (%2113 (Erf %2112))
  (let (%2114 (Constant 1.0))
  (let (%2115 (Add %2113 %2114))
  (let (%2116 (Mul %2110 %2115))
  (let (%2117 (Constant 0.5))
  (let (%2118 (Mul %2116 %2117))
  (let (%2120 (MatMul %2118 %2959))
  (let (%2121 (Add %2120 bert.encoder.layer.14.output.dense.bias))
  (let (%2122 (Add %2121 %2107))
  (let (%2124 (ReduceMean %2122 (vec -1) 1))
  (let (%2125 (Sub %2122 %2124))
  (let (%2126 (Cast_FLOAT %2125))
  (let (%2128 (Pow %2126 %2960))
  (let (%2129 (ReduceMean %2128 (vec -1) 1))
  (let (%2130 (Constant 9.999999960041972e-13))
  (let (%2131 (Add %2129 %2130))
  (let (%2132 (Sqrt %2131))
  (let (%2133 (Div %2125 %2132))
  (let (%2134 (Mul %2133 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2135 (Add %2134 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2137 (MatMul %2135 %2961))
  (let (%2138 (Add %2137 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2140 (MatMul %2135 %2962))
  (let (%2141 (Add %2140 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2143 (MatMul %2135 %2963))
  (let (%2144 (Add %2143 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2145 (Shape %2138))
  (let (%2146 (Constant 0))
  (let (%2147 (Gather %2145 %2146 0))
  (let (%2148 (Shape %2138))
  (let (%2149 (Constant 1))
  (let (%2150 (Gather %2148 %2149 0))
  (let (%2153 (Unsqueeze %2147 (vec 0)))
  (let (%2154 (Unsqueeze %2150 (vec 0)))
  (let (%2157 (Concat %2153 %2154 %2964 %2965 0))
  (let (%2158 (Reshape %2138 %2157))
  (let (%2159 (Transpose %2158 (vec 0 2 1 3)))
  (let (%2160 (Shape %2141))
  (let (%2161 (Constant 0))
  (let (%2162 (Gather %2160 %2161 0))
  (let (%2163 (Shape %2141))
  (let (%2164 (Constant 1))
  (let (%2165 (Gather %2163 %2164 0))
  (let (%2168 (Unsqueeze %2162 (vec 0)))
  (let (%2169 (Unsqueeze %2165 (vec 0)))
  (let (%2172 (Concat %2168 %2169 %2966 %2967 0))
  (let (%2173 (Reshape %2141 %2172))
  (let (%2174 (Shape %2144))
  (let (%2175 (Constant 0))
  (let (%2176 (Gather %2174 %2175 0))
  (let (%2177 (Shape %2144))
  (let (%2178 (Constant 1))
  (let (%2179 (Gather %2177 %2178 0))
  (let (%2182 (Unsqueeze %2176 (vec 0)))
  (let (%2183 (Unsqueeze %2179 (vec 0)))
  (let (%2186 (Concat %2182 %2183 %2968 %2969 0))
  (let (%2187 (Reshape %2144 %2186))
  (let (%2188 (Transpose %2187 (vec 0 2 1 3)))
  (let (%2189 (Transpose %2173 (vec 0 2 3 1)))
  (let (%2190 (MatMul %2159 %2189))
  (let (%2191 (Constant 8.0))
  (let (%2192 (Div %2190 %2191))
  (let (%2193 (Add %2192 %337))
  (let (%2194 (Softmax %2193 3))
  (let (%2195 (MatMul %2194 %2188))
  (let (%2196 (Transpose %2195 (vec 0 2 1 3)))
  (let (%2197 (Shape %2196))
  (let (%2198 (Constant 0))
  (let (%2199 (Gather %2197 %2198 0))
  (let (%2200 (Shape %2196))
  (let (%2201 (Constant 1))
  (let (%2202 (Gather %2200 %2201 0))
  (let (%2204 (Unsqueeze %2199 (vec 0)))
  (let (%2205 (Unsqueeze %2202 (vec 0)))
  (let (%2207 (Concat %2204 %2205 %2970 0))
  (let (%2208 (Reshape %2196 %2207))
  (let (%2210 (MatMul %2208 %2971))
  (let (%2211 (Add %2210 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2212 (Add %2211 %2135))
  (let (%2214 (ReduceMean %2212 (vec -1) 1))
  (let (%2215 (Sub %2212 %2214))
  (let (%2216 (Cast_FLOAT %2215))
  (let (%2218 (Pow %2216 %2972))
  (let (%2219 (ReduceMean %2218 (vec -1) 1))
  (let (%2220 (Constant 9.999999960041972e-13))
  (let (%2221 (Add %2219 %2220))
  (let (%2222 (Sqrt %2221))
  (let (%2223 (Div %2215 %2222))
  (let (%2224 (Mul %2223 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2225 (Add %2224 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2227 (MatMul %2225 %2973))
  (let (%2228 (Add %2227 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2229 (Constant 1.4142135381698608))
  (let (%2230 (Div %2228 %2229))
  (let (%2231 (Erf %2230))
  (let (%2232 (Constant 1.0))
  (let (%2233 (Add %2231 %2232))
  (let (%2234 (Mul %2228 %2233))
  (let (%2235 (Constant 0.5))
  (let (%2236 (Mul %2234 %2235))
  (let (%2238 (MatMul %2236 %2974))
  (let (%2239 (Add %2238 bert.encoder.layer.15.output.dense.bias))
  (let (%2240 (Add %2239 %2225))
  (let (%2242 (ReduceMean %2240 (vec -1) 1))
  (let (%2243 (Sub %2240 %2242))
  (let (%2244 (Cast_FLOAT %2243))
  (let (%2246 (Pow %2244 %2975))
  (let (%2247 (ReduceMean %2246 (vec -1) 1))
  (let (%2248 (Constant 9.999999960041972e-13))
  (let (%2249 (Add %2247 %2248))
  (let (%2250 (Sqrt %2249))
  (let (%2251 (Div %2243 %2250))
  (let (%2252 (Mul %2251 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2253 (Add %2252 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2255 (MatMul %2253 %2976))
  (let (%2256 (Add %2255 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2258 (MatMul %2253 %2977))
  (let (%2259 (Add %2258 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2261 (MatMul %2253 %2978))
  (let (%2262 (Add %2261 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2263 (Shape %2256))
  (let (%2264 (Constant 0))
  (let (%2265 (Gather %2263 %2264 0))
  (let (%2266 (Shape %2256))
  (let (%2267 (Constant 1))
  (let (%2268 (Gather %2266 %2267 0))
  (let (%2271 (Unsqueeze %2265 (vec 0)))
  (let (%2272 (Unsqueeze %2268 (vec 0)))
  (let (%2275 (Concat %2271 %2272 %2979 %2980 0))
  (let (%2276 (Reshape %2256 %2275))
  (let (%2277 (Transpose %2276 (vec 0 2 1 3)))
  (let (%2278 (Shape %2259))
  (let (%2279 (Constant 0))
  (let (%2280 (Gather %2278 %2279 0))
  (let (%2281 (Shape %2259))
  (let (%2282 (Constant 1))
  (let (%2283 (Gather %2281 %2282 0))
  (let (%2286 (Unsqueeze %2280 (vec 0)))
  (let (%2287 (Unsqueeze %2283 (vec 0)))
  (let (%2290 (Concat %2286 %2287 %2981 %2982 0))
  (let (%2291 (Reshape %2259 %2290))
  (let (%2292 (Shape %2262))
  (let (%2293 (Constant 0))
  (let (%2294 (Gather %2292 %2293 0))
  (let (%2295 (Shape %2262))
  (let (%2296 (Constant 1))
  (let (%2297 (Gather %2295 %2296 0))
  (let (%2300 (Unsqueeze %2294 (vec 0)))
  (let (%2301 (Unsqueeze %2297 (vec 0)))
  (let (%2304 (Concat %2300 %2301 %2983 %2984 0))
  (let (%2305 (Reshape %2262 %2304))
  (let (%2306 (Transpose %2305 (vec 0 2 1 3)))
  (let (%2307 (Transpose %2291 (vec 0 2 3 1)))
  (let (%2308 (MatMul %2277 %2307))
  (let (%2309 (Constant 8.0))
  (let (%2310 (Div %2308 %2309))
  (let (%2311 (Add %2310 %337))
  (let (%2312 (Softmax %2311 3))
  (let (%2313 (MatMul %2312 %2306))
  (let (%2314 (Transpose %2313 (vec 0 2 1 3)))
  (let (%2315 (Shape %2314))
  (let (%2316 (Constant 0))
  (let (%2317 (Gather %2315 %2316 0))
  (let (%2318 (Shape %2314))
  (let (%2319 (Constant 1))
  (let (%2320 (Gather %2318 %2319 0))
  (let (%2322 (Unsqueeze %2317 (vec 0)))
  (let (%2323 (Unsqueeze %2320 (vec 0)))
  (let (%2325 (Concat %2322 %2323 %2985 0))
  (let (%2326 (Reshape %2314 %2325))
  (let (%2328 (MatMul %2326 %2986))
  (let (%2329 (Add %2328 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2330 (Add %2329 %2253))
  (let (%2332 (ReduceMean %2330 (vec -1) 1))
  (let (%2333 (Sub %2330 %2332))
  (let (%2334 (Cast_FLOAT %2333))
  (let (%2336 (Pow %2334 %2987))
  (let (%2337 (ReduceMean %2336 (vec -1) 1))
  (let (%2338 (Constant 9.999999960041972e-13))
  (let (%2339 (Add %2337 %2338))
  (let (%2340 (Sqrt %2339))
  (let (%2341 (Div %2333 %2340))
  (let (%2342 (Mul %2341 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2343 (Add %2342 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2345 (MatMul %2343 %2988))
  (let (%2346 (Add %2345 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2347 (Constant 1.4142135381698608))
  (let (%2348 (Div %2346 %2347))
  (let (%2349 (Erf %2348))
  (let (%2350 (Constant 1.0))
  (let (%2351 (Add %2349 %2350))
  (let (%2352 (Mul %2346 %2351))
  (let (%2353 (Constant 0.5))
  (let (%2354 (Mul %2352 %2353))
  (let (%2356 (MatMul %2354 %2989))
  (let (%2357 (Add %2356 bert.encoder.layer.16.output.dense.bias))
  (let (%2358 (Add %2357 %2343))
  (let (%2360 (ReduceMean %2358 (vec -1) 1))
  (let (%2361 (Sub %2358 %2360))
  (let (%2362 (Cast_FLOAT %2361))
  (let (%2364 (Pow %2362 %2990))
  (let (%2365 (ReduceMean %2364 (vec -1) 1))
  (let (%2366 (Constant 9.999999960041972e-13))
  (let (%2367 (Add %2365 %2366))
  (let (%2368 (Sqrt %2367))
  (let (%2369 (Div %2361 %2368))
  (let (%2370 (Mul %2369 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2371 (Add %2370 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2373 (MatMul %2371 %2991))
  (let (%2374 (Add %2373 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2376 (MatMul %2371 %2992))
  (let (%2377 (Add %2376 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2379 (MatMul %2371 %2993))
  (let (%2380 (Add %2379 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2381 (Shape %2374))
  (let (%2382 (Constant 0))
  (let (%2383 (Gather %2381 %2382 0))
  (let (%2384 (Shape %2374))
  (let (%2385 (Constant 1))
  (let (%2386 (Gather %2384 %2385 0))
  (let (%2389 (Unsqueeze %2383 (vec 0)))
  (let (%2390 (Unsqueeze %2386 (vec 0)))
  (let (%2393 (Concat %2389 %2390 %2994 %2995 0))
  (let (%2394 (Reshape %2374 %2393))
  (let (%2395 (Transpose %2394 (vec 0 2 1 3)))
  (let (%2396 (Shape %2377))
  (let (%2397 (Constant 0))
  (let (%2398 (Gather %2396 %2397 0))
  (let (%2399 (Shape %2377))
  (let (%2400 (Constant 1))
  (let (%2401 (Gather %2399 %2400 0))
  (let (%2404 (Unsqueeze %2398 (vec 0)))
  (let (%2405 (Unsqueeze %2401 (vec 0)))
  (let (%2408 (Concat %2404 %2405 %2996 %2997 0))
  (let (%2409 (Reshape %2377 %2408))
  (let (%2410 (Shape %2380))
  (let (%2411 (Constant 0))
  (let (%2412 (Gather %2410 %2411 0))
  (let (%2413 (Shape %2380))
  (let (%2414 (Constant 1))
  (let (%2415 (Gather %2413 %2414 0))
  (let (%2418 (Unsqueeze %2412 (vec 0)))
  (let (%2419 (Unsqueeze %2415 (vec 0)))
  (let (%2422 (Concat %2418 %2419 %2998 %2999 0))
  (let (%2423 (Reshape %2380 %2422))
  (let (%2424 (Transpose %2423 (vec 0 2 1 3)))
  (let (%2425 (Transpose %2409 (vec 0 2 3 1)))
  (let (%2426 (MatMul %2395 %2425))
  (let (%2427 (Constant 8.0))
  (let (%2428 (Div %2426 %2427))
  (let (%2429 (Add %2428 %337))
  (let (%2430 (Softmax %2429 3))
  (let (%2431 (MatMul %2430 %2424))
  (let (%2432 (Transpose %2431 (vec 0 2 1 3)))
  (let (%2433 (Shape %2432))
  (let (%2434 (Constant 0))
  (let (%2435 (Gather %2433 %2434 0))
  (let (%2436 (Shape %2432))
  (let (%2437 (Constant 1))
  (let (%2438 (Gather %2436 %2437 0))
  (let (%2440 (Unsqueeze %2435 (vec 0)))
  (let (%2441 (Unsqueeze %2438 (vec 0)))
  (let (%2443 (Concat %2440 %2441 %3000 0))
  (let (%2444 (Reshape %2432 %2443))
  (let (%2446 (MatMul %2444 %3001))
  (let (%2447 (Add %2446 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2448 (Add %2447 %2371))
  (let (%2450 (ReduceMean %2448 (vec -1) 1))
  (let (%2451 (Sub %2448 %2450))
  (let (%2452 (Cast_FLOAT %2451))
  (let (%2454 (Pow %2452 %3002))
  (let (%2455 (ReduceMean %2454 (vec -1) 1))
  (let (%2456 (Constant 9.999999960041972e-13))
  (let (%2457 (Add %2455 %2456))
  (let (%2458 (Sqrt %2457))
  (let (%2459 (Div %2451 %2458))
  (let (%2460 (Mul %2459 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2461 (Add %2460 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2463 (MatMul %2461 %3003))
  (let (%2464 (Add %2463 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2465 (Constant 1.4142135381698608))
  (let (%2466 (Div %2464 %2465))
  (let (%2467 (Erf %2466))
  (let (%2468 (Constant 1.0))
  (let (%2469 (Add %2467 %2468))
  (let (%2470 (Mul %2464 %2469))
  (let (%2471 (Constant 0.5))
  (let (%2472 (Mul %2470 %2471))
  (let (%2474 (MatMul %2472 %3004))
  (let (%2475 (Add %2474 bert.encoder.layer.17.output.dense.bias))
  (let (%2476 (Add %2475 %2461))
  (let (%2478 (ReduceMean %2476 (vec -1) 1))
  (let (%2479 (Sub %2476 %2478))
  (let (%2480 (Cast_FLOAT %2479))
  (let (%2482 (Pow %2480 %3005))
  (let (%2483 (ReduceMean %2482 (vec -1) 1))
  (let (%2484 (Constant 9.999999960041972e-13))
  (let (%2485 (Add %2483 %2484))
  (let (%2486 (Sqrt %2485))
  (let (%2487 (Div %2479 %2486))
  (let (%2488 (Mul %2487 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2489 (Add %2488 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2491 (MatMul %2489 %3006))
  (let (%2492 (Add %2491 bert.encoder.layer.18.attention.self.query.bias))
  (let (%2494 (MatMul %2489 %3007))
  (let (%2495 (Add %2494 bert.encoder.layer.18.attention.self.key.bias))
  (let (%2497 (MatMul %2489 %3008))
  (let (%2498 (Add %2497 bert.encoder.layer.18.attention.self.value.bias))
  (let (%2499 (Shape %2492))
  (let (%2500 (Constant 0))
  (let (%2501 (Gather %2499 %2500 0))
  (let (%2502 (Shape %2492))
  (let (%2503 (Constant 1))
  (let (%2504 (Gather %2502 %2503 0))
  (let (%2507 (Unsqueeze %2501 (vec 0)))
  (let (%2508 (Unsqueeze %2504 (vec 0)))
  (let (%2511 (Concat %2507 %2508 %3009 %3010 0))
  (let (%2512 (Reshape %2492 %2511))
  (let (%2513 (Transpose %2512 (vec 0 2 1 3)))
  (let (%2514 (Shape %2495))
  (let (%2515 (Constant 0))
  (let (%2516 (Gather %2514 %2515 0))
  (let (%2517 (Shape %2495))
  (let (%2518 (Constant 1))
  (let (%2519 (Gather %2517 %2518 0))
  (let (%2522 (Unsqueeze %2516 (vec 0)))
  (let (%2523 (Unsqueeze %2519 (vec 0)))
  (let (%2526 (Concat %2522 %2523 %3011 %3012 0))
  (let (%2527 (Reshape %2495 %2526))
  (let (%2528 (Shape %2498))
  (let (%2529 (Constant 0))
  (let (%2530 (Gather %2528 %2529 0))
  (let (%2531 (Shape %2498))
  (let (%2532 (Constant 1))
  (let (%2533 (Gather %2531 %2532 0))
  (let (%2536 (Unsqueeze %2530 (vec 0)))
  (let (%2537 (Unsqueeze %2533 (vec 0)))
  (let (%2540 (Concat %2536 %2537 %3013 %3014 0))
  (let (%2541 (Reshape %2498 %2540))
  (let (%2542 (Transpose %2541 (vec 0 2 1 3)))
  (let (%2543 (Transpose %2527 (vec 0 2 3 1)))
  (let (%2544 (MatMul %2513 %2543))
  (let (%2545 (Constant 8.0))
  (let (%2546 (Div %2544 %2545))
  (let (%2547 (Add %2546 %337))
  (let (%2548 (Softmax %2547 3))
  (let (%2549 (MatMul %2548 %2542))
  (let (%2550 (Transpose %2549 (vec 0 2 1 3)))
  (let (%2551 (Shape %2550))
  (let (%2552 (Constant 0))
  (let (%2553 (Gather %2551 %2552 0))
  (let (%2554 (Shape %2550))
  (let (%2555 (Constant 1))
  (let (%2556 (Gather %2554 %2555 0))
  (let (%2558 (Unsqueeze %2553 (vec 0)))
  (let (%2559 (Unsqueeze %2556 (vec 0)))
  (let (%2561 (Concat %2558 %2559 %3015 0))
  (let (%2562 (Reshape %2550 %2561))
  (let (%2564 (MatMul %2562 %3016))
  (let (%2565 (Add %2564 bert.encoder.layer.18.attention.output.dense.bias))
  (let (%2566 (Add %2565 %2489))
  (let (%2568 (ReduceMean %2566 (vec -1) 1))
  (let (%2569 (Sub %2566 %2568))
  (let (%2570 (Cast_FLOAT %2569))
  (let (%2572 (Pow %2570 %3017))
  (let (%2573 (ReduceMean %2572 (vec -1) 1))
  (let (%2574 (Constant 9.999999960041972e-13))
  (let (%2575 (Add %2573 %2574))
  (let (%2576 (Sqrt %2575))
  (let (%2577 (Div %2569 %2576))
  (let (%2578 (Mul %2577 bert.encoder.layer.18.attention.output.LayerNorm.weight))
  (let (%2579 (Add %2578 bert.encoder.layer.18.attention.output.LayerNorm.bias))
  (let (%2581 (MatMul %2579 %3018))
  (let (%2582 (Add %2581 bert.encoder.layer.18.intermediate.dense.bias))
  (let (%2583 (Constant 1.4142135381698608))
  (let (%2584 (Div %2582 %2583))
  (let (%2585 (Erf %2584))
  (let (%2586 (Constant 1.0))
  (let (%2587 (Add %2585 %2586))
  (let (%2588 (Mul %2582 %2587))
  (let (%2589 (Constant 0.5))
  (let (%2590 (Mul %2588 %2589))
  (let (%2592 (MatMul %2590 %3019))
  (let (%2593 (Add %2592 bert.encoder.layer.18.output.dense.bias))
  (let (%2594 (Add %2593 %2579))
  (let (%2596 (ReduceMean %2594 (vec -1) 1))
  (let (%2597 (Sub %2594 %2596))
  (let (%2598 (Cast_FLOAT %2597))
  (let (%2600 (Pow %2598 %3020))
  (let (%2601 (ReduceMean %2600 (vec -1) 1))
  (let (%2602 (Constant 9.999999960041972e-13))
  (let (%2603 (Add %2601 %2602))
  (let (%2604 (Sqrt %2603))
  (let (%2605 (Div %2597 %2604))
  (let (%2606 (Mul %2605 bert.encoder.layer.18.output.LayerNorm.weight))
  (let (%2607 (Add %2606 bert.encoder.layer.18.output.LayerNorm.bias))
  (let (%2609 (MatMul %2607 %3021))
  (let (%2610 (Add %2609 bert.encoder.layer.19.attention.self.query.bias))
  (let (%2612 (MatMul %2607 %3022))
  (let (%2613 (Add %2612 bert.encoder.layer.19.attention.self.key.bias))
  (let (%2615 (MatMul %2607 %3023))
  (let (%2616 (Add %2615 bert.encoder.layer.19.attention.self.value.bias))
  (let (%2617 (Shape %2610))
  (let (%2618 (Constant 0))
  (let (%2619 (Gather %2617 %2618 0))
  (let (%2620 (Shape %2610))
  (let (%2621 (Constant 1))
  (let (%2622 (Gather %2620 %2621 0))
  (let (%2625 (Unsqueeze %2619 (vec 0)))
  (let (%2626 (Unsqueeze %2622 (vec 0)))
  (let (%2629 (Concat %2625 %2626 %3024 %3025 0))
  (let (%2630 (Reshape %2610 %2629))
  (let (%2631 (Transpose %2630 (vec 0 2 1 3)))
  (let (%2632 (Shape %2613))
  (let (%2633 (Constant 0))
  (let (%2634 (Gather %2632 %2633 0))
  (let (%2635 (Shape %2613))
  (let (%2636 (Constant 1))
  (let (%2637 (Gather %2635 %2636 0))
  (let (%2640 (Unsqueeze %2634 (vec 0)))
  (let (%2641 (Unsqueeze %2637 (vec 0)))
  (let (%2644 (Concat %2640 %2641 %3026 %3027 0))
  (let (%2645 (Reshape %2613 %2644))
  (let (%2646 (Shape %2616))
  (let (%2647 (Constant 0))
  (let (%2648 (Gather %2646 %2647 0))
  (let (%2649 (Shape %2616))
  (let (%2650 (Constant 1))
  (let (%2651 (Gather %2649 %2650 0))
  (let (%2654 (Unsqueeze %2648 (vec 0)))
  (let (%2655 (Unsqueeze %2651 (vec 0)))
  (let (%2658 (Concat %2654 %2655 %3028 %3029 0))
  (let (%2659 (Reshape %2616 %2658))
  (let (%2660 (Transpose %2659 (vec 0 2 1 3)))
  (let (%2661 (Transpose %2645 (vec 0 2 3 1)))
  (let (%2662 (MatMul %2631 %2661))
  (let (%2663 (Constant 8.0))
  (let (%2664 (Div %2662 %2663))
  (let (%2665 (Add %2664 %337))
  (let (%2666 (Softmax %2665 3))
  (let (%2667 (MatMul %2666 %2660))
  (let (%2668 (Transpose %2667 (vec 0 2 1 3)))
  (let (%2669 (Shape %2668))
  (let (%2670 (Constant 0))
  (let (%2671 (Gather %2669 %2670 0))
  (let (%2672 (Shape %2668))
  (let (%2673 (Constant 1))
  (let (%2674 (Gather %2672 %2673 0))
  (let (%2676 (Unsqueeze %2671 (vec 0)))
  (let (%2677 (Unsqueeze %2674 (vec 0)))
  (let (%2679 (Concat %2676 %2677 %3030 0))
  (let (%2680 (Reshape %2668 %2679))
  (let (%2682 (MatMul %2680 %3031))
  (let (%2683 (Add %2682 bert.encoder.layer.19.attention.output.dense.bias))
  (let (%2684 (Add %2683 %2607))
  (let (%2686 (ReduceMean %2684 (vec -1) 1))
  (let (%2687 (Sub %2684 %2686))
  (let (%2688 (Cast_FLOAT %2687))
  (let (%2690 (Pow %2688 %3032))
  (let (%2691 (ReduceMean %2690 (vec -1) 1))
  (let (%2692 (Constant 9.999999960041972e-13))
  (let (%2693 (Add %2691 %2692))
  (let (%2694 (Sqrt %2693))
  (let (%2695 (Div %2687 %2694))
  (let (%2696 (Mul %2695 bert.encoder.layer.19.attention.output.LayerNorm.weight))
  (let (%2697 (Add %2696 bert.encoder.layer.19.attention.output.LayerNorm.bias))
  (let (%2699 (MatMul %2697 %3033))
  (let (%2700 (Add %2699 bert.encoder.layer.19.intermediate.dense.bias))
  (let (%2701 (Constant 1.4142135381698608))
  (let (%2702 (Div %2700 %2701))
  (let (%2703 (Erf %2702))
  (let (%2704 (Constant 1.0))
  (let (%2705 (Add %2703 %2704))
  (let (%2706 (Mul %2700 %2705))
  (let (%2707 (Constant 0.5))
  (let (%2708 (Mul %2706 %2707))
  (let (%2710 (MatMul %2708 %3034))
  (let (%2711 (Add %2710 bert.encoder.layer.19.output.dense.bias))
  (let (%2712 (Add %2711 %2697))
  (let (%2714 (ReduceMean %2712 (vec -1) 1))
  (let (%2715 (Sub %2712 %2714))
  (let (%2716 (Cast_FLOAT %2715))
  (let (%2718 (Pow %2716 %3035))
  (let (%2719 (ReduceMean %2718 (vec -1) 1))
  (let (%2720 (Constant 9.999999960041972e-13))
  (let (%2721 (Add %2719 %2720))
  (let (%2722 (Sqrt %2721))
  (let (%2723 (Div %2715 %2722))
  (let (%2724 (Mul %2723 bert.encoder.layer.19.output.LayerNorm.weight))
  (let (%2725 (Add %2724 bert.encoder.layer.19.output.LayerNorm.bias))
  (let (%2727 (MatMul %2725 %3036))
  (let (%2728 (Add %2727 qa_outputs.bias))
  (let ((%2729 %2730) (Split %2728 (vec 1 1) -1))
  (let (output_0 (Squeeze %2729 (vec -1)))
  (let (output_1 (Squeeze %2730 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

