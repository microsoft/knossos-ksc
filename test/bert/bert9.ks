;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert9.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1259 (vec 0))
  (let (%1260 (vec 1))
  (let (%1261 2.0)
  (let (%1262 (load-from-onnx-float32 768 768 "%1262"))
  (let (%1263 (load-from-onnx-float32 768 768 "%1263"))
  (let (%1264 (load-from-onnx-float32 768 768 "%1264"))
  (let (%1265 (vec 12))
  (let (%1266 (vec 64))
  (let (%1267 (vec 12))
  (let (%1268 (vec 64))
  (let (%1269 (vec 12))
  (let (%1270 (vec 64))
  (let (%1271 (vec 768))
  (let (%1272 (load-from-onnx-float32 768 768 "%1272"))
  (let (%1273 2.0)
  (let (%1274 (load-from-onnx-float32 768 3072 "%1274"))
  (let (%1275 (load-from-onnx-float32 3072 768 "%1275"))
  (let (%1276 2.0)
  (let (%1277 (load-from-onnx-float32 768 768 "%1277"))
  (let (%1278 (load-from-onnx-float32 768 768 "%1278"))
  (let (%1279 (load-from-onnx-float32 768 768 "%1279"))
  (let (%1280 (vec 12))
  (let (%1281 (vec 64))
  (let (%1282 (vec 12))
  (let (%1283 (vec 64))
  (let (%1284 (vec 12))
  (let (%1285 (vec 64))
  (let (%1286 (vec 768))
  (let (%1287 (load-from-onnx-float32 768 768 "%1287"))
  (let (%1288 2.0)
  (let (%1289 (load-from-onnx-float32 768 3072 "%1289"))
  (let (%1290 (load-from-onnx-float32 3072 768 "%1290"))
  (let (%1291 2.0)
  (let (%1292 (load-from-onnx-float32 768 768 "%1292"))
  (let (%1293 (load-from-onnx-float32 768 768 "%1293"))
  (let (%1294 (load-from-onnx-float32 768 768 "%1294"))
  (let (%1295 (vec 12))
  (let (%1296 (vec 64))
  (let (%1297 (vec 12))
  (let (%1298 (vec 64))
  (let (%1299 (vec 12))
  (let (%1300 (vec 64))
  (let (%1301 (vec 768))
  (let (%1302 (load-from-onnx-float32 768 768 "%1302"))
  (let (%1303 2.0)
  (let (%1304 (load-from-onnx-float32 768 3072 "%1304"))
  (let (%1305 (load-from-onnx-float32 3072 768 "%1305"))
  (let (%1306 2.0)
  (let (%1307 (load-from-onnx-float32 768 768 "%1307"))
  (let (%1308 (load-from-onnx-float32 768 768 "%1308"))
  (let (%1309 (load-from-onnx-float32 768 768 "%1309"))
  (let (%1310 (vec 12))
  (let (%1311 (vec 64))
  (let (%1312 (vec 12))
  (let (%1313 (vec 64))
  (let (%1314 (vec 12))
  (let (%1315 (vec 64))
  (let (%1316 (vec 768))
  (let (%1317 (load-from-onnx-float32 768 768 "%1317"))
  (let (%1318 2.0)
  (let (%1319 (load-from-onnx-float32 768 3072 "%1319"))
  (let (%1320 (load-from-onnx-float32 3072 768 "%1320"))
  (let (%1321 2.0)
  (let (%1322 (load-from-onnx-float32 768 768 "%1322"))
  (let (%1323 (load-from-onnx-float32 768 768 "%1323"))
  (let (%1324 (load-from-onnx-float32 768 768 "%1324"))
  (let (%1325 (vec 12))
  (let (%1326 (vec 64))
  (let (%1327 (vec 12))
  (let (%1328 (vec 64))
  (let (%1329 (vec 12))
  (let (%1330 (vec 64))
  (let (%1331 (vec 768))
  (let (%1332 (load-from-onnx-float32 768 768 "%1332"))
  (let (%1333 2.0)
  (let (%1334 (load-from-onnx-float32 768 3072 "%1334"))
  (let (%1335 (load-from-onnx-float32 3072 768 "%1335"))
  (let (%1336 2.0)
  (let (%1337 (load-from-onnx-float32 768 768 "%1337"))
  (let (%1338 (load-from-onnx-float32 768 768 "%1338"))
  (let (%1339 (load-from-onnx-float32 768 768 "%1339"))
  (let (%1340 (vec 12))
  (let (%1341 (vec 64))
  (let (%1342 (vec 12))
  (let (%1343 (vec 64))
  (let (%1344 (vec 12))
  (let (%1345 (vec 64))
  (let (%1346 (vec 768))
  (let (%1347 (load-from-onnx-float32 768 768 "%1347"))
  (let (%1348 2.0)
  (let (%1349 (load-from-onnx-float32 768 3072 "%1349"))
  (let (%1350 (load-from-onnx-float32 3072 768 "%1350"))
  (let (%1351 2.0)
  (let (%1352 (load-from-onnx-float32 768 768 "%1352"))
  (let (%1353 (load-from-onnx-float32 768 768 "%1353"))
  (let (%1354 (load-from-onnx-float32 768 768 "%1354"))
  (let (%1355 (vec 12))
  (let (%1356 (vec 64))
  (let (%1357 (vec 12))
  (let (%1358 (vec 64))
  (let (%1359 (vec 12))
  (let (%1360 (vec 64))
  (let (%1361 (vec 768))
  (let (%1362 (load-from-onnx-float32 768 768 "%1362"))
  (let (%1363 2.0)
  (let (%1364 (load-from-onnx-float32 768 3072 "%1364"))
  (let (%1365 (load-from-onnx-float32 3072 768 "%1365"))
  (let (%1366 2.0)
  (let (%1367 (load-from-onnx-float32 768 768 "%1367"))
  (let (%1368 (load-from-onnx-float32 768 768 "%1368"))
  (let (%1369 (load-from-onnx-float32 768 768 "%1369"))
  (let (%1370 (vec 12))
  (let (%1371 (vec 64))
  (let (%1372 (vec 12))
  (let (%1373 (vec 64))
  (let (%1374 (vec 12))
  (let (%1375 (vec 64))
  (let (%1376 (vec 768))
  (let (%1377 (load-from-onnx-float32 768 768 "%1377"))
  (let (%1378 2.0)
  (let (%1379 (load-from-onnx-float32 768 3072 "%1379"))
  (let (%1380 (load-from-onnx-float32 3072 768 "%1380"))
  (let (%1381 2.0)
  (let (%1382 (load-from-onnx-float32 768 768 "%1382"))
  (let (%1383 (load-from-onnx-float32 768 768 "%1383"))
  (let (%1384 (load-from-onnx-float32 768 768 "%1384"))
  (let (%1385 (vec 12))
  (let (%1386 (vec 64))
  (let (%1387 (vec 12))
  (let (%1388 (vec 64))
  (let (%1389 (vec 12))
  (let (%1390 (vec 64))
  (let (%1391 (vec 768))
  (let (%1392 (load-from-onnx-float32 768 768 "%1392"))
  (let (%1393 2.0)
  (let (%1394 (load-from-onnx-float32 768 3072 "%1394"))
  (let (%1395 (load-from-onnx-float32 3072 768 "%1395"))
  (let (%1396 2.0)
  (let (%1397 (load-from-onnx-float32 768 2 "%1397"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%155 (Unsqueeze attention_mask (vec 1)))
  (let (%156 (Unsqueeze %155 (vec 2)))
  (let (%157 (Cast_FLOAT %156))
  (let (%158 (Constant 1.0))
  (let (%159 (Sub %158 %157))
  (let (%160 (Constant -10000.0))
  (let (%161 (Mul %159 %160))
  (let (%162 (Shape input_ids))
  (let (%163 (Constant 1))
  (let (%164 (Gather %162 %163 0))
  (let (%168 (Unsqueeze %164 (vec 0)))
  (let (%170 (Constant (vec 1)))
  (let (%171 (Slice bert.embeddings.position_ids %1259 %168 %1260 %170))
  (let (%172 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%173 (Gather bert.embeddings.position_embeddings.weight %171 0))
  (let (%174 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%175 (Add %172 %173))
  (let (%176 (Add %175 %174))
  (let (%178 (ReduceMean %176 (vec -1) 1))
  (let (%179 (Sub %176 %178))
  (let (%180 (Cast_FLOAT %179))
  (let (%182 (Pow %180 %1261))
  (let (%183 (ReduceMean %182 (vec -1) 1))
  (let (%184 (Constant 9.999999960041972e-13))
  (let (%185 (Add %183 %184))
  (let (%186 (Sqrt %185))
  (let (%187 (Div %179 %186))
  (let (%188 (Mul %187 bert.embeddings.LayerNorm.weight))
  (let (%189 (Add %188 bert.embeddings.LayerNorm.bias))
  (let (%191 (MatMul %189 %1262))
  (let (%192 (Add %191 bert.encoder.layer.0.attention.self.query.bias))
  (let (%194 (MatMul %189 %1263))
  (let (%195 (Add %194 bert.encoder.layer.0.attention.self.key.bias))
  (let (%197 (MatMul %189 %1264))
  (let (%198 (Add %197 bert.encoder.layer.0.attention.self.value.bias))
  (let (%199 (Shape %192))
  (let (%200 (Constant 0))
  (let (%201 (Gather %199 %200 0))
  (let (%202 (Shape %192))
  (let (%203 (Constant 1))
  (let (%204 (Gather %202 %203 0))
  (let (%207 (Unsqueeze %201 (vec 0)))
  (let (%208 (Unsqueeze %204 (vec 0)))
  (let (%211 (Concat %207 %208 %1265 %1266 0))
  (let (%212 (Reshape %192 %211))
  (let (%213 (Transpose %212 (vec 0 2 1 3)))
  (let (%214 (Shape %195))
  (let (%215 (Constant 0))
  (let (%216 (Gather %214 %215 0))
  (let (%217 (Shape %195))
  (let (%218 (Constant 1))
  (let (%219 (Gather %217 %218 0))
  (let (%222 (Unsqueeze %216 (vec 0)))
  (let (%223 (Unsqueeze %219 (vec 0)))
  (let (%226 (Concat %222 %223 %1267 %1268 0))
  (let (%227 (Reshape %195 %226))
  (let (%228 (Shape %198))
  (let (%229 (Constant 0))
  (let (%230 (Gather %228 %229 0))
  (let (%231 (Shape %198))
  (let (%232 (Constant 1))
  (let (%233 (Gather %231 %232 0))
  (let (%236 (Unsqueeze %230 (vec 0)))
  (let (%237 (Unsqueeze %233 (vec 0)))
  (let (%240 (Concat %236 %237 %1269 %1270 0))
  (let (%241 (Reshape %198 %240))
  (let (%242 (Transpose %241 (vec 0 2 1 3)))
  (let (%243 (Transpose %227 (vec 0 2 3 1)))
  (let (%244 (MatMul %213 %243))
  (let (%245 (Constant 8.0))
  (let (%246 (Div %244 %245))
  (let (%247 (Add %246 %161))
  (let (%248 (Softmax %247 3))
  (let (%249 (MatMul %248 %242))
  (let (%250 (Transpose %249 (vec 0 2 1 3)))
  (let (%251 (Shape %250))
  (let (%252 (Constant 0))
  (let (%253 (Gather %251 %252 0))
  (let (%254 (Shape %250))
  (let (%255 (Constant 1))
  (let (%256 (Gather %254 %255 0))
  (let (%258 (Unsqueeze %253 (vec 0)))
  (let (%259 (Unsqueeze %256 (vec 0)))
  (let (%261 (Concat %258 %259 %1271 0))
  (let (%262 (Reshape %250 %261))
  (let (%264 (MatMul %262 %1272))
  (let (%265 (Add %264 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%266 (Add %265 %189))
  (let (%268 (ReduceMean %266 (vec -1) 1))
  (let (%269 (Sub %266 %268))
  (let (%270 (Cast_FLOAT %269))
  (let (%272 (Pow %270 %1273))
  (let (%273 (ReduceMean %272 (vec -1) 1))
  (let (%274 (Constant 9.999999960041972e-13))
  (let (%275 (Add %273 %274))
  (let (%276 (Sqrt %275))
  (let (%277 (Div %269 %276))
  (let (%278 (Mul %277 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%279 (Add %278 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%281 (MatMul %279 %1274))
  (let (%282 (Add %281 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%283 (Constant 1.4142135381698608))
  (let (%284 (Div %282 %283))
  (let (%285 (Erf %284))
  (let (%286 (Constant 1.0))
  (let (%287 (Add %285 %286))
  (let (%288 (Mul %282 %287))
  (let (%289 (Constant 0.5))
  (let (%290 (Mul %288 %289))
  (let (%292 (MatMul %290 %1275))
  (let (%293 (Add %292 bert.encoder.layer.0.output.dense.bias))
  (let (%294 (Add %293 %279))
  (let (%296 (ReduceMean %294 (vec -1) 1))
  (let (%297 (Sub %294 %296))
  (let (%298 (Cast_FLOAT %297))
  (let (%300 (Pow %298 %1276))
  (let (%301 (ReduceMean %300 (vec -1) 1))
  (let (%302 (Constant 9.999999960041972e-13))
  (let (%303 (Add %301 %302))
  (let (%304 (Sqrt %303))
  (let (%305 (Div %297 %304))
  (let (%306 (Mul %305 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%307 (Add %306 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%309 (MatMul %307 %1277))
  (let (%310 (Add %309 bert.encoder.layer.1.attention.self.query.bias))
  (let (%312 (MatMul %307 %1278))
  (let (%313 (Add %312 bert.encoder.layer.1.attention.self.key.bias))
  (let (%315 (MatMul %307 %1279))
  (let (%316 (Add %315 bert.encoder.layer.1.attention.self.value.bias))
  (let (%317 (Shape %310))
  (let (%318 (Constant 0))
  (let (%319 (Gather %317 %318 0))
  (let (%320 (Shape %310))
  (let (%321 (Constant 1))
  (let (%322 (Gather %320 %321 0))
  (let (%325 (Unsqueeze %319 (vec 0)))
  (let (%326 (Unsqueeze %322 (vec 0)))
  (let (%329 (Concat %325 %326 %1280 %1281 0))
  (let (%330 (Reshape %310 %329))
  (let (%331 (Transpose %330 (vec 0 2 1 3)))
  (let (%332 (Shape %313))
  (let (%333 (Constant 0))
  (let (%334 (Gather %332 %333 0))
  (let (%335 (Shape %313))
  (let (%336 (Constant 1))
  (let (%337 (Gather %335 %336 0))
  (let (%340 (Unsqueeze %334 (vec 0)))
  (let (%341 (Unsqueeze %337 (vec 0)))
  (let (%344 (Concat %340 %341 %1282 %1283 0))
  (let (%345 (Reshape %313 %344))
  (let (%346 (Shape %316))
  (let (%347 (Constant 0))
  (let (%348 (Gather %346 %347 0))
  (let (%349 (Shape %316))
  (let (%350 (Constant 1))
  (let (%351 (Gather %349 %350 0))
  (let (%354 (Unsqueeze %348 (vec 0)))
  (let (%355 (Unsqueeze %351 (vec 0)))
  (let (%358 (Concat %354 %355 %1284 %1285 0))
  (let (%359 (Reshape %316 %358))
  (let (%360 (Transpose %359 (vec 0 2 1 3)))
  (let (%361 (Transpose %345 (vec 0 2 3 1)))
  (let (%362 (MatMul %331 %361))
  (let (%363 (Constant 8.0))
  (let (%364 (Div %362 %363))
  (let (%365 (Add %364 %161))
  (let (%366 (Softmax %365 3))
  (let (%367 (MatMul %366 %360))
  (let (%368 (Transpose %367 (vec 0 2 1 3)))
  (let (%369 (Shape %368))
  (let (%370 (Constant 0))
  (let (%371 (Gather %369 %370 0))
  (let (%372 (Shape %368))
  (let (%373 (Constant 1))
  (let (%374 (Gather %372 %373 0))
  (let (%376 (Unsqueeze %371 (vec 0)))
  (let (%377 (Unsqueeze %374 (vec 0)))
  (let (%379 (Concat %376 %377 %1286 0))
  (let (%380 (Reshape %368 %379))
  (let (%382 (MatMul %380 %1287))
  (let (%383 (Add %382 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%384 (Add %383 %307))
  (let (%386 (ReduceMean %384 (vec -1) 1))
  (let (%387 (Sub %384 %386))
  (let (%388 (Cast_FLOAT %387))
  (let (%390 (Pow %388 %1288))
  (let (%391 (ReduceMean %390 (vec -1) 1))
  (let (%392 (Constant 9.999999960041972e-13))
  (let (%393 (Add %391 %392))
  (let (%394 (Sqrt %393))
  (let (%395 (Div %387 %394))
  (let (%396 (Mul %395 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%397 (Add %396 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%399 (MatMul %397 %1289))
  (let (%400 (Add %399 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%401 (Constant 1.4142135381698608))
  (let (%402 (Div %400 %401))
  (let (%403 (Erf %402))
  (let (%404 (Constant 1.0))
  (let (%405 (Add %403 %404))
  (let (%406 (Mul %400 %405))
  (let (%407 (Constant 0.5))
  (let (%408 (Mul %406 %407))
  (let (%410 (MatMul %408 %1290))
  (let (%411 (Add %410 bert.encoder.layer.1.output.dense.bias))
  (let (%412 (Add %411 %397))
  (let (%414 (ReduceMean %412 (vec -1) 1))
  (let (%415 (Sub %412 %414))
  (let (%416 (Cast_FLOAT %415))
  (let (%418 (Pow %416 %1291))
  (let (%419 (ReduceMean %418 (vec -1) 1))
  (let (%420 (Constant 9.999999960041972e-13))
  (let (%421 (Add %419 %420))
  (let (%422 (Sqrt %421))
  (let (%423 (Div %415 %422))
  (let (%424 (Mul %423 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%425 (Add %424 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%427 (MatMul %425 %1292))
  (let (%428 (Add %427 bert.encoder.layer.2.attention.self.query.bias))
  (let (%430 (MatMul %425 %1293))
  (let (%431 (Add %430 bert.encoder.layer.2.attention.self.key.bias))
  (let (%433 (MatMul %425 %1294))
  (let (%434 (Add %433 bert.encoder.layer.2.attention.self.value.bias))
  (let (%435 (Shape %428))
  (let (%436 (Constant 0))
  (let (%437 (Gather %435 %436 0))
  (let (%438 (Shape %428))
  (let (%439 (Constant 1))
  (let (%440 (Gather %438 %439 0))
  (let (%443 (Unsqueeze %437 (vec 0)))
  (let (%444 (Unsqueeze %440 (vec 0)))
  (let (%447 (Concat %443 %444 %1295 %1296 0))
  (let (%448 (Reshape %428 %447))
  (let (%449 (Transpose %448 (vec 0 2 1 3)))
  (let (%450 (Shape %431))
  (let (%451 (Constant 0))
  (let (%452 (Gather %450 %451 0))
  (let (%453 (Shape %431))
  (let (%454 (Constant 1))
  (let (%455 (Gather %453 %454 0))
  (let (%458 (Unsqueeze %452 (vec 0)))
  (let (%459 (Unsqueeze %455 (vec 0)))
  (let (%462 (Concat %458 %459 %1297 %1298 0))
  (let (%463 (Reshape %431 %462))
  (let (%464 (Shape %434))
  (let (%465 (Constant 0))
  (let (%466 (Gather %464 %465 0))
  (let (%467 (Shape %434))
  (let (%468 (Constant 1))
  (let (%469 (Gather %467 %468 0))
  (let (%472 (Unsqueeze %466 (vec 0)))
  (let (%473 (Unsqueeze %469 (vec 0)))
  (let (%476 (Concat %472 %473 %1299 %1300 0))
  (let (%477 (Reshape %434 %476))
  (let (%478 (Transpose %477 (vec 0 2 1 3)))
  (let (%479 (Transpose %463 (vec 0 2 3 1)))
  (let (%480 (MatMul %449 %479))
  (let (%481 (Constant 8.0))
  (let (%482 (Div %480 %481))
  (let (%483 (Add %482 %161))
  (let (%484 (Softmax %483 3))
  (let (%485 (MatMul %484 %478))
  (let (%486 (Transpose %485 (vec 0 2 1 3)))
  (let (%487 (Shape %486))
  (let (%488 (Constant 0))
  (let (%489 (Gather %487 %488 0))
  (let (%490 (Shape %486))
  (let (%491 (Constant 1))
  (let (%492 (Gather %490 %491 0))
  (let (%494 (Unsqueeze %489 (vec 0)))
  (let (%495 (Unsqueeze %492 (vec 0)))
  (let (%497 (Concat %494 %495 %1301 0))
  (let (%498 (Reshape %486 %497))
  (let (%500 (MatMul %498 %1302))
  (let (%501 (Add %500 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%502 (Add %501 %425))
  (let (%504 (ReduceMean %502 (vec -1) 1))
  (let (%505 (Sub %502 %504))
  (let (%506 (Cast_FLOAT %505))
  (let (%508 (Pow %506 %1303))
  (let (%509 (ReduceMean %508 (vec -1) 1))
  (let (%510 (Constant 9.999999960041972e-13))
  (let (%511 (Add %509 %510))
  (let (%512 (Sqrt %511))
  (let (%513 (Div %505 %512))
  (let (%514 (Mul %513 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%515 (Add %514 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%517 (MatMul %515 %1304))
  (let (%518 (Add %517 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%519 (Constant 1.4142135381698608))
  (let (%520 (Div %518 %519))
  (let (%521 (Erf %520))
  (let (%522 (Constant 1.0))
  (let (%523 (Add %521 %522))
  (let (%524 (Mul %518 %523))
  (let (%525 (Constant 0.5))
  (let (%526 (Mul %524 %525))
  (let (%528 (MatMul %526 %1305))
  (let (%529 (Add %528 bert.encoder.layer.2.output.dense.bias))
  (let (%530 (Add %529 %515))
  (let (%532 (ReduceMean %530 (vec -1) 1))
  (let (%533 (Sub %530 %532))
  (let (%534 (Cast_FLOAT %533))
  (let (%536 (Pow %534 %1306))
  (let (%537 (ReduceMean %536 (vec -1) 1))
  (let (%538 (Constant 9.999999960041972e-13))
  (let (%539 (Add %537 %538))
  (let (%540 (Sqrt %539))
  (let (%541 (Div %533 %540))
  (let (%542 (Mul %541 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%543 (Add %542 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%545 (MatMul %543 %1307))
  (let (%546 (Add %545 bert.encoder.layer.3.attention.self.query.bias))
  (let (%548 (MatMul %543 %1308))
  (let (%549 (Add %548 bert.encoder.layer.3.attention.self.key.bias))
  (let (%551 (MatMul %543 %1309))
  (let (%552 (Add %551 bert.encoder.layer.3.attention.self.value.bias))
  (let (%553 (Shape %546))
  (let (%554 (Constant 0))
  (let (%555 (Gather %553 %554 0))
  (let (%556 (Shape %546))
  (let (%557 (Constant 1))
  (let (%558 (Gather %556 %557 0))
  (let (%561 (Unsqueeze %555 (vec 0)))
  (let (%562 (Unsqueeze %558 (vec 0)))
  (let (%565 (Concat %561 %562 %1310 %1311 0))
  (let (%566 (Reshape %546 %565))
  (let (%567 (Transpose %566 (vec 0 2 1 3)))
  (let (%568 (Shape %549))
  (let (%569 (Constant 0))
  (let (%570 (Gather %568 %569 0))
  (let (%571 (Shape %549))
  (let (%572 (Constant 1))
  (let (%573 (Gather %571 %572 0))
  (let (%576 (Unsqueeze %570 (vec 0)))
  (let (%577 (Unsqueeze %573 (vec 0)))
  (let (%580 (Concat %576 %577 %1312 %1313 0))
  (let (%581 (Reshape %549 %580))
  (let (%582 (Shape %552))
  (let (%583 (Constant 0))
  (let (%584 (Gather %582 %583 0))
  (let (%585 (Shape %552))
  (let (%586 (Constant 1))
  (let (%587 (Gather %585 %586 0))
  (let (%590 (Unsqueeze %584 (vec 0)))
  (let (%591 (Unsqueeze %587 (vec 0)))
  (let (%594 (Concat %590 %591 %1314 %1315 0))
  (let (%595 (Reshape %552 %594))
  (let (%596 (Transpose %595 (vec 0 2 1 3)))
  (let (%597 (Transpose %581 (vec 0 2 3 1)))
  (let (%598 (MatMul %567 %597))
  (let (%599 (Constant 8.0))
  (let (%600 (Div %598 %599))
  (let (%601 (Add %600 %161))
  (let (%602 (Softmax %601 3))
  (let (%603 (MatMul %602 %596))
  (let (%604 (Transpose %603 (vec 0 2 1 3)))
  (let (%605 (Shape %604))
  (let (%606 (Constant 0))
  (let (%607 (Gather %605 %606 0))
  (let (%608 (Shape %604))
  (let (%609 (Constant 1))
  (let (%610 (Gather %608 %609 0))
  (let (%612 (Unsqueeze %607 (vec 0)))
  (let (%613 (Unsqueeze %610 (vec 0)))
  (let (%615 (Concat %612 %613 %1316 0))
  (let (%616 (Reshape %604 %615))
  (let (%618 (MatMul %616 %1317))
  (let (%619 (Add %618 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%620 (Add %619 %543))
  (let (%622 (ReduceMean %620 (vec -1) 1))
  (let (%623 (Sub %620 %622))
  (let (%624 (Cast_FLOAT %623))
  (let (%626 (Pow %624 %1318))
  (let (%627 (ReduceMean %626 (vec -1) 1))
  (let (%628 (Constant 9.999999960041972e-13))
  (let (%629 (Add %627 %628))
  (let (%630 (Sqrt %629))
  (let (%631 (Div %623 %630))
  (let (%632 (Mul %631 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%633 (Add %632 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%635 (MatMul %633 %1319))
  (let (%636 (Add %635 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%637 (Constant 1.4142135381698608))
  (let (%638 (Div %636 %637))
  (let (%639 (Erf %638))
  (let (%640 (Constant 1.0))
  (let (%641 (Add %639 %640))
  (let (%642 (Mul %636 %641))
  (let (%643 (Constant 0.5))
  (let (%644 (Mul %642 %643))
  (let (%646 (MatMul %644 %1320))
  (let (%647 (Add %646 bert.encoder.layer.3.output.dense.bias))
  (let (%648 (Add %647 %633))
  (let (%650 (ReduceMean %648 (vec -1) 1))
  (let (%651 (Sub %648 %650))
  (let (%652 (Cast_FLOAT %651))
  (let (%654 (Pow %652 %1321))
  (let (%655 (ReduceMean %654 (vec -1) 1))
  (let (%656 (Constant 9.999999960041972e-13))
  (let (%657 (Add %655 %656))
  (let (%658 (Sqrt %657))
  (let (%659 (Div %651 %658))
  (let (%660 (Mul %659 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%661 (Add %660 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%663 (MatMul %661 %1322))
  (let (%664 (Add %663 bert.encoder.layer.4.attention.self.query.bias))
  (let (%666 (MatMul %661 %1323))
  (let (%667 (Add %666 bert.encoder.layer.4.attention.self.key.bias))
  (let (%669 (MatMul %661 %1324))
  (let (%670 (Add %669 bert.encoder.layer.4.attention.self.value.bias))
  (let (%671 (Shape %664))
  (let (%672 (Constant 0))
  (let (%673 (Gather %671 %672 0))
  (let (%674 (Shape %664))
  (let (%675 (Constant 1))
  (let (%676 (Gather %674 %675 0))
  (let (%679 (Unsqueeze %673 (vec 0)))
  (let (%680 (Unsqueeze %676 (vec 0)))
  (let (%683 (Concat %679 %680 %1325 %1326 0))
  (let (%684 (Reshape %664 %683))
  (let (%685 (Transpose %684 (vec 0 2 1 3)))
  (let (%686 (Shape %667))
  (let (%687 (Constant 0))
  (let (%688 (Gather %686 %687 0))
  (let (%689 (Shape %667))
  (let (%690 (Constant 1))
  (let (%691 (Gather %689 %690 0))
  (let (%694 (Unsqueeze %688 (vec 0)))
  (let (%695 (Unsqueeze %691 (vec 0)))
  (let (%698 (Concat %694 %695 %1327 %1328 0))
  (let (%699 (Reshape %667 %698))
  (let (%700 (Shape %670))
  (let (%701 (Constant 0))
  (let (%702 (Gather %700 %701 0))
  (let (%703 (Shape %670))
  (let (%704 (Constant 1))
  (let (%705 (Gather %703 %704 0))
  (let (%708 (Unsqueeze %702 (vec 0)))
  (let (%709 (Unsqueeze %705 (vec 0)))
  (let (%712 (Concat %708 %709 %1329 %1330 0))
  (let (%713 (Reshape %670 %712))
  (let (%714 (Transpose %713 (vec 0 2 1 3)))
  (let (%715 (Transpose %699 (vec 0 2 3 1)))
  (let (%716 (MatMul %685 %715))
  (let (%717 (Constant 8.0))
  (let (%718 (Div %716 %717))
  (let (%719 (Add %718 %161))
  (let (%720 (Softmax %719 3))
  (let (%721 (MatMul %720 %714))
  (let (%722 (Transpose %721 (vec 0 2 1 3)))
  (let (%723 (Shape %722))
  (let (%724 (Constant 0))
  (let (%725 (Gather %723 %724 0))
  (let (%726 (Shape %722))
  (let (%727 (Constant 1))
  (let (%728 (Gather %726 %727 0))
  (let (%730 (Unsqueeze %725 (vec 0)))
  (let (%731 (Unsqueeze %728 (vec 0)))
  (let (%733 (Concat %730 %731 %1331 0))
  (let (%734 (Reshape %722 %733))
  (let (%736 (MatMul %734 %1332))
  (let (%737 (Add %736 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%738 (Add %737 %661))
  (let (%740 (ReduceMean %738 (vec -1) 1))
  (let (%741 (Sub %738 %740))
  (let (%742 (Cast_FLOAT %741))
  (let (%744 (Pow %742 %1333))
  (let (%745 (ReduceMean %744 (vec -1) 1))
  (let (%746 (Constant 9.999999960041972e-13))
  (let (%747 (Add %745 %746))
  (let (%748 (Sqrt %747))
  (let (%749 (Div %741 %748))
  (let (%750 (Mul %749 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%751 (Add %750 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%753 (MatMul %751 %1334))
  (let (%754 (Add %753 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%755 (Constant 1.4142135381698608))
  (let (%756 (Div %754 %755))
  (let (%757 (Erf %756))
  (let (%758 (Constant 1.0))
  (let (%759 (Add %757 %758))
  (let (%760 (Mul %754 %759))
  (let (%761 (Constant 0.5))
  (let (%762 (Mul %760 %761))
  (let (%764 (MatMul %762 %1335))
  (let (%765 (Add %764 bert.encoder.layer.4.output.dense.bias))
  (let (%766 (Add %765 %751))
  (let (%768 (ReduceMean %766 (vec -1) 1))
  (let (%769 (Sub %766 %768))
  (let (%770 (Cast_FLOAT %769))
  (let (%772 (Pow %770 %1336))
  (let (%773 (ReduceMean %772 (vec -1) 1))
  (let (%774 (Constant 9.999999960041972e-13))
  (let (%775 (Add %773 %774))
  (let (%776 (Sqrt %775))
  (let (%777 (Div %769 %776))
  (let (%778 (Mul %777 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%779 (Add %778 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%781 (MatMul %779 %1337))
  (let (%782 (Add %781 bert.encoder.layer.5.attention.self.query.bias))
  (let (%784 (MatMul %779 %1338))
  (let (%785 (Add %784 bert.encoder.layer.5.attention.self.key.bias))
  (let (%787 (MatMul %779 %1339))
  (let (%788 (Add %787 bert.encoder.layer.5.attention.self.value.bias))
  (let (%789 (Shape %782))
  (let (%790 (Constant 0))
  (let (%791 (Gather %789 %790 0))
  (let (%792 (Shape %782))
  (let (%793 (Constant 1))
  (let (%794 (Gather %792 %793 0))
  (let (%797 (Unsqueeze %791 (vec 0)))
  (let (%798 (Unsqueeze %794 (vec 0)))
  (let (%801 (Concat %797 %798 %1340 %1341 0))
  (let (%802 (Reshape %782 %801))
  (let (%803 (Transpose %802 (vec 0 2 1 3)))
  (let (%804 (Shape %785))
  (let (%805 (Constant 0))
  (let (%806 (Gather %804 %805 0))
  (let (%807 (Shape %785))
  (let (%808 (Constant 1))
  (let (%809 (Gather %807 %808 0))
  (let (%812 (Unsqueeze %806 (vec 0)))
  (let (%813 (Unsqueeze %809 (vec 0)))
  (let (%816 (Concat %812 %813 %1342 %1343 0))
  (let (%817 (Reshape %785 %816))
  (let (%818 (Shape %788))
  (let (%819 (Constant 0))
  (let (%820 (Gather %818 %819 0))
  (let (%821 (Shape %788))
  (let (%822 (Constant 1))
  (let (%823 (Gather %821 %822 0))
  (let (%826 (Unsqueeze %820 (vec 0)))
  (let (%827 (Unsqueeze %823 (vec 0)))
  (let (%830 (Concat %826 %827 %1344 %1345 0))
  (let (%831 (Reshape %788 %830))
  (let (%832 (Transpose %831 (vec 0 2 1 3)))
  (let (%833 (Transpose %817 (vec 0 2 3 1)))
  (let (%834 (MatMul %803 %833))
  (let (%835 (Constant 8.0))
  (let (%836 (Div %834 %835))
  (let (%837 (Add %836 %161))
  (let (%838 (Softmax %837 3))
  (let (%839 (MatMul %838 %832))
  (let (%840 (Transpose %839 (vec 0 2 1 3)))
  (let (%841 (Shape %840))
  (let (%842 (Constant 0))
  (let (%843 (Gather %841 %842 0))
  (let (%844 (Shape %840))
  (let (%845 (Constant 1))
  (let (%846 (Gather %844 %845 0))
  (let (%848 (Unsqueeze %843 (vec 0)))
  (let (%849 (Unsqueeze %846 (vec 0)))
  (let (%851 (Concat %848 %849 %1346 0))
  (let (%852 (Reshape %840 %851))
  (let (%854 (MatMul %852 %1347))
  (let (%855 (Add %854 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%856 (Add %855 %779))
  (let (%858 (ReduceMean %856 (vec -1) 1))
  (let (%859 (Sub %856 %858))
  (let (%860 (Cast_FLOAT %859))
  (let (%862 (Pow %860 %1348))
  (let (%863 (ReduceMean %862 (vec -1) 1))
  (let (%864 (Constant 9.999999960041972e-13))
  (let (%865 (Add %863 %864))
  (let (%866 (Sqrt %865))
  (let (%867 (Div %859 %866))
  (let (%868 (Mul %867 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%869 (Add %868 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%871 (MatMul %869 %1349))
  (let (%872 (Add %871 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%873 (Constant 1.4142135381698608))
  (let (%874 (Div %872 %873))
  (let (%875 (Erf %874))
  (let (%876 (Constant 1.0))
  (let (%877 (Add %875 %876))
  (let (%878 (Mul %872 %877))
  (let (%879 (Constant 0.5))
  (let (%880 (Mul %878 %879))
  (let (%882 (MatMul %880 %1350))
  (let (%883 (Add %882 bert.encoder.layer.5.output.dense.bias))
  (let (%884 (Add %883 %869))
  (let (%886 (ReduceMean %884 (vec -1) 1))
  (let (%887 (Sub %884 %886))
  (let (%888 (Cast_FLOAT %887))
  (let (%890 (Pow %888 %1351))
  (let (%891 (ReduceMean %890 (vec -1) 1))
  (let (%892 (Constant 9.999999960041972e-13))
  (let (%893 (Add %891 %892))
  (let (%894 (Sqrt %893))
  (let (%895 (Div %887 %894))
  (let (%896 (Mul %895 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%897 (Add %896 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%899 (MatMul %897 %1352))
  (let (%900 (Add %899 bert.encoder.layer.6.attention.self.query.bias))
  (let (%902 (MatMul %897 %1353))
  (let (%903 (Add %902 bert.encoder.layer.6.attention.self.key.bias))
  (let (%905 (MatMul %897 %1354))
  (let (%906 (Add %905 bert.encoder.layer.6.attention.self.value.bias))
  (let (%907 (Shape %900))
  (let (%908 (Constant 0))
  (let (%909 (Gather %907 %908 0))
  (let (%910 (Shape %900))
  (let (%911 (Constant 1))
  (let (%912 (Gather %910 %911 0))
  (let (%915 (Unsqueeze %909 (vec 0)))
  (let (%916 (Unsqueeze %912 (vec 0)))
  (let (%919 (Concat %915 %916 %1355 %1356 0))
  (let (%920 (Reshape %900 %919))
  (let (%921 (Transpose %920 (vec 0 2 1 3)))
  (let (%922 (Shape %903))
  (let (%923 (Constant 0))
  (let (%924 (Gather %922 %923 0))
  (let (%925 (Shape %903))
  (let (%926 (Constant 1))
  (let (%927 (Gather %925 %926 0))
  (let (%930 (Unsqueeze %924 (vec 0)))
  (let (%931 (Unsqueeze %927 (vec 0)))
  (let (%934 (Concat %930 %931 %1357 %1358 0))
  (let (%935 (Reshape %903 %934))
  (let (%936 (Shape %906))
  (let (%937 (Constant 0))
  (let (%938 (Gather %936 %937 0))
  (let (%939 (Shape %906))
  (let (%940 (Constant 1))
  (let (%941 (Gather %939 %940 0))
  (let (%944 (Unsqueeze %938 (vec 0)))
  (let (%945 (Unsqueeze %941 (vec 0)))
  (let (%948 (Concat %944 %945 %1359 %1360 0))
  (let (%949 (Reshape %906 %948))
  (let (%950 (Transpose %949 (vec 0 2 1 3)))
  (let (%951 (Transpose %935 (vec 0 2 3 1)))
  (let (%952 (MatMul %921 %951))
  (let (%953 (Constant 8.0))
  (let (%954 (Div %952 %953))
  (let (%955 (Add %954 %161))
  (let (%956 (Softmax %955 3))
  (let (%957 (MatMul %956 %950))
  (let (%958 (Transpose %957 (vec 0 2 1 3)))
  (let (%959 (Shape %958))
  (let (%960 (Constant 0))
  (let (%961 (Gather %959 %960 0))
  (let (%962 (Shape %958))
  (let (%963 (Constant 1))
  (let (%964 (Gather %962 %963 0))
  (let (%966 (Unsqueeze %961 (vec 0)))
  (let (%967 (Unsqueeze %964 (vec 0)))
  (let (%969 (Concat %966 %967 %1361 0))
  (let (%970 (Reshape %958 %969))
  (let (%972 (MatMul %970 %1362))
  (let (%973 (Add %972 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%974 (Add %973 %897))
  (let (%976 (ReduceMean %974 (vec -1) 1))
  (let (%977 (Sub %974 %976))
  (let (%978 (Cast_FLOAT %977))
  (let (%980 (Pow %978 %1363))
  (let (%981 (ReduceMean %980 (vec -1) 1))
  (let (%982 (Constant 9.999999960041972e-13))
  (let (%983 (Add %981 %982))
  (let (%984 (Sqrt %983))
  (let (%985 (Div %977 %984))
  (let (%986 (Mul %985 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%987 (Add %986 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%989 (MatMul %987 %1364))
  (let (%990 (Add %989 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%991 (Constant 1.4142135381698608))
  (let (%992 (Div %990 %991))
  (let (%993 (Erf %992))
  (let (%994 (Constant 1.0))
  (let (%995 (Add %993 %994))
  (let (%996 (Mul %990 %995))
  (let (%997 (Constant 0.5))
  (let (%998 (Mul %996 %997))
  (let (%1000 (MatMul %998 %1365))
  (let (%1001 (Add %1000 bert.encoder.layer.6.output.dense.bias))
  (let (%1002 (Add %1001 %987))
  (let (%1004 (ReduceMean %1002 (vec -1) 1))
  (let (%1005 (Sub %1002 %1004))
  (let (%1006 (Cast_FLOAT %1005))
  (let (%1008 (Pow %1006 %1366))
  (let (%1009 (ReduceMean %1008 (vec -1) 1))
  (let (%1010 (Constant 9.999999960041972e-13))
  (let (%1011 (Add %1009 %1010))
  (let (%1012 (Sqrt %1011))
  (let (%1013 (Div %1005 %1012))
  (let (%1014 (Mul %1013 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1015 (Add %1014 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1017 (MatMul %1015 %1367))
  (let (%1018 (Add %1017 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1020 (MatMul %1015 %1368))
  (let (%1021 (Add %1020 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1023 (MatMul %1015 %1369))
  (let (%1024 (Add %1023 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1025 (Shape %1018))
  (let (%1026 (Constant 0))
  (let (%1027 (Gather %1025 %1026 0))
  (let (%1028 (Shape %1018))
  (let (%1029 (Constant 1))
  (let (%1030 (Gather %1028 %1029 0))
  (let (%1033 (Unsqueeze %1027 (vec 0)))
  (let (%1034 (Unsqueeze %1030 (vec 0)))
  (let (%1037 (Concat %1033 %1034 %1370 %1371 0))
  (let (%1038 (Reshape %1018 %1037))
  (let (%1039 (Transpose %1038 (vec 0 2 1 3)))
  (let (%1040 (Shape %1021))
  (let (%1041 (Constant 0))
  (let (%1042 (Gather %1040 %1041 0))
  (let (%1043 (Shape %1021))
  (let (%1044 (Constant 1))
  (let (%1045 (Gather %1043 %1044 0))
  (let (%1048 (Unsqueeze %1042 (vec 0)))
  (let (%1049 (Unsqueeze %1045 (vec 0)))
  (let (%1052 (Concat %1048 %1049 %1372 %1373 0))
  (let (%1053 (Reshape %1021 %1052))
  (let (%1054 (Shape %1024))
  (let (%1055 (Constant 0))
  (let (%1056 (Gather %1054 %1055 0))
  (let (%1057 (Shape %1024))
  (let (%1058 (Constant 1))
  (let (%1059 (Gather %1057 %1058 0))
  (let (%1062 (Unsqueeze %1056 (vec 0)))
  (let (%1063 (Unsqueeze %1059 (vec 0)))
  (let (%1066 (Concat %1062 %1063 %1374 %1375 0))
  (let (%1067 (Reshape %1024 %1066))
  (let (%1068 (Transpose %1067 (vec 0 2 1 3)))
  (let (%1069 (Transpose %1053 (vec 0 2 3 1)))
  (let (%1070 (MatMul %1039 %1069))
  (let (%1071 (Constant 8.0))
  (let (%1072 (Div %1070 %1071))
  (let (%1073 (Add %1072 %161))
  (let (%1074 (Softmax %1073 3))
  (let (%1075 (MatMul %1074 %1068))
  (let (%1076 (Transpose %1075 (vec 0 2 1 3)))
  (let (%1077 (Shape %1076))
  (let (%1078 (Constant 0))
  (let (%1079 (Gather %1077 %1078 0))
  (let (%1080 (Shape %1076))
  (let (%1081 (Constant 1))
  (let (%1082 (Gather %1080 %1081 0))
  (let (%1084 (Unsqueeze %1079 (vec 0)))
  (let (%1085 (Unsqueeze %1082 (vec 0)))
  (let (%1087 (Concat %1084 %1085 %1376 0))
  (let (%1088 (Reshape %1076 %1087))
  (let (%1090 (MatMul %1088 %1377))
  (let (%1091 (Add %1090 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1092 (Add %1091 %1015))
  (let (%1094 (ReduceMean %1092 (vec -1) 1))
  (let (%1095 (Sub %1092 %1094))
  (let (%1096 (Cast_FLOAT %1095))
  (let (%1098 (Pow %1096 %1378))
  (let (%1099 (ReduceMean %1098 (vec -1) 1))
  (let (%1100 (Constant 9.999999960041972e-13))
  (let (%1101 (Add %1099 %1100))
  (let (%1102 (Sqrt %1101))
  (let (%1103 (Div %1095 %1102))
  (let (%1104 (Mul %1103 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1105 (Add %1104 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1107 (MatMul %1105 %1379))
  (let (%1108 (Add %1107 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1109 (Constant 1.4142135381698608))
  (let (%1110 (Div %1108 %1109))
  (let (%1111 (Erf %1110))
  (let (%1112 (Constant 1.0))
  (let (%1113 (Add %1111 %1112))
  (let (%1114 (Mul %1108 %1113))
  (let (%1115 (Constant 0.5))
  (let (%1116 (Mul %1114 %1115))
  (let (%1118 (MatMul %1116 %1380))
  (let (%1119 (Add %1118 bert.encoder.layer.7.output.dense.bias))
  (let (%1120 (Add %1119 %1105))
  (let (%1122 (ReduceMean %1120 (vec -1) 1))
  (let (%1123 (Sub %1120 %1122))
  (let (%1124 (Cast_FLOAT %1123))
  (let (%1126 (Pow %1124 %1381))
  (let (%1127 (ReduceMean %1126 (vec -1) 1))
  (let (%1128 (Constant 9.999999960041972e-13))
  (let (%1129 (Add %1127 %1128))
  (let (%1130 (Sqrt %1129))
  (let (%1131 (Div %1123 %1130))
  (let (%1132 (Mul %1131 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1133 (Add %1132 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1135 (MatMul %1133 %1382))
  (let (%1136 (Add %1135 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1138 (MatMul %1133 %1383))
  (let (%1139 (Add %1138 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1141 (MatMul %1133 %1384))
  (let (%1142 (Add %1141 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1143 (Shape %1136))
  (let (%1144 (Constant 0))
  (let (%1145 (Gather %1143 %1144 0))
  (let (%1146 (Shape %1136))
  (let (%1147 (Constant 1))
  (let (%1148 (Gather %1146 %1147 0))
  (let (%1151 (Unsqueeze %1145 (vec 0)))
  (let (%1152 (Unsqueeze %1148 (vec 0)))
  (let (%1155 (Concat %1151 %1152 %1385 %1386 0))
  (let (%1156 (Reshape %1136 %1155))
  (let (%1157 (Transpose %1156 (vec 0 2 1 3)))
  (let (%1158 (Shape %1139))
  (let (%1159 (Constant 0))
  (let (%1160 (Gather %1158 %1159 0))
  (let (%1161 (Shape %1139))
  (let (%1162 (Constant 1))
  (let (%1163 (Gather %1161 %1162 0))
  (let (%1166 (Unsqueeze %1160 (vec 0)))
  (let (%1167 (Unsqueeze %1163 (vec 0)))
  (let (%1170 (Concat %1166 %1167 %1387 %1388 0))
  (let (%1171 (Reshape %1139 %1170))
  (let (%1172 (Shape %1142))
  (let (%1173 (Constant 0))
  (let (%1174 (Gather %1172 %1173 0))
  (let (%1175 (Shape %1142))
  (let (%1176 (Constant 1))
  (let (%1177 (Gather %1175 %1176 0))
  (let (%1180 (Unsqueeze %1174 (vec 0)))
  (let (%1181 (Unsqueeze %1177 (vec 0)))
  (let (%1184 (Concat %1180 %1181 %1389 %1390 0))
  (let (%1185 (Reshape %1142 %1184))
  (let (%1186 (Transpose %1185 (vec 0 2 1 3)))
  (let (%1187 (Transpose %1171 (vec 0 2 3 1)))
  (let (%1188 (MatMul %1157 %1187))
  (let (%1189 (Constant 8.0))
  (let (%1190 (Div %1188 %1189))
  (let (%1191 (Add %1190 %161))
  (let (%1192 (Softmax %1191 3))
  (let (%1193 (MatMul %1192 %1186))
  (let (%1194 (Transpose %1193 (vec 0 2 1 3)))
  (let (%1195 (Shape %1194))
  (let (%1196 (Constant 0))
  (let (%1197 (Gather %1195 %1196 0))
  (let (%1198 (Shape %1194))
  (let (%1199 (Constant 1))
  (let (%1200 (Gather %1198 %1199 0))
  (let (%1202 (Unsqueeze %1197 (vec 0)))
  (let (%1203 (Unsqueeze %1200 (vec 0)))
  (let (%1205 (Concat %1202 %1203 %1391 0))
  (let (%1206 (Reshape %1194 %1205))
  (let (%1208 (MatMul %1206 %1392))
  (let (%1209 (Add %1208 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1210 (Add %1209 %1133))
  (let (%1212 (ReduceMean %1210 (vec -1) 1))
  (let (%1213 (Sub %1210 %1212))
  (let (%1214 (Cast_FLOAT %1213))
  (let (%1216 (Pow %1214 %1393))
  (let (%1217 (ReduceMean %1216 (vec -1) 1))
  (let (%1218 (Constant 9.999999960041972e-13))
  (let (%1219 (Add %1217 %1218))
  (let (%1220 (Sqrt %1219))
  (let (%1221 (Div %1213 %1220))
  (let (%1222 (Mul %1221 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1223 (Add %1222 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1225 (MatMul %1223 %1394))
  (let (%1226 (Add %1225 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1227 (Constant 1.4142135381698608))
  (let (%1228 (Div %1226 %1227))
  (let (%1229 (Erf %1228))
  (let (%1230 (Constant 1.0))
  (let (%1231 (Add %1229 %1230))
  (let (%1232 (Mul %1226 %1231))
  (let (%1233 (Constant 0.5))
  (let (%1234 (Mul %1232 %1233))
  (let (%1236 (MatMul %1234 %1395))
  (let (%1237 (Add %1236 bert.encoder.layer.8.output.dense.bias))
  (let (%1238 (Add %1237 %1223))
  (let (%1240 (ReduceMean %1238 (vec -1) 1))
  (let (%1241 (Sub %1238 %1240))
  (let (%1242 (Cast_FLOAT %1241))
  (let (%1244 (Pow %1242 %1396))
  (let (%1245 (ReduceMean %1244 (vec -1) 1))
  (let (%1246 (Constant 9.999999960041972e-13))
  (let (%1247 (Add %1245 %1246))
  (let (%1248 (Sqrt %1247))
  (let (%1249 (Div %1241 %1248))
  (let (%1250 (Mul %1249 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1251 (Add %1250 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1253 (MatMul %1251 %1397))
  (let (%1254 (Add %1253 qa_outputs.bias))
  (let ((%1255 %1256) (Split %1254 (vec 1 1) -1))
  (let (output_0 (Squeeze %1255 (vec -1)))
  (let (output_1 (Squeeze %1256 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

