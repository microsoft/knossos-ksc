;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert5.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%723 (vec 0))
  (let (%724 (vec 1))
  (let (%725 2.0)
  (let (%726 (load-from-onnx-float32 768 768 "%726"))
  (let (%727 (load-from-onnx-float32 768 768 "%727"))
  (let (%728 (load-from-onnx-float32 768 768 "%728"))
  (let (%729 (vec 12))
  (let (%730 (vec 64))
  (let (%731 (vec 12))
  (let (%732 (vec 64))
  (let (%733 (vec 12))
  (let (%734 (vec 64))
  (let (%735 (vec 768))
  (let (%736 (load-from-onnx-float32 768 768 "%736"))
  (let (%737 2.0)
  (let (%738 (load-from-onnx-float32 768 3072 "%738"))
  (let (%739 (load-from-onnx-float32 3072 768 "%739"))
  (let (%740 2.0)
  (let (%741 (load-from-onnx-float32 768 768 "%741"))
  (let (%742 (load-from-onnx-float32 768 768 "%742"))
  (let (%743 (load-from-onnx-float32 768 768 "%743"))
  (let (%744 (vec 12))
  (let (%745 (vec 64))
  (let (%746 (vec 12))
  (let (%747 (vec 64))
  (let (%748 (vec 12))
  (let (%749 (vec 64))
  (let (%750 (vec 768))
  (let (%751 (load-from-onnx-float32 768 768 "%751"))
  (let (%752 2.0)
  (let (%753 (load-from-onnx-float32 768 3072 "%753"))
  (let (%754 (load-from-onnx-float32 3072 768 "%754"))
  (let (%755 2.0)
  (let (%756 (load-from-onnx-float32 768 768 "%756"))
  (let (%757 (load-from-onnx-float32 768 768 "%757"))
  (let (%758 (load-from-onnx-float32 768 768 "%758"))
  (let (%759 (vec 12))
  (let (%760 (vec 64))
  (let (%761 (vec 12))
  (let (%762 (vec 64))
  (let (%763 (vec 12))
  (let (%764 (vec 64))
  (let (%765 (vec 768))
  (let (%766 (load-from-onnx-float32 768 768 "%766"))
  (let (%767 2.0)
  (let (%768 (load-from-onnx-float32 768 3072 "%768"))
  (let (%769 (load-from-onnx-float32 3072 768 "%769"))
  (let (%770 2.0)
  (let (%771 (load-from-onnx-float32 768 768 "%771"))
  (let (%772 (load-from-onnx-float32 768 768 "%772"))
  (let (%773 (load-from-onnx-float32 768 768 "%773"))
  (let (%774 (vec 12))
  (let (%775 (vec 64))
  (let (%776 (vec 12))
  (let (%777 (vec 64))
  (let (%778 (vec 12))
  (let (%779 (vec 64))
  (let (%780 (vec 768))
  (let (%781 (load-from-onnx-float32 768 768 "%781"))
  (let (%782 2.0)
  (let (%783 (load-from-onnx-float32 768 3072 "%783"))
  (let (%784 (load-from-onnx-float32 3072 768 "%784"))
  (let (%785 2.0)
  (let (%786 (load-from-onnx-float32 768 768 "%786"))
  (let (%787 (load-from-onnx-float32 768 768 "%787"))
  (let (%788 (load-from-onnx-float32 768 768 "%788"))
  (let (%789 (vec 12))
  (let (%790 (vec 64))
  (let (%791 (vec 12))
  (let (%792 (vec 64))
  (let (%793 (vec 12))
  (let (%794 (vec 64))
  (let (%795 (vec 768))
  (let (%796 (load-from-onnx-float32 768 768 "%796"))
  (let (%797 2.0)
  (let (%798 (load-from-onnx-float32 768 3072 "%798"))
  (let (%799 (load-from-onnx-float32 3072 768 "%799"))
  (let (%800 2.0)
  (let (%801 (load-from-onnx-float32 768 2 "%801"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%91 (Unsqueeze attention_mask (vec 1)))
  (let (%92 (Unsqueeze %91 (vec 2)))
  (let (%93 (Cast_FLOAT %92))
  (let (%94 (Constant 1.0))
  (let (%95 (Sub %94 %93))
  (let (%96 (Constant -10000.0))
  (let (%97 (Mul %95 %96))
  (let (%98 (Shape input_ids))
  (let (%99 (Constant 1))
  (let (%100 (Gather %98 %99 0))
  (let (%104 (Unsqueeze %100 (vec 0)))
  (let (%106 (Constant (vec 1)))
  (let (%107 (Slice bert.embeddings.position_ids %723 %104 %724 %106))
  (let (%108 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%109 (Gather bert.embeddings.position_embeddings.weight %107 0))
  (let (%110 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%111 (Add %108 %109))
  (let (%112 (Add %111 %110))
  (let (%114 (ReduceMean %112 (vec -1) 1))
  (let (%115 (Sub %112 %114))
  (let (%116 (Cast_FLOAT %115))
  (let (%118 (Pow %116 %725))
  (let (%119 (ReduceMean %118 (vec -1) 1))
  (let (%120 (Constant 9.999999960041972e-13))
  (let (%121 (Add %119 %120))
  (let (%122 (Sqrt %121))
  (let (%123 (Div %115 %122))
  (let (%124 (Mul %123 bert.embeddings.LayerNorm.weight))
  (let (%125 (Add %124 bert.embeddings.LayerNorm.bias))
  (let (%127 (MatMul %125 %726))
  (let (%128 (Add %127 bert.encoder.layer.0.attention.self.query.bias))
  (let (%130 (MatMul %125 %727))
  (let (%131 (Add %130 bert.encoder.layer.0.attention.self.key.bias))
  (let (%133 (MatMul %125 %728))
  (let (%134 (Add %133 bert.encoder.layer.0.attention.self.value.bias))
  (let (%135 (Shape %128))
  (let (%136 (Constant 0))
  (let (%137 (Gather %135 %136 0))
  (let (%138 (Shape %128))
  (let (%139 (Constant 1))
  (let (%140 (Gather %138 %139 0))
  (let (%143 (Unsqueeze %137 (vec 0)))
  (let (%144 (Unsqueeze %140 (vec 0)))
  (let (%147 (Concat %143 %144 %729 %730 0))
  (let (%148 (Reshape %128 %147))
  (let (%149 (Transpose %148 (vec 0 2 1 3)))
  (let (%150 (Shape %131))
  (let (%151 (Constant 0))
  (let (%152 (Gather %150 %151 0))
  (let (%153 (Shape %131))
  (let (%154 (Constant 1))
  (let (%155 (Gather %153 %154 0))
  (let (%158 (Unsqueeze %152 (vec 0)))
  (let (%159 (Unsqueeze %155 (vec 0)))
  (let (%162 (Concat %158 %159 %731 %732 0))
  (let (%163 (Reshape %131 %162))
  (let (%164 (Shape %134))
  (let (%165 (Constant 0))
  (let (%166 (Gather %164 %165 0))
  (let (%167 (Shape %134))
  (let (%168 (Constant 1))
  (let (%169 (Gather %167 %168 0))
  (let (%172 (Unsqueeze %166 (vec 0)))
  (let (%173 (Unsqueeze %169 (vec 0)))
  (let (%176 (Concat %172 %173 %733 %734 0))
  (let (%177 (Reshape %134 %176))
  (let (%178 (Transpose %177 (vec 0 2 1 3)))
  (let (%179 (Transpose %163 (vec 0 2 3 1)))
  (let (%180 (MatMul %149 %179))
  (let (%181 (Constant 8.0))
  (let (%182 (Div %180 %181))
  (let (%183 (Add %182 %97))
  (let (%184 (Softmax %183 3))
  (let (%185 (MatMul %184 %178))
  (let (%186 (Transpose %185 (vec 0 2 1 3)))
  (let (%187 (Shape %186))
  (let (%188 (Constant 0))
  (let (%189 (Gather %187 %188 0))
  (let (%190 (Shape %186))
  (let (%191 (Constant 1))
  (let (%192 (Gather %190 %191 0))
  (let (%194 (Unsqueeze %189 (vec 0)))
  (let (%195 (Unsqueeze %192 (vec 0)))
  (let (%197 (Concat %194 %195 %735 0))
  (let (%198 (Reshape %186 %197))
  (let (%200 (MatMul %198 %736))
  (let (%201 (Add %200 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%202 (Add %201 %125))
  (let (%204 (ReduceMean %202 (vec -1) 1))
  (let (%205 (Sub %202 %204))
  (let (%206 (Cast_FLOAT %205))
  (let (%208 (Pow %206 %737))
  (let (%209 (ReduceMean %208 (vec -1) 1))
  (let (%210 (Constant 9.999999960041972e-13))
  (let (%211 (Add %209 %210))
  (let (%212 (Sqrt %211))
  (let (%213 (Div %205 %212))
  (let (%214 (Mul %213 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%215 (Add %214 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%217 (MatMul %215 %738))
  (let (%218 (Add %217 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%219 (Constant 1.4142135381698608))
  (let (%220 (Div %218 %219))
  (let (%221 (Erf %220))
  (let (%222 (Constant 1.0))
  (let (%223 (Add %221 %222))
  (let (%224 (Mul %218 %223))
  (let (%225 (Constant 0.5))
  (let (%226 (Mul %224 %225))
  (let (%228 (MatMul %226 %739))
  (let (%229 (Add %228 bert.encoder.layer.0.output.dense.bias))
  (let (%230 (Add %229 %215))
  (let (%232 (ReduceMean %230 (vec -1) 1))
  (let (%233 (Sub %230 %232))
  (let (%234 (Cast_FLOAT %233))
  (let (%236 (Pow %234 %740))
  (let (%237 (ReduceMean %236 (vec -1) 1))
  (let (%238 (Constant 9.999999960041972e-13))
  (let (%239 (Add %237 %238))
  (let (%240 (Sqrt %239))
  (let (%241 (Div %233 %240))
  (let (%242 (Mul %241 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%243 (Add %242 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%245 (MatMul %243 %741))
  (let (%246 (Add %245 bert.encoder.layer.1.attention.self.query.bias))
  (let (%248 (MatMul %243 %742))
  (let (%249 (Add %248 bert.encoder.layer.1.attention.self.key.bias))
  (let (%251 (MatMul %243 %743))
  (let (%252 (Add %251 bert.encoder.layer.1.attention.self.value.bias))
  (let (%253 (Shape %246))
  (let (%254 (Constant 0))
  (let (%255 (Gather %253 %254 0))
  (let (%256 (Shape %246))
  (let (%257 (Constant 1))
  (let (%258 (Gather %256 %257 0))
  (let (%261 (Unsqueeze %255 (vec 0)))
  (let (%262 (Unsqueeze %258 (vec 0)))
  (let (%265 (Concat %261 %262 %744 %745 0))
  (let (%266 (Reshape %246 %265))
  (let (%267 (Transpose %266 (vec 0 2 1 3)))
  (let (%268 (Shape %249))
  (let (%269 (Constant 0))
  (let (%270 (Gather %268 %269 0))
  (let (%271 (Shape %249))
  (let (%272 (Constant 1))
  (let (%273 (Gather %271 %272 0))
  (let (%276 (Unsqueeze %270 (vec 0)))
  (let (%277 (Unsqueeze %273 (vec 0)))
  (let (%280 (Concat %276 %277 %746 %747 0))
  (let (%281 (Reshape %249 %280))
  (let (%282 (Shape %252))
  (let (%283 (Constant 0))
  (let (%284 (Gather %282 %283 0))
  (let (%285 (Shape %252))
  (let (%286 (Constant 1))
  (let (%287 (Gather %285 %286 0))
  (let (%290 (Unsqueeze %284 (vec 0)))
  (let (%291 (Unsqueeze %287 (vec 0)))
  (let (%294 (Concat %290 %291 %748 %749 0))
  (let (%295 (Reshape %252 %294))
  (let (%296 (Transpose %295 (vec 0 2 1 3)))
  (let (%297 (Transpose %281 (vec 0 2 3 1)))
  (let (%298 (MatMul %267 %297))
  (let (%299 (Constant 8.0))
  (let (%300 (Div %298 %299))
  (let (%301 (Add %300 %97))
  (let (%302 (Softmax %301 3))
  (let (%303 (MatMul %302 %296))
  (let (%304 (Transpose %303 (vec 0 2 1 3)))
  (let (%305 (Shape %304))
  (let (%306 (Constant 0))
  (let (%307 (Gather %305 %306 0))
  (let (%308 (Shape %304))
  (let (%309 (Constant 1))
  (let (%310 (Gather %308 %309 0))
  (let (%312 (Unsqueeze %307 (vec 0)))
  (let (%313 (Unsqueeze %310 (vec 0)))
  (let (%315 (Concat %312 %313 %750 0))
  (let (%316 (Reshape %304 %315))
  (let (%318 (MatMul %316 %751))
  (let (%319 (Add %318 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%320 (Add %319 %243))
  (let (%322 (ReduceMean %320 (vec -1) 1))
  (let (%323 (Sub %320 %322))
  (let (%324 (Cast_FLOAT %323))
  (let (%326 (Pow %324 %752))
  (let (%327 (ReduceMean %326 (vec -1) 1))
  (let (%328 (Constant 9.999999960041972e-13))
  (let (%329 (Add %327 %328))
  (let (%330 (Sqrt %329))
  (let (%331 (Div %323 %330))
  (let (%332 (Mul %331 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%333 (Add %332 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%335 (MatMul %333 %753))
  (let (%336 (Add %335 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%337 (Constant 1.4142135381698608))
  (let (%338 (Div %336 %337))
  (let (%339 (Erf %338))
  (let (%340 (Constant 1.0))
  (let (%341 (Add %339 %340))
  (let (%342 (Mul %336 %341))
  (let (%343 (Constant 0.5))
  (let (%344 (Mul %342 %343))
  (let (%346 (MatMul %344 %754))
  (let (%347 (Add %346 bert.encoder.layer.1.output.dense.bias))
  (let (%348 (Add %347 %333))
  (let (%350 (ReduceMean %348 (vec -1) 1))
  (let (%351 (Sub %348 %350))
  (let (%352 (Cast_FLOAT %351))
  (let (%354 (Pow %352 %755))
  (let (%355 (ReduceMean %354 (vec -1) 1))
  (let (%356 (Constant 9.999999960041972e-13))
  (let (%357 (Add %355 %356))
  (let (%358 (Sqrt %357))
  (let (%359 (Div %351 %358))
  (let (%360 (Mul %359 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%361 (Add %360 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%363 (MatMul %361 %756))
  (let (%364 (Add %363 bert.encoder.layer.2.attention.self.query.bias))
  (let (%366 (MatMul %361 %757))
  (let (%367 (Add %366 bert.encoder.layer.2.attention.self.key.bias))
  (let (%369 (MatMul %361 %758))
  (let (%370 (Add %369 bert.encoder.layer.2.attention.self.value.bias))
  (let (%371 (Shape %364))
  (let (%372 (Constant 0))
  (let (%373 (Gather %371 %372 0))
  (let (%374 (Shape %364))
  (let (%375 (Constant 1))
  (let (%376 (Gather %374 %375 0))
  (let (%379 (Unsqueeze %373 (vec 0)))
  (let (%380 (Unsqueeze %376 (vec 0)))
  (let (%383 (Concat %379 %380 %759 %760 0))
  (let (%384 (Reshape %364 %383))
  (let (%385 (Transpose %384 (vec 0 2 1 3)))
  (let (%386 (Shape %367))
  (let (%387 (Constant 0))
  (let (%388 (Gather %386 %387 0))
  (let (%389 (Shape %367))
  (let (%390 (Constant 1))
  (let (%391 (Gather %389 %390 0))
  (let (%394 (Unsqueeze %388 (vec 0)))
  (let (%395 (Unsqueeze %391 (vec 0)))
  (let (%398 (Concat %394 %395 %761 %762 0))
  (let (%399 (Reshape %367 %398))
  (let (%400 (Shape %370))
  (let (%401 (Constant 0))
  (let (%402 (Gather %400 %401 0))
  (let (%403 (Shape %370))
  (let (%404 (Constant 1))
  (let (%405 (Gather %403 %404 0))
  (let (%408 (Unsqueeze %402 (vec 0)))
  (let (%409 (Unsqueeze %405 (vec 0)))
  (let (%412 (Concat %408 %409 %763 %764 0))
  (let (%413 (Reshape %370 %412))
  (let (%414 (Transpose %413 (vec 0 2 1 3)))
  (let (%415 (Transpose %399 (vec 0 2 3 1)))
  (let (%416 (MatMul %385 %415))
  (let (%417 (Constant 8.0))
  (let (%418 (Div %416 %417))
  (let (%419 (Add %418 %97))
  (let (%420 (Softmax %419 3))
  (let (%421 (MatMul %420 %414))
  (let (%422 (Transpose %421 (vec 0 2 1 3)))
  (let (%423 (Shape %422))
  (let (%424 (Constant 0))
  (let (%425 (Gather %423 %424 0))
  (let (%426 (Shape %422))
  (let (%427 (Constant 1))
  (let (%428 (Gather %426 %427 0))
  (let (%430 (Unsqueeze %425 (vec 0)))
  (let (%431 (Unsqueeze %428 (vec 0)))
  (let (%433 (Concat %430 %431 %765 0))
  (let (%434 (Reshape %422 %433))
  (let (%436 (MatMul %434 %766))
  (let (%437 (Add %436 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%438 (Add %437 %361))
  (let (%440 (ReduceMean %438 (vec -1) 1))
  (let (%441 (Sub %438 %440))
  (let (%442 (Cast_FLOAT %441))
  (let (%444 (Pow %442 %767))
  (let (%445 (ReduceMean %444 (vec -1) 1))
  (let (%446 (Constant 9.999999960041972e-13))
  (let (%447 (Add %445 %446))
  (let (%448 (Sqrt %447))
  (let (%449 (Div %441 %448))
  (let (%450 (Mul %449 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%451 (Add %450 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%453 (MatMul %451 %768))
  (let (%454 (Add %453 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%455 (Constant 1.4142135381698608))
  (let (%456 (Div %454 %455))
  (let (%457 (Erf %456))
  (let (%458 (Constant 1.0))
  (let (%459 (Add %457 %458))
  (let (%460 (Mul %454 %459))
  (let (%461 (Constant 0.5))
  (let (%462 (Mul %460 %461))
  (let (%464 (MatMul %462 %769))
  (let (%465 (Add %464 bert.encoder.layer.2.output.dense.bias))
  (let (%466 (Add %465 %451))
  (let (%468 (ReduceMean %466 (vec -1) 1))
  (let (%469 (Sub %466 %468))
  (let (%470 (Cast_FLOAT %469))
  (let (%472 (Pow %470 %770))
  (let (%473 (ReduceMean %472 (vec -1) 1))
  (let (%474 (Constant 9.999999960041972e-13))
  (let (%475 (Add %473 %474))
  (let (%476 (Sqrt %475))
  (let (%477 (Div %469 %476))
  (let (%478 (Mul %477 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%479 (Add %478 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%481 (MatMul %479 %771))
  (let (%482 (Add %481 bert.encoder.layer.3.attention.self.query.bias))
  (let (%484 (MatMul %479 %772))
  (let (%485 (Add %484 bert.encoder.layer.3.attention.self.key.bias))
  (let (%487 (MatMul %479 %773))
  (let (%488 (Add %487 bert.encoder.layer.3.attention.self.value.bias))
  (let (%489 (Shape %482))
  (let (%490 (Constant 0))
  (let (%491 (Gather %489 %490 0))
  (let (%492 (Shape %482))
  (let (%493 (Constant 1))
  (let (%494 (Gather %492 %493 0))
  (let (%497 (Unsqueeze %491 (vec 0)))
  (let (%498 (Unsqueeze %494 (vec 0)))
  (let (%501 (Concat %497 %498 %774 %775 0))
  (let (%502 (Reshape %482 %501))
  (let (%503 (Transpose %502 (vec 0 2 1 3)))
  (let (%504 (Shape %485))
  (let (%505 (Constant 0))
  (let (%506 (Gather %504 %505 0))
  (let (%507 (Shape %485))
  (let (%508 (Constant 1))
  (let (%509 (Gather %507 %508 0))
  (let (%512 (Unsqueeze %506 (vec 0)))
  (let (%513 (Unsqueeze %509 (vec 0)))
  (let (%516 (Concat %512 %513 %776 %777 0))
  (let (%517 (Reshape %485 %516))
  (let (%518 (Shape %488))
  (let (%519 (Constant 0))
  (let (%520 (Gather %518 %519 0))
  (let (%521 (Shape %488))
  (let (%522 (Constant 1))
  (let (%523 (Gather %521 %522 0))
  (let (%526 (Unsqueeze %520 (vec 0)))
  (let (%527 (Unsqueeze %523 (vec 0)))
  (let (%530 (Concat %526 %527 %778 %779 0))
  (let (%531 (Reshape %488 %530))
  (let (%532 (Transpose %531 (vec 0 2 1 3)))
  (let (%533 (Transpose %517 (vec 0 2 3 1)))
  (let (%534 (MatMul %503 %533))
  (let (%535 (Constant 8.0))
  (let (%536 (Div %534 %535))
  (let (%537 (Add %536 %97))
  (let (%538 (Softmax %537 3))
  (let (%539 (MatMul %538 %532))
  (let (%540 (Transpose %539 (vec 0 2 1 3)))
  (let (%541 (Shape %540))
  (let (%542 (Constant 0))
  (let (%543 (Gather %541 %542 0))
  (let (%544 (Shape %540))
  (let (%545 (Constant 1))
  (let (%546 (Gather %544 %545 0))
  (let (%548 (Unsqueeze %543 (vec 0)))
  (let (%549 (Unsqueeze %546 (vec 0)))
  (let (%551 (Concat %548 %549 %780 0))
  (let (%552 (Reshape %540 %551))
  (let (%554 (MatMul %552 %781))
  (let (%555 (Add %554 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%556 (Add %555 %479))
  (let (%558 (ReduceMean %556 (vec -1) 1))
  (let (%559 (Sub %556 %558))
  (let (%560 (Cast_FLOAT %559))
  (let (%562 (Pow %560 %782))
  (let (%563 (ReduceMean %562 (vec -1) 1))
  (let (%564 (Constant 9.999999960041972e-13))
  (let (%565 (Add %563 %564))
  (let (%566 (Sqrt %565))
  (let (%567 (Div %559 %566))
  (let (%568 (Mul %567 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%569 (Add %568 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%571 (MatMul %569 %783))
  (let (%572 (Add %571 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%573 (Constant 1.4142135381698608))
  (let (%574 (Div %572 %573))
  (let (%575 (Erf %574))
  (let (%576 (Constant 1.0))
  (let (%577 (Add %575 %576))
  (let (%578 (Mul %572 %577))
  (let (%579 (Constant 0.5))
  (let (%580 (Mul %578 %579))
  (let (%582 (MatMul %580 %784))
  (let (%583 (Add %582 bert.encoder.layer.3.output.dense.bias))
  (let (%584 (Add %583 %569))
  (let (%586 (ReduceMean %584 (vec -1) 1))
  (let (%587 (Sub %584 %586))
  (let (%588 (Cast_FLOAT %587))
  (let (%590 (Pow %588 %785))
  (let (%591 (ReduceMean %590 (vec -1) 1))
  (let (%592 (Constant 9.999999960041972e-13))
  (let (%593 (Add %591 %592))
  (let (%594 (Sqrt %593))
  (let (%595 (Div %587 %594))
  (let (%596 (Mul %595 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%597 (Add %596 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%599 (MatMul %597 %786))
  (let (%600 (Add %599 bert.encoder.layer.4.attention.self.query.bias))
  (let (%602 (MatMul %597 %787))
  (let (%603 (Add %602 bert.encoder.layer.4.attention.self.key.bias))
  (let (%605 (MatMul %597 %788))
  (let (%606 (Add %605 bert.encoder.layer.4.attention.self.value.bias))
  (let (%607 (Shape %600))
  (let (%608 (Constant 0))
  (let (%609 (Gather %607 %608 0))
  (let (%610 (Shape %600))
  (let (%611 (Constant 1))
  (let (%612 (Gather %610 %611 0))
  (let (%615 (Unsqueeze %609 (vec 0)))
  (let (%616 (Unsqueeze %612 (vec 0)))
  (let (%619 (Concat %615 %616 %789 %790 0))
  (let (%620 (Reshape %600 %619))
  (let (%621 (Transpose %620 (vec 0 2 1 3)))
  (let (%622 (Shape %603))
  (let (%623 (Constant 0))
  (let (%624 (Gather %622 %623 0))
  (let (%625 (Shape %603))
  (let (%626 (Constant 1))
  (let (%627 (Gather %625 %626 0))
  (let (%630 (Unsqueeze %624 (vec 0)))
  (let (%631 (Unsqueeze %627 (vec 0)))
  (let (%634 (Concat %630 %631 %791 %792 0))
  (let (%635 (Reshape %603 %634))
  (let (%636 (Shape %606))
  (let (%637 (Constant 0))
  (let (%638 (Gather %636 %637 0))
  (let (%639 (Shape %606))
  (let (%640 (Constant 1))
  (let (%641 (Gather %639 %640 0))
  (let (%644 (Unsqueeze %638 (vec 0)))
  (let (%645 (Unsqueeze %641 (vec 0)))
  (let (%648 (Concat %644 %645 %793 %794 0))
  (let (%649 (Reshape %606 %648))
  (let (%650 (Transpose %649 (vec 0 2 1 3)))
  (let (%651 (Transpose %635 (vec 0 2 3 1)))
  (let (%652 (MatMul %621 %651))
  (let (%653 (Constant 8.0))
  (let (%654 (Div %652 %653))
  (let (%655 (Add %654 %97))
  (let (%656 (Softmax %655 3))
  (let (%657 (MatMul %656 %650))
  (let (%658 (Transpose %657 (vec 0 2 1 3)))
  (let (%659 (Shape %658))
  (let (%660 (Constant 0))
  (let (%661 (Gather %659 %660 0))
  (let (%662 (Shape %658))
  (let (%663 (Constant 1))
  (let (%664 (Gather %662 %663 0))
  (let (%666 (Unsqueeze %661 (vec 0)))
  (let (%667 (Unsqueeze %664 (vec 0)))
  (let (%669 (Concat %666 %667 %795 0))
  (let (%670 (Reshape %658 %669))
  (let (%672 (MatMul %670 %796))
  (let (%673 (Add %672 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%674 (Add %673 %597))
  (let (%676 (ReduceMean %674 (vec -1) 1))
  (let (%677 (Sub %674 %676))
  (let (%678 (Cast_FLOAT %677))
  (let (%680 (Pow %678 %797))
  (let (%681 (ReduceMean %680 (vec -1) 1))
  (let (%682 (Constant 9.999999960041972e-13))
  (let (%683 (Add %681 %682))
  (let (%684 (Sqrt %683))
  (let (%685 (Div %677 %684))
  (let (%686 (Mul %685 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%687 (Add %686 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%689 (MatMul %687 %798))
  (let (%690 (Add %689 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%691 (Constant 1.4142135381698608))
  (let (%692 (Div %690 %691))
  (let (%693 (Erf %692))
  (let (%694 (Constant 1.0))
  (let (%695 (Add %693 %694))
  (let (%696 (Mul %690 %695))
  (let (%697 (Constant 0.5))
  (let (%698 (Mul %696 %697))
  (let (%700 (MatMul %698 %799))
  (let (%701 (Add %700 bert.encoder.layer.4.output.dense.bias))
  (let (%702 (Add %701 %687))
  (let (%704 (ReduceMean %702 (vec -1) 1))
  (let (%705 (Sub %702 %704))
  (let (%706 (Cast_FLOAT %705))
  (let (%708 (Pow %706 %800))
  (let (%709 (ReduceMean %708 (vec -1) 1))
  (let (%710 (Constant 9.999999960041972e-13))
  (let (%711 (Add %709 %710))
  (let (%712 (Sqrt %711))
  (let (%713 (Div %705 %712))
  (let (%714 (Mul %713 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%715 (Add %714 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%717 (MatMul %715 %801))
  (let (%718 (Add %717 qa_outputs.bias))
  (let ((%719 %720) (Split %718 (vec 1 1) -1))
  (let (output_0 (Squeeze %719 (vec -1)))
  (let (output_1 (Squeeze %720 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

