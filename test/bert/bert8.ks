;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert8.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1125 (vec 0))
  (let (%1126 (vec 1))
  (let (%1127 2.0)
  (let (%1128 (load-from-onnx-float32 768 768 "%1128"))
  (let (%1129 (load-from-onnx-float32 768 768 "%1129"))
  (let (%1130 (load-from-onnx-float32 768 768 "%1130"))
  (let (%1131 (vec 12))
  (let (%1132 (vec 64))
  (let (%1133 (vec 12))
  (let (%1134 (vec 64))
  (let (%1135 (vec 12))
  (let (%1136 (vec 64))
  (let (%1137 (vec 768))
  (let (%1138 (load-from-onnx-float32 768 768 "%1138"))
  (let (%1139 2.0)
  (let (%1140 (load-from-onnx-float32 768 3072 "%1140"))
  (let (%1141 (load-from-onnx-float32 3072 768 "%1141"))
  (let (%1142 2.0)
  (let (%1143 (load-from-onnx-float32 768 768 "%1143"))
  (let (%1144 (load-from-onnx-float32 768 768 "%1144"))
  (let (%1145 (load-from-onnx-float32 768 768 "%1145"))
  (let (%1146 (vec 12))
  (let (%1147 (vec 64))
  (let (%1148 (vec 12))
  (let (%1149 (vec 64))
  (let (%1150 (vec 12))
  (let (%1151 (vec 64))
  (let (%1152 (vec 768))
  (let (%1153 (load-from-onnx-float32 768 768 "%1153"))
  (let (%1154 2.0)
  (let (%1155 (load-from-onnx-float32 768 3072 "%1155"))
  (let (%1156 (load-from-onnx-float32 3072 768 "%1156"))
  (let (%1157 2.0)
  (let (%1158 (load-from-onnx-float32 768 768 "%1158"))
  (let (%1159 (load-from-onnx-float32 768 768 "%1159"))
  (let (%1160 (load-from-onnx-float32 768 768 "%1160"))
  (let (%1161 (vec 12))
  (let (%1162 (vec 64))
  (let (%1163 (vec 12))
  (let (%1164 (vec 64))
  (let (%1165 (vec 12))
  (let (%1166 (vec 64))
  (let (%1167 (vec 768))
  (let (%1168 (load-from-onnx-float32 768 768 "%1168"))
  (let (%1169 2.0)
  (let (%1170 (load-from-onnx-float32 768 3072 "%1170"))
  (let (%1171 (load-from-onnx-float32 3072 768 "%1171"))
  (let (%1172 2.0)
  (let (%1173 (load-from-onnx-float32 768 768 "%1173"))
  (let (%1174 (load-from-onnx-float32 768 768 "%1174"))
  (let (%1175 (load-from-onnx-float32 768 768 "%1175"))
  (let (%1176 (vec 12))
  (let (%1177 (vec 64))
  (let (%1178 (vec 12))
  (let (%1179 (vec 64))
  (let (%1180 (vec 12))
  (let (%1181 (vec 64))
  (let (%1182 (vec 768))
  (let (%1183 (load-from-onnx-float32 768 768 "%1183"))
  (let (%1184 2.0)
  (let (%1185 (load-from-onnx-float32 768 3072 "%1185"))
  (let (%1186 (load-from-onnx-float32 3072 768 "%1186"))
  (let (%1187 2.0)
  (let (%1188 (load-from-onnx-float32 768 768 "%1188"))
  (let (%1189 (load-from-onnx-float32 768 768 "%1189"))
  (let (%1190 (load-from-onnx-float32 768 768 "%1190"))
  (let (%1191 (vec 12))
  (let (%1192 (vec 64))
  (let (%1193 (vec 12))
  (let (%1194 (vec 64))
  (let (%1195 (vec 12))
  (let (%1196 (vec 64))
  (let (%1197 (vec 768))
  (let (%1198 (load-from-onnx-float32 768 768 "%1198"))
  (let (%1199 2.0)
  (let (%1200 (load-from-onnx-float32 768 3072 "%1200"))
  (let (%1201 (load-from-onnx-float32 3072 768 "%1201"))
  (let (%1202 2.0)
  (let (%1203 (load-from-onnx-float32 768 768 "%1203"))
  (let (%1204 (load-from-onnx-float32 768 768 "%1204"))
  (let (%1205 (load-from-onnx-float32 768 768 "%1205"))
  (let (%1206 (vec 12))
  (let (%1207 (vec 64))
  (let (%1208 (vec 12))
  (let (%1209 (vec 64))
  (let (%1210 (vec 12))
  (let (%1211 (vec 64))
  (let (%1212 (vec 768))
  (let (%1213 (load-from-onnx-float32 768 768 "%1213"))
  (let (%1214 2.0)
  (let (%1215 (load-from-onnx-float32 768 3072 "%1215"))
  (let (%1216 (load-from-onnx-float32 3072 768 "%1216"))
  (let (%1217 2.0)
  (let (%1218 (load-from-onnx-float32 768 768 "%1218"))
  (let (%1219 (load-from-onnx-float32 768 768 "%1219"))
  (let (%1220 (load-from-onnx-float32 768 768 "%1220"))
  (let (%1221 (vec 12))
  (let (%1222 (vec 64))
  (let (%1223 (vec 12))
  (let (%1224 (vec 64))
  (let (%1225 (vec 12))
  (let (%1226 (vec 64))
  (let (%1227 (vec 768))
  (let (%1228 (load-from-onnx-float32 768 768 "%1228"))
  (let (%1229 2.0)
  (let (%1230 (load-from-onnx-float32 768 3072 "%1230"))
  (let (%1231 (load-from-onnx-float32 3072 768 "%1231"))
  (let (%1232 2.0)
  (let (%1233 (load-from-onnx-float32 768 768 "%1233"))
  (let (%1234 (load-from-onnx-float32 768 768 "%1234"))
  (let (%1235 (load-from-onnx-float32 768 768 "%1235"))
  (let (%1236 (vec 12))
  (let (%1237 (vec 64))
  (let (%1238 (vec 12))
  (let (%1239 (vec 64))
  (let (%1240 (vec 12))
  (let (%1241 (vec 64))
  (let (%1242 (vec 768))
  (let (%1243 (load-from-onnx-float32 768 768 "%1243"))
  (let (%1244 2.0)
  (let (%1245 (load-from-onnx-float32 768 3072 "%1245"))
  (let (%1246 (load-from-onnx-float32 3072 768 "%1246"))
  (let (%1247 2.0)
  (let (%1248 (load-from-onnx-float32 768 2 "%1248"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%139 (Unsqueeze attention_mask (vec 1)))
  (let (%140 (Unsqueeze %139 (vec 2)))
  (let (%141 (Cast_FLOAT %140))
  (let (%142 (Constant 1.0))
  (let (%143 (Sub %142 %141))
  (let (%144 (Constant -10000.0))
  (let (%145 (Mul %143 %144))
  (let (%146 (Shape input_ids))
  (let (%147 (Constant 1))
  (let (%148 (Gather %146 %147 0))
  (let (%152 (Unsqueeze %148 (vec 0)))
  (let (%154 (Constant (vec 1)))
  (let (%155 (Slice bert.embeddings.position_ids %1125 %152 %1126 %154))
  (let (%156 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%157 (Gather bert.embeddings.position_embeddings.weight %155 0))
  (let (%158 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%159 (Add %156 %157))
  (let (%160 (Add %159 %158))
  (let (%162 (ReduceMean %160 (vec -1) 1))
  (let (%163 (Sub %160 %162))
  (let (%164 (Cast_FLOAT %163))
  (let (%166 (Pow %164 %1127))
  (let (%167 (ReduceMean %166 (vec -1) 1))
  (let (%168 (Constant 9.999999960041972e-13))
  (let (%169 (Add %167 %168))
  (let (%170 (Sqrt %169))
  (let (%171 (Div %163 %170))
  (let (%172 (Mul %171 bert.embeddings.LayerNorm.weight))
  (let (%173 (Add %172 bert.embeddings.LayerNorm.bias))
  (let (%175 (MatMul %173 %1128))
  (let (%176 (Add %175 bert.encoder.layer.0.attention.self.query.bias))
  (let (%178 (MatMul %173 %1129))
  (let (%179 (Add %178 bert.encoder.layer.0.attention.self.key.bias))
  (let (%181 (MatMul %173 %1130))
  (let (%182 (Add %181 bert.encoder.layer.0.attention.self.value.bias))
  (let (%183 (Shape %176))
  (let (%184 (Constant 0))
  (let (%185 (Gather %183 %184 0))
  (let (%186 (Shape %176))
  (let (%187 (Constant 1))
  (let (%188 (Gather %186 %187 0))
  (let (%191 (Unsqueeze %185 (vec 0)))
  (let (%192 (Unsqueeze %188 (vec 0)))
  (let (%195 (Concat %191 %192 %1131 %1132 0))
  (let (%196 (Reshape %176 %195))
  (let (%197 (Transpose %196 (vec 0 2 1 3)))
  (let (%198 (Shape %179))
  (let (%199 (Constant 0))
  (let (%200 (Gather %198 %199 0))
  (let (%201 (Shape %179))
  (let (%202 (Constant 1))
  (let (%203 (Gather %201 %202 0))
  (let (%206 (Unsqueeze %200 (vec 0)))
  (let (%207 (Unsqueeze %203 (vec 0)))
  (let (%210 (Concat %206 %207 %1133 %1134 0))
  (let (%211 (Reshape %179 %210))
  (let (%212 (Shape %182))
  (let (%213 (Constant 0))
  (let (%214 (Gather %212 %213 0))
  (let (%215 (Shape %182))
  (let (%216 (Constant 1))
  (let (%217 (Gather %215 %216 0))
  (let (%220 (Unsqueeze %214 (vec 0)))
  (let (%221 (Unsqueeze %217 (vec 0)))
  (let (%224 (Concat %220 %221 %1135 %1136 0))
  (let (%225 (Reshape %182 %224))
  (let (%226 (Transpose %225 (vec 0 2 1 3)))
  (let (%227 (Transpose %211 (vec 0 2 3 1)))
  (let (%228 (MatMul %197 %227))
  (let (%229 (Constant 8.0))
  (let (%230 (Div %228 %229))
  (let (%231 (Add %230 %145))
  (let (%232 (Softmax %231 3))
  (let (%233 (MatMul %232 %226))
  (let (%234 (Transpose %233 (vec 0 2 1 3)))
  (let (%235 (Shape %234))
  (let (%236 (Constant 0))
  (let (%237 (Gather %235 %236 0))
  (let (%238 (Shape %234))
  (let (%239 (Constant 1))
  (let (%240 (Gather %238 %239 0))
  (let (%242 (Unsqueeze %237 (vec 0)))
  (let (%243 (Unsqueeze %240 (vec 0)))
  (let (%245 (Concat %242 %243 %1137 0))
  (let (%246 (Reshape %234 %245))
  (let (%248 (MatMul %246 %1138))
  (let (%249 (Add %248 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%250 (Add %249 %173))
  (let (%252 (ReduceMean %250 (vec -1) 1))
  (let (%253 (Sub %250 %252))
  (let (%254 (Cast_FLOAT %253))
  (let (%256 (Pow %254 %1139))
  (let (%257 (ReduceMean %256 (vec -1) 1))
  (let (%258 (Constant 9.999999960041972e-13))
  (let (%259 (Add %257 %258))
  (let (%260 (Sqrt %259))
  (let (%261 (Div %253 %260))
  (let (%262 (Mul %261 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%263 (Add %262 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%265 (MatMul %263 %1140))
  (let (%266 (Add %265 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%267 (Constant 1.4142135381698608))
  (let (%268 (Div %266 %267))
  (let (%269 (Erf %268))
  (let (%270 (Constant 1.0))
  (let (%271 (Add %269 %270))
  (let (%272 (Mul %266 %271))
  (let (%273 (Constant 0.5))
  (let (%274 (Mul %272 %273))
  (let (%276 (MatMul %274 %1141))
  (let (%277 (Add %276 bert.encoder.layer.0.output.dense.bias))
  (let (%278 (Add %277 %263))
  (let (%280 (ReduceMean %278 (vec -1) 1))
  (let (%281 (Sub %278 %280))
  (let (%282 (Cast_FLOAT %281))
  (let (%284 (Pow %282 %1142))
  (let (%285 (ReduceMean %284 (vec -1) 1))
  (let (%286 (Constant 9.999999960041972e-13))
  (let (%287 (Add %285 %286))
  (let (%288 (Sqrt %287))
  (let (%289 (Div %281 %288))
  (let (%290 (Mul %289 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%291 (Add %290 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%293 (MatMul %291 %1143))
  (let (%294 (Add %293 bert.encoder.layer.1.attention.self.query.bias))
  (let (%296 (MatMul %291 %1144))
  (let (%297 (Add %296 bert.encoder.layer.1.attention.self.key.bias))
  (let (%299 (MatMul %291 %1145))
  (let (%300 (Add %299 bert.encoder.layer.1.attention.self.value.bias))
  (let (%301 (Shape %294))
  (let (%302 (Constant 0))
  (let (%303 (Gather %301 %302 0))
  (let (%304 (Shape %294))
  (let (%305 (Constant 1))
  (let (%306 (Gather %304 %305 0))
  (let (%309 (Unsqueeze %303 (vec 0)))
  (let (%310 (Unsqueeze %306 (vec 0)))
  (let (%313 (Concat %309 %310 %1146 %1147 0))
  (let (%314 (Reshape %294 %313))
  (let (%315 (Transpose %314 (vec 0 2 1 3)))
  (let (%316 (Shape %297))
  (let (%317 (Constant 0))
  (let (%318 (Gather %316 %317 0))
  (let (%319 (Shape %297))
  (let (%320 (Constant 1))
  (let (%321 (Gather %319 %320 0))
  (let (%324 (Unsqueeze %318 (vec 0)))
  (let (%325 (Unsqueeze %321 (vec 0)))
  (let (%328 (Concat %324 %325 %1148 %1149 0))
  (let (%329 (Reshape %297 %328))
  (let (%330 (Shape %300))
  (let (%331 (Constant 0))
  (let (%332 (Gather %330 %331 0))
  (let (%333 (Shape %300))
  (let (%334 (Constant 1))
  (let (%335 (Gather %333 %334 0))
  (let (%338 (Unsqueeze %332 (vec 0)))
  (let (%339 (Unsqueeze %335 (vec 0)))
  (let (%342 (Concat %338 %339 %1150 %1151 0))
  (let (%343 (Reshape %300 %342))
  (let (%344 (Transpose %343 (vec 0 2 1 3)))
  (let (%345 (Transpose %329 (vec 0 2 3 1)))
  (let (%346 (MatMul %315 %345))
  (let (%347 (Constant 8.0))
  (let (%348 (Div %346 %347))
  (let (%349 (Add %348 %145))
  (let (%350 (Softmax %349 3))
  (let (%351 (MatMul %350 %344))
  (let (%352 (Transpose %351 (vec 0 2 1 3)))
  (let (%353 (Shape %352))
  (let (%354 (Constant 0))
  (let (%355 (Gather %353 %354 0))
  (let (%356 (Shape %352))
  (let (%357 (Constant 1))
  (let (%358 (Gather %356 %357 0))
  (let (%360 (Unsqueeze %355 (vec 0)))
  (let (%361 (Unsqueeze %358 (vec 0)))
  (let (%363 (Concat %360 %361 %1152 0))
  (let (%364 (Reshape %352 %363))
  (let (%366 (MatMul %364 %1153))
  (let (%367 (Add %366 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%368 (Add %367 %291))
  (let (%370 (ReduceMean %368 (vec -1) 1))
  (let (%371 (Sub %368 %370))
  (let (%372 (Cast_FLOAT %371))
  (let (%374 (Pow %372 %1154))
  (let (%375 (ReduceMean %374 (vec -1) 1))
  (let (%376 (Constant 9.999999960041972e-13))
  (let (%377 (Add %375 %376))
  (let (%378 (Sqrt %377))
  (let (%379 (Div %371 %378))
  (let (%380 (Mul %379 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%381 (Add %380 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%383 (MatMul %381 %1155))
  (let (%384 (Add %383 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%385 (Constant 1.4142135381698608))
  (let (%386 (Div %384 %385))
  (let (%387 (Erf %386))
  (let (%388 (Constant 1.0))
  (let (%389 (Add %387 %388))
  (let (%390 (Mul %384 %389))
  (let (%391 (Constant 0.5))
  (let (%392 (Mul %390 %391))
  (let (%394 (MatMul %392 %1156))
  (let (%395 (Add %394 bert.encoder.layer.1.output.dense.bias))
  (let (%396 (Add %395 %381))
  (let (%398 (ReduceMean %396 (vec -1) 1))
  (let (%399 (Sub %396 %398))
  (let (%400 (Cast_FLOAT %399))
  (let (%402 (Pow %400 %1157))
  (let (%403 (ReduceMean %402 (vec -1) 1))
  (let (%404 (Constant 9.999999960041972e-13))
  (let (%405 (Add %403 %404))
  (let (%406 (Sqrt %405))
  (let (%407 (Div %399 %406))
  (let (%408 (Mul %407 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%409 (Add %408 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%411 (MatMul %409 %1158))
  (let (%412 (Add %411 bert.encoder.layer.2.attention.self.query.bias))
  (let (%414 (MatMul %409 %1159))
  (let (%415 (Add %414 bert.encoder.layer.2.attention.self.key.bias))
  (let (%417 (MatMul %409 %1160))
  (let (%418 (Add %417 bert.encoder.layer.2.attention.self.value.bias))
  (let (%419 (Shape %412))
  (let (%420 (Constant 0))
  (let (%421 (Gather %419 %420 0))
  (let (%422 (Shape %412))
  (let (%423 (Constant 1))
  (let (%424 (Gather %422 %423 0))
  (let (%427 (Unsqueeze %421 (vec 0)))
  (let (%428 (Unsqueeze %424 (vec 0)))
  (let (%431 (Concat %427 %428 %1161 %1162 0))
  (let (%432 (Reshape %412 %431))
  (let (%433 (Transpose %432 (vec 0 2 1 3)))
  (let (%434 (Shape %415))
  (let (%435 (Constant 0))
  (let (%436 (Gather %434 %435 0))
  (let (%437 (Shape %415))
  (let (%438 (Constant 1))
  (let (%439 (Gather %437 %438 0))
  (let (%442 (Unsqueeze %436 (vec 0)))
  (let (%443 (Unsqueeze %439 (vec 0)))
  (let (%446 (Concat %442 %443 %1163 %1164 0))
  (let (%447 (Reshape %415 %446))
  (let (%448 (Shape %418))
  (let (%449 (Constant 0))
  (let (%450 (Gather %448 %449 0))
  (let (%451 (Shape %418))
  (let (%452 (Constant 1))
  (let (%453 (Gather %451 %452 0))
  (let (%456 (Unsqueeze %450 (vec 0)))
  (let (%457 (Unsqueeze %453 (vec 0)))
  (let (%460 (Concat %456 %457 %1165 %1166 0))
  (let (%461 (Reshape %418 %460))
  (let (%462 (Transpose %461 (vec 0 2 1 3)))
  (let (%463 (Transpose %447 (vec 0 2 3 1)))
  (let (%464 (MatMul %433 %463))
  (let (%465 (Constant 8.0))
  (let (%466 (Div %464 %465))
  (let (%467 (Add %466 %145))
  (let (%468 (Softmax %467 3))
  (let (%469 (MatMul %468 %462))
  (let (%470 (Transpose %469 (vec 0 2 1 3)))
  (let (%471 (Shape %470))
  (let (%472 (Constant 0))
  (let (%473 (Gather %471 %472 0))
  (let (%474 (Shape %470))
  (let (%475 (Constant 1))
  (let (%476 (Gather %474 %475 0))
  (let (%478 (Unsqueeze %473 (vec 0)))
  (let (%479 (Unsqueeze %476 (vec 0)))
  (let (%481 (Concat %478 %479 %1167 0))
  (let (%482 (Reshape %470 %481))
  (let (%484 (MatMul %482 %1168))
  (let (%485 (Add %484 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%486 (Add %485 %409))
  (let (%488 (ReduceMean %486 (vec -1) 1))
  (let (%489 (Sub %486 %488))
  (let (%490 (Cast_FLOAT %489))
  (let (%492 (Pow %490 %1169))
  (let (%493 (ReduceMean %492 (vec -1) 1))
  (let (%494 (Constant 9.999999960041972e-13))
  (let (%495 (Add %493 %494))
  (let (%496 (Sqrt %495))
  (let (%497 (Div %489 %496))
  (let (%498 (Mul %497 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%499 (Add %498 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%501 (MatMul %499 %1170))
  (let (%502 (Add %501 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%503 (Constant 1.4142135381698608))
  (let (%504 (Div %502 %503))
  (let (%505 (Erf %504))
  (let (%506 (Constant 1.0))
  (let (%507 (Add %505 %506))
  (let (%508 (Mul %502 %507))
  (let (%509 (Constant 0.5))
  (let (%510 (Mul %508 %509))
  (let (%512 (MatMul %510 %1171))
  (let (%513 (Add %512 bert.encoder.layer.2.output.dense.bias))
  (let (%514 (Add %513 %499))
  (let (%516 (ReduceMean %514 (vec -1) 1))
  (let (%517 (Sub %514 %516))
  (let (%518 (Cast_FLOAT %517))
  (let (%520 (Pow %518 %1172))
  (let (%521 (ReduceMean %520 (vec -1) 1))
  (let (%522 (Constant 9.999999960041972e-13))
  (let (%523 (Add %521 %522))
  (let (%524 (Sqrt %523))
  (let (%525 (Div %517 %524))
  (let (%526 (Mul %525 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%527 (Add %526 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%529 (MatMul %527 %1173))
  (let (%530 (Add %529 bert.encoder.layer.3.attention.self.query.bias))
  (let (%532 (MatMul %527 %1174))
  (let (%533 (Add %532 bert.encoder.layer.3.attention.self.key.bias))
  (let (%535 (MatMul %527 %1175))
  (let (%536 (Add %535 bert.encoder.layer.3.attention.self.value.bias))
  (let (%537 (Shape %530))
  (let (%538 (Constant 0))
  (let (%539 (Gather %537 %538 0))
  (let (%540 (Shape %530))
  (let (%541 (Constant 1))
  (let (%542 (Gather %540 %541 0))
  (let (%545 (Unsqueeze %539 (vec 0)))
  (let (%546 (Unsqueeze %542 (vec 0)))
  (let (%549 (Concat %545 %546 %1176 %1177 0))
  (let (%550 (Reshape %530 %549))
  (let (%551 (Transpose %550 (vec 0 2 1 3)))
  (let (%552 (Shape %533))
  (let (%553 (Constant 0))
  (let (%554 (Gather %552 %553 0))
  (let (%555 (Shape %533))
  (let (%556 (Constant 1))
  (let (%557 (Gather %555 %556 0))
  (let (%560 (Unsqueeze %554 (vec 0)))
  (let (%561 (Unsqueeze %557 (vec 0)))
  (let (%564 (Concat %560 %561 %1178 %1179 0))
  (let (%565 (Reshape %533 %564))
  (let (%566 (Shape %536))
  (let (%567 (Constant 0))
  (let (%568 (Gather %566 %567 0))
  (let (%569 (Shape %536))
  (let (%570 (Constant 1))
  (let (%571 (Gather %569 %570 0))
  (let (%574 (Unsqueeze %568 (vec 0)))
  (let (%575 (Unsqueeze %571 (vec 0)))
  (let (%578 (Concat %574 %575 %1180 %1181 0))
  (let (%579 (Reshape %536 %578))
  (let (%580 (Transpose %579 (vec 0 2 1 3)))
  (let (%581 (Transpose %565 (vec 0 2 3 1)))
  (let (%582 (MatMul %551 %581))
  (let (%583 (Constant 8.0))
  (let (%584 (Div %582 %583))
  (let (%585 (Add %584 %145))
  (let (%586 (Softmax %585 3))
  (let (%587 (MatMul %586 %580))
  (let (%588 (Transpose %587 (vec 0 2 1 3)))
  (let (%589 (Shape %588))
  (let (%590 (Constant 0))
  (let (%591 (Gather %589 %590 0))
  (let (%592 (Shape %588))
  (let (%593 (Constant 1))
  (let (%594 (Gather %592 %593 0))
  (let (%596 (Unsqueeze %591 (vec 0)))
  (let (%597 (Unsqueeze %594 (vec 0)))
  (let (%599 (Concat %596 %597 %1182 0))
  (let (%600 (Reshape %588 %599))
  (let (%602 (MatMul %600 %1183))
  (let (%603 (Add %602 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%604 (Add %603 %527))
  (let (%606 (ReduceMean %604 (vec -1) 1))
  (let (%607 (Sub %604 %606))
  (let (%608 (Cast_FLOAT %607))
  (let (%610 (Pow %608 %1184))
  (let (%611 (ReduceMean %610 (vec -1) 1))
  (let (%612 (Constant 9.999999960041972e-13))
  (let (%613 (Add %611 %612))
  (let (%614 (Sqrt %613))
  (let (%615 (Div %607 %614))
  (let (%616 (Mul %615 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%617 (Add %616 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%619 (MatMul %617 %1185))
  (let (%620 (Add %619 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%621 (Constant 1.4142135381698608))
  (let (%622 (Div %620 %621))
  (let (%623 (Erf %622))
  (let (%624 (Constant 1.0))
  (let (%625 (Add %623 %624))
  (let (%626 (Mul %620 %625))
  (let (%627 (Constant 0.5))
  (let (%628 (Mul %626 %627))
  (let (%630 (MatMul %628 %1186))
  (let (%631 (Add %630 bert.encoder.layer.3.output.dense.bias))
  (let (%632 (Add %631 %617))
  (let (%634 (ReduceMean %632 (vec -1) 1))
  (let (%635 (Sub %632 %634))
  (let (%636 (Cast_FLOAT %635))
  (let (%638 (Pow %636 %1187))
  (let (%639 (ReduceMean %638 (vec -1) 1))
  (let (%640 (Constant 9.999999960041972e-13))
  (let (%641 (Add %639 %640))
  (let (%642 (Sqrt %641))
  (let (%643 (Div %635 %642))
  (let (%644 (Mul %643 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%645 (Add %644 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%647 (MatMul %645 %1188))
  (let (%648 (Add %647 bert.encoder.layer.4.attention.self.query.bias))
  (let (%650 (MatMul %645 %1189))
  (let (%651 (Add %650 bert.encoder.layer.4.attention.self.key.bias))
  (let (%653 (MatMul %645 %1190))
  (let (%654 (Add %653 bert.encoder.layer.4.attention.self.value.bias))
  (let (%655 (Shape %648))
  (let (%656 (Constant 0))
  (let (%657 (Gather %655 %656 0))
  (let (%658 (Shape %648))
  (let (%659 (Constant 1))
  (let (%660 (Gather %658 %659 0))
  (let (%663 (Unsqueeze %657 (vec 0)))
  (let (%664 (Unsqueeze %660 (vec 0)))
  (let (%667 (Concat %663 %664 %1191 %1192 0))
  (let (%668 (Reshape %648 %667))
  (let (%669 (Transpose %668 (vec 0 2 1 3)))
  (let (%670 (Shape %651))
  (let (%671 (Constant 0))
  (let (%672 (Gather %670 %671 0))
  (let (%673 (Shape %651))
  (let (%674 (Constant 1))
  (let (%675 (Gather %673 %674 0))
  (let (%678 (Unsqueeze %672 (vec 0)))
  (let (%679 (Unsqueeze %675 (vec 0)))
  (let (%682 (Concat %678 %679 %1193 %1194 0))
  (let (%683 (Reshape %651 %682))
  (let (%684 (Shape %654))
  (let (%685 (Constant 0))
  (let (%686 (Gather %684 %685 0))
  (let (%687 (Shape %654))
  (let (%688 (Constant 1))
  (let (%689 (Gather %687 %688 0))
  (let (%692 (Unsqueeze %686 (vec 0)))
  (let (%693 (Unsqueeze %689 (vec 0)))
  (let (%696 (Concat %692 %693 %1195 %1196 0))
  (let (%697 (Reshape %654 %696))
  (let (%698 (Transpose %697 (vec 0 2 1 3)))
  (let (%699 (Transpose %683 (vec 0 2 3 1)))
  (let (%700 (MatMul %669 %699))
  (let (%701 (Constant 8.0))
  (let (%702 (Div %700 %701))
  (let (%703 (Add %702 %145))
  (let (%704 (Softmax %703 3))
  (let (%705 (MatMul %704 %698))
  (let (%706 (Transpose %705 (vec 0 2 1 3)))
  (let (%707 (Shape %706))
  (let (%708 (Constant 0))
  (let (%709 (Gather %707 %708 0))
  (let (%710 (Shape %706))
  (let (%711 (Constant 1))
  (let (%712 (Gather %710 %711 0))
  (let (%714 (Unsqueeze %709 (vec 0)))
  (let (%715 (Unsqueeze %712 (vec 0)))
  (let (%717 (Concat %714 %715 %1197 0))
  (let (%718 (Reshape %706 %717))
  (let (%720 (MatMul %718 %1198))
  (let (%721 (Add %720 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%722 (Add %721 %645))
  (let (%724 (ReduceMean %722 (vec -1) 1))
  (let (%725 (Sub %722 %724))
  (let (%726 (Cast_FLOAT %725))
  (let (%728 (Pow %726 %1199))
  (let (%729 (ReduceMean %728 (vec -1) 1))
  (let (%730 (Constant 9.999999960041972e-13))
  (let (%731 (Add %729 %730))
  (let (%732 (Sqrt %731))
  (let (%733 (Div %725 %732))
  (let (%734 (Mul %733 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%735 (Add %734 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%737 (MatMul %735 %1200))
  (let (%738 (Add %737 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%739 (Constant 1.4142135381698608))
  (let (%740 (Div %738 %739))
  (let (%741 (Erf %740))
  (let (%742 (Constant 1.0))
  (let (%743 (Add %741 %742))
  (let (%744 (Mul %738 %743))
  (let (%745 (Constant 0.5))
  (let (%746 (Mul %744 %745))
  (let (%748 (MatMul %746 %1201))
  (let (%749 (Add %748 bert.encoder.layer.4.output.dense.bias))
  (let (%750 (Add %749 %735))
  (let (%752 (ReduceMean %750 (vec -1) 1))
  (let (%753 (Sub %750 %752))
  (let (%754 (Cast_FLOAT %753))
  (let (%756 (Pow %754 %1202))
  (let (%757 (ReduceMean %756 (vec -1) 1))
  (let (%758 (Constant 9.999999960041972e-13))
  (let (%759 (Add %757 %758))
  (let (%760 (Sqrt %759))
  (let (%761 (Div %753 %760))
  (let (%762 (Mul %761 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%763 (Add %762 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%765 (MatMul %763 %1203))
  (let (%766 (Add %765 bert.encoder.layer.5.attention.self.query.bias))
  (let (%768 (MatMul %763 %1204))
  (let (%769 (Add %768 bert.encoder.layer.5.attention.self.key.bias))
  (let (%771 (MatMul %763 %1205))
  (let (%772 (Add %771 bert.encoder.layer.5.attention.self.value.bias))
  (let (%773 (Shape %766))
  (let (%774 (Constant 0))
  (let (%775 (Gather %773 %774 0))
  (let (%776 (Shape %766))
  (let (%777 (Constant 1))
  (let (%778 (Gather %776 %777 0))
  (let (%781 (Unsqueeze %775 (vec 0)))
  (let (%782 (Unsqueeze %778 (vec 0)))
  (let (%785 (Concat %781 %782 %1206 %1207 0))
  (let (%786 (Reshape %766 %785))
  (let (%787 (Transpose %786 (vec 0 2 1 3)))
  (let (%788 (Shape %769))
  (let (%789 (Constant 0))
  (let (%790 (Gather %788 %789 0))
  (let (%791 (Shape %769))
  (let (%792 (Constant 1))
  (let (%793 (Gather %791 %792 0))
  (let (%796 (Unsqueeze %790 (vec 0)))
  (let (%797 (Unsqueeze %793 (vec 0)))
  (let (%800 (Concat %796 %797 %1208 %1209 0))
  (let (%801 (Reshape %769 %800))
  (let (%802 (Shape %772))
  (let (%803 (Constant 0))
  (let (%804 (Gather %802 %803 0))
  (let (%805 (Shape %772))
  (let (%806 (Constant 1))
  (let (%807 (Gather %805 %806 0))
  (let (%810 (Unsqueeze %804 (vec 0)))
  (let (%811 (Unsqueeze %807 (vec 0)))
  (let (%814 (Concat %810 %811 %1210 %1211 0))
  (let (%815 (Reshape %772 %814))
  (let (%816 (Transpose %815 (vec 0 2 1 3)))
  (let (%817 (Transpose %801 (vec 0 2 3 1)))
  (let (%818 (MatMul %787 %817))
  (let (%819 (Constant 8.0))
  (let (%820 (Div %818 %819))
  (let (%821 (Add %820 %145))
  (let (%822 (Softmax %821 3))
  (let (%823 (MatMul %822 %816))
  (let (%824 (Transpose %823 (vec 0 2 1 3)))
  (let (%825 (Shape %824))
  (let (%826 (Constant 0))
  (let (%827 (Gather %825 %826 0))
  (let (%828 (Shape %824))
  (let (%829 (Constant 1))
  (let (%830 (Gather %828 %829 0))
  (let (%832 (Unsqueeze %827 (vec 0)))
  (let (%833 (Unsqueeze %830 (vec 0)))
  (let (%835 (Concat %832 %833 %1212 0))
  (let (%836 (Reshape %824 %835))
  (let (%838 (MatMul %836 %1213))
  (let (%839 (Add %838 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%840 (Add %839 %763))
  (let (%842 (ReduceMean %840 (vec -1) 1))
  (let (%843 (Sub %840 %842))
  (let (%844 (Cast_FLOAT %843))
  (let (%846 (Pow %844 %1214))
  (let (%847 (ReduceMean %846 (vec -1) 1))
  (let (%848 (Constant 9.999999960041972e-13))
  (let (%849 (Add %847 %848))
  (let (%850 (Sqrt %849))
  (let (%851 (Div %843 %850))
  (let (%852 (Mul %851 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%853 (Add %852 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%855 (MatMul %853 %1215))
  (let (%856 (Add %855 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%857 (Constant 1.4142135381698608))
  (let (%858 (Div %856 %857))
  (let (%859 (Erf %858))
  (let (%860 (Constant 1.0))
  (let (%861 (Add %859 %860))
  (let (%862 (Mul %856 %861))
  (let (%863 (Constant 0.5))
  (let (%864 (Mul %862 %863))
  (let (%866 (MatMul %864 %1216))
  (let (%867 (Add %866 bert.encoder.layer.5.output.dense.bias))
  (let (%868 (Add %867 %853))
  (let (%870 (ReduceMean %868 (vec -1) 1))
  (let (%871 (Sub %868 %870))
  (let (%872 (Cast_FLOAT %871))
  (let (%874 (Pow %872 %1217))
  (let (%875 (ReduceMean %874 (vec -1) 1))
  (let (%876 (Constant 9.999999960041972e-13))
  (let (%877 (Add %875 %876))
  (let (%878 (Sqrt %877))
  (let (%879 (Div %871 %878))
  (let (%880 (Mul %879 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%881 (Add %880 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%883 (MatMul %881 %1218))
  (let (%884 (Add %883 bert.encoder.layer.6.attention.self.query.bias))
  (let (%886 (MatMul %881 %1219))
  (let (%887 (Add %886 bert.encoder.layer.6.attention.self.key.bias))
  (let (%889 (MatMul %881 %1220))
  (let (%890 (Add %889 bert.encoder.layer.6.attention.self.value.bias))
  (let (%891 (Shape %884))
  (let (%892 (Constant 0))
  (let (%893 (Gather %891 %892 0))
  (let (%894 (Shape %884))
  (let (%895 (Constant 1))
  (let (%896 (Gather %894 %895 0))
  (let (%899 (Unsqueeze %893 (vec 0)))
  (let (%900 (Unsqueeze %896 (vec 0)))
  (let (%903 (Concat %899 %900 %1221 %1222 0))
  (let (%904 (Reshape %884 %903))
  (let (%905 (Transpose %904 (vec 0 2 1 3)))
  (let (%906 (Shape %887))
  (let (%907 (Constant 0))
  (let (%908 (Gather %906 %907 0))
  (let (%909 (Shape %887))
  (let (%910 (Constant 1))
  (let (%911 (Gather %909 %910 0))
  (let (%914 (Unsqueeze %908 (vec 0)))
  (let (%915 (Unsqueeze %911 (vec 0)))
  (let (%918 (Concat %914 %915 %1223 %1224 0))
  (let (%919 (Reshape %887 %918))
  (let (%920 (Shape %890))
  (let (%921 (Constant 0))
  (let (%922 (Gather %920 %921 0))
  (let (%923 (Shape %890))
  (let (%924 (Constant 1))
  (let (%925 (Gather %923 %924 0))
  (let (%928 (Unsqueeze %922 (vec 0)))
  (let (%929 (Unsqueeze %925 (vec 0)))
  (let (%932 (Concat %928 %929 %1225 %1226 0))
  (let (%933 (Reshape %890 %932))
  (let (%934 (Transpose %933 (vec 0 2 1 3)))
  (let (%935 (Transpose %919 (vec 0 2 3 1)))
  (let (%936 (MatMul %905 %935))
  (let (%937 (Constant 8.0))
  (let (%938 (Div %936 %937))
  (let (%939 (Add %938 %145))
  (let (%940 (Softmax %939 3))
  (let (%941 (MatMul %940 %934))
  (let (%942 (Transpose %941 (vec 0 2 1 3)))
  (let (%943 (Shape %942))
  (let (%944 (Constant 0))
  (let (%945 (Gather %943 %944 0))
  (let (%946 (Shape %942))
  (let (%947 (Constant 1))
  (let (%948 (Gather %946 %947 0))
  (let (%950 (Unsqueeze %945 (vec 0)))
  (let (%951 (Unsqueeze %948 (vec 0)))
  (let (%953 (Concat %950 %951 %1227 0))
  (let (%954 (Reshape %942 %953))
  (let (%956 (MatMul %954 %1228))
  (let (%957 (Add %956 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%958 (Add %957 %881))
  (let (%960 (ReduceMean %958 (vec -1) 1))
  (let (%961 (Sub %958 %960))
  (let (%962 (Cast_FLOAT %961))
  (let (%964 (Pow %962 %1229))
  (let (%965 (ReduceMean %964 (vec -1) 1))
  (let (%966 (Constant 9.999999960041972e-13))
  (let (%967 (Add %965 %966))
  (let (%968 (Sqrt %967))
  (let (%969 (Div %961 %968))
  (let (%970 (Mul %969 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%971 (Add %970 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%973 (MatMul %971 %1230))
  (let (%974 (Add %973 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%975 (Constant 1.4142135381698608))
  (let (%976 (Div %974 %975))
  (let (%977 (Erf %976))
  (let (%978 (Constant 1.0))
  (let (%979 (Add %977 %978))
  (let (%980 (Mul %974 %979))
  (let (%981 (Constant 0.5))
  (let (%982 (Mul %980 %981))
  (let (%984 (MatMul %982 %1231))
  (let (%985 (Add %984 bert.encoder.layer.6.output.dense.bias))
  (let (%986 (Add %985 %971))
  (let (%988 (ReduceMean %986 (vec -1) 1))
  (let (%989 (Sub %986 %988))
  (let (%990 (Cast_FLOAT %989))
  (let (%992 (Pow %990 %1232))
  (let (%993 (ReduceMean %992 (vec -1) 1))
  (let (%994 (Constant 9.999999960041972e-13))
  (let (%995 (Add %993 %994))
  (let (%996 (Sqrt %995))
  (let (%997 (Div %989 %996))
  (let (%998 (Mul %997 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%999 (Add %998 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1001 (MatMul %999 %1233))
  (let (%1002 (Add %1001 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1004 (MatMul %999 %1234))
  (let (%1005 (Add %1004 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1007 (MatMul %999 %1235))
  (let (%1008 (Add %1007 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1009 (Shape %1002))
  (let (%1010 (Constant 0))
  (let (%1011 (Gather %1009 %1010 0))
  (let (%1012 (Shape %1002))
  (let (%1013 (Constant 1))
  (let (%1014 (Gather %1012 %1013 0))
  (let (%1017 (Unsqueeze %1011 (vec 0)))
  (let (%1018 (Unsqueeze %1014 (vec 0)))
  (let (%1021 (Concat %1017 %1018 %1236 %1237 0))
  (let (%1022 (Reshape %1002 %1021))
  (let (%1023 (Transpose %1022 (vec 0 2 1 3)))
  (let (%1024 (Shape %1005))
  (let (%1025 (Constant 0))
  (let (%1026 (Gather %1024 %1025 0))
  (let (%1027 (Shape %1005))
  (let (%1028 (Constant 1))
  (let (%1029 (Gather %1027 %1028 0))
  (let (%1032 (Unsqueeze %1026 (vec 0)))
  (let (%1033 (Unsqueeze %1029 (vec 0)))
  (let (%1036 (Concat %1032 %1033 %1238 %1239 0))
  (let (%1037 (Reshape %1005 %1036))
  (let (%1038 (Shape %1008))
  (let (%1039 (Constant 0))
  (let (%1040 (Gather %1038 %1039 0))
  (let (%1041 (Shape %1008))
  (let (%1042 (Constant 1))
  (let (%1043 (Gather %1041 %1042 0))
  (let (%1046 (Unsqueeze %1040 (vec 0)))
  (let (%1047 (Unsqueeze %1043 (vec 0)))
  (let (%1050 (Concat %1046 %1047 %1240 %1241 0))
  (let (%1051 (Reshape %1008 %1050))
  (let (%1052 (Transpose %1051 (vec 0 2 1 3)))
  (let (%1053 (Transpose %1037 (vec 0 2 3 1)))
  (let (%1054 (MatMul %1023 %1053))
  (let (%1055 (Constant 8.0))
  (let (%1056 (Div %1054 %1055))
  (let (%1057 (Add %1056 %145))
  (let (%1058 (Softmax %1057 3))
  (let (%1059 (MatMul %1058 %1052))
  (let (%1060 (Transpose %1059 (vec 0 2 1 3)))
  (let (%1061 (Shape %1060))
  (let (%1062 (Constant 0))
  (let (%1063 (Gather %1061 %1062 0))
  (let (%1064 (Shape %1060))
  (let (%1065 (Constant 1))
  (let (%1066 (Gather %1064 %1065 0))
  (let (%1068 (Unsqueeze %1063 (vec 0)))
  (let (%1069 (Unsqueeze %1066 (vec 0)))
  (let (%1071 (Concat %1068 %1069 %1242 0))
  (let (%1072 (Reshape %1060 %1071))
  (let (%1074 (MatMul %1072 %1243))
  (let (%1075 (Add %1074 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1076 (Add %1075 %999))
  (let (%1078 (ReduceMean %1076 (vec -1) 1))
  (let (%1079 (Sub %1076 %1078))
  (let (%1080 (Cast_FLOAT %1079))
  (let (%1082 (Pow %1080 %1244))
  (let (%1083 (ReduceMean %1082 (vec -1) 1))
  (let (%1084 (Constant 9.999999960041972e-13))
  (let (%1085 (Add %1083 %1084))
  (let (%1086 (Sqrt %1085))
  (let (%1087 (Div %1079 %1086))
  (let (%1088 (Mul %1087 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1089 (Add %1088 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1091 (MatMul %1089 %1245))
  (let (%1092 (Add %1091 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1093 (Constant 1.4142135381698608))
  (let (%1094 (Div %1092 %1093))
  (let (%1095 (Erf %1094))
  (let (%1096 (Constant 1.0))
  (let (%1097 (Add %1095 %1096))
  (let (%1098 (Mul %1092 %1097))
  (let (%1099 (Constant 0.5))
  (let (%1100 (Mul %1098 %1099))
  (let (%1102 (MatMul %1100 %1246))
  (let (%1103 (Add %1102 bert.encoder.layer.7.output.dense.bias))
  (let (%1104 (Add %1103 %1089))
  (let (%1106 (ReduceMean %1104 (vec -1) 1))
  (let (%1107 (Sub %1104 %1106))
  (let (%1108 (Cast_FLOAT %1107))
  (let (%1110 (Pow %1108 %1247))
  (let (%1111 (ReduceMean %1110 (vec -1) 1))
  (let (%1112 (Constant 9.999999960041972e-13))
  (let (%1113 (Add %1111 %1112))
  (let (%1114 (Sqrt %1113))
  (let (%1115 (Div %1107 %1114))
  (let (%1116 (Mul %1115 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1117 (Add %1116 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1119 (MatMul %1117 %1248))
  (let (%1120 (Add %1119 qa_outputs.bias))
  (let ((%1121 %1122) (Split %1120 (vec 1 1) -1))
  (let (output_0 (Squeeze %1121 (vec -1)))
  (let (output_1 (Squeeze %1122 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

