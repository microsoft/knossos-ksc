;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert13.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1795 (vec 0))
  (let (%1796 (vec 1))
  (let (%1797 2.0)
  (let (%1798 (load-from-onnx-float32 768 768 "%1798"))
  (let (%1799 (load-from-onnx-float32 768 768 "%1799"))
  (let (%1800 (load-from-onnx-float32 768 768 "%1800"))
  (let (%1801 (vec 12))
  (let (%1802 (vec 64))
  (let (%1803 (vec 12))
  (let (%1804 (vec 64))
  (let (%1805 (vec 12))
  (let (%1806 (vec 64))
  (let (%1807 (vec 768))
  (let (%1808 (load-from-onnx-float32 768 768 "%1808"))
  (let (%1809 2.0)
  (let (%1810 (load-from-onnx-float32 768 3072 "%1810"))
  (let (%1811 (load-from-onnx-float32 3072 768 "%1811"))
  (let (%1812 2.0)
  (let (%1813 (load-from-onnx-float32 768 768 "%1813"))
  (let (%1814 (load-from-onnx-float32 768 768 "%1814"))
  (let (%1815 (load-from-onnx-float32 768 768 "%1815"))
  (let (%1816 (vec 12))
  (let (%1817 (vec 64))
  (let (%1818 (vec 12))
  (let (%1819 (vec 64))
  (let (%1820 (vec 12))
  (let (%1821 (vec 64))
  (let (%1822 (vec 768))
  (let (%1823 (load-from-onnx-float32 768 768 "%1823"))
  (let (%1824 2.0)
  (let (%1825 (load-from-onnx-float32 768 3072 "%1825"))
  (let (%1826 (load-from-onnx-float32 3072 768 "%1826"))
  (let (%1827 2.0)
  (let (%1828 (load-from-onnx-float32 768 768 "%1828"))
  (let (%1829 (load-from-onnx-float32 768 768 "%1829"))
  (let (%1830 (load-from-onnx-float32 768 768 "%1830"))
  (let (%1831 (vec 12))
  (let (%1832 (vec 64))
  (let (%1833 (vec 12))
  (let (%1834 (vec 64))
  (let (%1835 (vec 12))
  (let (%1836 (vec 64))
  (let (%1837 (vec 768))
  (let (%1838 (load-from-onnx-float32 768 768 "%1838"))
  (let (%1839 2.0)
  (let (%1840 (load-from-onnx-float32 768 3072 "%1840"))
  (let (%1841 (load-from-onnx-float32 3072 768 "%1841"))
  (let (%1842 2.0)
  (let (%1843 (load-from-onnx-float32 768 768 "%1843"))
  (let (%1844 (load-from-onnx-float32 768 768 "%1844"))
  (let (%1845 (load-from-onnx-float32 768 768 "%1845"))
  (let (%1846 (vec 12))
  (let (%1847 (vec 64))
  (let (%1848 (vec 12))
  (let (%1849 (vec 64))
  (let (%1850 (vec 12))
  (let (%1851 (vec 64))
  (let (%1852 (vec 768))
  (let (%1853 (load-from-onnx-float32 768 768 "%1853"))
  (let (%1854 2.0)
  (let (%1855 (load-from-onnx-float32 768 3072 "%1855"))
  (let (%1856 (load-from-onnx-float32 3072 768 "%1856"))
  (let (%1857 2.0)
  (let (%1858 (load-from-onnx-float32 768 768 "%1858"))
  (let (%1859 (load-from-onnx-float32 768 768 "%1859"))
  (let (%1860 (load-from-onnx-float32 768 768 "%1860"))
  (let (%1861 (vec 12))
  (let (%1862 (vec 64))
  (let (%1863 (vec 12))
  (let (%1864 (vec 64))
  (let (%1865 (vec 12))
  (let (%1866 (vec 64))
  (let (%1867 (vec 768))
  (let (%1868 (load-from-onnx-float32 768 768 "%1868"))
  (let (%1869 2.0)
  (let (%1870 (load-from-onnx-float32 768 3072 "%1870"))
  (let (%1871 (load-from-onnx-float32 3072 768 "%1871"))
  (let (%1872 2.0)
  (let (%1873 (load-from-onnx-float32 768 768 "%1873"))
  (let (%1874 (load-from-onnx-float32 768 768 "%1874"))
  (let (%1875 (load-from-onnx-float32 768 768 "%1875"))
  (let (%1876 (vec 12))
  (let (%1877 (vec 64))
  (let (%1878 (vec 12))
  (let (%1879 (vec 64))
  (let (%1880 (vec 12))
  (let (%1881 (vec 64))
  (let (%1882 (vec 768))
  (let (%1883 (load-from-onnx-float32 768 768 "%1883"))
  (let (%1884 2.0)
  (let (%1885 (load-from-onnx-float32 768 3072 "%1885"))
  (let (%1886 (load-from-onnx-float32 3072 768 "%1886"))
  (let (%1887 2.0)
  (let (%1888 (load-from-onnx-float32 768 768 "%1888"))
  (let (%1889 (load-from-onnx-float32 768 768 "%1889"))
  (let (%1890 (load-from-onnx-float32 768 768 "%1890"))
  (let (%1891 (vec 12))
  (let (%1892 (vec 64))
  (let (%1893 (vec 12))
  (let (%1894 (vec 64))
  (let (%1895 (vec 12))
  (let (%1896 (vec 64))
  (let (%1897 (vec 768))
  (let (%1898 (load-from-onnx-float32 768 768 "%1898"))
  (let (%1899 2.0)
  (let (%1900 (load-from-onnx-float32 768 3072 "%1900"))
  (let (%1901 (load-from-onnx-float32 3072 768 "%1901"))
  (let (%1902 2.0)
  (let (%1903 (load-from-onnx-float32 768 768 "%1903"))
  (let (%1904 (load-from-onnx-float32 768 768 "%1904"))
  (let (%1905 (load-from-onnx-float32 768 768 "%1905"))
  (let (%1906 (vec 12))
  (let (%1907 (vec 64))
  (let (%1908 (vec 12))
  (let (%1909 (vec 64))
  (let (%1910 (vec 12))
  (let (%1911 (vec 64))
  (let (%1912 (vec 768))
  (let (%1913 (load-from-onnx-float32 768 768 "%1913"))
  (let (%1914 2.0)
  (let (%1915 (load-from-onnx-float32 768 3072 "%1915"))
  (let (%1916 (load-from-onnx-float32 3072 768 "%1916"))
  (let (%1917 2.0)
  (let (%1918 (load-from-onnx-float32 768 768 "%1918"))
  (let (%1919 (load-from-onnx-float32 768 768 "%1919"))
  (let (%1920 (load-from-onnx-float32 768 768 "%1920"))
  (let (%1921 (vec 12))
  (let (%1922 (vec 64))
  (let (%1923 (vec 12))
  (let (%1924 (vec 64))
  (let (%1925 (vec 12))
  (let (%1926 (vec 64))
  (let (%1927 (vec 768))
  (let (%1928 (load-from-onnx-float32 768 768 "%1928"))
  (let (%1929 2.0)
  (let (%1930 (load-from-onnx-float32 768 3072 "%1930"))
  (let (%1931 (load-from-onnx-float32 3072 768 "%1931"))
  (let (%1932 2.0)
  (let (%1933 (load-from-onnx-float32 768 768 "%1933"))
  (let (%1934 (load-from-onnx-float32 768 768 "%1934"))
  (let (%1935 (load-from-onnx-float32 768 768 "%1935"))
  (let (%1936 (vec 12))
  (let (%1937 (vec 64))
  (let (%1938 (vec 12))
  (let (%1939 (vec 64))
  (let (%1940 (vec 12))
  (let (%1941 (vec 64))
  (let (%1942 (vec 768))
  (let (%1943 (load-from-onnx-float32 768 768 "%1943"))
  (let (%1944 2.0)
  (let (%1945 (load-from-onnx-float32 768 3072 "%1945"))
  (let (%1946 (load-from-onnx-float32 3072 768 "%1946"))
  (let (%1947 2.0)
  (let (%1948 (load-from-onnx-float32 768 768 "%1948"))
  (let (%1949 (load-from-onnx-float32 768 768 "%1949"))
  (let (%1950 (load-from-onnx-float32 768 768 "%1950"))
  (let (%1951 (vec 12))
  (let (%1952 (vec 64))
  (let (%1953 (vec 12))
  (let (%1954 (vec 64))
  (let (%1955 (vec 12))
  (let (%1956 (vec 64))
  (let (%1957 (vec 768))
  (let (%1958 (load-from-onnx-float32 768 768 "%1958"))
  (let (%1959 2.0)
  (let (%1960 (load-from-onnx-float32 768 3072 "%1960"))
  (let (%1961 (load-from-onnx-float32 3072 768 "%1961"))
  (let (%1962 2.0)
  (let (%1963 (load-from-onnx-float32 768 768 "%1963"))
  (let (%1964 (load-from-onnx-float32 768 768 "%1964"))
  (let (%1965 (load-from-onnx-float32 768 768 "%1965"))
  (let (%1966 (vec 12))
  (let (%1967 (vec 64))
  (let (%1968 (vec 12))
  (let (%1969 (vec 64))
  (let (%1970 (vec 12))
  (let (%1971 (vec 64))
  (let (%1972 (vec 768))
  (let (%1973 (load-from-onnx-float32 768 768 "%1973"))
  (let (%1974 2.0)
  (let (%1975 (load-from-onnx-float32 768 3072 "%1975"))
  (let (%1976 (load-from-onnx-float32 3072 768 "%1976"))
  (let (%1977 2.0)
  (let (%1978 (load-from-onnx-float32 768 768 "%1978"))
  (let (%1979 (load-from-onnx-float32 768 768 "%1979"))
  (let (%1980 (load-from-onnx-float32 768 768 "%1980"))
  (let (%1981 (vec 12))
  (let (%1982 (vec 64))
  (let (%1983 (vec 12))
  (let (%1984 (vec 64))
  (let (%1985 (vec 12))
  (let (%1986 (vec 64))
  (let (%1987 (vec 768))
  (let (%1988 (load-from-onnx-float32 768 768 "%1988"))
  (let (%1989 2.0)
  (let (%1990 (load-from-onnx-float32 768 3072 "%1990"))
  (let (%1991 (load-from-onnx-float32 3072 768 "%1991"))
  (let (%1992 2.0)
  (let (%1993 (load-from-onnx-float32 768 2 "%1993"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%219 (Unsqueeze attention_mask (vec 1)))
  (let (%220 (Unsqueeze %219 (vec 2)))
  (let (%221 (Cast_FLOAT %220))
  (let (%222 (Constant 1.0))
  (let (%223 (Sub %222 %221))
  (let (%224 (Constant -10000.0))
  (let (%225 (Mul %223 %224))
  (let (%226 (Shape input_ids))
  (let (%227 (Constant 1))
  (let (%228 (Gather %226 %227 0))
  (let (%232 (Unsqueeze %228 (vec 0)))
  (let (%234 (Constant (vec 1)))
  (let (%235 (Slice bert.embeddings.position_ids %1795 %232 %1796 %234))
  (let (%236 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%237 (Gather bert.embeddings.position_embeddings.weight %235 0))
  (let (%238 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%239 (Add %236 %237))
  (let (%240 (Add %239 %238))
  (let (%242 (ReduceMean %240 (vec -1) 1))
  (let (%243 (Sub %240 %242))
  (let (%244 (Cast_FLOAT %243))
  (let (%246 (Pow %244 %1797))
  (let (%247 (ReduceMean %246 (vec -1) 1))
  (let (%248 (Constant 9.999999960041972e-13))
  (let (%249 (Add %247 %248))
  (let (%250 (Sqrt %249))
  (let (%251 (Div %243 %250))
  (let (%252 (Mul %251 bert.embeddings.LayerNorm.weight))
  (let (%253 (Add %252 bert.embeddings.LayerNorm.bias))
  (let (%255 (MatMul %253 %1798))
  (let (%256 (Add %255 bert.encoder.layer.0.attention.self.query.bias))
  (let (%258 (MatMul %253 %1799))
  (let (%259 (Add %258 bert.encoder.layer.0.attention.self.key.bias))
  (let (%261 (MatMul %253 %1800))
  (let (%262 (Add %261 bert.encoder.layer.0.attention.self.value.bias))
  (let (%263 (Shape %256))
  (let (%264 (Constant 0))
  (let (%265 (Gather %263 %264 0))
  (let (%266 (Shape %256))
  (let (%267 (Constant 1))
  (let (%268 (Gather %266 %267 0))
  (let (%271 (Unsqueeze %265 (vec 0)))
  (let (%272 (Unsqueeze %268 (vec 0)))
  (let (%275 (Concat %271 %272 %1801 %1802 0))
  (let (%276 (Reshape %256 %275))
  (let (%277 (Transpose %276 (vec 0 2 1 3)))
  (let (%278 (Shape %259))
  (let (%279 (Constant 0))
  (let (%280 (Gather %278 %279 0))
  (let (%281 (Shape %259))
  (let (%282 (Constant 1))
  (let (%283 (Gather %281 %282 0))
  (let (%286 (Unsqueeze %280 (vec 0)))
  (let (%287 (Unsqueeze %283 (vec 0)))
  (let (%290 (Concat %286 %287 %1803 %1804 0))
  (let (%291 (Reshape %259 %290))
  (let (%292 (Shape %262))
  (let (%293 (Constant 0))
  (let (%294 (Gather %292 %293 0))
  (let (%295 (Shape %262))
  (let (%296 (Constant 1))
  (let (%297 (Gather %295 %296 0))
  (let (%300 (Unsqueeze %294 (vec 0)))
  (let (%301 (Unsqueeze %297 (vec 0)))
  (let (%304 (Concat %300 %301 %1805 %1806 0))
  (let (%305 (Reshape %262 %304))
  (let (%306 (Transpose %305 (vec 0 2 1 3)))
  (let (%307 (Transpose %291 (vec 0 2 3 1)))
  (let (%308 (MatMul %277 %307))
  (let (%309 (Constant 8.0))
  (let (%310 (Div %308 %309))
  (let (%311 (Add %310 %225))
  (let (%312 (Softmax %311 3))
  (let (%313 (MatMul %312 %306))
  (let (%314 (Transpose %313 (vec 0 2 1 3)))
  (let (%315 (Shape %314))
  (let (%316 (Constant 0))
  (let (%317 (Gather %315 %316 0))
  (let (%318 (Shape %314))
  (let (%319 (Constant 1))
  (let (%320 (Gather %318 %319 0))
  (let (%322 (Unsqueeze %317 (vec 0)))
  (let (%323 (Unsqueeze %320 (vec 0)))
  (let (%325 (Concat %322 %323 %1807 0))
  (let (%326 (Reshape %314 %325))
  (let (%328 (MatMul %326 %1808))
  (let (%329 (Add %328 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%330 (Add %329 %253))
  (let (%332 (ReduceMean %330 (vec -1) 1))
  (let (%333 (Sub %330 %332))
  (let (%334 (Cast_FLOAT %333))
  (let (%336 (Pow %334 %1809))
  (let (%337 (ReduceMean %336 (vec -1) 1))
  (let (%338 (Constant 9.999999960041972e-13))
  (let (%339 (Add %337 %338))
  (let (%340 (Sqrt %339))
  (let (%341 (Div %333 %340))
  (let (%342 (Mul %341 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%343 (Add %342 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%345 (MatMul %343 %1810))
  (let (%346 (Add %345 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%347 (Constant 1.4142135381698608))
  (let (%348 (Div %346 %347))
  (let (%349 (Erf %348))
  (let (%350 (Constant 1.0))
  (let (%351 (Add %349 %350))
  (let (%352 (Mul %346 %351))
  (let (%353 (Constant 0.5))
  (let (%354 (Mul %352 %353))
  (let (%356 (MatMul %354 %1811))
  (let (%357 (Add %356 bert.encoder.layer.0.output.dense.bias))
  (let (%358 (Add %357 %343))
  (let (%360 (ReduceMean %358 (vec -1) 1))
  (let (%361 (Sub %358 %360))
  (let (%362 (Cast_FLOAT %361))
  (let (%364 (Pow %362 %1812))
  (let (%365 (ReduceMean %364 (vec -1) 1))
  (let (%366 (Constant 9.999999960041972e-13))
  (let (%367 (Add %365 %366))
  (let (%368 (Sqrt %367))
  (let (%369 (Div %361 %368))
  (let (%370 (Mul %369 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%371 (Add %370 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%373 (MatMul %371 %1813))
  (let (%374 (Add %373 bert.encoder.layer.1.attention.self.query.bias))
  (let (%376 (MatMul %371 %1814))
  (let (%377 (Add %376 bert.encoder.layer.1.attention.self.key.bias))
  (let (%379 (MatMul %371 %1815))
  (let (%380 (Add %379 bert.encoder.layer.1.attention.self.value.bias))
  (let (%381 (Shape %374))
  (let (%382 (Constant 0))
  (let (%383 (Gather %381 %382 0))
  (let (%384 (Shape %374))
  (let (%385 (Constant 1))
  (let (%386 (Gather %384 %385 0))
  (let (%389 (Unsqueeze %383 (vec 0)))
  (let (%390 (Unsqueeze %386 (vec 0)))
  (let (%393 (Concat %389 %390 %1816 %1817 0))
  (let (%394 (Reshape %374 %393))
  (let (%395 (Transpose %394 (vec 0 2 1 3)))
  (let (%396 (Shape %377))
  (let (%397 (Constant 0))
  (let (%398 (Gather %396 %397 0))
  (let (%399 (Shape %377))
  (let (%400 (Constant 1))
  (let (%401 (Gather %399 %400 0))
  (let (%404 (Unsqueeze %398 (vec 0)))
  (let (%405 (Unsqueeze %401 (vec 0)))
  (let (%408 (Concat %404 %405 %1818 %1819 0))
  (let (%409 (Reshape %377 %408))
  (let (%410 (Shape %380))
  (let (%411 (Constant 0))
  (let (%412 (Gather %410 %411 0))
  (let (%413 (Shape %380))
  (let (%414 (Constant 1))
  (let (%415 (Gather %413 %414 0))
  (let (%418 (Unsqueeze %412 (vec 0)))
  (let (%419 (Unsqueeze %415 (vec 0)))
  (let (%422 (Concat %418 %419 %1820 %1821 0))
  (let (%423 (Reshape %380 %422))
  (let (%424 (Transpose %423 (vec 0 2 1 3)))
  (let (%425 (Transpose %409 (vec 0 2 3 1)))
  (let (%426 (MatMul %395 %425))
  (let (%427 (Constant 8.0))
  (let (%428 (Div %426 %427))
  (let (%429 (Add %428 %225))
  (let (%430 (Softmax %429 3))
  (let (%431 (MatMul %430 %424))
  (let (%432 (Transpose %431 (vec 0 2 1 3)))
  (let (%433 (Shape %432))
  (let (%434 (Constant 0))
  (let (%435 (Gather %433 %434 0))
  (let (%436 (Shape %432))
  (let (%437 (Constant 1))
  (let (%438 (Gather %436 %437 0))
  (let (%440 (Unsqueeze %435 (vec 0)))
  (let (%441 (Unsqueeze %438 (vec 0)))
  (let (%443 (Concat %440 %441 %1822 0))
  (let (%444 (Reshape %432 %443))
  (let (%446 (MatMul %444 %1823))
  (let (%447 (Add %446 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%448 (Add %447 %371))
  (let (%450 (ReduceMean %448 (vec -1) 1))
  (let (%451 (Sub %448 %450))
  (let (%452 (Cast_FLOAT %451))
  (let (%454 (Pow %452 %1824))
  (let (%455 (ReduceMean %454 (vec -1) 1))
  (let (%456 (Constant 9.999999960041972e-13))
  (let (%457 (Add %455 %456))
  (let (%458 (Sqrt %457))
  (let (%459 (Div %451 %458))
  (let (%460 (Mul %459 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%461 (Add %460 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%463 (MatMul %461 %1825))
  (let (%464 (Add %463 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%465 (Constant 1.4142135381698608))
  (let (%466 (Div %464 %465))
  (let (%467 (Erf %466))
  (let (%468 (Constant 1.0))
  (let (%469 (Add %467 %468))
  (let (%470 (Mul %464 %469))
  (let (%471 (Constant 0.5))
  (let (%472 (Mul %470 %471))
  (let (%474 (MatMul %472 %1826))
  (let (%475 (Add %474 bert.encoder.layer.1.output.dense.bias))
  (let (%476 (Add %475 %461))
  (let (%478 (ReduceMean %476 (vec -1) 1))
  (let (%479 (Sub %476 %478))
  (let (%480 (Cast_FLOAT %479))
  (let (%482 (Pow %480 %1827))
  (let (%483 (ReduceMean %482 (vec -1) 1))
  (let (%484 (Constant 9.999999960041972e-13))
  (let (%485 (Add %483 %484))
  (let (%486 (Sqrt %485))
  (let (%487 (Div %479 %486))
  (let (%488 (Mul %487 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%489 (Add %488 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%491 (MatMul %489 %1828))
  (let (%492 (Add %491 bert.encoder.layer.2.attention.self.query.bias))
  (let (%494 (MatMul %489 %1829))
  (let (%495 (Add %494 bert.encoder.layer.2.attention.self.key.bias))
  (let (%497 (MatMul %489 %1830))
  (let (%498 (Add %497 bert.encoder.layer.2.attention.self.value.bias))
  (let (%499 (Shape %492))
  (let (%500 (Constant 0))
  (let (%501 (Gather %499 %500 0))
  (let (%502 (Shape %492))
  (let (%503 (Constant 1))
  (let (%504 (Gather %502 %503 0))
  (let (%507 (Unsqueeze %501 (vec 0)))
  (let (%508 (Unsqueeze %504 (vec 0)))
  (let (%511 (Concat %507 %508 %1831 %1832 0))
  (let (%512 (Reshape %492 %511))
  (let (%513 (Transpose %512 (vec 0 2 1 3)))
  (let (%514 (Shape %495))
  (let (%515 (Constant 0))
  (let (%516 (Gather %514 %515 0))
  (let (%517 (Shape %495))
  (let (%518 (Constant 1))
  (let (%519 (Gather %517 %518 0))
  (let (%522 (Unsqueeze %516 (vec 0)))
  (let (%523 (Unsqueeze %519 (vec 0)))
  (let (%526 (Concat %522 %523 %1833 %1834 0))
  (let (%527 (Reshape %495 %526))
  (let (%528 (Shape %498))
  (let (%529 (Constant 0))
  (let (%530 (Gather %528 %529 0))
  (let (%531 (Shape %498))
  (let (%532 (Constant 1))
  (let (%533 (Gather %531 %532 0))
  (let (%536 (Unsqueeze %530 (vec 0)))
  (let (%537 (Unsqueeze %533 (vec 0)))
  (let (%540 (Concat %536 %537 %1835 %1836 0))
  (let (%541 (Reshape %498 %540))
  (let (%542 (Transpose %541 (vec 0 2 1 3)))
  (let (%543 (Transpose %527 (vec 0 2 3 1)))
  (let (%544 (MatMul %513 %543))
  (let (%545 (Constant 8.0))
  (let (%546 (Div %544 %545))
  (let (%547 (Add %546 %225))
  (let (%548 (Softmax %547 3))
  (let (%549 (MatMul %548 %542))
  (let (%550 (Transpose %549 (vec 0 2 1 3)))
  (let (%551 (Shape %550))
  (let (%552 (Constant 0))
  (let (%553 (Gather %551 %552 0))
  (let (%554 (Shape %550))
  (let (%555 (Constant 1))
  (let (%556 (Gather %554 %555 0))
  (let (%558 (Unsqueeze %553 (vec 0)))
  (let (%559 (Unsqueeze %556 (vec 0)))
  (let (%561 (Concat %558 %559 %1837 0))
  (let (%562 (Reshape %550 %561))
  (let (%564 (MatMul %562 %1838))
  (let (%565 (Add %564 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%566 (Add %565 %489))
  (let (%568 (ReduceMean %566 (vec -1) 1))
  (let (%569 (Sub %566 %568))
  (let (%570 (Cast_FLOAT %569))
  (let (%572 (Pow %570 %1839))
  (let (%573 (ReduceMean %572 (vec -1) 1))
  (let (%574 (Constant 9.999999960041972e-13))
  (let (%575 (Add %573 %574))
  (let (%576 (Sqrt %575))
  (let (%577 (Div %569 %576))
  (let (%578 (Mul %577 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%579 (Add %578 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%581 (MatMul %579 %1840))
  (let (%582 (Add %581 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%583 (Constant 1.4142135381698608))
  (let (%584 (Div %582 %583))
  (let (%585 (Erf %584))
  (let (%586 (Constant 1.0))
  (let (%587 (Add %585 %586))
  (let (%588 (Mul %582 %587))
  (let (%589 (Constant 0.5))
  (let (%590 (Mul %588 %589))
  (let (%592 (MatMul %590 %1841))
  (let (%593 (Add %592 bert.encoder.layer.2.output.dense.bias))
  (let (%594 (Add %593 %579))
  (let (%596 (ReduceMean %594 (vec -1) 1))
  (let (%597 (Sub %594 %596))
  (let (%598 (Cast_FLOAT %597))
  (let (%600 (Pow %598 %1842))
  (let (%601 (ReduceMean %600 (vec -1) 1))
  (let (%602 (Constant 9.999999960041972e-13))
  (let (%603 (Add %601 %602))
  (let (%604 (Sqrt %603))
  (let (%605 (Div %597 %604))
  (let (%606 (Mul %605 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%607 (Add %606 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%609 (MatMul %607 %1843))
  (let (%610 (Add %609 bert.encoder.layer.3.attention.self.query.bias))
  (let (%612 (MatMul %607 %1844))
  (let (%613 (Add %612 bert.encoder.layer.3.attention.self.key.bias))
  (let (%615 (MatMul %607 %1845))
  (let (%616 (Add %615 bert.encoder.layer.3.attention.self.value.bias))
  (let (%617 (Shape %610))
  (let (%618 (Constant 0))
  (let (%619 (Gather %617 %618 0))
  (let (%620 (Shape %610))
  (let (%621 (Constant 1))
  (let (%622 (Gather %620 %621 0))
  (let (%625 (Unsqueeze %619 (vec 0)))
  (let (%626 (Unsqueeze %622 (vec 0)))
  (let (%629 (Concat %625 %626 %1846 %1847 0))
  (let (%630 (Reshape %610 %629))
  (let (%631 (Transpose %630 (vec 0 2 1 3)))
  (let (%632 (Shape %613))
  (let (%633 (Constant 0))
  (let (%634 (Gather %632 %633 0))
  (let (%635 (Shape %613))
  (let (%636 (Constant 1))
  (let (%637 (Gather %635 %636 0))
  (let (%640 (Unsqueeze %634 (vec 0)))
  (let (%641 (Unsqueeze %637 (vec 0)))
  (let (%644 (Concat %640 %641 %1848 %1849 0))
  (let (%645 (Reshape %613 %644))
  (let (%646 (Shape %616))
  (let (%647 (Constant 0))
  (let (%648 (Gather %646 %647 0))
  (let (%649 (Shape %616))
  (let (%650 (Constant 1))
  (let (%651 (Gather %649 %650 0))
  (let (%654 (Unsqueeze %648 (vec 0)))
  (let (%655 (Unsqueeze %651 (vec 0)))
  (let (%658 (Concat %654 %655 %1850 %1851 0))
  (let (%659 (Reshape %616 %658))
  (let (%660 (Transpose %659 (vec 0 2 1 3)))
  (let (%661 (Transpose %645 (vec 0 2 3 1)))
  (let (%662 (MatMul %631 %661))
  (let (%663 (Constant 8.0))
  (let (%664 (Div %662 %663))
  (let (%665 (Add %664 %225))
  (let (%666 (Softmax %665 3))
  (let (%667 (MatMul %666 %660))
  (let (%668 (Transpose %667 (vec 0 2 1 3)))
  (let (%669 (Shape %668))
  (let (%670 (Constant 0))
  (let (%671 (Gather %669 %670 0))
  (let (%672 (Shape %668))
  (let (%673 (Constant 1))
  (let (%674 (Gather %672 %673 0))
  (let (%676 (Unsqueeze %671 (vec 0)))
  (let (%677 (Unsqueeze %674 (vec 0)))
  (let (%679 (Concat %676 %677 %1852 0))
  (let (%680 (Reshape %668 %679))
  (let (%682 (MatMul %680 %1853))
  (let (%683 (Add %682 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%684 (Add %683 %607))
  (let (%686 (ReduceMean %684 (vec -1) 1))
  (let (%687 (Sub %684 %686))
  (let (%688 (Cast_FLOAT %687))
  (let (%690 (Pow %688 %1854))
  (let (%691 (ReduceMean %690 (vec -1) 1))
  (let (%692 (Constant 9.999999960041972e-13))
  (let (%693 (Add %691 %692))
  (let (%694 (Sqrt %693))
  (let (%695 (Div %687 %694))
  (let (%696 (Mul %695 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%697 (Add %696 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%699 (MatMul %697 %1855))
  (let (%700 (Add %699 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%701 (Constant 1.4142135381698608))
  (let (%702 (Div %700 %701))
  (let (%703 (Erf %702))
  (let (%704 (Constant 1.0))
  (let (%705 (Add %703 %704))
  (let (%706 (Mul %700 %705))
  (let (%707 (Constant 0.5))
  (let (%708 (Mul %706 %707))
  (let (%710 (MatMul %708 %1856))
  (let (%711 (Add %710 bert.encoder.layer.3.output.dense.bias))
  (let (%712 (Add %711 %697))
  (let (%714 (ReduceMean %712 (vec -1) 1))
  (let (%715 (Sub %712 %714))
  (let (%716 (Cast_FLOAT %715))
  (let (%718 (Pow %716 %1857))
  (let (%719 (ReduceMean %718 (vec -1) 1))
  (let (%720 (Constant 9.999999960041972e-13))
  (let (%721 (Add %719 %720))
  (let (%722 (Sqrt %721))
  (let (%723 (Div %715 %722))
  (let (%724 (Mul %723 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%725 (Add %724 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%727 (MatMul %725 %1858))
  (let (%728 (Add %727 bert.encoder.layer.4.attention.self.query.bias))
  (let (%730 (MatMul %725 %1859))
  (let (%731 (Add %730 bert.encoder.layer.4.attention.self.key.bias))
  (let (%733 (MatMul %725 %1860))
  (let (%734 (Add %733 bert.encoder.layer.4.attention.self.value.bias))
  (let (%735 (Shape %728))
  (let (%736 (Constant 0))
  (let (%737 (Gather %735 %736 0))
  (let (%738 (Shape %728))
  (let (%739 (Constant 1))
  (let (%740 (Gather %738 %739 0))
  (let (%743 (Unsqueeze %737 (vec 0)))
  (let (%744 (Unsqueeze %740 (vec 0)))
  (let (%747 (Concat %743 %744 %1861 %1862 0))
  (let (%748 (Reshape %728 %747))
  (let (%749 (Transpose %748 (vec 0 2 1 3)))
  (let (%750 (Shape %731))
  (let (%751 (Constant 0))
  (let (%752 (Gather %750 %751 0))
  (let (%753 (Shape %731))
  (let (%754 (Constant 1))
  (let (%755 (Gather %753 %754 0))
  (let (%758 (Unsqueeze %752 (vec 0)))
  (let (%759 (Unsqueeze %755 (vec 0)))
  (let (%762 (Concat %758 %759 %1863 %1864 0))
  (let (%763 (Reshape %731 %762))
  (let (%764 (Shape %734))
  (let (%765 (Constant 0))
  (let (%766 (Gather %764 %765 0))
  (let (%767 (Shape %734))
  (let (%768 (Constant 1))
  (let (%769 (Gather %767 %768 0))
  (let (%772 (Unsqueeze %766 (vec 0)))
  (let (%773 (Unsqueeze %769 (vec 0)))
  (let (%776 (Concat %772 %773 %1865 %1866 0))
  (let (%777 (Reshape %734 %776))
  (let (%778 (Transpose %777 (vec 0 2 1 3)))
  (let (%779 (Transpose %763 (vec 0 2 3 1)))
  (let (%780 (MatMul %749 %779))
  (let (%781 (Constant 8.0))
  (let (%782 (Div %780 %781))
  (let (%783 (Add %782 %225))
  (let (%784 (Softmax %783 3))
  (let (%785 (MatMul %784 %778))
  (let (%786 (Transpose %785 (vec 0 2 1 3)))
  (let (%787 (Shape %786))
  (let (%788 (Constant 0))
  (let (%789 (Gather %787 %788 0))
  (let (%790 (Shape %786))
  (let (%791 (Constant 1))
  (let (%792 (Gather %790 %791 0))
  (let (%794 (Unsqueeze %789 (vec 0)))
  (let (%795 (Unsqueeze %792 (vec 0)))
  (let (%797 (Concat %794 %795 %1867 0))
  (let (%798 (Reshape %786 %797))
  (let (%800 (MatMul %798 %1868))
  (let (%801 (Add %800 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%802 (Add %801 %725))
  (let (%804 (ReduceMean %802 (vec -1) 1))
  (let (%805 (Sub %802 %804))
  (let (%806 (Cast_FLOAT %805))
  (let (%808 (Pow %806 %1869))
  (let (%809 (ReduceMean %808 (vec -1) 1))
  (let (%810 (Constant 9.999999960041972e-13))
  (let (%811 (Add %809 %810))
  (let (%812 (Sqrt %811))
  (let (%813 (Div %805 %812))
  (let (%814 (Mul %813 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%815 (Add %814 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%817 (MatMul %815 %1870))
  (let (%818 (Add %817 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%819 (Constant 1.4142135381698608))
  (let (%820 (Div %818 %819))
  (let (%821 (Erf %820))
  (let (%822 (Constant 1.0))
  (let (%823 (Add %821 %822))
  (let (%824 (Mul %818 %823))
  (let (%825 (Constant 0.5))
  (let (%826 (Mul %824 %825))
  (let (%828 (MatMul %826 %1871))
  (let (%829 (Add %828 bert.encoder.layer.4.output.dense.bias))
  (let (%830 (Add %829 %815))
  (let (%832 (ReduceMean %830 (vec -1) 1))
  (let (%833 (Sub %830 %832))
  (let (%834 (Cast_FLOAT %833))
  (let (%836 (Pow %834 %1872))
  (let (%837 (ReduceMean %836 (vec -1) 1))
  (let (%838 (Constant 9.999999960041972e-13))
  (let (%839 (Add %837 %838))
  (let (%840 (Sqrt %839))
  (let (%841 (Div %833 %840))
  (let (%842 (Mul %841 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%843 (Add %842 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%845 (MatMul %843 %1873))
  (let (%846 (Add %845 bert.encoder.layer.5.attention.self.query.bias))
  (let (%848 (MatMul %843 %1874))
  (let (%849 (Add %848 bert.encoder.layer.5.attention.self.key.bias))
  (let (%851 (MatMul %843 %1875))
  (let (%852 (Add %851 bert.encoder.layer.5.attention.self.value.bias))
  (let (%853 (Shape %846))
  (let (%854 (Constant 0))
  (let (%855 (Gather %853 %854 0))
  (let (%856 (Shape %846))
  (let (%857 (Constant 1))
  (let (%858 (Gather %856 %857 0))
  (let (%861 (Unsqueeze %855 (vec 0)))
  (let (%862 (Unsqueeze %858 (vec 0)))
  (let (%865 (Concat %861 %862 %1876 %1877 0))
  (let (%866 (Reshape %846 %865))
  (let (%867 (Transpose %866 (vec 0 2 1 3)))
  (let (%868 (Shape %849))
  (let (%869 (Constant 0))
  (let (%870 (Gather %868 %869 0))
  (let (%871 (Shape %849))
  (let (%872 (Constant 1))
  (let (%873 (Gather %871 %872 0))
  (let (%876 (Unsqueeze %870 (vec 0)))
  (let (%877 (Unsqueeze %873 (vec 0)))
  (let (%880 (Concat %876 %877 %1878 %1879 0))
  (let (%881 (Reshape %849 %880))
  (let (%882 (Shape %852))
  (let (%883 (Constant 0))
  (let (%884 (Gather %882 %883 0))
  (let (%885 (Shape %852))
  (let (%886 (Constant 1))
  (let (%887 (Gather %885 %886 0))
  (let (%890 (Unsqueeze %884 (vec 0)))
  (let (%891 (Unsqueeze %887 (vec 0)))
  (let (%894 (Concat %890 %891 %1880 %1881 0))
  (let (%895 (Reshape %852 %894))
  (let (%896 (Transpose %895 (vec 0 2 1 3)))
  (let (%897 (Transpose %881 (vec 0 2 3 1)))
  (let (%898 (MatMul %867 %897))
  (let (%899 (Constant 8.0))
  (let (%900 (Div %898 %899))
  (let (%901 (Add %900 %225))
  (let (%902 (Softmax %901 3))
  (let (%903 (MatMul %902 %896))
  (let (%904 (Transpose %903 (vec 0 2 1 3)))
  (let (%905 (Shape %904))
  (let (%906 (Constant 0))
  (let (%907 (Gather %905 %906 0))
  (let (%908 (Shape %904))
  (let (%909 (Constant 1))
  (let (%910 (Gather %908 %909 0))
  (let (%912 (Unsqueeze %907 (vec 0)))
  (let (%913 (Unsqueeze %910 (vec 0)))
  (let (%915 (Concat %912 %913 %1882 0))
  (let (%916 (Reshape %904 %915))
  (let (%918 (MatMul %916 %1883))
  (let (%919 (Add %918 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%920 (Add %919 %843))
  (let (%922 (ReduceMean %920 (vec -1) 1))
  (let (%923 (Sub %920 %922))
  (let (%924 (Cast_FLOAT %923))
  (let (%926 (Pow %924 %1884))
  (let (%927 (ReduceMean %926 (vec -1) 1))
  (let (%928 (Constant 9.999999960041972e-13))
  (let (%929 (Add %927 %928))
  (let (%930 (Sqrt %929))
  (let (%931 (Div %923 %930))
  (let (%932 (Mul %931 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%933 (Add %932 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%935 (MatMul %933 %1885))
  (let (%936 (Add %935 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%937 (Constant 1.4142135381698608))
  (let (%938 (Div %936 %937))
  (let (%939 (Erf %938))
  (let (%940 (Constant 1.0))
  (let (%941 (Add %939 %940))
  (let (%942 (Mul %936 %941))
  (let (%943 (Constant 0.5))
  (let (%944 (Mul %942 %943))
  (let (%946 (MatMul %944 %1886))
  (let (%947 (Add %946 bert.encoder.layer.5.output.dense.bias))
  (let (%948 (Add %947 %933))
  (let (%950 (ReduceMean %948 (vec -1) 1))
  (let (%951 (Sub %948 %950))
  (let (%952 (Cast_FLOAT %951))
  (let (%954 (Pow %952 %1887))
  (let (%955 (ReduceMean %954 (vec -1) 1))
  (let (%956 (Constant 9.999999960041972e-13))
  (let (%957 (Add %955 %956))
  (let (%958 (Sqrt %957))
  (let (%959 (Div %951 %958))
  (let (%960 (Mul %959 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%961 (Add %960 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%963 (MatMul %961 %1888))
  (let (%964 (Add %963 bert.encoder.layer.6.attention.self.query.bias))
  (let (%966 (MatMul %961 %1889))
  (let (%967 (Add %966 bert.encoder.layer.6.attention.self.key.bias))
  (let (%969 (MatMul %961 %1890))
  (let (%970 (Add %969 bert.encoder.layer.6.attention.self.value.bias))
  (let (%971 (Shape %964))
  (let (%972 (Constant 0))
  (let (%973 (Gather %971 %972 0))
  (let (%974 (Shape %964))
  (let (%975 (Constant 1))
  (let (%976 (Gather %974 %975 0))
  (let (%979 (Unsqueeze %973 (vec 0)))
  (let (%980 (Unsqueeze %976 (vec 0)))
  (let (%983 (Concat %979 %980 %1891 %1892 0))
  (let (%984 (Reshape %964 %983))
  (let (%985 (Transpose %984 (vec 0 2 1 3)))
  (let (%986 (Shape %967))
  (let (%987 (Constant 0))
  (let (%988 (Gather %986 %987 0))
  (let (%989 (Shape %967))
  (let (%990 (Constant 1))
  (let (%991 (Gather %989 %990 0))
  (let (%994 (Unsqueeze %988 (vec 0)))
  (let (%995 (Unsqueeze %991 (vec 0)))
  (let (%998 (Concat %994 %995 %1893 %1894 0))
  (let (%999 (Reshape %967 %998))
  (let (%1000 (Shape %970))
  (let (%1001 (Constant 0))
  (let (%1002 (Gather %1000 %1001 0))
  (let (%1003 (Shape %970))
  (let (%1004 (Constant 1))
  (let (%1005 (Gather %1003 %1004 0))
  (let (%1008 (Unsqueeze %1002 (vec 0)))
  (let (%1009 (Unsqueeze %1005 (vec 0)))
  (let (%1012 (Concat %1008 %1009 %1895 %1896 0))
  (let (%1013 (Reshape %970 %1012))
  (let (%1014 (Transpose %1013 (vec 0 2 1 3)))
  (let (%1015 (Transpose %999 (vec 0 2 3 1)))
  (let (%1016 (MatMul %985 %1015))
  (let (%1017 (Constant 8.0))
  (let (%1018 (Div %1016 %1017))
  (let (%1019 (Add %1018 %225))
  (let (%1020 (Softmax %1019 3))
  (let (%1021 (MatMul %1020 %1014))
  (let (%1022 (Transpose %1021 (vec 0 2 1 3)))
  (let (%1023 (Shape %1022))
  (let (%1024 (Constant 0))
  (let (%1025 (Gather %1023 %1024 0))
  (let (%1026 (Shape %1022))
  (let (%1027 (Constant 1))
  (let (%1028 (Gather %1026 %1027 0))
  (let (%1030 (Unsqueeze %1025 (vec 0)))
  (let (%1031 (Unsqueeze %1028 (vec 0)))
  (let (%1033 (Concat %1030 %1031 %1897 0))
  (let (%1034 (Reshape %1022 %1033))
  (let (%1036 (MatMul %1034 %1898))
  (let (%1037 (Add %1036 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1038 (Add %1037 %961))
  (let (%1040 (ReduceMean %1038 (vec -1) 1))
  (let (%1041 (Sub %1038 %1040))
  (let (%1042 (Cast_FLOAT %1041))
  (let (%1044 (Pow %1042 %1899))
  (let (%1045 (ReduceMean %1044 (vec -1) 1))
  (let (%1046 (Constant 9.999999960041972e-13))
  (let (%1047 (Add %1045 %1046))
  (let (%1048 (Sqrt %1047))
  (let (%1049 (Div %1041 %1048))
  (let (%1050 (Mul %1049 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1051 (Add %1050 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1053 (MatMul %1051 %1900))
  (let (%1054 (Add %1053 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1055 (Constant 1.4142135381698608))
  (let (%1056 (Div %1054 %1055))
  (let (%1057 (Erf %1056))
  (let (%1058 (Constant 1.0))
  (let (%1059 (Add %1057 %1058))
  (let (%1060 (Mul %1054 %1059))
  (let (%1061 (Constant 0.5))
  (let (%1062 (Mul %1060 %1061))
  (let (%1064 (MatMul %1062 %1901))
  (let (%1065 (Add %1064 bert.encoder.layer.6.output.dense.bias))
  (let (%1066 (Add %1065 %1051))
  (let (%1068 (ReduceMean %1066 (vec -1) 1))
  (let (%1069 (Sub %1066 %1068))
  (let (%1070 (Cast_FLOAT %1069))
  (let (%1072 (Pow %1070 %1902))
  (let (%1073 (ReduceMean %1072 (vec -1) 1))
  (let (%1074 (Constant 9.999999960041972e-13))
  (let (%1075 (Add %1073 %1074))
  (let (%1076 (Sqrt %1075))
  (let (%1077 (Div %1069 %1076))
  (let (%1078 (Mul %1077 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1079 (Add %1078 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1081 (MatMul %1079 %1903))
  (let (%1082 (Add %1081 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1084 (MatMul %1079 %1904))
  (let (%1085 (Add %1084 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1087 (MatMul %1079 %1905))
  (let (%1088 (Add %1087 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1089 (Shape %1082))
  (let (%1090 (Constant 0))
  (let (%1091 (Gather %1089 %1090 0))
  (let (%1092 (Shape %1082))
  (let (%1093 (Constant 1))
  (let (%1094 (Gather %1092 %1093 0))
  (let (%1097 (Unsqueeze %1091 (vec 0)))
  (let (%1098 (Unsqueeze %1094 (vec 0)))
  (let (%1101 (Concat %1097 %1098 %1906 %1907 0))
  (let (%1102 (Reshape %1082 %1101))
  (let (%1103 (Transpose %1102 (vec 0 2 1 3)))
  (let (%1104 (Shape %1085))
  (let (%1105 (Constant 0))
  (let (%1106 (Gather %1104 %1105 0))
  (let (%1107 (Shape %1085))
  (let (%1108 (Constant 1))
  (let (%1109 (Gather %1107 %1108 0))
  (let (%1112 (Unsqueeze %1106 (vec 0)))
  (let (%1113 (Unsqueeze %1109 (vec 0)))
  (let (%1116 (Concat %1112 %1113 %1908 %1909 0))
  (let (%1117 (Reshape %1085 %1116))
  (let (%1118 (Shape %1088))
  (let (%1119 (Constant 0))
  (let (%1120 (Gather %1118 %1119 0))
  (let (%1121 (Shape %1088))
  (let (%1122 (Constant 1))
  (let (%1123 (Gather %1121 %1122 0))
  (let (%1126 (Unsqueeze %1120 (vec 0)))
  (let (%1127 (Unsqueeze %1123 (vec 0)))
  (let (%1130 (Concat %1126 %1127 %1910 %1911 0))
  (let (%1131 (Reshape %1088 %1130))
  (let (%1132 (Transpose %1131 (vec 0 2 1 3)))
  (let (%1133 (Transpose %1117 (vec 0 2 3 1)))
  (let (%1134 (MatMul %1103 %1133))
  (let (%1135 (Constant 8.0))
  (let (%1136 (Div %1134 %1135))
  (let (%1137 (Add %1136 %225))
  (let (%1138 (Softmax %1137 3))
  (let (%1139 (MatMul %1138 %1132))
  (let (%1140 (Transpose %1139 (vec 0 2 1 3)))
  (let (%1141 (Shape %1140))
  (let (%1142 (Constant 0))
  (let (%1143 (Gather %1141 %1142 0))
  (let (%1144 (Shape %1140))
  (let (%1145 (Constant 1))
  (let (%1146 (Gather %1144 %1145 0))
  (let (%1148 (Unsqueeze %1143 (vec 0)))
  (let (%1149 (Unsqueeze %1146 (vec 0)))
  (let (%1151 (Concat %1148 %1149 %1912 0))
  (let (%1152 (Reshape %1140 %1151))
  (let (%1154 (MatMul %1152 %1913))
  (let (%1155 (Add %1154 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1156 (Add %1155 %1079))
  (let (%1158 (ReduceMean %1156 (vec -1) 1))
  (let (%1159 (Sub %1156 %1158))
  (let (%1160 (Cast_FLOAT %1159))
  (let (%1162 (Pow %1160 %1914))
  (let (%1163 (ReduceMean %1162 (vec -1) 1))
  (let (%1164 (Constant 9.999999960041972e-13))
  (let (%1165 (Add %1163 %1164))
  (let (%1166 (Sqrt %1165))
  (let (%1167 (Div %1159 %1166))
  (let (%1168 (Mul %1167 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1169 (Add %1168 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1171 (MatMul %1169 %1915))
  (let (%1172 (Add %1171 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1173 (Constant 1.4142135381698608))
  (let (%1174 (Div %1172 %1173))
  (let (%1175 (Erf %1174))
  (let (%1176 (Constant 1.0))
  (let (%1177 (Add %1175 %1176))
  (let (%1178 (Mul %1172 %1177))
  (let (%1179 (Constant 0.5))
  (let (%1180 (Mul %1178 %1179))
  (let (%1182 (MatMul %1180 %1916))
  (let (%1183 (Add %1182 bert.encoder.layer.7.output.dense.bias))
  (let (%1184 (Add %1183 %1169))
  (let (%1186 (ReduceMean %1184 (vec -1) 1))
  (let (%1187 (Sub %1184 %1186))
  (let (%1188 (Cast_FLOAT %1187))
  (let (%1190 (Pow %1188 %1917))
  (let (%1191 (ReduceMean %1190 (vec -1) 1))
  (let (%1192 (Constant 9.999999960041972e-13))
  (let (%1193 (Add %1191 %1192))
  (let (%1194 (Sqrt %1193))
  (let (%1195 (Div %1187 %1194))
  (let (%1196 (Mul %1195 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1197 (Add %1196 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1199 (MatMul %1197 %1918))
  (let (%1200 (Add %1199 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1202 (MatMul %1197 %1919))
  (let (%1203 (Add %1202 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1205 (MatMul %1197 %1920))
  (let (%1206 (Add %1205 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1207 (Shape %1200))
  (let (%1208 (Constant 0))
  (let (%1209 (Gather %1207 %1208 0))
  (let (%1210 (Shape %1200))
  (let (%1211 (Constant 1))
  (let (%1212 (Gather %1210 %1211 0))
  (let (%1215 (Unsqueeze %1209 (vec 0)))
  (let (%1216 (Unsqueeze %1212 (vec 0)))
  (let (%1219 (Concat %1215 %1216 %1921 %1922 0))
  (let (%1220 (Reshape %1200 %1219))
  (let (%1221 (Transpose %1220 (vec 0 2 1 3)))
  (let (%1222 (Shape %1203))
  (let (%1223 (Constant 0))
  (let (%1224 (Gather %1222 %1223 0))
  (let (%1225 (Shape %1203))
  (let (%1226 (Constant 1))
  (let (%1227 (Gather %1225 %1226 0))
  (let (%1230 (Unsqueeze %1224 (vec 0)))
  (let (%1231 (Unsqueeze %1227 (vec 0)))
  (let (%1234 (Concat %1230 %1231 %1923 %1924 0))
  (let (%1235 (Reshape %1203 %1234))
  (let (%1236 (Shape %1206))
  (let (%1237 (Constant 0))
  (let (%1238 (Gather %1236 %1237 0))
  (let (%1239 (Shape %1206))
  (let (%1240 (Constant 1))
  (let (%1241 (Gather %1239 %1240 0))
  (let (%1244 (Unsqueeze %1238 (vec 0)))
  (let (%1245 (Unsqueeze %1241 (vec 0)))
  (let (%1248 (Concat %1244 %1245 %1925 %1926 0))
  (let (%1249 (Reshape %1206 %1248))
  (let (%1250 (Transpose %1249 (vec 0 2 1 3)))
  (let (%1251 (Transpose %1235 (vec 0 2 3 1)))
  (let (%1252 (MatMul %1221 %1251))
  (let (%1253 (Constant 8.0))
  (let (%1254 (Div %1252 %1253))
  (let (%1255 (Add %1254 %225))
  (let (%1256 (Softmax %1255 3))
  (let (%1257 (MatMul %1256 %1250))
  (let (%1258 (Transpose %1257 (vec 0 2 1 3)))
  (let (%1259 (Shape %1258))
  (let (%1260 (Constant 0))
  (let (%1261 (Gather %1259 %1260 0))
  (let (%1262 (Shape %1258))
  (let (%1263 (Constant 1))
  (let (%1264 (Gather %1262 %1263 0))
  (let (%1266 (Unsqueeze %1261 (vec 0)))
  (let (%1267 (Unsqueeze %1264 (vec 0)))
  (let (%1269 (Concat %1266 %1267 %1927 0))
  (let (%1270 (Reshape %1258 %1269))
  (let (%1272 (MatMul %1270 %1928))
  (let (%1273 (Add %1272 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1274 (Add %1273 %1197))
  (let (%1276 (ReduceMean %1274 (vec -1) 1))
  (let (%1277 (Sub %1274 %1276))
  (let (%1278 (Cast_FLOAT %1277))
  (let (%1280 (Pow %1278 %1929))
  (let (%1281 (ReduceMean %1280 (vec -1) 1))
  (let (%1282 (Constant 9.999999960041972e-13))
  (let (%1283 (Add %1281 %1282))
  (let (%1284 (Sqrt %1283))
  (let (%1285 (Div %1277 %1284))
  (let (%1286 (Mul %1285 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1287 (Add %1286 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1289 (MatMul %1287 %1930))
  (let (%1290 (Add %1289 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1291 (Constant 1.4142135381698608))
  (let (%1292 (Div %1290 %1291))
  (let (%1293 (Erf %1292))
  (let (%1294 (Constant 1.0))
  (let (%1295 (Add %1293 %1294))
  (let (%1296 (Mul %1290 %1295))
  (let (%1297 (Constant 0.5))
  (let (%1298 (Mul %1296 %1297))
  (let (%1300 (MatMul %1298 %1931))
  (let (%1301 (Add %1300 bert.encoder.layer.8.output.dense.bias))
  (let (%1302 (Add %1301 %1287))
  (let (%1304 (ReduceMean %1302 (vec -1) 1))
  (let (%1305 (Sub %1302 %1304))
  (let (%1306 (Cast_FLOAT %1305))
  (let (%1308 (Pow %1306 %1932))
  (let (%1309 (ReduceMean %1308 (vec -1) 1))
  (let (%1310 (Constant 9.999999960041972e-13))
  (let (%1311 (Add %1309 %1310))
  (let (%1312 (Sqrt %1311))
  (let (%1313 (Div %1305 %1312))
  (let (%1314 (Mul %1313 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1315 (Add %1314 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1317 (MatMul %1315 %1933))
  (let (%1318 (Add %1317 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1320 (MatMul %1315 %1934))
  (let (%1321 (Add %1320 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1323 (MatMul %1315 %1935))
  (let (%1324 (Add %1323 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1325 (Shape %1318))
  (let (%1326 (Constant 0))
  (let (%1327 (Gather %1325 %1326 0))
  (let (%1328 (Shape %1318))
  (let (%1329 (Constant 1))
  (let (%1330 (Gather %1328 %1329 0))
  (let (%1333 (Unsqueeze %1327 (vec 0)))
  (let (%1334 (Unsqueeze %1330 (vec 0)))
  (let (%1337 (Concat %1333 %1334 %1936 %1937 0))
  (let (%1338 (Reshape %1318 %1337))
  (let (%1339 (Transpose %1338 (vec 0 2 1 3)))
  (let (%1340 (Shape %1321))
  (let (%1341 (Constant 0))
  (let (%1342 (Gather %1340 %1341 0))
  (let (%1343 (Shape %1321))
  (let (%1344 (Constant 1))
  (let (%1345 (Gather %1343 %1344 0))
  (let (%1348 (Unsqueeze %1342 (vec 0)))
  (let (%1349 (Unsqueeze %1345 (vec 0)))
  (let (%1352 (Concat %1348 %1349 %1938 %1939 0))
  (let (%1353 (Reshape %1321 %1352))
  (let (%1354 (Shape %1324))
  (let (%1355 (Constant 0))
  (let (%1356 (Gather %1354 %1355 0))
  (let (%1357 (Shape %1324))
  (let (%1358 (Constant 1))
  (let (%1359 (Gather %1357 %1358 0))
  (let (%1362 (Unsqueeze %1356 (vec 0)))
  (let (%1363 (Unsqueeze %1359 (vec 0)))
  (let (%1366 (Concat %1362 %1363 %1940 %1941 0))
  (let (%1367 (Reshape %1324 %1366))
  (let (%1368 (Transpose %1367 (vec 0 2 1 3)))
  (let (%1369 (Transpose %1353 (vec 0 2 3 1)))
  (let (%1370 (MatMul %1339 %1369))
  (let (%1371 (Constant 8.0))
  (let (%1372 (Div %1370 %1371))
  (let (%1373 (Add %1372 %225))
  (let (%1374 (Softmax %1373 3))
  (let (%1375 (MatMul %1374 %1368))
  (let (%1376 (Transpose %1375 (vec 0 2 1 3)))
  (let (%1377 (Shape %1376))
  (let (%1378 (Constant 0))
  (let (%1379 (Gather %1377 %1378 0))
  (let (%1380 (Shape %1376))
  (let (%1381 (Constant 1))
  (let (%1382 (Gather %1380 %1381 0))
  (let (%1384 (Unsqueeze %1379 (vec 0)))
  (let (%1385 (Unsqueeze %1382 (vec 0)))
  (let (%1387 (Concat %1384 %1385 %1942 0))
  (let (%1388 (Reshape %1376 %1387))
  (let (%1390 (MatMul %1388 %1943))
  (let (%1391 (Add %1390 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1392 (Add %1391 %1315))
  (let (%1394 (ReduceMean %1392 (vec -1) 1))
  (let (%1395 (Sub %1392 %1394))
  (let (%1396 (Cast_FLOAT %1395))
  (let (%1398 (Pow %1396 %1944))
  (let (%1399 (ReduceMean %1398 (vec -1) 1))
  (let (%1400 (Constant 9.999999960041972e-13))
  (let (%1401 (Add %1399 %1400))
  (let (%1402 (Sqrt %1401))
  (let (%1403 (Div %1395 %1402))
  (let (%1404 (Mul %1403 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1405 (Add %1404 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1407 (MatMul %1405 %1945))
  (let (%1408 (Add %1407 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1409 (Constant 1.4142135381698608))
  (let (%1410 (Div %1408 %1409))
  (let (%1411 (Erf %1410))
  (let (%1412 (Constant 1.0))
  (let (%1413 (Add %1411 %1412))
  (let (%1414 (Mul %1408 %1413))
  (let (%1415 (Constant 0.5))
  (let (%1416 (Mul %1414 %1415))
  (let (%1418 (MatMul %1416 %1946))
  (let (%1419 (Add %1418 bert.encoder.layer.9.output.dense.bias))
  (let (%1420 (Add %1419 %1405))
  (let (%1422 (ReduceMean %1420 (vec -1) 1))
  (let (%1423 (Sub %1420 %1422))
  (let (%1424 (Cast_FLOAT %1423))
  (let (%1426 (Pow %1424 %1947))
  (let (%1427 (ReduceMean %1426 (vec -1) 1))
  (let (%1428 (Constant 9.999999960041972e-13))
  (let (%1429 (Add %1427 %1428))
  (let (%1430 (Sqrt %1429))
  (let (%1431 (Div %1423 %1430))
  (let (%1432 (Mul %1431 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1433 (Add %1432 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1435 (MatMul %1433 %1948))
  (let (%1436 (Add %1435 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1438 (MatMul %1433 %1949))
  (let (%1439 (Add %1438 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1441 (MatMul %1433 %1950))
  (let (%1442 (Add %1441 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1443 (Shape %1436))
  (let (%1444 (Constant 0))
  (let (%1445 (Gather %1443 %1444 0))
  (let (%1446 (Shape %1436))
  (let (%1447 (Constant 1))
  (let (%1448 (Gather %1446 %1447 0))
  (let (%1451 (Unsqueeze %1445 (vec 0)))
  (let (%1452 (Unsqueeze %1448 (vec 0)))
  (let (%1455 (Concat %1451 %1452 %1951 %1952 0))
  (let (%1456 (Reshape %1436 %1455))
  (let (%1457 (Transpose %1456 (vec 0 2 1 3)))
  (let (%1458 (Shape %1439))
  (let (%1459 (Constant 0))
  (let (%1460 (Gather %1458 %1459 0))
  (let (%1461 (Shape %1439))
  (let (%1462 (Constant 1))
  (let (%1463 (Gather %1461 %1462 0))
  (let (%1466 (Unsqueeze %1460 (vec 0)))
  (let (%1467 (Unsqueeze %1463 (vec 0)))
  (let (%1470 (Concat %1466 %1467 %1953 %1954 0))
  (let (%1471 (Reshape %1439 %1470))
  (let (%1472 (Shape %1442))
  (let (%1473 (Constant 0))
  (let (%1474 (Gather %1472 %1473 0))
  (let (%1475 (Shape %1442))
  (let (%1476 (Constant 1))
  (let (%1477 (Gather %1475 %1476 0))
  (let (%1480 (Unsqueeze %1474 (vec 0)))
  (let (%1481 (Unsqueeze %1477 (vec 0)))
  (let (%1484 (Concat %1480 %1481 %1955 %1956 0))
  (let (%1485 (Reshape %1442 %1484))
  (let (%1486 (Transpose %1485 (vec 0 2 1 3)))
  (let (%1487 (Transpose %1471 (vec 0 2 3 1)))
  (let (%1488 (MatMul %1457 %1487))
  (let (%1489 (Constant 8.0))
  (let (%1490 (Div %1488 %1489))
  (let (%1491 (Add %1490 %225))
  (let (%1492 (Softmax %1491 3))
  (let (%1493 (MatMul %1492 %1486))
  (let (%1494 (Transpose %1493 (vec 0 2 1 3)))
  (let (%1495 (Shape %1494))
  (let (%1496 (Constant 0))
  (let (%1497 (Gather %1495 %1496 0))
  (let (%1498 (Shape %1494))
  (let (%1499 (Constant 1))
  (let (%1500 (Gather %1498 %1499 0))
  (let (%1502 (Unsqueeze %1497 (vec 0)))
  (let (%1503 (Unsqueeze %1500 (vec 0)))
  (let (%1505 (Concat %1502 %1503 %1957 0))
  (let (%1506 (Reshape %1494 %1505))
  (let (%1508 (MatMul %1506 %1958))
  (let (%1509 (Add %1508 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1510 (Add %1509 %1433))
  (let (%1512 (ReduceMean %1510 (vec -1) 1))
  (let (%1513 (Sub %1510 %1512))
  (let (%1514 (Cast_FLOAT %1513))
  (let (%1516 (Pow %1514 %1959))
  (let (%1517 (ReduceMean %1516 (vec -1) 1))
  (let (%1518 (Constant 9.999999960041972e-13))
  (let (%1519 (Add %1517 %1518))
  (let (%1520 (Sqrt %1519))
  (let (%1521 (Div %1513 %1520))
  (let (%1522 (Mul %1521 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1523 (Add %1522 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1525 (MatMul %1523 %1960))
  (let (%1526 (Add %1525 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1527 (Constant 1.4142135381698608))
  (let (%1528 (Div %1526 %1527))
  (let (%1529 (Erf %1528))
  (let (%1530 (Constant 1.0))
  (let (%1531 (Add %1529 %1530))
  (let (%1532 (Mul %1526 %1531))
  (let (%1533 (Constant 0.5))
  (let (%1534 (Mul %1532 %1533))
  (let (%1536 (MatMul %1534 %1961))
  (let (%1537 (Add %1536 bert.encoder.layer.10.output.dense.bias))
  (let (%1538 (Add %1537 %1523))
  (let (%1540 (ReduceMean %1538 (vec -1) 1))
  (let (%1541 (Sub %1538 %1540))
  (let (%1542 (Cast_FLOAT %1541))
  (let (%1544 (Pow %1542 %1962))
  (let (%1545 (ReduceMean %1544 (vec -1) 1))
  (let (%1546 (Constant 9.999999960041972e-13))
  (let (%1547 (Add %1545 %1546))
  (let (%1548 (Sqrt %1547))
  (let (%1549 (Div %1541 %1548))
  (let (%1550 (Mul %1549 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1551 (Add %1550 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1553 (MatMul %1551 %1963))
  (let (%1554 (Add %1553 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1556 (MatMul %1551 %1964))
  (let (%1557 (Add %1556 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1559 (MatMul %1551 %1965))
  (let (%1560 (Add %1559 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1561 (Shape %1554))
  (let (%1562 (Constant 0))
  (let (%1563 (Gather %1561 %1562 0))
  (let (%1564 (Shape %1554))
  (let (%1565 (Constant 1))
  (let (%1566 (Gather %1564 %1565 0))
  (let (%1569 (Unsqueeze %1563 (vec 0)))
  (let (%1570 (Unsqueeze %1566 (vec 0)))
  (let (%1573 (Concat %1569 %1570 %1966 %1967 0))
  (let (%1574 (Reshape %1554 %1573))
  (let (%1575 (Transpose %1574 (vec 0 2 1 3)))
  (let (%1576 (Shape %1557))
  (let (%1577 (Constant 0))
  (let (%1578 (Gather %1576 %1577 0))
  (let (%1579 (Shape %1557))
  (let (%1580 (Constant 1))
  (let (%1581 (Gather %1579 %1580 0))
  (let (%1584 (Unsqueeze %1578 (vec 0)))
  (let (%1585 (Unsqueeze %1581 (vec 0)))
  (let (%1588 (Concat %1584 %1585 %1968 %1969 0))
  (let (%1589 (Reshape %1557 %1588))
  (let (%1590 (Shape %1560))
  (let (%1591 (Constant 0))
  (let (%1592 (Gather %1590 %1591 0))
  (let (%1593 (Shape %1560))
  (let (%1594 (Constant 1))
  (let (%1595 (Gather %1593 %1594 0))
  (let (%1598 (Unsqueeze %1592 (vec 0)))
  (let (%1599 (Unsqueeze %1595 (vec 0)))
  (let (%1602 (Concat %1598 %1599 %1970 %1971 0))
  (let (%1603 (Reshape %1560 %1602))
  (let (%1604 (Transpose %1603 (vec 0 2 1 3)))
  (let (%1605 (Transpose %1589 (vec 0 2 3 1)))
  (let (%1606 (MatMul %1575 %1605))
  (let (%1607 (Constant 8.0))
  (let (%1608 (Div %1606 %1607))
  (let (%1609 (Add %1608 %225))
  (let (%1610 (Softmax %1609 3))
  (let (%1611 (MatMul %1610 %1604))
  (let (%1612 (Transpose %1611 (vec 0 2 1 3)))
  (let (%1613 (Shape %1612))
  (let (%1614 (Constant 0))
  (let (%1615 (Gather %1613 %1614 0))
  (let (%1616 (Shape %1612))
  (let (%1617 (Constant 1))
  (let (%1618 (Gather %1616 %1617 0))
  (let (%1620 (Unsqueeze %1615 (vec 0)))
  (let (%1621 (Unsqueeze %1618 (vec 0)))
  (let (%1623 (Concat %1620 %1621 %1972 0))
  (let (%1624 (Reshape %1612 %1623))
  (let (%1626 (MatMul %1624 %1973))
  (let (%1627 (Add %1626 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1628 (Add %1627 %1551))
  (let (%1630 (ReduceMean %1628 (vec -1) 1))
  (let (%1631 (Sub %1628 %1630))
  (let (%1632 (Cast_FLOAT %1631))
  (let (%1634 (Pow %1632 %1974))
  (let (%1635 (ReduceMean %1634 (vec -1) 1))
  (let (%1636 (Constant 9.999999960041972e-13))
  (let (%1637 (Add %1635 %1636))
  (let (%1638 (Sqrt %1637))
  (let (%1639 (Div %1631 %1638))
  (let (%1640 (Mul %1639 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1641 (Add %1640 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1643 (MatMul %1641 %1975))
  (let (%1644 (Add %1643 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1645 (Constant 1.4142135381698608))
  (let (%1646 (Div %1644 %1645))
  (let (%1647 (Erf %1646))
  (let (%1648 (Constant 1.0))
  (let (%1649 (Add %1647 %1648))
  (let (%1650 (Mul %1644 %1649))
  (let (%1651 (Constant 0.5))
  (let (%1652 (Mul %1650 %1651))
  (let (%1654 (MatMul %1652 %1976))
  (let (%1655 (Add %1654 bert.encoder.layer.11.output.dense.bias))
  (let (%1656 (Add %1655 %1641))
  (let (%1658 (ReduceMean %1656 (vec -1) 1))
  (let (%1659 (Sub %1656 %1658))
  (let (%1660 (Cast_FLOAT %1659))
  (let (%1662 (Pow %1660 %1977))
  (let (%1663 (ReduceMean %1662 (vec -1) 1))
  (let (%1664 (Constant 9.999999960041972e-13))
  (let (%1665 (Add %1663 %1664))
  (let (%1666 (Sqrt %1665))
  (let (%1667 (Div %1659 %1666))
  (let (%1668 (Mul %1667 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1669 (Add %1668 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1671 (MatMul %1669 %1978))
  (let (%1672 (Add %1671 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1674 (MatMul %1669 %1979))
  (let (%1675 (Add %1674 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1677 (MatMul %1669 %1980))
  (let (%1678 (Add %1677 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1679 (Shape %1672))
  (let (%1680 (Constant 0))
  (let (%1681 (Gather %1679 %1680 0))
  (let (%1682 (Shape %1672))
  (let (%1683 (Constant 1))
  (let (%1684 (Gather %1682 %1683 0))
  (let (%1687 (Unsqueeze %1681 (vec 0)))
  (let (%1688 (Unsqueeze %1684 (vec 0)))
  (let (%1691 (Concat %1687 %1688 %1981 %1982 0))
  (let (%1692 (Reshape %1672 %1691))
  (let (%1693 (Transpose %1692 (vec 0 2 1 3)))
  (let (%1694 (Shape %1675))
  (let (%1695 (Constant 0))
  (let (%1696 (Gather %1694 %1695 0))
  (let (%1697 (Shape %1675))
  (let (%1698 (Constant 1))
  (let (%1699 (Gather %1697 %1698 0))
  (let (%1702 (Unsqueeze %1696 (vec 0)))
  (let (%1703 (Unsqueeze %1699 (vec 0)))
  (let (%1706 (Concat %1702 %1703 %1983 %1984 0))
  (let (%1707 (Reshape %1675 %1706))
  (let (%1708 (Shape %1678))
  (let (%1709 (Constant 0))
  (let (%1710 (Gather %1708 %1709 0))
  (let (%1711 (Shape %1678))
  (let (%1712 (Constant 1))
  (let (%1713 (Gather %1711 %1712 0))
  (let (%1716 (Unsqueeze %1710 (vec 0)))
  (let (%1717 (Unsqueeze %1713 (vec 0)))
  (let (%1720 (Concat %1716 %1717 %1985 %1986 0))
  (let (%1721 (Reshape %1678 %1720))
  (let (%1722 (Transpose %1721 (vec 0 2 1 3)))
  (let (%1723 (Transpose %1707 (vec 0 2 3 1)))
  (let (%1724 (MatMul %1693 %1723))
  (let (%1725 (Constant 8.0))
  (let (%1726 (Div %1724 %1725))
  (let (%1727 (Add %1726 %225))
  (let (%1728 (Softmax %1727 3))
  (let (%1729 (MatMul %1728 %1722))
  (let (%1730 (Transpose %1729 (vec 0 2 1 3)))
  (let (%1731 (Shape %1730))
  (let (%1732 (Constant 0))
  (let (%1733 (Gather %1731 %1732 0))
  (let (%1734 (Shape %1730))
  (let (%1735 (Constant 1))
  (let (%1736 (Gather %1734 %1735 0))
  (let (%1738 (Unsqueeze %1733 (vec 0)))
  (let (%1739 (Unsqueeze %1736 (vec 0)))
  (let (%1741 (Concat %1738 %1739 %1987 0))
  (let (%1742 (Reshape %1730 %1741))
  (let (%1744 (MatMul %1742 %1988))
  (let (%1745 (Add %1744 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1746 (Add %1745 %1669))
  (let (%1748 (ReduceMean %1746 (vec -1) 1))
  (let (%1749 (Sub %1746 %1748))
  (let (%1750 (Cast_FLOAT %1749))
  (let (%1752 (Pow %1750 %1989))
  (let (%1753 (ReduceMean %1752 (vec -1) 1))
  (let (%1754 (Constant 9.999999960041972e-13))
  (let (%1755 (Add %1753 %1754))
  (let (%1756 (Sqrt %1755))
  (let (%1757 (Div %1749 %1756))
  (let (%1758 (Mul %1757 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1759 (Add %1758 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1761 (MatMul %1759 %1990))
  (let (%1762 (Add %1761 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1763 (Constant 1.4142135381698608))
  (let (%1764 (Div %1762 %1763))
  (let (%1765 (Erf %1764))
  (let (%1766 (Constant 1.0))
  (let (%1767 (Add %1765 %1766))
  (let (%1768 (Mul %1762 %1767))
  (let (%1769 (Constant 0.5))
  (let (%1770 (Mul %1768 %1769))
  (let (%1772 (MatMul %1770 %1991))
  (let (%1773 (Add %1772 bert.encoder.layer.12.output.dense.bias))
  (let (%1774 (Add %1773 %1759))
  (let (%1776 (ReduceMean %1774 (vec -1) 1))
  (let (%1777 (Sub %1774 %1776))
  (let (%1778 (Cast_FLOAT %1777))
  (let (%1780 (Pow %1778 %1992))
  (let (%1781 (ReduceMean %1780 (vec -1) 1))
  (let (%1782 (Constant 9.999999960041972e-13))
  (let (%1783 (Add %1781 %1782))
  (let (%1784 (Sqrt %1783))
  (let (%1785 (Div %1777 %1784))
  (let (%1786 (Mul %1785 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1787 (Add %1786 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1789 (MatMul %1787 %1993))
  (let (%1790 (Add %1789 qa_outputs.bias))
  (let ((%1791 %1792) (Split %1790 (vec 1 1) -1))
  (let (output_0 (Squeeze %1791 (vec -1)))
  (let (output_1 (Squeeze %1792 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

