;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert14.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1929 (vec 0))
  (let (%1930 (vec 1))
  (let (%1931 2.0)
  (let (%1932 (load-from-onnx-float32 768 768 "%1932"))
  (let (%1933 (load-from-onnx-float32 768 768 "%1933"))
  (let (%1934 (load-from-onnx-float32 768 768 "%1934"))
  (let (%1935 (vec 12))
  (let (%1936 (vec 64))
  (let (%1937 (vec 12))
  (let (%1938 (vec 64))
  (let (%1939 (vec 12))
  (let (%1940 (vec 64))
  (let (%1941 (vec 768))
  (let (%1942 (load-from-onnx-float32 768 768 "%1942"))
  (let (%1943 2.0)
  (let (%1944 (load-from-onnx-float32 768 3072 "%1944"))
  (let (%1945 (load-from-onnx-float32 3072 768 "%1945"))
  (let (%1946 2.0)
  (let (%1947 (load-from-onnx-float32 768 768 "%1947"))
  (let (%1948 (load-from-onnx-float32 768 768 "%1948"))
  (let (%1949 (load-from-onnx-float32 768 768 "%1949"))
  (let (%1950 (vec 12))
  (let (%1951 (vec 64))
  (let (%1952 (vec 12))
  (let (%1953 (vec 64))
  (let (%1954 (vec 12))
  (let (%1955 (vec 64))
  (let (%1956 (vec 768))
  (let (%1957 (load-from-onnx-float32 768 768 "%1957"))
  (let (%1958 2.0)
  (let (%1959 (load-from-onnx-float32 768 3072 "%1959"))
  (let (%1960 (load-from-onnx-float32 3072 768 "%1960"))
  (let (%1961 2.0)
  (let (%1962 (load-from-onnx-float32 768 768 "%1962"))
  (let (%1963 (load-from-onnx-float32 768 768 "%1963"))
  (let (%1964 (load-from-onnx-float32 768 768 "%1964"))
  (let (%1965 (vec 12))
  (let (%1966 (vec 64))
  (let (%1967 (vec 12))
  (let (%1968 (vec 64))
  (let (%1969 (vec 12))
  (let (%1970 (vec 64))
  (let (%1971 (vec 768))
  (let (%1972 (load-from-onnx-float32 768 768 "%1972"))
  (let (%1973 2.0)
  (let (%1974 (load-from-onnx-float32 768 3072 "%1974"))
  (let (%1975 (load-from-onnx-float32 3072 768 "%1975"))
  (let (%1976 2.0)
  (let (%1977 (load-from-onnx-float32 768 768 "%1977"))
  (let (%1978 (load-from-onnx-float32 768 768 "%1978"))
  (let (%1979 (load-from-onnx-float32 768 768 "%1979"))
  (let (%1980 (vec 12))
  (let (%1981 (vec 64))
  (let (%1982 (vec 12))
  (let (%1983 (vec 64))
  (let (%1984 (vec 12))
  (let (%1985 (vec 64))
  (let (%1986 (vec 768))
  (let (%1987 (load-from-onnx-float32 768 768 "%1987"))
  (let (%1988 2.0)
  (let (%1989 (load-from-onnx-float32 768 3072 "%1989"))
  (let (%1990 (load-from-onnx-float32 3072 768 "%1990"))
  (let (%1991 2.0)
  (let (%1992 (load-from-onnx-float32 768 768 "%1992"))
  (let (%1993 (load-from-onnx-float32 768 768 "%1993"))
  (let (%1994 (load-from-onnx-float32 768 768 "%1994"))
  (let (%1995 (vec 12))
  (let (%1996 (vec 64))
  (let (%1997 (vec 12))
  (let (%1998 (vec 64))
  (let (%1999 (vec 12))
  (let (%2000 (vec 64))
  (let (%2001 (vec 768))
  (let (%2002 (load-from-onnx-float32 768 768 "%2002"))
  (let (%2003 2.0)
  (let (%2004 (load-from-onnx-float32 768 3072 "%2004"))
  (let (%2005 (load-from-onnx-float32 3072 768 "%2005"))
  (let (%2006 2.0)
  (let (%2007 (load-from-onnx-float32 768 768 "%2007"))
  (let (%2008 (load-from-onnx-float32 768 768 "%2008"))
  (let (%2009 (load-from-onnx-float32 768 768 "%2009"))
  (let (%2010 (vec 12))
  (let (%2011 (vec 64))
  (let (%2012 (vec 12))
  (let (%2013 (vec 64))
  (let (%2014 (vec 12))
  (let (%2015 (vec 64))
  (let (%2016 (vec 768))
  (let (%2017 (load-from-onnx-float32 768 768 "%2017"))
  (let (%2018 2.0)
  (let (%2019 (load-from-onnx-float32 768 3072 "%2019"))
  (let (%2020 (load-from-onnx-float32 3072 768 "%2020"))
  (let (%2021 2.0)
  (let (%2022 (load-from-onnx-float32 768 768 "%2022"))
  (let (%2023 (load-from-onnx-float32 768 768 "%2023"))
  (let (%2024 (load-from-onnx-float32 768 768 "%2024"))
  (let (%2025 (vec 12))
  (let (%2026 (vec 64))
  (let (%2027 (vec 12))
  (let (%2028 (vec 64))
  (let (%2029 (vec 12))
  (let (%2030 (vec 64))
  (let (%2031 (vec 768))
  (let (%2032 (load-from-onnx-float32 768 768 "%2032"))
  (let (%2033 2.0)
  (let (%2034 (load-from-onnx-float32 768 3072 "%2034"))
  (let (%2035 (load-from-onnx-float32 3072 768 "%2035"))
  (let (%2036 2.0)
  (let (%2037 (load-from-onnx-float32 768 768 "%2037"))
  (let (%2038 (load-from-onnx-float32 768 768 "%2038"))
  (let (%2039 (load-from-onnx-float32 768 768 "%2039"))
  (let (%2040 (vec 12))
  (let (%2041 (vec 64))
  (let (%2042 (vec 12))
  (let (%2043 (vec 64))
  (let (%2044 (vec 12))
  (let (%2045 (vec 64))
  (let (%2046 (vec 768))
  (let (%2047 (load-from-onnx-float32 768 768 "%2047"))
  (let (%2048 2.0)
  (let (%2049 (load-from-onnx-float32 768 3072 "%2049"))
  (let (%2050 (load-from-onnx-float32 3072 768 "%2050"))
  (let (%2051 2.0)
  (let (%2052 (load-from-onnx-float32 768 768 "%2052"))
  (let (%2053 (load-from-onnx-float32 768 768 "%2053"))
  (let (%2054 (load-from-onnx-float32 768 768 "%2054"))
  (let (%2055 (vec 12))
  (let (%2056 (vec 64))
  (let (%2057 (vec 12))
  (let (%2058 (vec 64))
  (let (%2059 (vec 12))
  (let (%2060 (vec 64))
  (let (%2061 (vec 768))
  (let (%2062 (load-from-onnx-float32 768 768 "%2062"))
  (let (%2063 2.0)
  (let (%2064 (load-from-onnx-float32 768 3072 "%2064"))
  (let (%2065 (load-from-onnx-float32 3072 768 "%2065"))
  (let (%2066 2.0)
  (let (%2067 (load-from-onnx-float32 768 768 "%2067"))
  (let (%2068 (load-from-onnx-float32 768 768 "%2068"))
  (let (%2069 (load-from-onnx-float32 768 768 "%2069"))
  (let (%2070 (vec 12))
  (let (%2071 (vec 64))
  (let (%2072 (vec 12))
  (let (%2073 (vec 64))
  (let (%2074 (vec 12))
  (let (%2075 (vec 64))
  (let (%2076 (vec 768))
  (let (%2077 (load-from-onnx-float32 768 768 "%2077"))
  (let (%2078 2.0)
  (let (%2079 (load-from-onnx-float32 768 3072 "%2079"))
  (let (%2080 (load-from-onnx-float32 3072 768 "%2080"))
  (let (%2081 2.0)
  (let (%2082 (load-from-onnx-float32 768 768 "%2082"))
  (let (%2083 (load-from-onnx-float32 768 768 "%2083"))
  (let (%2084 (load-from-onnx-float32 768 768 "%2084"))
  (let (%2085 (vec 12))
  (let (%2086 (vec 64))
  (let (%2087 (vec 12))
  (let (%2088 (vec 64))
  (let (%2089 (vec 12))
  (let (%2090 (vec 64))
  (let (%2091 (vec 768))
  (let (%2092 (load-from-onnx-float32 768 768 "%2092"))
  (let (%2093 2.0)
  (let (%2094 (load-from-onnx-float32 768 3072 "%2094"))
  (let (%2095 (load-from-onnx-float32 3072 768 "%2095"))
  (let (%2096 2.0)
  (let (%2097 (load-from-onnx-float32 768 768 "%2097"))
  (let (%2098 (load-from-onnx-float32 768 768 "%2098"))
  (let (%2099 (load-from-onnx-float32 768 768 "%2099"))
  (let (%2100 (vec 12))
  (let (%2101 (vec 64))
  (let (%2102 (vec 12))
  (let (%2103 (vec 64))
  (let (%2104 (vec 12))
  (let (%2105 (vec 64))
  (let (%2106 (vec 768))
  (let (%2107 (load-from-onnx-float32 768 768 "%2107"))
  (let (%2108 2.0)
  (let (%2109 (load-from-onnx-float32 768 3072 "%2109"))
  (let (%2110 (load-from-onnx-float32 3072 768 "%2110"))
  (let (%2111 2.0)
  (let (%2112 (load-from-onnx-float32 768 768 "%2112"))
  (let (%2113 (load-from-onnx-float32 768 768 "%2113"))
  (let (%2114 (load-from-onnx-float32 768 768 "%2114"))
  (let (%2115 (vec 12))
  (let (%2116 (vec 64))
  (let (%2117 (vec 12))
  (let (%2118 (vec 64))
  (let (%2119 (vec 12))
  (let (%2120 (vec 64))
  (let (%2121 (vec 768))
  (let (%2122 (load-from-onnx-float32 768 768 "%2122"))
  (let (%2123 2.0)
  (let (%2124 (load-from-onnx-float32 768 3072 "%2124"))
  (let (%2125 (load-from-onnx-float32 3072 768 "%2125"))
  (let (%2126 2.0)
  (let (%2127 (load-from-onnx-float32 768 768 "%2127"))
  (let (%2128 (load-from-onnx-float32 768 768 "%2128"))
  (let (%2129 (load-from-onnx-float32 768 768 "%2129"))
  (let (%2130 (vec 12))
  (let (%2131 (vec 64))
  (let (%2132 (vec 12))
  (let (%2133 (vec 64))
  (let (%2134 (vec 12))
  (let (%2135 (vec 64))
  (let (%2136 (vec 768))
  (let (%2137 (load-from-onnx-float32 768 768 "%2137"))
  (let (%2138 2.0)
  (let (%2139 (load-from-onnx-float32 768 3072 "%2139"))
  (let (%2140 (load-from-onnx-float32 3072 768 "%2140"))
  (let (%2141 2.0)
  (let (%2142 (load-from-onnx-float32 768 2 "%2142"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%235 (Unsqueeze attention_mask (vec 1)))
  (let (%236 (Unsqueeze %235 (vec 2)))
  (let (%237 (Cast_FLOAT %236))
  (let (%238 (Constant 1.0))
  (let (%239 (Sub %238 %237))
  (let (%240 (Constant -10000.0))
  (let (%241 (Mul %239 %240))
  (let (%242 (Shape input_ids))
  (let (%243 (Constant 1))
  (let (%244 (Gather %242 %243 0))
  (let (%248 (Unsqueeze %244 (vec 0)))
  (let (%250 (Constant (vec 1)))
  (let (%251 (Slice bert.embeddings.position_ids %1929 %248 %1930 %250))
  (let (%252 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%253 (Gather bert.embeddings.position_embeddings.weight %251 0))
  (let (%254 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%255 (Add %252 %253))
  (let (%256 (Add %255 %254))
  (let (%258 (ReduceMean %256 (vec -1) 1))
  (let (%259 (Sub %256 %258))
  (let (%260 (Cast_FLOAT %259))
  (let (%262 (Pow %260 %1931))
  (let (%263 (ReduceMean %262 (vec -1) 1))
  (let (%264 (Constant 9.999999960041972e-13))
  (let (%265 (Add %263 %264))
  (let (%266 (Sqrt %265))
  (let (%267 (Div %259 %266))
  (let (%268 (Mul %267 bert.embeddings.LayerNorm.weight))
  (let (%269 (Add %268 bert.embeddings.LayerNorm.bias))
  (let (%271 (MatMul %269 %1932))
  (let (%272 (Add %271 bert.encoder.layer.0.attention.self.query.bias))
  (let (%274 (MatMul %269 %1933))
  (let (%275 (Add %274 bert.encoder.layer.0.attention.self.key.bias))
  (let (%277 (MatMul %269 %1934))
  (let (%278 (Add %277 bert.encoder.layer.0.attention.self.value.bias))
  (let (%279 (Shape %272))
  (let (%280 (Constant 0))
  (let (%281 (Gather %279 %280 0))
  (let (%282 (Shape %272))
  (let (%283 (Constant 1))
  (let (%284 (Gather %282 %283 0))
  (let (%287 (Unsqueeze %281 (vec 0)))
  (let (%288 (Unsqueeze %284 (vec 0)))
  (let (%291 (Concat %287 %288 %1935 %1936 0))
  (let (%292 (Reshape %272 %291))
  (let (%293 (Transpose %292 (vec 0 2 1 3)))
  (let (%294 (Shape %275))
  (let (%295 (Constant 0))
  (let (%296 (Gather %294 %295 0))
  (let (%297 (Shape %275))
  (let (%298 (Constant 1))
  (let (%299 (Gather %297 %298 0))
  (let (%302 (Unsqueeze %296 (vec 0)))
  (let (%303 (Unsqueeze %299 (vec 0)))
  (let (%306 (Concat %302 %303 %1937 %1938 0))
  (let (%307 (Reshape %275 %306))
  (let (%308 (Shape %278))
  (let (%309 (Constant 0))
  (let (%310 (Gather %308 %309 0))
  (let (%311 (Shape %278))
  (let (%312 (Constant 1))
  (let (%313 (Gather %311 %312 0))
  (let (%316 (Unsqueeze %310 (vec 0)))
  (let (%317 (Unsqueeze %313 (vec 0)))
  (let (%320 (Concat %316 %317 %1939 %1940 0))
  (let (%321 (Reshape %278 %320))
  (let (%322 (Transpose %321 (vec 0 2 1 3)))
  (let (%323 (Transpose %307 (vec 0 2 3 1)))
  (let (%324 (MatMul %293 %323))
  (let (%325 (Constant 8.0))
  (let (%326 (Div %324 %325))
  (let (%327 (Add %326 %241))
  (let (%328 (Softmax %327 3))
  (let (%329 (MatMul %328 %322))
  (let (%330 (Transpose %329 (vec 0 2 1 3)))
  (let (%331 (Shape %330))
  (let (%332 (Constant 0))
  (let (%333 (Gather %331 %332 0))
  (let (%334 (Shape %330))
  (let (%335 (Constant 1))
  (let (%336 (Gather %334 %335 0))
  (let (%338 (Unsqueeze %333 (vec 0)))
  (let (%339 (Unsqueeze %336 (vec 0)))
  (let (%341 (Concat %338 %339 %1941 0))
  (let (%342 (Reshape %330 %341))
  (let (%344 (MatMul %342 %1942))
  (let (%345 (Add %344 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%346 (Add %345 %269))
  (let (%348 (ReduceMean %346 (vec -1) 1))
  (let (%349 (Sub %346 %348))
  (let (%350 (Cast_FLOAT %349))
  (let (%352 (Pow %350 %1943))
  (let (%353 (ReduceMean %352 (vec -1) 1))
  (let (%354 (Constant 9.999999960041972e-13))
  (let (%355 (Add %353 %354))
  (let (%356 (Sqrt %355))
  (let (%357 (Div %349 %356))
  (let (%358 (Mul %357 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%359 (Add %358 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%361 (MatMul %359 %1944))
  (let (%362 (Add %361 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%363 (Constant 1.4142135381698608))
  (let (%364 (Div %362 %363))
  (let (%365 (Erf %364))
  (let (%366 (Constant 1.0))
  (let (%367 (Add %365 %366))
  (let (%368 (Mul %362 %367))
  (let (%369 (Constant 0.5))
  (let (%370 (Mul %368 %369))
  (let (%372 (MatMul %370 %1945))
  (let (%373 (Add %372 bert.encoder.layer.0.output.dense.bias))
  (let (%374 (Add %373 %359))
  (let (%376 (ReduceMean %374 (vec -1) 1))
  (let (%377 (Sub %374 %376))
  (let (%378 (Cast_FLOAT %377))
  (let (%380 (Pow %378 %1946))
  (let (%381 (ReduceMean %380 (vec -1) 1))
  (let (%382 (Constant 9.999999960041972e-13))
  (let (%383 (Add %381 %382))
  (let (%384 (Sqrt %383))
  (let (%385 (Div %377 %384))
  (let (%386 (Mul %385 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%387 (Add %386 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%389 (MatMul %387 %1947))
  (let (%390 (Add %389 bert.encoder.layer.1.attention.self.query.bias))
  (let (%392 (MatMul %387 %1948))
  (let (%393 (Add %392 bert.encoder.layer.1.attention.self.key.bias))
  (let (%395 (MatMul %387 %1949))
  (let (%396 (Add %395 bert.encoder.layer.1.attention.self.value.bias))
  (let (%397 (Shape %390))
  (let (%398 (Constant 0))
  (let (%399 (Gather %397 %398 0))
  (let (%400 (Shape %390))
  (let (%401 (Constant 1))
  (let (%402 (Gather %400 %401 0))
  (let (%405 (Unsqueeze %399 (vec 0)))
  (let (%406 (Unsqueeze %402 (vec 0)))
  (let (%409 (Concat %405 %406 %1950 %1951 0))
  (let (%410 (Reshape %390 %409))
  (let (%411 (Transpose %410 (vec 0 2 1 3)))
  (let (%412 (Shape %393))
  (let (%413 (Constant 0))
  (let (%414 (Gather %412 %413 0))
  (let (%415 (Shape %393))
  (let (%416 (Constant 1))
  (let (%417 (Gather %415 %416 0))
  (let (%420 (Unsqueeze %414 (vec 0)))
  (let (%421 (Unsqueeze %417 (vec 0)))
  (let (%424 (Concat %420 %421 %1952 %1953 0))
  (let (%425 (Reshape %393 %424))
  (let (%426 (Shape %396))
  (let (%427 (Constant 0))
  (let (%428 (Gather %426 %427 0))
  (let (%429 (Shape %396))
  (let (%430 (Constant 1))
  (let (%431 (Gather %429 %430 0))
  (let (%434 (Unsqueeze %428 (vec 0)))
  (let (%435 (Unsqueeze %431 (vec 0)))
  (let (%438 (Concat %434 %435 %1954 %1955 0))
  (let (%439 (Reshape %396 %438))
  (let (%440 (Transpose %439 (vec 0 2 1 3)))
  (let (%441 (Transpose %425 (vec 0 2 3 1)))
  (let (%442 (MatMul %411 %441))
  (let (%443 (Constant 8.0))
  (let (%444 (Div %442 %443))
  (let (%445 (Add %444 %241))
  (let (%446 (Softmax %445 3))
  (let (%447 (MatMul %446 %440))
  (let (%448 (Transpose %447 (vec 0 2 1 3)))
  (let (%449 (Shape %448))
  (let (%450 (Constant 0))
  (let (%451 (Gather %449 %450 0))
  (let (%452 (Shape %448))
  (let (%453 (Constant 1))
  (let (%454 (Gather %452 %453 0))
  (let (%456 (Unsqueeze %451 (vec 0)))
  (let (%457 (Unsqueeze %454 (vec 0)))
  (let (%459 (Concat %456 %457 %1956 0))
  (let (%460 (Reshape %448 %459))
  (let (%462 (MatMul %460 %1957))
  (let (%463 (Add %462 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%464 (Add %463 %387))
  (let (%466 (ReduceMean %464 (vec -1) 1))
  (let (%467 (Sub %464 %466))
  (let (%468 (Cast_FLOAT %467))
  (let (%470 (Pow %468 %1958))
  (let (%471 (ReduceMean %470 (vec -1) 1))
  (let (%472 (Constant 9.999999960041972e-13))
  (let (%473 (Add %471 %472))
  (let (%474 (Sqrt %473))
  (let (%475 (Div %467 %474))
  (let (%476 (Mul %475 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%477 (Add %476 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%479 (MatMul %477 %1959))
  (let (%480 (Add %479 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%481 (Constant 1.4142135381698608))
  (let (%482 (Div %480 %481))
  (let (%483 (Erf %482))
  (let (%484 (Constant 1.0))
  (let (%485 (Add %483 %484))
  (let (%486 (Mul %480 %485))
  (let (%487 (Constant 0.5))
  (let (%488 (Mul %486 %487))
  (let (%490 (MatMul %488 %1960))
  (let (%491 (Add %490 bert.encoder.layer.1.output.dense.bias))
  (let (%492 (Add %491 %477))
  (let (%494 (ReduceMean %492 (vec -1) 1))
  (let (%495 (Sub %492 %494))
  (let (%496 (Cast_FLOAT %495))
  (let (%498 (Pow %496 %1961))
  (let (%499 (ReduceMean %498 (vec -1) 1))
  (let (%500 (Constant 9.999999960041972e-13))
  (let (%501 (Add %499 %500))
  (let (%502 (Sqrt %501))
  (let (%503 (Div %495 %502))
  (let (%504 (Mul %503 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%505 (Add %504 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%507 (MatMul %505 %1962))
  (let (%508 (Add %507 bert.encoder.layer.2.attention.self.query.bias))
  (let (%510 (MatMul %505 %1963))
  (let (%511 (Add %510 bert.encoder.layer.2.attention.self.key.bias))
  (let (%513 (MatMul %505 %1964))
  (let (%514 (Add %513 bert.encoder.layer.2.attention.self.value.bias))
  (let (%515 (Shape %508))
  (let (%516 (Constant 0))
  (let (%517 (Gather %515 %516 0))
  (let (%518 (Shape %508))
  (let (%519 (Constant 1))
  (let (%520 (Gather %518 %519 0))
  (let (%523 (Unsqueeze %517 (vec 0)))
  (let (%524 (Unsqueeze %520 (vec 0)))
  (let (%527 (Concat %523 %524 %1965 %1966 0))
  (let (%528 (Reshape %508 %527))
  (let (%529 (Transpose %528 (vec 0 2 1 3)))
  (let (%530 (Shape %511))
  (let (%531 (Constant 0))
  (let (%532 (Gather %530 %531 0))
  (let (%533 (Shape %511))
  (let (%534 (Constant 1))
  (let (%535 (Gather %533 %534 0))
  (let (%538 (Unsqueeze %532 (vec 0)))
  (let (%539 (Unsqueeze %535 (vec 0)))
  (let (%542 (Concat %538 %539 %1967 %1968 0))
  (let (%543 (Reshape %511 %542))
  (let (%544 (Shape %514))
  (let (%545 (Constant 0))
  (let (%546 (Gather %544 %545 0))
  (let (%547 (Shape %514))
  (let (%548 (Constant 1))
  (let (%549 (Gather %547 %548 0))
  (let (%552 (Unsqueeze %546 (vec 0)))
  (let (%553 (Unsqueeze %549 (vec 0)))
  (let (%556 (Concat %552 %553 %1969 %1970 0))
  (let (%557 (Reshape %514 %556))
  (let (%558 (Transpose %557 (vec 0 2 1 3)))
  (let (%559 (Transpose %543 (vec 0 2 3 1)))
  (let (%560 (MatMul %529 %559))
  (let (%561 (Constant 8.0))
  (let (%562 (Div %560 %561))
  (let (%563 (Add %562 %241))
  (let (%564 (Softmax %563 3))
  (let (%565 (MatMul %564 %558))
  (let (%566 (Transpose %565 (vec 0 2 1 3)))
  (let (%567 (Shape %566))
  (let (%568 (Constant 0))
  (let (%569 (Gather %567 %568 0))
  (let (%570 (Shape %566))
  (let (%571 (Constant 1))
  (let (%572 (Gather %570 %571 0))
  (let (%574 (Unsqueeze %569 (vec 0)))
  (let (%575 (Unsqueeze %572 (vec 0)))
  (let (%577 (Concat %574 %575 %1971 0))
  (let (%578 (Reshape %566 %577))
  (let (%580 (MatMul %578 %1972))
  (let (%581 (Add %580 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%582 (Add %581 %505))
  (let (%584 (ReduceMean %582 (vec -1) 1))
  (let (%585 (Sub %582 %584))
  (let (%586 (Cast_FLOAT %585))
  (let (%588 (Pow %586 %1973))
  (let (%589 (ReduceMean %588 (vec -1) 1))
  (let (%590 (Constant 9.999999960041972e-13))
  (let (%591 (Add %589 %590))
  (let (%592 (Sqrt %591))
  (let (%593 (Div %585 %592))
  (let (%594 (Mul %593 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%595 (Add %594 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%597 (MatMul %595 %1974))
  (let (%598 (Add %597 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%599 (Constant 1.4142135381698608))
  (let (%600 (Div %598 %599))
  (let (%601 (Erf %600))
  (let (%602 (Constant 1.0))
  (let (%603 (Add %601 %602))
  (let (%604 (Mul %598 %603))
  (let (%605 (Constant 0.5))
  (let (%606 (Mul %604 %605))
  (let (%608 (MatMul %606 %1975))
  (let (%609 (Add %608 bert.encoder.layer.2.output.dense.bias))
  (let (%610 (Add %609 %595))
  (let (%612 (ReduceMean %610 (vec -1) 1))
  (let (%613 (Sub %610 %612))
  (let (%614 (Cast_FLOAT %613))
  (let (%616 (Pow %614 %1976))
  (let (%617 (ReduceMean %616 (vec -1) 1))
  (let (%618 (Constant 9.999999960041972e-13))
  (let (%619 (Add %617 %618))
  (let (%620 (Sqrt %619))
  (let (%621 (Div %613 %620))
  (let (%622 (Mul %621 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%623 (Add %622 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%625 (MatMul %623 %1977))
  (let (%626 (Add %625 bert.encoder.layer.3.attention.self.query.bias))
  (let (%628 (MatMul %623 %1978))
  (let (%629 (Add %628 bert.encoder.layer.3.attention.self.key.bias))
  (let (%631 (MatMul %623 %1979))
  (let (%632 (Add %631 bert.encoder.layer.3.attention.self.value.bias))
  (let (%633 (Shape %626))
  (let (%634 (Constant 0))
  (let (%635 (Gather %633 %634 0))
  (let (%636 (Shape %626))
  (let (%637 (Constant 1))
  (let (%638 (Gather %636 %637 0))
  (let (%641 (Unsqueeze %635 (vec 0)))
  (let (%642 (Unsqueeze %638 (vec 0)))
  (let (%645 (Concat %641 %642 %1980 %1981 0))
  (let (%646 (Reshape %626 %645))
  (let (%647 (Transpose %646 (vec 0 2 1 3)))
  (let (%648 (Shape %629))
  (let (%649 (Constant 0))
  (let (%650 (Gather %648 %649 0))
  (let (%651 (Shape %629))
  (let (%652 (Constant 1))
  (let (%653 (Gather %651 %652 0))
  (let (%656 (Unsqueeze %650 (vec 0)))
  (let (%657 (Unsqueeze %653 (vec 0)))
  (let (%660 (Concat %656 %657 %1982 %1983 0))
  (let (%661 (Reshape %629 %660))
  (let (%662 (Shape %632))
  (let (%663 (Constant 0))
  (let (%664 (Gather %662 %663 0))
  (let (%665 (Shape %632))
  (let (%666 (Constant 1))
  (let (%667 (Gather %665 %666 0))
  (let (%670 (Unsqueeze %664 (vec 0)))
  (let (%671 (Unsqueeze %667 (vec 0)))
  (let (%674 (Concat %670 %671 %1984 %1985 0))
  (let (%675 (Reshape %632 %674))
  (let (%676 (Transpose %675 (vec 0 2 1 3)))
  (let (%677 (Transpose %661 (vec 0 2 3 1)))
  (let (%678 (MatMul %647 %677))
  (let (%679 (Constant 8.0))
  (let (%680 (Div %678 %679))
  (let (%681 (Add %680 %241))
  (let (%682 (Softmax %681 3))
  (let (%683 (MatMul %682 %676))
  (let (%684 (Transpose %683 (vec 0 2 1 3)))
  (let (%685 (Shape %684))
  (let (%686 (Constant 0))
  (let (%687 (Gather %685 %686 0))
  (let (%688 (Shape %684))
  (let (%689 (Constant 1))
  (let (%690 (Gather %688 %689 0))
  (let (%692 (Unsqueeze %687 (vec 0)))
  (let (%693 (Unsqueeze %690 (vec 0)))
  (let (%695 (Concat %692 %693 %1986 0))
  (let (%696 (Reshape %684 %695))
  (let (%698 (MatMul %696 %1987))
  (let (%699 (Add %698 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%700 (Add %699 %623))
  (let (%702 (ReduceMean %700 (vec -1) 1))
  (let (%703 (Sub %700 %702))
  (let (%704 (Cast_FLOAT %703))
  (let (%706 (Pow %704 %1988))
  (let (%707 (ReduceMean %706 (vec -1) 1))
  (let (%708 (Constant 9.999999960041972e-13))
  (let (%709 (Add %707 %708))
  (let (%710 (Sqrt %709))
  (let (%711 (Div %703 %710))
  (let (%712 (Mul %711 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%713 (Add %712 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%715 (MatMul %713 %1989))
  (let (%716 (Add %715 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%717 (Constant 1.4142135381698608))
  (let (%718 (Div %716 %717))
  (let (%719 (Erf %718))
  (let (%720 (Constant 1.0))
  (let (%721 (Add %719 %720))
  (let (%722 (Mul %716 %721))
  (let (%723 (Constant 0.5))
  (let (%724 (Mul %722 %723))
  (let (%726 (MatMul %724 %1990))
  (let (%727 (Add %726 bert.encoder.layer.3.output.dense.bias))
  (let (%728 (Add %727 %713))
  (let (%730 (ReduceMean %728 (vec -1) 1))
  (let (%731 (Sub %728 %730))
  (let (%732 (Cast_FLOAT %731))
  (let (%734 (Pow %732 %1991))
  (let (%735 (ReduceMean %734 (vec -1) 1))
  (let (%736 (Constant 9.999999960041972e-13))
  (let (%737 (Add %735 %736))
  (let (%738 (Sqrt %737))
  (let (%739 (Div %731 %738))
  (let (%740 (Mul %739 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%741 (Add %740 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%743 (MatMul %741 %1992))
  (let (%744 (Add %743 bert.encoder.layer.4.attention.self.query.bias))
  (let (%746 (MatMul %741 %1993))
  (let (%747 (Add %746 bert.encoder.layer.4.attention.self.key.bias))
  (let (%749 (MatMul %741 %1994))
  (let (%750 (Add %749 bert.encoder.layer.4.attention.self.value.bias))
  (let (%751 (Shape %744))
  (let (%752 (Constant 0))
  (let (%753 (Gather %751 %752 0))
  (let (%754 (Shape %744))
  (let (%755 (Constant 1))
  (let (%756 (Gather %754 %755 0))
  (let (%759 (Unsqueeze %753 (vec 0)))
  (let (%760 (Unsqueeze %756 (vec 0)))
  (let (%763 (Concat %759 %760 %1995 %1996 0))
  (let (%764 (Reshape %744 %763))
  (let (%765 (Transpose %764 (vec 0 2 1 3)))
  (let (%766 (Shape %747))
  (let (%767 (Constant 0))
  (let (%768 (Gather %766 %767 0))
  (let (%769 (Shape %747))
  (let (%770 (Constant 1))
  (let (%771 (Gather %769 %770 0))
  (let (%774 (Unsqueeze %768 (vec 0)))
  (let (%775 (Unsqueeze %771 (vec 0)))
  (let (%778 (Concat %774 %775 %1997 %1998 0))
  (let (%779 (Reshape %747 %778))
  (let (%780 (Shape %750))
  (let (%781 (Constant 0))
  (let (%782 (Gather %780 %781 0))
  (let (%783 (Shape %750))
  (let (%784 (Constant 1))
  (let (%785 (Gather %783 %784 0))
  (let (%788 (Unsqueeze %782 (vec 0)))
  (let (%789 (Unsqueeze %785 (vec 0)))
  (let (%792 (Concat %788 %789 %1999 %2000 0))
  (let (%793 (Reshape %750 %792))
  (let (%794 (Transpose %793 (vec 0 2 1 3)))
  (let (%795 (Transpose %779 (vec 0 2 3 1)))
  (let (%796 (MatMul %765 %795))
  (let (%797 (Constant 8.0))
  (let (%798 (Div %796 %797))
  (let (%799 (Add %798 %241))
  (let (%800 (Softmax %799 3))
  (let (%801 (MatMul %800 %794))
  (let (%802 (Transpose %801 (vec 0 2 1 3)))
  (let (%803 (Shape %802))
  (let (%804 (Constant 0))
  (let (%805 (Gather %803 %804 0))
  (let (%806 (Shape %802))
  (let (%807 (Constant 1))
  (let (%808 (Gather %806 %807 0))
  (let (%810 (Unsqueeze %805 (vec 0)))
  (let (%811 (Unsqueeze %808 (vec 0)))
  (let (%813 (Concat %810 %811 %2001 0))
  (let (%814 (Reshape %802 %813))
  (let (%816 (MatMul %814 %2002))
  (let (%817 (Add %816 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%818 (Add %817 %741))
  (let (%820 (ReduceMean %818 (vec -1) 1))
  (let (%821 (Sub %818 %820))
  (let (%822 (Cast_FLOAT %821))
  (let (%824 (Pow %822 %2003))
  (let (%825 (ReduceMean %824 (vec -1) 1))
  (let (%826 (Constant 9.999999960041972e-13))
  (let (%827 (Add %825 %826))
  (let (%828 (Sqrt %827))
  (let (%829 (Div %821 %828))
  (let (%830 (Mul %829 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%831 (Add %830 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%833 (MatMul %831 %2004))
  (let (%834 (Add %833 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%835 (Constant 1.4142135381698608))
  (let (%836 (Div %834 %835))
  (let (%837 (Erf %836))
  (let (%838 (Constant 1.0))
  (let (%839 (Add %837 %838))
  (let (%840 (Mul %834 %839))
  (let (%841 (Constant 0.5))
  (let (%842 (Mul %840 %841))
  (let (%844 (MatMul %842 %2005))
  (let (%845 (Add %844 bert.encoder.layer.4.output.dense.bias))
  (let (%846 (Add %845 %831))
  (let (%848 (ReduceMean %846 (vec -1) 1))
  (let (%849 (Sub %846 %848))
  (let (%850 (Cast_FLOAT %849))
  (let (%852 (Pow %850 %2006))
  (let (%853 (ReduceMean %852 (vec -1) 1))
  (let (%854 (Constant 9.999999960041972e-13))
  (let (%855 (Add %853 %854))
  (let (%856 (Sqrt %855))
  (let (%857 (Div %849 %856))
  (let (%858 (Mul %857 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%859 (Add %858 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%861 (MatMul %859 %2007))
  (let (%862 (Add %861 bert.encoder.layer.5.attention.self.query.bias))
  (let (%864 (MatMul %859 %2008))
  (let (%865 (Add %864 bert.encoder.layer.5.attention.self.key.bias))
  (let (%867 (MatMul %859 %2009))
  (let (%868 (Add %867 bert.encoder.layer.5.attention.self.value.bias))
  (let (%869 (Shape %862))
  (let (%870 (Constant 0))
  (let (%871 (Gather %869 %870 0))
  (let (%872 (Shape %862))
  (let (%873 (Constant 1))
  (let (%874 (Gather %872 %873 0))
  (let (%877 (Unsqueeze %871 (vec 0)))
  (let (%878 (Unsqueeze %874 (vec 0)))
  (let (%881 (Concat %877 %878 %2010 %2011 0))
  (let (%882 (Reshape %862 %881))
  (let (%883 (Transpose %882 (vec 0 2 1 3)))
  (let (%884 (Shape %865))
  (let (%885 (Constant 0))
  (let (%886 (Gather %884 %885 0))
  (let (%887 (Shape %865))
  (let (%888 (Constant 1))
  (let (%889 (Gather %887 %888 0))
  (let (%892 (Unsqueeze %886 (vec 0)))
  (let (%893 (Unsqueeze %889 (vec 0)))
  (let (%896 (Concat %892 %893 %2012 %2013 0))
  (let (%897 (Reshape %865 %896))
  (let (%898 (Shape %868))
  (let (%899 (Constant 0))
  (let (%900 (Gather %898 %899 0))
  (let (%901 (Shape %868))
  (let (%902 (Constant 1))
  (let (%903 (Gather %901 %902 0))
  (let (%906 (Unsqueeze %900 (vec 0)))
  (let (%907 (Unsqueeze %903 (vec 0)))
  (let (%910 (Concat %906 %907 %2014 %2015 0))
  (let (%911 (Reshape %868 %910))
  (let (%912 (Transpose %911 (vec 0 2 1 3)))
  (let (%913 (Transpose %897 (vec 0 2 3 1)))
  (let (%914 (MatMul %883 %913))
  (let (%915 (Constant 8.0))
  (let (%916 (Div %914 %915))
  (let (%917 (Add %916 %241))
  (let (%918 (Softmax %917 3))
  (let (%919 (MatMul %918 %912))
  (let (%920 (Transpose %919 (vec 0 2 1 3)))
  (let (%921 (Shape %920))
  (let (%922 (Constant 0))
  (let (%923 (Gather %921 %922 0))
  (let (%924 (Shape %920))
  (let (%925 (Constant 1))
  (let (%926 (Gather %924 %925 0))
  (let (%928 (Unsqueeze %923 (vec 0)))
  (let (%929 (Unsqueeze %926 (vec 0)))
  (let (%931 (Concat %928 %929 %2016 0))
  (let (%932 (Reshape %920 %931))
  (let (%934 (MatMul %932 %2017))
  (let (%935 (Add %934 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%936 (Add %935 %859))
  (let (%938 (ReduceMean %936 (vec -1) 1))
  (let (%939 (Sub %936 %938))
  (let (%940 (Cast_FLOAT %939))
  (let (%942 (Pow %940 %2018))
  (let (%943 (ReduceMean %942 (vec -1) 1))
  (let (%944 (Constant 9.999999960041972e-13))
  (let (%945 (Add %943 %944))
  (let (%946 (Sqrt %945))
  (let (%947 (Div %939 %946))
  (let (%948 (Mul %947 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%949 (Add %948 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%951 (MatMul %949 %2019))
  (let (%952 (Add %951 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%953 (Constant 1.4142135381698608))
  (let (%954 (Div %952 %953))
  (let (%955 (Erf %954))
  (let (%956 (Constant 1.0))
  (let (%957 (Add %955 %956))
  (let (%958 (Mul %952 %957))
  (let (%959 (Constant 0.5))
  (let (%960 (Mul %958 %959))
  (let (%962 (MatMul %960 %2020))
  (let (%963 (Add %962 bert.encoder.layer.5.output.dense.bias))
  (let (%964 (Add %963 %949))
  (let (%966 (ReduceMean %964 (vec -1) 1))
  (let (%967 (Sub %964 %966))
  (let (%968 (Cast_FLOAT %967))
  (let (%970 (Pow %968 %2021))
  (let (%971 (ReduceMean %970 (vec -1) 1))
  (let (%972 (Constant 9.999999960041972e-13))
  (let (%973 (Add %971 %972))
  (let (%974 (Sqrt %973))
  (let (%975 (Div %967 %974))
  (let (%976 (Mul %975 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%977 (Add %976 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%979 (MatMul %977 %2022))
  (let (%980 (Add %979 bert.encoder.layer.6.attention.self.query.bias))
  (let (%982 (MatMul %977 %2023))
  (let (%983 (Add %982 bert.encoder.layer.6.attention.self.key.bias))
  (let (%985 (MatMul %977 %2024))
  (let (%986 (Add %985 bert.encoder.layer.6.attention.self.value.bias))
  (let (%987 (Shape %980))
  (let (%988 (Constant 0))
  (let (%989 (Gather %987 %988 0))
  (let (%990 (Shape %980))
  (let (%991 (Constant 1))
  (let (%992 (Gather %990 %991 0))
  (let (%995 (Unsqueeze %989 (vec 0)))
  (let (%996 (Unsqueeze %992 (vec 0)))
  (let (%999 (Concat %995 %996 %2025 %2026 0))
  (let (%1000 (Reshape %980 %999))
  (let (%1001 (Transpose %1000 (vec 0 2 1 3)))
  (let (%1002 (Shape %983))
  (let (%1003 (Constant 0))
  (let (%1004 (Gather %1002 %1003 0))
  (let (%1005 (Shape %983))
  (let (%1006 (Constant 1))
  (let (%1007 (Gather %1005 %1006 0))
  (let (%1010 (Unsqueeze %1004 (vec 0)))
  (let (%1011 (Unsqueeze %1007 (vec 0)))
  (let (%1014 (Concat %1010 %1011 %2027 %2028 0))
  (let (%1015 (Reshape %983 %1014))
  (let (%1016 (Shape %986))
  (let (%1017 (Constant 0))
  (let (%1018 (Gather %1016 %1017 0))
  (let (%1019 (Shape %986))
  (let (%1020 (Constant 1))
  (let (%1021 (Gather %1019 %1020 0))
  (let (%1024 (Unsqueeze %1018 (vec 0)))
  (let (%1025 (Unsqueeze %1021 (vec 0)))
  (let (%1028 (Concat %1024 %1025 %2029 %2030 0))
  (let (%1029 (Reshape %986 %1028))
  (let (%1030 (Transpose %1029 (vec 0 2 1 3)))
  (let (%1031 (Transpose %1015 (vec 0 2 3 1)))
  (let (%1032 (MatMul %1001 %1031))
  (let (%1033 (Constant 8.0))
  (let (%1034 (Div %1032 %1033))
  (let (%1035 (Add %1034 %241))
  (let (%1036 (Softmax %1035 3))
  (let (%1037 (MatMul %1036 %1030))
  (let (%1038 (Transpose %1037 (vec 0 2 1 3)))
  (let (%1039 (Shape %1038))
  (let (%1040 (Constant 0))
  (let (%1041 (Gather %1039 %1040 0))
  (let (%1042 (Shape %1038))
  (let (%1043 (Constant 1))
  (let (%1044 (Gather %1042 %1043 0))
  (let (%1046 (Unsqueeze %1041 (vec 0)))
  (let (%1047 (Unsqueeze %1044 (vec 0)))
  (let (%1049 (Concat %1046 %1047 %2031 0))
  (let (%1050 (Reshape %1038 %1049))
  (let (%1052 (MatMul %1050 %2032))
  (let (%1053 (Add %1052 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1054 (Add %1053 %977))
  (let (%1056 (ReduceMean %1054 (vec -1) 1))
  (let (%1057 (Sub %1054 %1056))
  (let (%1058 (Cast_FLOAT %1057))
  (let (%1060 (Pow %1058 %2033))
  (let (%1061 (ReduceMean %1060 (vec -1) 1))
  (let (%1062 (Constant 9.999999960041972e-13))
  (let (%1063 (Add %1061 %1062))
  (let (%1064 (Sqrt %1063))
  (let (%1065 (Div %1057 %1064))
  (let (%1066 (Mul %1065 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1067 (Add %1066 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1069 (MatMul %1067 %2034))
  (let (%1070 (Add %1069 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1071 (Constant 1.4142135381698608))
  (let (%1072 (Div %1070 %1071))
  (let (%1073 (Erf %1072))
  (let (%1074 (Constant 1.0))
  (let (%1075 (Add %1073 %1074))
  (let (%1076 (Mul %1070 %1075))
  (let (%1077 (Constant 0.5))
  (let (%1078 (Mul %1076 %1077))
  (let (%1080 (MatMul %1078 %2035))
  (let (%1081 (Add %1080 bert.encoder.layer.6.output.dense.bias))
  (let (%1082 (Add %1081 %1067))
  (let (%1084 (ReduceMean %1082 (vec -1) 1))
  (let (%1085 (Sub %1082 %1084))
  (let (%1086 (Cast_FLOAT %1085))
  (let (%1088 (Pow %1086 %2036))
  (let (%1089 (ReduceMean %1088 (vec -1) 1))
  (let (%1090 (Constant 9.999999960041972e-13))
  (let (%1091 (Add %1089 %1090))
  (let (%1092 (Sqrt %1091))
  (let (%1093 (Div %1085 %1092))
  (let (%1094 (Mul %1093 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1095 (Add %1094 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1097 (MatMul %1095 %2037))
  (let (%1098 (Add %1097 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1100 (MatMul %1095 %2038))
  (let (%1101 (Add %1100 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1103 (MatMul %1095 %2039))
  (let (%1104 (Add %1103 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1105 (Shape %1098))
  (let (%1106 (Constant 0))
  (let (%1107 (Gather %1105 %1106 0))
  (let (%1108 (Shape %1098))
  (let (%1109 (Constant 1))
  (let (%1110 (Gather %1108 %1109 0))
  (let (%1113 (Unsqueeze %1107 (vec 0)))
  (let (%1114 (Unsqueeze %1110 (vec 0)))
  (let (%1117 (Concat %1113 %1114 %2040 %2041 0))
  (let (%1118 (Reshape %1098 %1117))
  (let (%1119 (Transpose %1118 (vec 0 2 1 3)))
  (let (%1120 (Shape %1101))
  (let (%1121 (Constant 0))
  (let (%1122 (Gather %1120 %1121 0))
  (let (%1123 (Shape %1101))
  (let (%1124 (Constant 1))
  (let (%1125 (Gather %1123 %1124 0))
  (let (%1128 (Unsqueeze %1122 (vec 0)))
  (let (%1129 (Unsqueeze %1125 (vec 0)))
  (let (%1132 (Concat %1128 %1129 %2042 %2043 0))
  (let (%1133 (Reshape %1101 %1132))
  (let (%1134 (Shape %1104))
  (let (%1135 (Constant 0))
  (let (%1136 (Gather %1134 %1135 0))
  (let (%1137 (Shape %1104))
  (let (%1138 (Constant 1))
  (let (%1139 (Gather %1137 %1138 0))
  (let (%1142 (Unsqueeze %1136 (vec 0)))
  (let (%1143 (Unsqueeze %1139 (vec 0)))
  (let (%1146 (Concat %1142 %1143 %2044 %2045 0))
  (let (%1147 (Reshape %1104 %1146))
  (let (%1148 (Transpose %1147 (vec 0 2 1 3)))
  (let (%1149 (Transpose %1133 (vec 0 2 3 1)))
  (let (%1150 (MatMul %1119 %1149))
  (let (%1151 (Constant 8.0))
  (let (%1152 (Div %1150 %1151))
  (let (%1153 (Add %1152 %241))
  (let (%1154 (Softmax %1153 3))
  (let (%1155 (MatMul %1154 %1148))
  (let (%1156 (Transpose %1155 (vec 0 2 1 3)))
  (let (%1157 (Shape %1156))
  (let (%1158 (Constant 0))
  (let (%1159 (Gather %1157 %1158 0))
  (let (%1160 (Shape %1156))
  (let (%1161 (Constant 1))
  (let (%1162 (Gather %1160 %1161 0))
  (let (%1164 (Unsqueeze %1159 (vec 0)))
  (let (%1165 (Unsqueeze %1162 (vec 0)))
  (let (%1167 (Concat %1164 %1165 %2046 0))
  (let (%1168 (Reshape %1156 %1167))
  (let (%1170 (MatMul %1168 %2047))
  (let (%1171 (Add %1170 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1172 (Add %1171 %1095))
  (let (%1174 (ReduceMean %1172 (vec -1) 1))
  (let (%1175 (Sub %1172 %1174))
  (let (%1176 (Cast_FLOAT %1175))
  (let (%1178 (Pow %1176 %2048))
  (let (%1179 (ReduceMean %1178 (vec -1) 1))
  (let (%1180 (Constant 9.999999960041972e-13))
  (let (%1181 (Add %1179 %1180))
  (let (%1182 (Sqrt %1181))
  (let (%1183 (Div %1175 %1182))
  (let (%1184 (Mul %1183 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1185 (Add %1184 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1187 (MatMul %1185 %2049))
  (let (%1188 (Add %1187 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1189 (Constant 1.4142135381698608))
  (let (%1190 (Div %1188 %1189))
  (let (%1191 (Erf %1190))
  (let (%1192 (Constant 1.0))
  (let (%1193 (Add %1191 %1192))
  (let (%1194 (Mul %1188 %1193))
  (let (%1195 (Constant 0.5))
  (let (%1196 (Mul %1194 %1195))
  (let (%1198 (MatMul %1196 %2050))
  (let (%1199 (Add %1198 bert.encoder.layer.7.output.dense.bias))
  (let (%1200 (Add %1199 %1185))
  (let (%1202 (ReduceMean %1200 (vec -1) 1))
  (let (%1203 (Sub %1200 %1202))
  (let (%1204 (Cast_FLOAT %1203))
  (let (%1206 (Pow %1204 %2051))
  (let (%1207 (ReduceMean %1206 (vec -1) 1))
  (let (%1208 (Constant 9.999999960041972e-13))
  (let (%1209 (Add %1207 %1208))
  (let (%1210 (Sqrt %1209))
  (let (%1211 (Div %1203 %1210))
  (let (%1212 (Mul %1211 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1213 (Add %1212 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1215 (MatMul %1213 %2052))
  (let (%1216 (Add %1215 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1218 (MatMul %1213 %2053))
  (let (%1219 (Add %1218 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1221 (MatMul %1213 %2054))
  (let (%1222 (Add %1221 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1223 (Shape %1216))
  (let (%1224 (Constant 0))
  (let (%1225 (Gather %1223 %1224 0))
  (let (%1226 (Shape %1216))
  (let (%1227 (Constant 1))
  (let (%1228 (Gather %1226 %1227 0))
  (let (%1231 (Unsqueeze %1225 (vec 0)))
  (let (%1232 (Unsqueeze %1228 (vec 0)))
  (let (%1235 (Concat %1231 %1232 %2055 %2056 0))
  (let (%1236 (Reshape %1216 %1235))
  (let (%1237 (Transpose %1236 (vec 0 2 1 3)))
  (let (%1238 (Shape %1219))
  (let (%1239 (Constant 0))
  (let (%1240 (Gather %1238 %1239 0))
  (let (%1241 (Shape %1219))
  (let (%1242 (Constant 1))
  (let (%1243 (Gather %1241 %1242 0))
  (let (%1246 (Unsqueeze %1240 (vec 0)))
  (let (%1247 (Unsqueeze %1243 (vec 0)))
  (let (%1250 (Concat %1246 %1247 %2057 %2058 0))
  (let (%1251 (Reshape %1219 %1250))
  (let (%1252 (Shape %1222))
  (let (%1253 (Constant 0))
  (let (%1254 (Gather %1252 %1253 0))
  (let (%1255 (Shape %1222))
  (let (%1256 (Constant 1))
  (let (%1257 (Gather %1255 %1256 0))
  (let (%1260 (Unsqueeze %1254 (vec 0)))
  (let (%1261 (Unsqueeze %1257 (vec 0)))
  (let (%1264 (Concat %1260 %1261 %2059 %2060 0))
  (let (%1265 (Reshape %1222 %1264))
  (let (%1266 (Transpose %1265 (vec 0 2 1 3)))
  (let (%1267 (Transpose %1251 (vec 0 2 3 1)))
  (let (%1268 (MatMul %1237 %1267))
  (let (%1269 (Constant 8.0))
  (let (%1270 (Div %1268 %1269))
  (let (%1271 (Add %1270 %241))
  (let (%1272 (Softmax %1271 3))
  (let (%1273 (MatMul %1272 %1266))
  (let (%1274 (Transpose %1273 (vec 0 2 1 3)))
  (let (%1275 (Shape %1274))
  (let (%1276 (Constant 0))
  (let (%1277 (Gather %1275 %1276 0))
  (let (%1278 (Shape %1274))
  (let (%1279 (Constant 1))
  (let (%1280 (Gather %1278 %1279 0))
  (let (%1282 (Unsqueeze %1277 (vec 0)))
  (let (%1283 (Unsqueeze %1280 (vec 0)))
  (let (%1285 (Concat %1282 %1283 %2061 0))
  (let (%1286 (Reshape %1274 %1285))
  (let (%1288 (MatMul %1286 %2062))
  (let (%1289 (Add %1288 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1290 (Add %1289 %1213))
  (let (%1292 (ReduceMean %1290 (vec -1) 1))
  (let (%1293 (Sub %1290 %1292))
  (let (%1294 (Cast_FLOAT %1293))
  (let (%1296 (Pow %1294 %2063))
  (let (%1297 (ReduceMean %1296 (vec -1) 1))
  (let (%1298 (Constant 9.999999960041972e-13))
  (let (%1299 (Add %1297 %1298))
  (let (%1300 (Sqrt %1299))
  (let (%1301 (Div %1293 %1300))
  (let (%1302 (Mul %1301 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1303 (Add %1302 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1305 (MatMul %1303 %2064))
  (let (%1306 (Add %1305 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1307 (Constant 1.4142135381698608))
  (let (%1308 (Div %1306 %1307))
  (let (%1309 (Erf %1308))
  (let (%1310 (Constant 1.0))
  (let (%1311 (Add %1309 %1310))
  (let (%1312 (Mul %1306 %1311))
  (let (%1313 (Constant 0.5))
  (let (%1314 (Mul %1312 %1313))
  (let (%1316 (MatMul %1314 %2065))
  (let (%1317 (Add %1316 bert.encoder.layer.8.output.dense.bias))
  (let (%1318 (Add %1317 %1303))
  (let (%1320 (ReduceMean %1318 (vec -1) 1))
  (let (%1321 (Sub %1318 %1320))
  (let (%1322 (Cast_FLOAT %1321))
  (let (%1324 (Pow %1322 %2066))
  (let (%1325 (ReduceMean %1324 (vec -1) 1))
  (let (%1326 (Constant 9.999999960041972e-13))
  (let (%1327 (Add %1325 %1326))
  (let (%1328 (Sqrt %1327))
  (let (%1329 (Div %1321 %1328))
  (let (%1330 (Mul %1329 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1331 (Add %1330 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1333 (MatMul %1331 %2067))
  (let (%1334 (Add %1333 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1336 (MatMul %1331 %2068))
  (let (%1337 (Add %1336 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1339 (MatMul %1331 %2069))
  (let (%1340 (Add %1339 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1341 (Shape %1334))
  (let (%1342 (Constant 0))
  (let (%1343 (Gather %1341 %1342 0))
  (let (%1344 (Shape %1334))
  (let (%1345 (Constant 1))
  (let (%1346 (Gather %1344 %1345 0))
  (let (%1349 (Unsqueeze %1343 (vec 0)))
  (let (%1350 (Unsqueeze %1346 (vec 0)))
  (let (%1353 (Concat %1349 %1350 %2070 %2071 0))
  (let (%1354 (Reshape %1334 %1353))
  (let (%1355 (Transpose %1354 (vec 0 2 1 3)))
  (let (%1356 (Shape %1337))
  (let (%1357 (Constant 0))
  (let (%1358 (Gather %1356 %1357 0))
  (let (%1359 (Shape %1337))
  (let (%1360 (Constant 1))
  (let (%1361 (Gather %1359 %1360 0))
  (let (%1364 (Unsqueeze %1358 (vec 0)))
  (let (%1365 (Unsqueeze %1361 (vec 0)))
  (let (%1368 (Concat %1364 %1365 %2072 %2073 0))
  (let (%1369 (Reshape %1337 %1368))
  (let (%1370 (Shape %1340))
  (let (%1371 (Constant 0))
  (let (%1372 (Gather %1370 %1371 0))
  (let (%1373 (Shape %1340))
  (let (%1374 (Constant 1))
  (let (%1375 (Gather %1373 %1374 0))
  (let (%1378 (Unsqueeze %1372 (vec 0)))
  (let (%1379 (Unsqueeze %1375 (vec 0)))
  (let (%1382 (Concat %1378 %1379 %2074 %2075 0))
  (let (%1383 (Reshape %1340 %1382))
  (let (%1384 (Transpose %1383 (vec 0 2 1 3)))
  (let (%1385 (Transpose %1369 (vec 0 2 3 1)))
  (let (%1386 (MatMul %1355 %1385))
  (let (%1387 (Constant 8.0))
  (let (%1388 (Div %1386 %1387))
  (let (%1389 (Add %1388 %241))
  (let (%1390 (Softmax %1389 3))
  (let (%1391 (MatMul %1390 %1384))
  (let (%1392 (Transpose %1391 (vec 0 2 1 3)))
  (let (%1393 (Shape %1392))
  (let (%1394 (Constant 0))
  (let (%1395 (Gather %1393 %1394 0))
  (let (%1396 (Shape %1392))
  (let (%1397 (Constant 1))
  (let (%1398 (Gather %1396 %1397 0))
  (let (%1400 (Unsqueeze %1395 (vec 0)))
  (let (%1401 (Unsqueeze %1398 (vec 0)))
  (let (%1403 (Concat %1400 %1401 %2076 0))
  (let (%1404 (Reshape %1392 %1403))
  (let (%1406 (MatMul %1404 %2077))
  (let (%1407 (Add %1406 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1408 (Add %1407 %1331))
  (let (%1410 (ReduceMean %1408 (vec -1) 1))
  (let (%1411 (Sub %1408 %1410))
  (let (%1412 (Cast_FLOAT %1411))
  (let (%1414 (Pow %1412 %2078))
  (let (%1415 (ReduceMean %1414 (vec -1) 1))
  (let (%1416 (Constant 9.999999960041972e-13))
  (let (%1417 (Add %1415 %1416))
  (let (%1418 (Sqrt %1417))
  (let (%1419 (Div %1411 %1418))
  (let (%1420 (Mul %1419 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1421 (Add %1420 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1423 (MatMul %1421 %2079))
  (let (%1424 (Add %1423 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1425 (Constant 1.4142135381698608))
  (let (%1426 (Div %1424 %1425))
  (let (%1427 (Erf %1426))
  (let (%1428 (Constant 1.0))
  (let (%1429 (Add %1427 %1428))
  (let (%1430 (Mul %1424 %1429))
  (let (%1431 (Constant 0.5))
  (let (%1432 (Mul %1430 %1431))
  (let (%1434 (MatMul %1432 %2080))
  (let (%1435 (Add %1434 bert.encoder.layer.9.output.dense.bias))
  (let (%1436 (Add %1435 %1421))
  (let (%1438 (ReduceMean %1436 (vec -1) 1))
  (let (%1439 (Sub %1436 %1438))
  (let (%1440 (Cast_FLOAT %1439))
  (let (%1442 (Pow %1440 %2081))
  (let (%1443 (ReduceMean %1442 (vec -1) 1))
  (let (%1444 (Constant 9.999999960041972e-13))
  (let (%1445 (Add %1443 %1444))
  (let (%1446 (Sqrt %1445))
  (let (%1447 (Div %1439 %1446))
  (let (%1448 (Mul %1447 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1449 (Add %1448 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1451 (MatMul %1449 %2082))
  (let (%1452 (Add %1451 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1454 (MatMul %1449 %2083))
  (let (%1455 (Add %1454 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1457 (MatMul %1449 %2084))
  (let (%1458 (Add %1457 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1459 (Shape %1452))
  (let (%1460 (Constant 0))
  (let (%1461 (Gather %1459 %1460 0))
  (let (%1462 (Shape %1452))
  (let (%1463 (Constant 1))
  (let (%1464 (Gather %1462 %1463 0))
  (let (%1467 (Unsqueeze %1461 (vec 0)))
  (let (%1468 (Unsqueeze %1464 (vec 0)))
  (let (%1471 (Concat %1467 %1468 %2085 %2086 0))
  (let (%1472 (Reshape %1452 %1471))
  (let (%1473 (Transpose %1472 (vec 0 2 1 3)))
  (let (%1474 (Shape %1455))
  (let (%1475 (Constant 0))
  (let (%1476 (Gather %1474 %1475 0))
  (let (%1477 (Shape %1455))
  (let (%1478 (Constant 1))
  (let (%1479 (Gather %1477 %1478 0))
  (let (%1482 (Unsqueeze %1476 (vec 0)))
  (let (%1483 (Unsqueeze %1479 (vec 0)))
  (let (%1486 (Concat %1482 %1483 %2087 %2088 0))
  (let (%1487 (Reshape %1455 %1486))
  (let (%1488 (Shape %1458))
  (let (%1489 (Constant 0))
  (let (%1490 (Gather %1488 %1489 0))
  (let (%1491 (Shape %1458))
  (let (%1492 (Constant 1))
  (let (%1493 (Gather %1491 %1492 0))
  (let (%1496 (Unsqueeze %1490 (vec 0)))
  (let (%1497 (Unsqueeze %1493 (vec 0)))
  (let (%1500 (Concat %1496 %1497 %2089 %2090 0))
  (let (%1501 (Reshape %1458 %1500))
  (let (%1502 (Transpose %1501 (vec 0 2 1 3)))
  (let (%1503 (Transpose %1487 (vec 0 2 3 1)))
  (let (%1504 (MatMul %1473 %1503))
  (let (%1505 (Constant 8.0))
  (let (%1506 (Div %1504 %1505))
  (let (%1507 (Add %1506 %241))
  (let (%1508 (Softmax %1507 3))
  (let (%1509 (MatMul %1508 %1502))
  (let (%1510 (Transpose %1509 (vec 0 2 1 3)))
  (let (%1511 (Shape %1510))
  (let (%1512 (Constant 0))
  (let (%1513 (Gather %1511 %1512 0))
  (let (%1514 (Shape %1510))
  (let (%1515 (Constant 1))
  (let (%1516 (Gather %1514 %1515 0))
  (let (%1518 (Unsqueeze %1513 (vec 0)))
  (let (%1519 (Unsqueeze %1516 (vec 0)))
  (let (%1521 (Concat %1518 %1519 %2091 0))
  (let (%1522 (Reshape %1510 %1521))
  (let (%1524 (MatMul %1522 %2092))
  (let (%1525 (Add %1524 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1526 (Add %1525 %1449))
  (let (%1528 (ReduceMean %1526 (vec -1) 1))
  (let (%1529 (Sub %1526 %1528))
  (let (%1530 (Cast_FLOAT %1529))
  (let (%1532 (Pow %1530 %2093))
  (let (%1533 (ReduceMean %1532 (vec -1) 1))
  (let (%1534 (Constant 9.999999960041972e-13))
  (let (%1535 (Add %1533 %1534))
  (let (%1536 (Sqrt %1535))
  (let (%1537 (Div %1529 %1536))
  (let (%1538 (Mul %1537 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1539 (Add %1538 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1541 (MatMul %1539 %2094))
  (let (%1542 (Add %1541 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1543 (Constant 1.4142135381698608))
  (let (%1544 (Div %1542 %1543))
  (let (%1545 (Erf %1544))
  (let (%1546 (Constant 1.0))
  (let (%1547 (Add %1545 %1546))
  (let (%1548 (Mul %1542 %1547))
  (let (%1549 (Constant 0.5))
  (let (%1550 (Mul %1548 %1549))
  (let (%1552 (MatMul %1550 %2095))
  (let (%1553 (Add %1552 bert.encoder.layer.10.output.dense.bias))
  (let (%1554 (Add %1553 %1539))
  (let (%1556 (ReduceMean %1554 (vec -1) 1))
  (let (%1557 (Sub %1554 %1556))
  (let (%1558 (Cast_FLOAT %1557))
  (let (%1560 (Pow %1558 %2096))
  (let (%1561 (ReduceMean %1560 (vec -1) 1))
  (let (%1562 (Constant 9.999999960041972e-13))
  (let (%1563 (Add %1561 %1562))
  (let (%1564 (Sqrt %1563))
  (let (%1565 (Div %1557 %1564))
  (let (%1566 (Mul %1565 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1567 (Add %1566 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1569 (MatMul %1567 %2097))
  (let (%1570 (Add %1569 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1572 (MatMul %1567 %2098))
  (let (%1573 (Add %1572 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1575 (MatMul %1567 %2099))
  (let (%1576 (Add %1575 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1577 (Shape %1570))
  (let (%1578 (Constant 0))
  (let (%1579 (Gather %1577 %1578 0))
  (let (%1580 (Shape %1570))
  (let (%1581 (Constant 1))
  (let (%1582 (Gather %1580 %1581 0))
  (let (%1585 (Unsqueeze %1579 (vec 0)))
  (let (%1586 (Unsqueeze %1582 (vec 0)))
  (let (%1589 (Concat %1585 %1586 %2100 %2101 0))
  (let (%1590 (Reshape %1570 %1589))
  (let (%1591 (Transpose %1590 (vec 0 2 1 3)))
  (let (%1592 (Shape %1573))
  (let (%1593 (Constant 0))
  (let (%1594 (Gather %1592 %1593 0))
  (let (%1595 (Shape %1573))
  (let (%1596 (Constant 1))
  (let (%1597 (Gather %1595 %1596 0))
  (let (%1600 (Unsqueeze %1594 (vec 0)))
  (let (%1601 (Unsqueeze %1597 (vec 0)))
  (let (%1604 (Concat %1600 %1601 %2102 %2103 0))
  (let (%1605 (Reshape %1573 %1604))
  (let (%1606 (Shape %1576))
  (let (%1607 (Constant 0))
  (let (%1608 (Gather %1606 %1607 0))
  (let (%1609 (Shape %1576))
  (let (%1610 (Constant 1))
  (let (%1611 (Gather %1609 %1610 0))
  (let (%1614 (Unsqueeze %1608 (vec 0)))
  (let (%1615 (Unsqueeze %1611 (vec 0)))
  (let (%1618 (Concat %1614 %1615 %2104 %2105 0))
  (let (%1619 (Reshape %1576 %1618))
  (let (%1620 (Transpose %1619 (vec 0 2 1 3)))
  (let (%1621 (Transpose %1605 (vec 0 2 3 1)))
  (let (%1622 (MatMul %1591 %1621))
  (let (%1623 (Constant 8.0))
  (let (%1624 (Div %1622 %1623))
  (let (%1625 (Add %1624 %241))
  (let (%1626 (Softmax %1625 3))
  (let (%1627 (MatMul %1626 %1620))
  (let (%1628 (Transpose %1627 (vec 0 2 1 3)))
  (let (%1629 (Shape %1628))
  (let (%1630 (Constant 0))
  (let (%1631 (Gather %1629 %1630 0))
  (let (%1632 (Shape %1628))
  (let (%1633 (Constant 1))
  (let (%1634 (Gather %1632 %1633 0))
  (let (%1636 (Unsqueeze %1631 (vec 0)))
  (let (%1637 (Unsqueeze %1634 (vec 0)))
  (let (%1639 (Concat %1636 %1637 %2106 0))
  (let (%1640 (Reshape %1628 %1639))
  (let (%1642 (MatMul %1640 %2107))
  (let (%1643 (Add %1642 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1644 (Add %1643 %1567))
  (let (%1646 (ReduceMean %1644 (vec -1) 1))
  (let (%1647 (Sub %1644 %1646))
  (let (%1648 (Cast_FLOAT %1647))
  (let (%1650 (Pow %1648 %2108))
  (let (%1651 (ReduceMean %1650 (vec -1) 1))
  (let (%1652 (Constant 9.999999960041972e-13))
  (let (%1653 (Add %1651 %1652))
  (let (%1654 (Sqrt %1653))
  (let (%1655 (Div %1647 %1654))
  (let (%1656 (Mul %1655 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1657 (Add %1656 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1659 (MatMul %1657 %2109))
  (let (%1660 (Add %1659 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1661 (Constant 1.4142135381698608))
  (let (%1662 (Div %1660 %1661))
  (let (%1663 (Erf %1662))
  (let (%1664 (Constant 1.0))
  (let (%1665 (Add %1663 %1664))
  (let (%1666 (Mul %1660 %1665))
  (let (%1667 (Constant 0.5))
  (let (%1668 (Mul %1666 %1667))
  (let (%1670 (MatMul %1668 %2110))
  (let (%1671 (Add %1670 bert.encoder.layer.11.output.dense.bias))
  (let (%1672 (Add %1671 %1657))
  (let (%1674 (ReduceMean %1672 (vec -1) 1))
  (let (%1675 (Sub %1672 %1674))
  (let (%1676 (Cast_FLOAT %1675))
  (let (%1678 (Pow %1676 %2111))
  (let (%1679 (ReduceMean %1678 (vec -1) 1))
  (let (%1680 (Constant 9.999999960041972e-13))
  (let (%1681 (Add %1679 %1680))
  (let (%1682 (Sqrt %1681))
  (let (%1683 (Div %1675 %1682))
  (let (%1684 (Mul %1683 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1685 (Add %1684 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1687 (MatMul %1685 %2112))
  (let (%1688 (Add %1687 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1690 (MatMul %1685 %2113))
  (let (%1691 (Add %1690 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1693 (MatMul %1685 %2114))
  (let (%1694 (Add %1693 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1695 (Shape %1688))
  (let (%1696 (Constant 0))
  (let (%1697 (Gather %1695 %1696 0))
  (let (%1698 (Shape %1688))
  (let (%1699 (Constant 1))
  (let (%1700 (Gather %1698 %1699 0))
  (let (%1703 (Unsqueeze %1697 (vec 0)))
  (let (%1704 (Unsqueeze %1700 (vec 0)))
  (let (%1707 (Concat %1703 %1704 %2115 %2116 0))
  (let (%1708 (Reshape %1688 %1707))
  (let (%1709 (Transpose %1708 (vec 0 2 1 3)))
  (let (%1710 (Shape %1691))
  (let (%1711 (Constant 0))
  (let (%1712 (Gather %1710 %1711 0))
  (let (%1713 (Shape %1691))
  (let (%1714 (Constant 1))
  (let (%1715 (Gather %1713 %1714 0))
  (let (%1718 (Unsqueeze %1712 (vec 0)))
  (let (%1719 (Unsqueeze %1715 (vec 0)))
  (let (%1722 (Concat %1718 %1719 %2117 %2118 0))
  (let (%1723 (Reshape %1691 %1722))
  (let (%1724 (Shape %1694))
  (let (%1725 (Constant 0))
  (let (%1726 (Gather %1724 %1725 0))
  (let (%1727 (Shape %1694))
  (let (%1728 (Constant 1))
  (let (%1729 (Gather %1727 %1728 0))
  (let (%1732 (Unsqueeze %1726 (vec 0)))
  (let (%1733 (Unsqueeze %1729 (vec 0)))
  (let (%1736 (Concat %1732 %1733 %2119 %2120 0))
  (let (%1737 (Reshape %1694 %1736))
  (let (%1738 (Transpose %1737 (vec 0 2 1 3)))
  (let (%1739 (Transpose %1723 (vec 0 2 3 1)))
  (let (%1740 (MatMul %1709 %1739))
  (let (%1741 (Constant 8.0))
  (let (%1742 (Div %1740 %1741))
  (let (%1743 (Add %1742 %241))
  (let (%1744 (Softmax %1743 3))
  (let (%1745 (MatMul %1744 %1738))
  (let (%1746 (Transpose %1745 (vec 0 2 1 3)))
  (let (%1747 (Shape %1746))
  (let (%1748 (Constant 0))
  (let (%1749 (Gather %1747 %1748 0))
  (let (%1750 (Shape %1746))
  (let (%1751 (Constant 1))
  (let (%1752 (Gather %1750 %1751 0))
  (let (%1754 (Unsqueeze %1749 (vec 0)))
  (let (%1755 (Unsqueeze %1752 (vec 0)))
  (let (%1757 (Concat %1754 %1755 %2121 0))
  (let (%1758 (Reshape %1746 %1757))
  (let (%1760 (MatMul %1758 %2122))
  (let (%1761 (Add %1760 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1762 (Add %1761 %1685))
  (let (%1764 (ReduceMean %1762 (vec -1) 1))
  (let (%1765 (Sub %1762 %1764))
  (let (%1766 (Cast_FLOAT %1765))
  (let (%1768 (Pow %1766 %2123))
  (let (%1769 (ReduceMean %1768 (vec -1) 1))
  (let (%1770 (Constant 9.999999960041972e-13))
  (let (%1771 (Add %1769 %1770))
  (let (%1772 (Sqrt %1771))
  (let (%1773 (Div %1765 %1772))
  (let (%1774 (Mul %1773 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1775 (Add %1774 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1777 (MatMul %1775 %2124))
  (let (%1778 (Add %1777 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1779 (Constant 1.4142135381698608))
  (let (%1780 (Div %1778 %1779))
  (let (%1781 (Erf %1780))
  (let (%1782 (Constant 1.0))
  (let (%1783 (Add %1781 %1782))
  (let (%1784 (Mul %1778 %1783))
  (let (%1785 (Constant 0.5))
  (let (%1786 (Mul %1784 %1785))
  (let (%1788 (MatMul %1786 %2125))
  (let (%1789 (Add %1788 bert.encoder.layer.12.output.dense.bias))
  (let (%1790 (Add %1789 %1775))
  (let (%1792 (ReduceMean %1790 (vec -1) 1))
  (let (%1793 (Sub %1790 %1792))
  (let (%1794 (Cast_FLOAT %1793))
  (let (%1796 (Pow %1794 %2126))
  (let (%1797 (ReduceMean %1796 (vec -1) 1))
  (let (%1798 (Constant 9.999999960041972e-13))
  (let (%1799 (Add %1797 %1798))
  (let (%1800 (Sqrt %1799))
  (let (%1801 (Div %1793 %1800))
  (let (%1802 (Mul %1801 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1803 (Add %1802 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1805 (MatMul %1803 %2127))
  (let (%1806 (Add %1805 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1808 (MatMul %1803 %2128))
  (let (%1809 (Add %1808 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1811 (MatMul %1803 %2129))
  (let (%1812 (Add %1811 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1813 (Shape %1806))
  (let (%1814 (Constant 0))
  (let (%1815 (Gather %1813 %1814 0))
  (let (%1816 (Shape %1806))
  (let (%1817 (Constant 1))
  (let (%1818 (Gather %1816 %1817 0))
  (let (%1821 (Unsqueeze %1815 (vec 0)))
  (let (%1822 (Unsqueeze %1818 (vec 0)))
  (let (%1825 (Concat %1821 %1822 %2130 %2131 0))
  (let (%1826 (Reshape %1806 %1825))
  (let (%1827 (Transpose %1826 (vec 0 2 1 3)))
  (let (%1828 (Shape %1809))
  (let (%1829 (Constant 0))
  (let (%1830 (Gather %1828 %1829 0))
  (let (%1831 (Shape %1809))
  (let (%1832 (Constant 1))
  (let (%1833 (Gather %1831 %1832 0))
  (let (%1836 (Unsqueeze %1830 (vec 0)))
  (let (%1837 (Unsqueeze %1833 (vec 0)))
  (let (%1840 (Concat %1836 %1837 %2132 %2133 0))
  (let (%1841 (Reshape %1809 %1840))
  (let (%1842 (Shape %1812))
  (let (%1843 (Constant 0))
  (let (%1844 (Gather %1842 %1843 0))
  (let (%1845 (Shape %1812))
  (let (%1846 (Constant 1))
  (let (%1847 (Gather %1845 %1846 0))
  (let (%1850 (Unsqueeze %1844 (vec 0)))
  (let (%1851 (Unsqueeze %1847 (vec 0)))
  (let (%1854 (Concat %1850 %1851 %2134 %2135 0))
  (let (%1855 (Reshape %1812 %1854))
  (let (%1856 (Transpose %1855 (vec 0 2 1 3)))
  (let (%1857 (Transpose %1841 (vec 0 2 3 1)))
  (let (%1858 (MatMul %1827 %1857))
  (let (%1859 (Constant 8.0))
  (let (%1860 (Div %1858 %1859))
  (let (%1861 (Add %1860 %241))
  (let (%1862 (Softmax %1861 3))
  (let (%1863 (MatMul %1862 %1856))
  (let (%1864 (Transpose %1863 (vec 0 2 1 3)))
  (let (%1865 (Shape %1864))
  (let (%1866 (Constant 0))
  (let (%1867 (Gather %1865 %1866 0))
  (let (%1868 (Shape %1864))
  (let (%1869 (Constant 1))
  (let (%1870 (Gather %1868 %1869 0))
  (let (%1872 (Unsqueeze %1867 (vec 0)))
  (let (%1873 (Unsqueeze %1870 (vec 0)))
  (let (%1875 (Concat %1872 %1873 %2136 0))
  (let (%1876 (Reshape %1864 %1875))
  (let (%1878 (MatMul %1876 %2137))
  (let (%1879 (Add %1878 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1880 (Add %1879 %1803))
  (let (%1882 (ReduceMean %1880 (vec -1) 1))
  (let (%1883 (Sub %1880 %1882))
  (let (%1884 (Cast_FLOAT %1883))
  (let (%1886 (Pow %1884 %2138))
  (let (%1887 (ReduceMean %1886 (vec -1) 1))
  (let (%1888 (Constant 9.999999960041972e-13))
  (let (%1889 (Add %1887 %1888))
  (let (%1890 (Sqrt %1889))
  (let (%1891 (Div %1883 %1890))
  (let (%1892 (Mul %1891 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1893 (Add %1892 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1895 (MatMul %1893 %2139))
  (let (%1896 (Add %1895 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1897 (Constant 1.4142135381698608))
  (let (%1898 (Div %1896 %1897))
  (let (%1899 (Erf %1898))
  (let (%1900 (Constant 1.0))
  (let (%1901 (Add %1899 %1900))
  (let (%1902 (Mul %1896 %1901))
  (let (%1903 (Constant 0.5))
  (let (%1904 (Mul %1902 %1903))
  (let (%1906 (MatMul %1904 %2140))
  (let (%1907 (Add %1906 bert.encoder.layer.13.output.dense.bias))
  (let (%1908 (Add %1907 %1893))
  (let (%1910 (ReduceMean %1908 (vec -1) 1))
  (let (%1911 (Sub %1908 %1910))
  (let (%1912 (Cast_FLOAT %1911))
  (let (%1914 (Pow %1912 %2141))
  (let (%1915 (ReduceMean %1914 (vec -1) 1))
  (let (%1916 (Constant 9.999999960041972e-13))
  (let (%1917 (Add %1915 %1916))
  (let (%1918 (Sqrt %1917))
  (let (%1919 (Div %1911 %1918))
  (let (%1920 (Mul %1919 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%1921 (Add %1920 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%1923 (MatMul %1921 %2142))
  (let (%1924 (Add %1923 qa_outputs.bias))
  (let ((%1925 %1926) (Split %1924 (vec 1 1) -1))
  (let (output_0 (Squeeze %1925 (vec -1)))
  (let (output_1 (Squeeze %1926 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

