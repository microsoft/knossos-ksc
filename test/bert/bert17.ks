;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert17.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2331 (vec 0))
  (let (%2332 (vec 1))
  (let (%2333 2.0)
  (let (%2334 (load-from-onnx-float32 768 768 "%2334"))
  (let (%2335 (load-from-onnx-float32 768 768 "%2335"))
  (let (%2336 (load-from-onnx-float32 768 768 "%2336"))
  (let (%2337 (vec 12))
  (let (%2338 (vec 64))
  (let (%2339 (vec 12))
  (let (%2340 (vec 64))
  (let (%2341 (vec 12))
  (let (%2342 (vec 64))
  (let (%2343 (vec 768))
  (let (%2344 (load-from-onnx-float32 768 768 "%2344"))
  (let (%2345 2.0)
  (let (%2346 (load-from-onnx-float32 768 3072 "%2346"))
  (let (%2347 (load-from-onnx-float32 3072 768 "%2347"))
  (let (%2348 2.0)
  (let (%2349 (load-from-onnx-float32 768 768 "%2349"))
  (let (%2350 (load-from-onnx-float32 768 768 "%2350"))
  (let (%2351 (load-from-onnx-float32 768 768 "%2351"))
  (let (%2352 (vec 12))
  (let (%2353 (vec 64))
  (let (%2354 (vec 12))
  (let (%2355 (vec 64))
  (let (%2356 (vec 12))
  (let (%2357 (vec 64))
  (let (%2358 (vec 768))
  (let (%2359 (load-from-onnx-float32 768 768 "%2359"))
  (let (%2360 2.0)
  (let (%2361 (load-from-onnx-float32 768 3072 "%2361"))
  (let (%2362 (load-from-onnx-float32 3072 768 "%2362"))
  (let (%2363 2.0)
  (let (%2364 (load-from-onnx-float32 768 768 "%2364"))
  (let (%2365 (load-from-onnx-float32 768 768 "%2365"))
  (let (%2366 (load-from-onnx-float32 768 768 "%2366"))
  (let (%2367 (vec 12))
  (let (%2368 (vec 64))
  (let (%2369 (vec 12))
  (let (%2370 (vec 64))
  (let (%2371 (vec 12))
  (let (%2372 (vec 64))
  (let (%2373 (vec 768))
  (let (%2374 (load-from-onnx-float32 768 768 "%2374"))
  (let (%2375 2.0)
  (let (%2376 (load-from-onnx-float32 768 3072 "%2376"))
  (let (%2377 (load-from-onnx-float32 3072 768 "%2377"))
  (let (%2378 2.0)
  (let (%2379 (load-from-onnx-float32 768 768 "%2379"))
  (let (%2380 (load-from-onnx-float32 768 768 "%2380"))
  (let (%2381 (load-from-onnx-float32 768 768 "%2381"))
  (let (%2382 (vec 12))
  (let (%2383 (vec 64))
  (let (%2384 (vec 12))
  (let (%2385 (vec 64))
  (let (%2386 (vec 12))
  (let (%2387 (vec 64))
  (let (%2388 (vec 768))
  (let (%2389 (load-from-onnx-float32 768 768 "%2389"))
  (let (%2390 2.0)
  (let (%2391 (load-from-onnx-float32 768 3072 "%2391"))
  (let (%2392 (load-from-onnx-float32 3072 768 "%2392"))
  (let (%2393 2.0)
  (let (%2394 (load-from-onnx-float32 768 768 "%2394"))
  (let (%2395 (load-from-onnx-float32 768 768 "%2395"))
  (let (%2396 (load-from-onnx-float32 768 768 "%2396"))
  (let (%2397 (vec 12))
  (let (%2398 (vec 64))
  (let (%2399 (vec 12))
  (let (%2400 (vec 64))
  (let (%2401 (vec 12))
  (let (%2402 (vec 64))
  (let (%2403 (vec 768))
  (let (%2404 (load-from-onnx-float32 768 768 "%2404"))
  (let (%2405 2.0)
  (let (%2406 (load-from-onnx-float32 768 3072 "%2406"))
  (let (%2407 (load-from-onnx-float32 3072 768 "%2407"))
  (let (%2408 2.0)
  (let (%2409 (load-from-onnx-float32 768 768 "%2409"))
  (let (%2410 (load-from-onnx-float32 768 768 "%2410"))
  (let (%2411 (load-from-onnx-float32 768 768 "%2411"))
  (let (%2412 (vec 12))
  (let (%2413 (vec 64))
  (let (%2414 (vec 12))
  (let (%2415 (vec 64))
  (let (%2416 (vec 12))
  (let (%2417 (vec 64))
  (let (%2418 (vec 768))
  (let (%2419 (load-from-onnx-float32 768 768 "%2419"))
  (let (%2420 2.0)
  (let (%2421 (load-from-onnx-float32 768 3072 "%2421"))
  (let (%2422 (load-from-onnx-float32 3072 768 "%2422"))
  (let (%2423 2.0)
  (let (%2424 (load-from-onnx-float32 768 768 "%2424"))
  (let (%2425 (load-from-onnx-float32 768 768 "%2425"))
  (let (%2426 (load-from-onnx-float32 768 768 "%2426"))
  (let (%2427 (vec 12))
  (let (%2428 (vec 64))
  (let (%2429 (vec 12))
  (let (%2430 (vec 64))
  (let (%2431 (vec 12))
  (let (%2432 (vec 64))
  (let (%2433 (vec 768))
  (let (%2434 (load-from-onnx-float32 768 768 "%2434"))
  (let (%2435 2.0)
  (let (%2436 (load-from-onnx-float32 768 3072 "%2436"))
  (let (%2437 (load-from-onnx-float32 3072 768 "%2437"))
  (let (%2438 2.0)
  (let (%2439 (load-from-onnx-float32 768 768 "%2439"))
  (let (%2440 (load-from-onnx-float32 768 768 "%2440"))
  (let (%2441 (load-from-onnx-float32 768 768 "%2441"))
  (let (%2442 (vec 12))
  (let (%2443 (vec 64))
  (let (%2444 (vec 12))
  (let (%2445 (vec 64))
  (let (%2446 (vec 12))
  (let (%2447 (vec 64))
  (let (%2448 (vec 768))
  (let (%2449 (load-from-onnx-float32 768 768 "%2449"))
  (let (%2450 2.0)
  (let (%2451 (load-from-onnx-float32 768 3072 "%2451"))
  (let (%2452 (load-from-onnx-float32 3072 768 "%2452"))
  (let (%2453 2.0)
  (let (%2454 (load-from-onnx-float32 768 768 "%2454"))
  (let (%2455 (load-from-onnx-float32 768 768 "%2455"))
  (let (%2456 (load-from-onnx-float32 768 768 "%2456"))
  (let (%2457 (vec 12))
  (let (%2458 (vec 64))
  (let (%2459 (vec 12))
  (let (%2460 (vec 64))
  (let (%2461 (vec 12))
  (let (%2462 (vec 64))
  (let (%2463 (vec 768))
  (let (%2464 (load-from-onnx-float32 768 768 "%2464"))
  (let (%2465 2.0)
  (let (%2466 (load-from-onnx-float32 768 3072 "%2466"))
  (let (%2467 (load-from-onnx-float32 3072 768 "%2467"))
  (let (%2468 2.0)
  (let (%2469 (load-from-onnx-float32 768 768 "%2469"))
  (let (%2470 (load-from-onnx-float32 768 768 "%2470"))
  (let (%2471 (load-from-onnx-float32 768 768 "%2471"))
  (let (%2472 (vec 12))
  (let (%2473 (vec 64))
  (let (%2474 (vec 12))
  (let (%2475 (vec 64))
  (let (%2476 (vec 12))
  (let (%2477 (vec 64))
  (let (%2478 (vec 768))
  (let (%2479 (load-from-onnx-float32 768 768 "%2479"))
  (let (%2480 2.0)
  (let (%2481 (load-from-onnx-float32 768 3072 "%2481"))
  (let (%2482 (load-from-onnx-float32 3072 768 "%2482"))
  (let (%2483 2.0)
  (let (%2484 (load-from-onnx-float32 768 768 "%2484"))
  (let (%2485 (load-from-onnx-float32 768 768 "%2485"))
  (let (%2486 (load-from-onnx-float32 768 768 "%2486"))
  (let (%2487 (vec 12))
  (let (%2488 (vec 64))
  (let (%2489 (vec 12))
  (let (%2490 (vec 64))
  (let (%2491 (vec 12))
  (let (%2492 (vec 64))
  (let (%2493 (vec 768))
  (let (%2494 (load-from-onnx-float32 768 768 "%2494"))
  (let (%2495 2.0)
  (let (%2496 (load-from-onnx-float32 768 3072 "%2496"))
  (let (%2497 (load-from-onnx-float32 3072 768 "%2497"))
  (let (%2498 2.0)
  (let (%2499 (load-from-onnx-float32 768 768 "%2499"))
  (let (%2500 (load-from-onnx-float32 768 768 "%2500"))
  (let (%2501 (load-from-onnx-float32 768 768 "%2501"))
  (let (%2502 (vec 12))
  (let (%2503 (vec 64))
  (let (%2504 (vec 12))
  (let (%2505 (vec 64))
  (let (%2506 (vec 12))
  (let (%2507 (vec 64))
  (let (%2508 (vec 768))
  (let (%2509 (load-from-onnx-float32 768 768 "%2509"))
  (let (%2510 2.0)
  (let (%2511 (load-from-onnx-float32 768 3072 "%2511"))
  (let (%2512 (load-from-onnx-float32 3072 768 "%2512"))
  (let (%2513 2.0)
  (let (%2514 (load-from-onnx-float32 768 768 "%2514"))
  (let (%2515 (load-from-onnx-float32 768 768 "%2515"))
  (let (%2516 (load-from-onnx-float32 768 768 "%2516"))
  (let (%2517 (vec 12))
  (let (%2518 (vec 64))
  (let (%2519 (vec 12))
  (let (%2520 (vec 64))
  (let (%2521 (vec 12))
  (let (%2522 (vec 64))
  (let (%2523 (vec 768))
  (let (%2524 (load-from-onnx-float32 768 768 "%2524"))
  (let (%2525 2.0)
  (let (%2526 (load-from-onnx-float32 768 3072 "%2526"))
  (let (%2527 (load-from-onnx-float32 3072 768 "%2527"))
  (let (%2528 2.0)
  (let (%2529 (load-from-onnx-float32 768 768 "%2529"))
  (let (%2530 (load-from-onnx-float32 768 768 "%2530"))
  (let (%2531 (load-from-onnx-float32 768 768 "%2531"))
  (let (%2532 (vec 12))
  (let (%2533 (vec 64))
  (let (%2534 (vec 12))
  (let (%2535 (vec 64))
  (let (%2536 (vec 12))
  (let (%2537 (vec 64))
  (let (%2538 (vec 768))
  (let (%2539 (load-from-onnx-float32 768 768 "%2539"))
  (let (%2540 2.0)
  (let (%2541 (load-from-onnx-float32 768 3072 "%2541"))
  (let (%2542 (load-from-onnx-float32 3072 768 "%2542"))
  (let (%2543 2.0)
  (let (%2544 (load-from-onnx-float32 768 768 "%2544"))
  (let (%2545 (load-from-onnx-float32 768 768 "%2545"))
  (let (%2546 (load-from-onnx-float32 768 768 "%2546"))
  (let (%2547 (vec 12))
  (let (%2548 (vec 64))
  (let (%2549 (vec 12))
  (let (%2550 (vec 64))
  (let (%2551 (vec 12))
  (let (%2552 (vec 64))
  (let (%2553 (vec 768))
  (let (%2554 (load-from-onnx-float32 768 768 "%2554"))
  (let (%2555 2.0)
  (let (%2556 (load-from-onnx-float32 768 3072 "%2556"))
  (let (%2557 (load-from-onnx-float32 3072 768 "%2557"))
  (let (%2558 2.0)
  (let (%2559 (load-from-onnx-float32 768 768 "%2559"))
  (let (%2560 (load-from-onnx-float32 768 768 "%2560"))
  (let (%2561 (load-from-onnx-float32 768 768 "%2561"))
  (let (%2562 (vec 12))
  (let (%2563 (vec 64))
  (let (%2564 (vec 12))
  (let (%2565 (vec 64))
  (let (%2566 (vec 12))
  (let (%2567 (vec 64))
  (let (%2568 (vec 768))
  (let (%2569 (load-from-onnx-float32 768 768 "%2569"))
  (let (%2570 2.0)
  (let (%2571 (load-from-onnx-float32 768 3072 "%2571"))
  (let (%2572 (load-from-onnx-float32 3072 768 "%2572"))
  (let (%2573 2.0)
  (let (%2574 (load-from-onnx-float32 768 768 "%2574"))
  (let (%2575 (load-from-onnx-float32 768 768 "%2575"))
  (let (%2576 (load-from-onnx-float32 768 768 "%2576"))
  (let (%2577 (vec 12))
  (let (%2578 (vec 64))
  (let (%2579 (vec 12))
  (let (%2580 (vec 64))
  (let (%2581 (vec 12))
  (let (%2582 (vec 64))
  (let (%2583 (vec 768))
  (let (%2584 (load-from-onnx-float32 768 768 "%2584"))
  (let (%2585 2.0)
  (let (%2586 (load-from-onnx-float32 768 3072 "%2586"))
  (let (%2587 (load-from-onnx-float32 3072 768 "%2587"))
  (let (%2588 2.0)
  (let (%2589 (load-from-onnx-float32 768 2 "%2589"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%283 (Unsqueeze attention_mask (vec 1)))
  (let (%284 (Unsqueeze %283 (vec 2)))
  (let (%285 (Cast_FLOAT %284))
  (let (%286 (Constant 1.0))
  (let (%287 (Sub %286 %285))
  (let (%288 (Constant -10000.0))
  (let (%289 (Mul %287 %288))
  (let (%290 (Shape input_ids))
  (let (%291 (Constant 1))
  (let (%292 (Gather %290 %291 0))
  (let (%296 (Unsqueeze %292 (vec 0)))
  (let (%298 (Constant (vec 1)))
  (let (%299 (Slice bert.embeddings.position_ids %2331 %296 %2332 %298))
  (let (%300 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%301 (Gather bert.embeddings.position_embeddings.weight %299 0))
  (let (%302 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%303 (Add %300 %301))
  (let (%304 (Add %303 %302))
  (let (%306 (ReduceMean %304 (vec -1) 1))
  (let (%307 (Sub %304 %306))
  (let (%308 (Cast_FLOAT %307))
  (let (%310 (Pow %308 %2333))
  (let (%311 (ReduceMean %310 (vec -1) 1))
  (let (%312 (Constant 9.999999960041972e-13))
  (let (%313 (Add %311 %312))
  (let (%314 (Sqrt %313))
  (let (%315 (Div %307 %314))
  (let (%316 (Mul %315 bert.embeddings.LayerNorm.weight))
  (let (%317 (Add %316 bert.embeddings.LayerNorm.bias))
  (let (%319 (MatMul %317 %2334))
  (let (%320 (Add %319 bert.encoder.layer.0.attention.self.query.bias))
  (let (%322 (MatMul %317 %2335))
  (let (%323 (Add %322 bert.encoder.layer.0.attention.self.key.bias))
  (let (%325 (MatMul %317 %2336))
  (let (%326 (Add %325 bert.encoder.layer.0.attention.self.value.bias))
  (let (%327 (Shape %320))
  (let (%328 (Constant 0))
  (let (%329 (Gather %327 %328 0))
  (let (%330 (Shape %320))
  (let (%331 (Constant 1))
  (let (%332 (Gather %330 %331 0))
  (let (%335 (Unsqueeze %329 (vec 0)))
  (let (%336 (Unsqueeze %332 (vec 0)))
  (let (%339 (Concat %335 %336 %2337 %2338 0))
  (let (%340 (Reshape %320 %339))
  (let (%341 (Transpose %340 (vec 0 2 1 3)))
  (let (%342 (Shape %323))
  (let (%343 (Constant 0))
  (let (%344 (Gather %342 %343 0))
  (let (%345 (Shape %323))
  (let (%346 (Constant 1))
  (let (%347 (Gather %345 %346 0))
  (let (%350 (Unsqueeze %344 (vec 0)))
  (let (%351 (Unsqueeze %347 (vec 0)))
  (let (%354 (Concat %350 %351 %2339 %2340 0))
  (let (%355 (Reshape %323 %354))
  (let (%356 (Shape %326))
  (let (%357 (Constant 0))
  (let (%358 (Gather %356 %357 0))
  (let (%359 (Shape %326))
  (let (%360 (Constant 1))
  (let (%361 (Gather %359 %360 0))
  (let (%364 (Unsqueeze %358 (vec 0)))
  (let (%365 (Unsqueeze %361 (vec 0)))
  (let (%368 (Concat %364 %365 %2341 %2342 0))
  (let (%369 (Reshape %326 %368))
  (let (%370 (Transpose %369 (vec 0 2 1 3)))
  (let (%371 (Transpose %355 (vec 0 2 3 1)))
  (let (%372 (MatMul %341 %371))
  (let (%373 (Constant 8.0))
  (let (%374 (Div %372 %373))
  (let (%375 (Add %374 %289))
  (let (%376 (Softmax %375 3))
  (let (%377 (MatMul %376 %370))
  (let (%378 (Transpose %377 (vec 0 2 1 3)))
  (let (%379 (Shape %378))
  (let (%380 (Constant 0))
  (let (%381 (Gather %379 %380 0))
  (let (%382 (Shape %378))
  (let (%383 (Constant 1))
  (let (%384 (Gather %382 %383 0))
  (let (%386 (Unsqueeze %381 (vec 0)))
  (let (%387 (Unsqueeze %384 (vec 0)))
  (let (%389 (Concat %386 %387 %2343 0))
  (let (%390 (Reshape %378 %389))
  (let (%392 (MatMul %390 %2344))
  (let (%393 (Add %392 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%394 (Add %393 %317))
  (let (%396 (ReduceMean %394 (vec -1) 1))
  (let (%397 (Sub %394 %396))
  (let (%398 (Cast_FLOAT %397))
  (let (%400 (Pow %398 %2345))
  (let (%401 (ReduceMean %400 (vec -1) 1))
  (let (%402 (Constant 9.999999960041972e-13))
  (let (%403 (Add %401 %402))
  (let (%404 (Sqrt %403))
  (let (%405 (Div %397 %404))
  (let (%406 (Mul %405 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%407 (Add %406 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%409 (MatMul %407 %2346))
  (let (%410 (Add %409 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%411 (Constant 1.4142135381698608))
  (let (%412 (Div %410 %411))
  (let (%413 (Erf %412))
  (let (%414 (Constant 1.0))
  (let (%415 (Add %413 %414))
  (let (%416 (Mul %410 %415))
  (let (%417 (Constant 0.5))
  (let (%418 (Mul %416 %417))
  (let (%420 (MatMul %418 %2347))
  (let (%421 (Add %420 bert.encoder.layer.0.output.dense.bias))
  (let (%422 (Add %421 %407))
  (let (%424 (ReduceMean %422 (vec -1) 1))
  (let (%425 (Sub %422 %424))
  (let (%426 (Cast_FLOAT %425))
  (let (%428 (Pow %426 %2348))
  (let (%429 (ReduceMean %428 (vec -1) 1))
  (let (%430 (Constant 9.999999960041972e-13))
  (let (%431 (Add %429 %430))
  (let (%432 (Sqrt %431))
  (let (%433 (Div %425 %432))
  (let (%434 (Mul %433 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%435 (Add %434 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%437 (MatMul %435 %2349))
  (let (%438 (Add %437 bert.encoder.layer.1.attention.self.query.bias))
  (let (%440 (MatMul %435 %2350))
  (let (%441 (Add %440 bert.encoder.layer.1.attention.self.key.bias))
  (let (%443 (MatMul %435 %2351))
  (let (%444 (Add %443 bert.encoder.layer.1.attention.self.value.bias))
  (let (%445 (Shape %438))
  (let (%446 (Constant 0))
  (let (%447 (Gather %445 %446 0))
  (let (%448 (Shape %438))
  (let (%449 (Constant 1))
  (let (%450 (Gather %448 %449 0))
  (let (%453 (Unsqueeze %447 (vec 0)))
  (let (%454 (Unsqueeze %450 (vec 0)))
  (let (%457 (Concat %453 %454 %2352 %2353 0))
  (let (%458 (Reshape %438 %457))
  (let (%459 (Transpose %458 (vec 0 2 1 3)))
  (let (%460 (Shape %441))
  (let (%461 (Constant 0))
  (let (%462 (Gather %460 %461 0))
  (let (%463 (Shape %441))
  (let (%464 (Constant 1))
  (let (%465 (Gather %463 %464 0))
  (let (%468 (Unsqueeze %462 (vec 0)))
  (let (%469 (Unsqueeze %465 (vec 0)))
  (let (%472 (Concat %468 %469 %2354 %2355 0))
  (let (%473 (Reshape %441 %472))
  (let (%474 (Shape %444))
  (let (%475 (Constant 0))
  (let (%476 (Gather %474 %475 0))
  (let (%477 (Shape %444))
  (let (%478 (Constant 1))
  (let (%479 (Gather %477 %478 0))
  (let (%482 (Unsqueeze %476 (vec 0)))
  (let (%483 (Unsqueeze %479 (vec 0)))
  (let (%486 (Concat %482 %483 %2356 %2357 0))
  (let (%487 (Reshape %444 %486))
  (let (%488 (Transpose %487 (vec 0 2 1 3)))
  (let (%489 (Transpose %473 (vec 0 2 3 1)))
  (let (%490 (MatMul %459 %489))
  (let (%491 (Constant 8.0))
  (let (%492 (Div %490 %491))
  (let (%493 (Add %492 %289))
  (let (%494 (Softmax %493 3))
  (let (%495 (MatMul %494 %488))
  (let (%496 (Transpose %495 (vec 0 2 1 3)))
  (let (%497 (Shape %496))
  (let (%498 (Constant 0))
  (let (%499 (Gather %497 %498 0))
  (let (%500 (Shape %496))
  (let (%501 (Constant 1))
  (let (%502 (Gather %500 %501 0))
  (let (%504 (Unsqueeze %499 (vec 0)))
  (let (%505 (Unsqueeze %502 (vec 0)))
  (let (%507 (Concat %504 %505 %2358 0))
  (let (%508 (Reshape %496 %507))
  (let (%510 (MatMul %508 %2359))
  (let (%511 (Add %510 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%512 (Add %511 %435))
  (let (%514 (ReduceMean %512 (vec -1) 1))
  (let (%515 (Sub %512 %514))
  (let (%516 (Cast_FLOAT %515))
  (let (%518 (Pow %516 %2360))
  (let (%519 (ReduceMean %518 (vec -1) 1))
  (let (%520 (Constant 9.999999960041972e-13))
  (let (%521 (Add %519 %520))
  (let (%522 (Sqrt %521))
  (let (%523 (Div %515 %522))
  (let (%524 (Mul %523 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%525 (Add %524 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%527 (MatMul %525 %2361))
  (let (%528 (Add %527 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%529 (Constant 1.4142135381698608))
  (let (%530 (Div %528 %529))
  (let (%531 (Erf %530))
  (let (%532 (Constant 1.0))
  (let (%533 (Add %531 %532))
  (let (%534 (Mul %528 %533))
  (let (%535 (Constant 0.5))
  (let (%536 (Mul %534 %535))
  (let (%538 (MatMul %536 %2362))
  (let (%539 (Add %538 bert.encoder.layer.1.output.dense.bias))
  (let (%540 (Add %539 %525))
  (let (%542 (ReduceMean %540 (vec -1) 1))
  (let (%543 (Sub %540 %542))
  (let (%544 (Cast_FLOAT %543))
  (let (%546 (Pow %544 %2363))
  (let (%547 (ReduceMean %546 (vec -1) 1))
  (let (%548 (Constant 9.999999960041972e-13))
  (let (%549 (Add %547 %548))
  (let (%550 (Sqrt %549))
  (let (%551 (Div %543 %550))
  (let (%552 (Mul %551 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%553 (Add %552 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%555 (MatMul %553 %2364))
  (let (%556 (Add %555 bert.encoder.layer.2.attention.self.query.bias))
  (let (%558 (MatMul %553 %2365))
  (let (%559 (Add %558 bert.encoder.layer.2.attention.self.key.bias))
  (let (%561 (MatMul %553 %2366))
  (let (%562 (Add %561 bert.encoder.layer.2.attention.self.value.bias))
  (let (%563 (Shape %556))
  (let (%564 (Constant 0))
  (let (%565 (Gather %563 %564 0))
  (let (%566 (Shape %556))
  (let (%567 (Constant 1))
  (let (%568 (Gather %566 %567 0))
  (let (%571 (Unsqueeze %565 (vec 0)))
  (let (%572 (Unsqueeze %568 (vec 0)))
  (let (%575 (Concat %571 %572 %2367 %2368 0))
  (let (%576 (Reshape %556 %575))
  (let (%577 (Transpose %576 (vec 0 2 1 3)))
  (let (%578 (Shape %559))
  (let (%579 (Constant 0))
  (let (%580 (Gather %578 %579 0))
  (let (%581 (Shape %559))
  (let (%582 (Constant 1))
  (let (%583 (Gather %581 %582 0))
  (let (%586 (Unsqueeze %580 (vec 0)))
  (let (%587 (Unsqueeze %583 (vec 0)))
  (let (%590 (Concat %586 %587 %2369 %2370 0))
  (let (%591 (Reshape %559 %590))
  (let (%592 (Shape %562))
  (let (%593 (Constant 0))
  (let (%594 (Gather %592 %593 0))
  (let (%595 (Shape %562))
  (let (%596 (Constant 1))
  (let (%597 (Gather %595 %596 0))
  (let (%600 (Unsqueeze %594 (vec 0)))
  (let (%601 (Unsqueeze %597 (vec 0)))
  (let (%604 (Concat %600 %601 %2371 %2372 0))
  (let (%605 (Reshape %562 %604))
  (let (%606 (Transpose %605 (vec 0 2 1 3)))
  (let (%607 (Transpose %591 (vec 0 2 3 1)))
  (let (%608 (MatMul %577 %607))
  (let (%609 (Constant 8.0))
  (let (%610 (Div %608 %609))
  (let (%611 (Add %610 %289))
  (let (%612 (Softmax %611 3))
  (let (%613 (MatMul %612 %606))
  (let (%614 (Transpose %613 (vec 0 2 1 3)))
  (let (%615 (Shape %614))
  (let (%616 (Constant 0))
  (let (%617 (Gather %615 %616 0))
  (let (%618 (Shape %614))
  (let (%619 (Constant 1))
  (let (%620 (Gather %618 %619 0))
  (let (%622 (Unsqueeze %617 (vec 0)))
  (let (%623 (Unsqueeze %620 (vec 0)))
  (let (%625 (Concat %622 %623 %2373 0))
  (let (%626 (Reshape %614 %625))
  (let (%628 (MatMul %626 %2374))
  (let (%629 (Add %628 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%630 (Add %629 %553))
  (let (%632 (ReduceMean %630 (vec -1) 1))
  (let (%633 (Sub %630 %632))
  (let (%634 (Cast_FLOAT %633))
  (let (%636 (Pow %634 %2375))
  (let (%637 (ReduceMean %636 (vec -1) 1))
  (let (%638 (Constant 9.999999960041972e-13))
  (let (%639 (Add %637 %638))
  (let (%640 (Sqrt %639))
  (let (%641 (Div %633 %640))
  (let (%642 (Mul %641 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%643 (Add %642 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%645 (MatMul %643 %2376))
  (let (%646 (Add %645 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%647 (Constant 1.4142135381698608))
  (let (%648 (Div %646 %647))
  (let (%649 (Erf %648))
  (let (%650 (Constant 1.0))
  (let (%651 (Add %649 %650))
  (let (%652 (Mul %646 %651))
  (let (%653 (Constant 0.5))
  (let (%654 (Mul %652 %653))
  (let (%656 (MatMul %654 %2377))
  (let (%657 (Add %656 bert.encoder.layer.2.output.dense.bias))
  (let (%658 (Add %657 %643))
  (let (%660 (ReduceMean %658 (vec -1) 1))
  (let (%661 (Sub %658 %660))
  (let (%662 (Cast_FLOAT %661))
  (let (%664 (Pow %662 %2378))
  (let (%665 (ReduceMean %664 (vec -1) 1))
  (let (%666 (Constant 9.999999960041972e-13))
  (let (%667 (Add %665 %666))
  (let (%668 (Sqrt %667))
  (let (%669 (Div %661 %668))
  (let (%670 (Mul %669 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%671 (Add %670 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%673 (MatMul %671 %2379))
  (let (%674 (Add %673 bert.encoder.layer.3.attention.self.query.bias))
  (let (%676 (MatMul %671 %2380))
  (let (%677 (Add %676 bert.encoder.layer.3.attention.self.key.bias))
  (let (%679 (MatMul %671 %2381))
  (let (%680 (Add %679 bert.encoder.layer.3.attention.self.value.bias))
  (let (%681 (Shape %674))
  (let (%682 (Constant 0))
  (let (%683 (Gather %681 %682 0))
  (let (%684 (Shape %674))
  (let (%685 (Constant 1))
  (let (%686 (Gather %684 %685 0))
  (let (%689 (Unsqueeze %683 (vec 0)))
  (let (%690 (Unsqueeze %686 (vec 0)))
  (let (%693 (Concat %689 %690 %2382 %2383 0))
  (let (%694 (Reshape %674 %693))
  (let (%695 (Transpose %694 (vec 0 2 1 3)))
  (let (%696 (Shape %677))
  (let (%697 (Constant 0))
  (let (%698 (Gather %696 %697 0))
  (let (%699 (Shape %677))
  (let (%700 (Constant 1))
  (let (%701 (Gather %699 %700 0))
  (let (%704 (Unsqueeze %698 (vec 0)))
  (let (%705 (Unsqueeze %701 (vec 0)))
  (let (%708 (Concat %704 %705 %2384 %2385 0))
  (let (%709 (Reshape %677 %708))
  (let (%710 (Shape %680))
  (let (%711 (Constant 0))
  (let (%712 (Gather %710 %711 0))
  (let (%713 (Shape %680))
  (let (%714 (Constant 1))
  (let (%715 (Gather %713 %714 0))
  (let (%718 (Unsqueeze %712 (vec 0)))
  (let (%719 (Unsqueeze %715 (vec 0)))
  (let (%722 (Concat %718 %719 %2386 %2387 0))
  (let (%723 (Reshape %680 %722))
  (let (%724 (Transpose %723 (vec 0 2 1 3)))
  (let (%725 (Transpose %709 (vec 0 2 3 1)))
  (let (%726 (MatMul %695 %725))
  (let (%727 (Constant 8.0))
  (let (%728 (Div %726 %727))
  (let (%729 (Add %728 %289))
  (let (%730 (Softmax %729 3))
  (let (%731 (MatMul %730 %724))
  (let (%732 (Transpose %731 (vec 0 2 1 3)))
  (let (%733 (Shape %732))
  (let (%734 (Constant 0))
  (let (%735 (Gather %733 %734 0))
  (let (%736 (Shape %732))
  (let (%737 (Constant 1))
  (let (%738 (Gather %736 %737 0))
  (let (%740 (Unsqueeze %735 (vec 0)))
  (let (%741 (Unsqueeze %738 (vec 0)))
  (let (%743 (Concat %740 %741 %2388 0))
  (let (%744 (Reshape %732 %743))
  (let (%746 (MatMul %744 %2389))
  (let (%747 (Add %746 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%748 (Add %747 %671))
  (let (%750 (ReduceMean %748 (vec -1) 1))
  (let (%751 (Sub %748 %750))
  (let (%752 (Cast_FLOAT %751))
  (let (%754 (Pow %752 %2390))
  (let (%755 (ReduceMean %754 (vec -1) 1))
  (let (%756 (Constant 9.999999960041972e-13))
  (let (%757 (Add %755 %756))
  (let (%758 (Sqrt %757))
  (let (%759 (Div %751 %758))
  (let (%760 (Mul %759 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%761 (Add %760 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%763 (MatMul %761 %2391))
  (let (%764 (Add %763 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%765 (Constant 1.4142135381698608))
  (let (%766 (Div %764 %765))
  (let (%767 (Erf %766))
  (let (%768 (Constant 1.0))
  (let (%769 (Add %767 %768))
  (let (%770 (Mul %764 %769))
  (let (%771 (Constant 0.5))
  (let (%772 (Mul %770 %771))
  (let (%774 (MatMul %772 %2392))
  (let (%775 (Add %774 bert.encoder.layer.3.output.dense.bias))
  (let (%776 (Add %775 %761))
  (let (%778 (ReduceMean %776 (vec -1) 1))
  (let (%779 (Sub %776 %778))
  (let (%780 (Cast_FLOAT %779))
  (let (%782 (Pow %780 %2393))
  (let (%783 (ReduceMean %782 (vec -1) 1))
  (let (%784 (Constant 9.999999960041972e-13))
  (let (%785 (Add %783 %784))
  (let (%786 (Sqrt %785))
  (let (%787 (Div %779 %786))
  (let (%788 (Mul %787 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%789 (Add %788 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%791 (MatMul %789 %2394))
  (let (%792 (Add %791 bert.encoder.layer.4.attention.self.query.bias))
  (let (%794 (MatMul %789 %2395))
  (let (%795 (Add %794 bert.encoder.layer.4.attention.self.key.bias))
  (let (%797 (MatMul %789 %2396))
  (let (%798 (Add %797 bert.encoder.layer.4.attention.self.value.bias))
  (let (%799 (Shape %792))
  (let (%800 (Constant 0))
  (let (%801 (Gather %799 %800 0))
  (let (%802 (Shape %792))
  (let (%803 (Constant 1))
  (let (%804 (Gather %802 %803 0))
  (let (%807 (Unsqueeze %801 (vec 0)))
  (let (%808 (Unsqueeze %804 (vec 0)))
  (let (%811 (Concat %807 %808 %2397 %2398 0))
  (let (%812 (Reshape %792 %811))
  (let (%813 (Transpose %812 (vec 0 2 1 3)))
  (let (%814 (Shape %795))
  (let (%815 (Constant 0))
  (let (%816 (Gather %814 %815 0))
  (let (%817 (Shape %795))
  (let (%818 (Constant 1))
  (let (%819 (Gather %817 %818 0))
  (let (%822 (Unsqueeze %816 (vec 0)))
  (let (%823 (Unsqueeze %819 (vec 0)))
  (let (%826 (Concat %822 %823 %2399 %2400 0))
  (let (%827 (Reshape %795 %826))
  (let (%828 (Shape %798))
  (let (%829 (Constant 0))
  (let (%830 (Gather %828 %829 0))
  (let (%831 (Shape %798))
  (let (%832 (Constant 1))
  (let (%833 (Gather %831 %832 0))
  (let (%836 (Unsqueeze %830 (vec 0)))
  (let (%837 (Unsqueeze %833 (vec 0)))
  (let (%840 (Concat %836 %837 %2401 %2402 0))
  (let (%841 (Reshape %798 %840))
  (let (%842 (Transpose %841 (vec 0 2 1 3)))
  (let (%843 (Transpose %827 (vec 0 2 3 1)))
  (let (%844 (MatMul %813 %843))
  (let (%845 (Constant 8.0))
  (let (%846 (Div %844 %845))
  (let (%847 (Add %846 %289))
  (let (%848 (Softmax %847 3))
  (let (%849 (MatMul %848 %842))
  (let (%850 (Transpose %849 (vec 0 2 1 3)))
  (let (%851 (Shape %850))
  (let (%852 (Constant 0))
  (let (%853 (Gather %851 %852 0))
  (let (%854 (Shape %850))
  (let (%855 (Constant 1))
  (let (%856 (Gather %854 %855 0))
  (let (%858 (Unsqueeze %853 (vec 0)))
  (let (%859 (Unsqueeze %856 (vec 0)))
  (let (%861 (Concat %858 %859 %2403 0))
  (let (%862 (Reshape %850 %861))
  (let (%864 (MatMul %862 %2404))
  (let (%865 (Add %864 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%866 (Add %865 %789))
  (let (%868 (ReduceMean %866 (vec -1) 1))
  (let (%869 (Sub %866 %868))
  (let (%870 (Cast_FLOAT %869))
  (let (%872 (Pow %870 %2405))
  (let (%873 (ReduceMean %872 (vec -1) 1))
  (let (%874 (Constant 9.999999960041972e-13))
  (let (%875 (Add %873 %874))
  (let (%876 (Sqrt %875))
  (let (%877 (Div %869 %876))
  (let (%878 (Mul %877 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%879 (Add %878 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%881 (MatMul %879 %2406))
  (let (%882 (Add %881 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%883 (Constant 1.4142135381698608))
  (let (%884 (Div %882 %883))
  (let (%885 (Erf %884))
  (let (%886 (Constant 1.0))
  (let (%887 (Add %885 %886))
  (let (%888 (Mul %882 %887))
  (let (%889 (Constant 0.5))
  (let (%890 (Mul %888 %889))
  (let (%892 (MatMul %890 %2407))
  (let (%893 (Add %892 bert.encoder.layer.4.output.dense.bias))
  (let (%894 (Add %893 %879))
  (let (%896 (ReduceMean %894 (vec -1) 1))
  (let (%897 (Sub %894 %896))
  (let (%898 (Cast_FLOAT %897))
  (let (%900 (Pow %898 %2408))
  (let (%901 (ReduceMean %900 (vec -1) 1))
  (let (%902 (Constant 9.999999960041972e-13))
  (let (%903 (Add %901 %902))
  (let (%904 (Sqrt %903))
  (let (%905 (Div %897 %904))
  (let (%906 (Mul %905 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%907 (Add %906 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%909 (MatMul %907 %2409))
  (let (%910 (Add %909 bert.encoder.layer.5.attention.self.query.bias))
  (let (%912 (MatMul %907 %2410))
  (let (%913 (Add %912 bert.encoder.layer.5.attention.self.key.bias))
  (let (%915 (MatMul %907 %2411))
  (let (%916 (Add %915 bert.encoder.layer.5.attention.self.value.bias))
  (let (%917 (Shape %910))
  (let (%918 (Constant 0))
  (let (%919 (Gather %917 %918 0))
  (let (%920 (Shape %910))
  (let (%921 (Constant 1))
  (let (%922 (Gather %920 %921 0))
  (let (%925 (Unsqueeze %919 (vec 0)))
  (let (%926 (Unsqueeze %922 (vec 0)))
  (let (%929 (Concat %925 %926 %2412 %2413 0))
  (let (%930 (Reshape %910 %929))
  (let (%931 (Transpose %930 (vec 0 2 1 3)))
  (let (%932 (Shape %913))
  (let (%933 (Constant 0))
  (let (%934 (Gather %932 %933 0))
  (let (%935 (Shape %913))
  (let (%936 (Constant 1))
  (let (%937 (Gather %935 %936 0))
  (let (%940 (Unsqueeze %934 (vec 0)))
  (let (%941 (Unsqueeze %937 (vec 0)))
  (let (%944 (Concat %940 %941 %2414 %2415 0))
  (let (%945 (Reshape %913 %944))
  (let (%946 (Shape %916))
  (let (%947 (Constant 0))
  (let (%948 (Gather %946 %947 0))
  (let (%949 (Shape %916))
  (let (%950 (Constant 1))
  (let (%951 (Gather %949 %950 0))
  (let (%954 (Unsqueeze %948 (vec 0)))
  (let (%955 (Unsqueeze %951 (vec 0)))
  (let (%958 (Concat %954 %955 %2416 %2417 0))
  (let (%959 (Reshape %916 %958))
  (let (%960 (Transpose %959 (vec 0 2 1 3)))
  (let (%961 (Transpose %945 (vec 0 2 3 1)))
  (let (%962 (MatMul %931 %961))
  (let (%963 (Constant 8.0))
  (let (%964 (Div %962 %963))
  (let (%965 (Add %964 %289))
  (let (%966 (Softmax %965 3))
  (let (%967 (MatMul %966 %960))
  (let (%968 (Transpose %967 (vec 0 2 1 3)))
  (let (%969 (Shape %968))
  (let (%970 (Constant 0))
  (let (%971 (Gather %969 %970 0))
  (let (%972 (Shape %968))
  (let (%973 (Constant 1))
  (let (%974 (Gather %972 %973 0))
  (let (%976 (Unsqueeze %971 (vec 0)))
  (let (%977 (Unsqueeze %974 (vec 0)))
  (let (%979 (Concat %976 %977 %2418 0))
  (let (%980 (Reshape %968 %979))
  (let (%982 (MatMul %980 %2419))
  (let (%983 (Add %982 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%984 (Add %983 %907))
  (let (%986 (ReduceMean %984 (vec -1) 1))
  (let (%987 (Sub %984 %986))
  (let (%988 (Cast_FLOAT %987))
  (let (%990 (Pow %988 %2420))
  (let (%991 (ReduceMean %990 (vec -1) 1))
  (let (%992 (Constant 9.999999960041972e-13))
  (let (%993 (Add %991 %992))
  (let (%994 (Sqrt %993))
  (let (%995 (Div %987 %994))
  (let (%996 (Mul %995 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%997 (Add %996 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%999 (MatMul %997 %2421))
  (let (%1000 (Add %999 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1001 (Constant 1.4142135381698608))
  (let (%1002 (Div %1000 %1001))
  (let (%1003 (Erf %1002))
  (let (%1004 (Constant 1.0))
  (let (%1005 (Add %1003 %1004))
  (let (%1006 (Mul %1000 %1005))
  (let (%1007 (Constant 0.5))
  (let (%1008 (Mul %1006 %1007))
  (let (%1010 (MatMul %1008 %2422))
  (let (%1011 (Add %1010 bert.encoder.layer.5.output.dense.bias))
  (let (%1012 (Add %1011 %997))
  (let (%1014 (ReduceMean %1012 (vec -1) 1))
  (let (%1015 (Sub %1012 %1014))
  (let (%1016 (Cast_FLOAT %1015))
  (let (%1018 (Pow %1016 %2423))
  (let (%1019 (ReduceMean %1018 (vec -1) 1))
  (let (%1020 (Constant 9.999999960041972e-13))
  (let (%1021 (Add %1019 %1020))
  (let (%1022 (Sqrt %1021))
  (let (%1023 (Div %1015 %1022))
  (let (%1024 (Mul %1023 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1025 (Add %1024 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1027 (MatMul %1025 %2424))
  (let (%1028 (Add %1027 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1030 (MatMul %1025 %2425))
  (let (%1031 (Add %1030 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1033 (MatMul %1025 %2426))
  (let (%1034 (Add %1033 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1035 (Shape %1028))
  (let (%1036 (Constant 0))
  (let (%1037 (Gather %1035 %1036 0))
  (let (%1038 (Shape %1028))
  (let (%1039 (Constant 1))
  (let (%1040 (Gather %1038 %1039 0))
  (let (%1043 (Unsqueeze %1037 (vec 0)))
  (let (%1044 (Unsqueeze %1040 (vec 0)))
  (let (%1047 (Concat %1043 %1044 %2427 %2428 0))
  (let (%1048 (Reshape %1028 %1047))
  (let (%1049 (Transpose %1048 (vec 0 2 1 3)))
  (let (%1050 (Shape %1031))
  (let (%1051 (Constant 0))
  (let (%1052 (Gather %1050 %1051 0))
  (let (%1053 (Shape %1031))
  (let (%1054 (Constant 1))
  (let (%1055 (Gather %1053 %1054 0))
  (let (%1058 (Unsqueeze %1052 (vec 0)))
  (let (%1059 (Unsqueeze %1055 (vec 0)))
  (let (%1062 (Concat %1058 %1059 %2429 %2430 0))
  (let (%1063 (Reshape %1031 %1062))
  (let (%1064 (Shape %1034))
  (let (%1065 (Constant 0))
  (let (%1066 (Gather %1064 %1065 0))
  (let (%1067 (Shape %1034))
  (let (%1068 (Constant 1))
  (let (%1069 (Gather %1067 %1068 0))
  (let (%1072 (Unsqueeze %1066 (vec 0)))
  (let (%1073 (Unsqueeze %1069 (vec 0)))
  (let (%1076 (Concat %1072 %1073 %2431 %2432 0))
  (let (%1077 (Reshape %1034 %1076))
  (let (%1078 (Transpose %1077 (vec 0 2 1 3)))
  (let (%1079 (Transpose %1063 (vec 0 2 3 1)))
  (let (%1080 (MatMul %1049 %1079))
  (let (%1081 (Constant 8.0))
  (let (%1082 (Div %1080 %1081))
  (let (%1083 (Add %1082 %289))
  (let (%1084 (Softmax %1083 3))
  (let (%1085 (MatMul %1084 %1078))
  (let (%1086 (Transpose %1085 (vec 0 2 1 3)))
  (let (%1087 (Shape %1086))
  (let (%1088 (Constant 0))
  (let (%1089 (Gather %1087 %1088 0))
  (let (%1090 (Shape %1086))
  (let (%1091 (Constant 1))
  (let (%1092 (Gather %1090 %1091 0))
  (let (%1094 (Unsqueeze %1089 (vec 0)))
  (let (%1095 (Unsqueeze %1092 (vec 0)))
  (let (%1097 (Concat %1094 %1095 %2433 0))
  (let (%1098 (Reshape %1086 %1097))
  (let (%1100 (MatMul %1098 %2434))
  (let (%1101 (Add %1100 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1102 (Add %1101 %1025))
  (let (%1104 (ReduceMean %1102 (vec -1) 1))
  (let (%1105 (Sub %1102 %1104))
  (let (%1106 (Cast_FLOAT %1105))
  (let (%1108 (Pow %1106 %2435))
  (let (%1109 (ReduceMean %1108 (vec -1) 1))
  (let (%1110 (Constant 9.999999960041972e-13))
  (let (%1111 (Add %1109 %1110))
  (let (%1112 (Sqrt %1111))
  (let (%1113 (Div %1105 %1112))
  (let (%1114 (Mul %1113 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1115 (Add %1114 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1117 (MatMul %1115 %2436))
  (let (%1118 (Add %1117 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1119 (Constant 1.4142135381698608))
  (let (%1120 (Div %1118 %1119))
  (let (%1121 (Erf %1120))
  (let (%1122 (Constant 1.0))
  (let (%1123 (Add %1121 %1122))
  (let (%1124 (Mul %1118 %1123))
  (let (%1125 (Constant 0.5))
  (let (%1126 (Mul %1124 %1125))
  (let (%1128 (MatMul %1126 %2437))
  (let (%1129 (Add %1128 bert.encoder.layer.6.output.dense.bias))
  (let (%1130 (Add %1129 %1115))
  (let (%1132 (ReduceMean %1130 (vec -1) 1))
  (let (%1133 (Sub %1130 %1132))
  (let (%1134 (Cast_FLOAT %1133))
  (let (%1136 (Pow %1134 %2438))
  (let (%1137 (ReduceMean %1136 (vec -1) 1))
  (let (%1138 (Constant 9.999999960041972e-13))
  (let (%1139 (Add %1137 %1138))
  (let (%1140 (Sqrt %1139))
  (let (%1141 (Div %1133 %1140))
  (let (%1142 (Mul %1141 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1143 (Add %1142 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1145 (MatMul %1143 %2439))
  (let (%1146 (Add %1145 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1148 (MatMul %1143 %2440))
  (let (%1149 (Add %1148 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1151 (MatMul %1143 %2441))
  (let (%1152 (Add %1151 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1153 (Shape %1146))
  (let (%1154 (Constant 0))
  (let (%1155 (Gather %1153 %1154 0))
  (let (%1156 (Shape %1146))
  (let (%1157 (Constant 1))
  (let (%1158 (Gather %1156 %1157 0))
  (let (%1161 (Unsqueeze %1155 (vec 0)))
  (let (%1162 (Unsqueeze %1158 (vec 0)))
  (let (%1165 (Concat %1161 %1162 %2442 %2443 0))
  (let (%1166 (Reshape %1146 %1165))
  (let (%1167 (Transpose %1166 (vec 0 2 1 3)))
  (let (%1168 (Shape %1149))
  (let (%1169 (Constant 0))
  (let (%1170 (Gather %1168 %1169 0))
  (let (%1171 (Shape %1149))
  (let (%1172 (Constant 1))
  (let (%1173 (Gather %1171 %1172 0))
  (let (%1176 (Unsqueeze %1170 (vec 0)))
  (let (%1177 (Unsqueeze %1173 (vec 0)))
  (let (%1180 (Concat %1176 %1177 %2444 %2445 0))
  (let (%1181 (Reshape %1149 %1180))
  (let (%1182 (Shape %1152))
  (let (%1183 (Constant 0))
  (let (%1184 (Gather %1182 %1183 0))
  (let (%1185 (Shape %1152))
  (let (%1186 (Constant 1))
  (let (%1187 (Gather %1185 %1186 0))
  (let (%1190 (Unsqueeze %1184 (vec 0)))
  (let (%1191 (Unsqueeze %1187 (vec 0)))
  (let (%1194 (Concat %1190 %1191 %2446 %2447 0))
  (let (%1195 (Reshape %1152 %1194))
  (let (%1196 (Transpose %1195 (vec 0 2 1 3)))
  (let (%1197 (Transpose %1181 (vec 0 2 3 1)))
  (let (%1198 (MatMul %1167 %1197))
  (let (%1199 (Constant 8.0))
  (let (%1200 (Div %1198 %1199))
  (let (%1201 (Add %1200 %289))
  (let (%1202 (Softmax %1201 3))
  (let (%1203 (MatMul %1202 %1196))
  (let (%1204 (Transpose %1203 (vec 0 2 1 3)))
  (let (%1205 (Shape %1204))
  (let (%1206 (Constant 0))
  (let (%1207 (Gather %1205 %1206 0))
  (let (%1208 (Shape %1204))
  (let (%1209 (Constant 1))
  (let (%1210 (Gather %1208 %1209 0))
  (let (%1212 (Unsqueeze %1207 (vec 0)))
  (let (%1213 (Unsqueeze %1210 (vec 0)))
  (let (%1215 (Concat %1212 %1213 %2448 0))
  (let (%1216 (Reshape %1204 %1215))
  (let (%1218 (MatMul %1216 %2449))
  (let (%1219 (Add %1218 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1220 (Add %1219 %1143))
  (let (%1222 (ReduceMean %1220 (vec -1) 1))
  (let (%1223 (Sub %1220 %1222))
  (let (%1224 (Cast_FLOAT %1223))
  (let (%1226 (Pow %1224 %2450))
  (let (%1227 (ReduceMean %1226 (vec -1) 1))
  (let (%1228 (Constant 9.999999960041972e-13))
  (let (%1229 (Add %1227 %1228))
  (let (%1230 (Sqrt %1229))
  (let (%1231 (Div %1223 %1230))
  (let (%1232 (Mul %1231 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1233 (Add %1232 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1235 (MatMul %1233 %2451))
  (let (%1236 (Add %1235 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1237 (Constant 1.4142135381698608))
  (let (%1238 (Div %1236 %1237))
  (let (%1239 (Erf %1238))
  (let (%1240 (Constant 1.0))
  (let (%1241 (Add %1239 %1240))
  (let (%1242 (Mul %1236 %1241))
  (let (%1243 (Constant 0.5))
  (let (%1244 (Mul %1242 %1243))
  (let (%1246 (MatMul %1244 %2452))
  (let (%1247 (Add %1246 bert.encoder.layer.7.output.dense.bias))
  (let (%1248 (Add %1247 %1233))
  (let (%1250 (ReduceMean %1248 (vec -1) 1))
  (let (%1251 (Sub %1248 %1250))
  (let (%1252 (Cast_FLOAT %1251))
  (let (%1254 (Pow %1252 %2453))
  (let (%1255 (ReduceMean %1254 (vec -1) 1))
  (let (%1256 (Constant 9.999999960041972e-13))
  (let (%1257 (Add %1255 %1256))
  (let (%1258 (Sqrt %1257))
  (let (%1259 (Div %1251 %1258))
  (let (%1260 (Mul %1259 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1261 (Add %1260 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1263 (MatMul %1261 %2454))
  (let (%1264 (Add %1263 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1266 (MatMul %1261 %2455))
  (let (%1267 (Add %1266 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1269 (MatMul %1261 %2456))
  (let (%1270 (Add %1269 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1271 (Shape %1264))
  (let (%1272 (Constant 0))
  (let (%1273 (Gather %1271 %1272 0))
  (let (%1274 (Shape %1264))
  (let (%1275 (Constant 1))
  (let (%1276 (Gather %1274 %1275 0))
  (let (%1279 (Unsqueeze %1273 (vec 0)))
  (let (%1280 (Unsqueeze %1276 (vec 0)))
  (let (%1283 (Concat %1279 %1280 %2457 %2458 0))
  (let (%1284 (Reshape %1264 %1283))
  (let (%1285 (Transpose %1284 (vec 0 2 1 3)))
  (let (%1286 (Shape %1267))
  (let (%1287 (Constant 0))
  (let (%1288 (Gather %1286 %1287 0))
  (let (%1289 (Shape %1267))
  (let (%1290 (Constant 1))
  (let (%1291 (Gather %1289 %1290 0))
  (let (%1294 (Unsqueeze %1288 (vec 0)))
  (let (%1295 (Unsqueeze %1291 (vec 0)))
  (let (%1298 (Concat %1294 %1295 %2459 %2460 0))
  (let (%1299 (Reshape %1267 %1298))
  (let (%1300 (Shape %1270))
  (let (%1301 (Constant 0))
  (let (%1302 (Gather %1300 %1301 0))
  (let (%1303 (Shape %1270))
  (let (%1304 (Constant 1))
  (let (%1305 (Gather %1303 %1304 0))
  (let (%1308 (Unsqueeze %1302 (vec 0)))
  (let (%1309 (Unsqueeze %1305 (vec 0)))
  (let (%1312 (Concat %1308 %1309 %2461 %2462 0))
  (let (%1313 (Reshape %1270 %1312))
  (let (%1314 (Transpose %1313 (vec 0 2 1 3)))
  (let (%1315 (Transpose %1299 (vec 0 2 3 1)))
  (let (%1316 (MatMul %1285 %1315))
  (let (%1317 (Constant 8.0))
  (let (%1318 (Div %1316 %1317))
  (let (%1319 (Add %1318 %289))
  (let (%1320 (Softmax %1319 3))
  (let (%1321 (MatMul %1320 %1314))
  (let (%1322 (Transpose %1321 (vec 0 2 1 3)))
  (let (%1323 (Shape %1322))
  (let (%1324 (Constant 0))
  (let (%1325 (Gather %1323 %1324 0))
  (let (%1326 (Shape %1322))
  (let (%1327 (Constant 1))
  (let (%1328 (Gather %1326 %1327 0))
  (let (%1330 (Unsqueeze %1325 (vec 0)))
  (let (%1331 (Unsqueeze %1328 (vec 0)))
  (let (%1333 (Concat %1330 %1331 %2463 0))
  (let (%1334 (Reshape %1322 %1333))
  (let (%1336 (MatMul %1334 %2464))
  (let (%1337 (Add %1336 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1338 (Add %1337 %1261))
  (let (%1340 (ReduceMean %1338 (vec -1) 1))
  (let (%1341 (Sub %1338 %1340))
  (let (%1342 (Cast_FLOAT %1341))
  (let (%1344 (Pow %1342 %2465))
  (let (%1345 (ReduceMean %1344 (vec -1) 1))
  (let (%1346 (Constant 9.999999960041972e-13))
  (let (%1347 (Add %1345 %1346))
  (let (%1348 (Sqrt %1347))
  (let (%1349 (Div %1341 %1348))
  (let (%1350 (Mul %1349 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1351 (Add %1350 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1353 (MatMul %1351 %2466))
  (let (%1354 (Add %1353 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1355 (Constant 1.4142135381698608))
  (let (%1356 (Div %1354 %1355))
  (let (%1357 (Erf %1356))
  (let (%1358 (Constant 1.0))
  (let (%1359 (Add %1357 %1358))
  (let (%1360 (Mul %1354 %1359))
  (let (%1361 (Constant 0.5))
  (let (%1362 (Mul %1360 %1361))
  (let (%1364 (MatMul %1362 %2467))
  (let (%1365 (Add %1364 bert.encoder.layer.8.output.dense.bias))
  (let (%1366 (Add %1365 %1351))
  (let (%1368 (ReduceMean %1366 (vec -1) 1))
  (let (%1369 (Sub %1366 %1368))
  (let (%1370 (Cast_FLOAT %1369))
  (let (%1372 (Pow %1370 %2468))
  (let (%1373 (ReduceMean %1372 (vec -1) 1))
  (let (%1374 (Constant 9.999999960041972e-13))
  (let (%1375 (Add %1373 %1374))
  (let (%1376 (Sqrt %1375))
  (let (%1377 (Div %1369 %1376))
  (let (%1378 (Mul %1377 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1379 (Add %1378 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1381 (MatMul %1379 %2469))
  (let (%1382 (Add %1381 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1384 (MatMul %1379 %2470))
  (let (%1385 (Add %1384 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1387 (MatMul %1379 %2471))
  (let (%1388 (Add %1387 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1389 (Shape %1382))
  (let (%1390 (Constant 0))
  (let (%1391 (Gather %1389 %1390 0))
  (let (%1392 (Shape %1382))
  (let (%1393 (Constant 1))
  (let (%1394 (Gather %1392 %1393 0))
  (let (%1397 (Unsqueeze %1391 (vec 0)))
  (let (%1398 (Unsqueeze %1394 (vec 0)))
  (let (%1401 (Concat %1397 %1398 %2472 %2473 0))
  (let (%1402 (Reshape %1382 %1401))
  (let (%1403 (Transpose %1402 (vec 0 2 1 3)))
  (let (%1404 (Shape %1385))
  (let (%1405 (Constant 0))
  (let (%1406 (Gather %1404 %1405 0))
  (let (%1407 (Shape %1385))
  (let (%1408 (Constant 1))
  (let (%1409 (Gather %1407 %1408 0))
  (let (%1412 (Unsqueeze %1406 (vec 0)))
  (let (%1413 (Unsqueeze %1409 (vec 0)))
  (let (%1416 (Concat %1412 %1413 %2474 %2475 0))
  (let (%1417 (Reshape %1385 %1416))
  (let (%1418 (Shape %1388))
  (let (%1419 (Constant 0))
  (let (%1420 (Gather %1418 %1419 0))
  (let (%1421 (Shape %1388))
  (let (%1422 (Constant 1))
  (let (%1423 (Gather %1421 %1422 0))
  (let (%1426 (Unsqueeze %1420 (vec 0)))
  (let (%1427 (Unsqueeze %1423 (vec 0)))
  (let (%1430 (Concat %1426 %1427 %2476 %2477 0))
  (let (%1431 (Reshape %1388 %1430))
  (let (%1432 (Transpose %1431 (vec 0 2 1 3)))
  (let (%1433 (Transpose %1417 (vec 0 2 3 1)))
  (let (%1434 (MatMul %1403 %1433))
  (let (%1435 (Constant 8.0))
  (let (%1436 (Div %1434 %1435))
  (let (%1437 (Add %1436 %289))
  (let (%1438 (Softmax %1437 3))
  (let (%1439 (MatMul %1438 %1432))
  (let (%1440 (Transpose %1439 (vec 0 2 1 3)))
  (let (%1441 (Shape %1440))
  (let (%1442 (Constant 0))
  (let (%1443 (Gather %1441 %1442 0))
  (let (%1444 (Shape %1440))
  (let (%1445 (Constant 1))
  (let (%1446 (Gather %1444 %1445 0))
  (let (%1448 (Unsqueeze %1443 (vec 0)))
  (let (%1449 (Unsqueeze %1446 (vec 0)))
  (let (%1451 (Concat %1448 %1449 %2478 0))
  (let (%1452 (Reshape %1440 %1451))
  (let (%1454 (MatMul %1452 %2479))
  (let (%1455 (Add %1454 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1456 (Add %1455 %1379))
  (let (%1458 (ReduceMean %1456 (vec -1) 1))
  (let (%1459 (Sub %1456 %1458))
  (let (%1460 (Cast_FLOAT %1459))
  (let (%1462 (Pow %1460 %2480))
  (let (%1463 (ReduceMean %1462 (vec -1) 1))
  (let (%1464 (Constant 9.999999960041972e-13))
  (let (%1465 (Add %1463 %1464))
  (let (%1466 (Sqrt %1465))
  (let (%1467 (Div %1459 %1466))
  (let (%1468 (Mul %1467 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1469 (Add %1468 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1471 (MatMul %1469 %2481))
  (let (%1472 (Add %1471 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1473 (Constant 1.4142135381698608))
  (let (%1474 (Div %1472 %1473))
  (let (%1475 (Erf %1474))
  (let (%1476 (Constant 1.0))
  (let (%1477 (Add %1475 %1476))
  (let (%1478 (Mul %1472 %1477))
  (let (%1479 (Constant 0.5))
  (let (%1480 (Mul %1478 %1479))
  (let (%1482 (MatMul %1480 %2482))
  (let (%1483 (Add %1482 bert.encoder.layer.9.output.dense.bias))
  (let (%1484 (Add %1483 %1469))
  (let (%1486 (ReduceMean %1484 (vec -1) 1))
  (let (%1487 (Sub %1484 %1486))
  (let (%1488 (Cast_FLOAT %1487))
  (let (%1490 (Pow %1488 %2483))
  (let (%1491 (ReduceMean %1490 (vec -1) 1))
  (let (%1492 (Constant 9.999999960041972e-13))
  (let (%1493 (Add %1491 %1492))
  (let (%1494 (Sqrt %1493))
  (let (%1495 (Div %1487 %1494))
  (let (%1496 (Mul %1495 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1497 (Add %1496 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1499 (MatMul %1497 %2484))
  (let (%1500 (Add %1499 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1502 (MatMul %1497 %2485))
  (let (%1503 (Add %1502 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1505 (MatMul %1497 %2486))
  (let (%1506 (Add %1505 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1507 (Shape %1500))
  (let (%1508 (Constant 0))
  (let (%1509 (Gather %1507 %1508 0))
  (let (%1510 (Shape %1500))
  (let (%1511 (Constant 1))
  (let (%1512 (Gather %1510 %1511 0))
  (let (%1515 (Unsqueeze %1509 (vec 0)))
  (let (%1516 (Unsqueeze %1512 (vec 0)))
  (let (%1519 (Concat %1515 %1516 %2487 %2488 0))
  (let (%1520 (Reshape %1500 %1519))
  (let (%1521 (Transpose %1520 (vec 0 2 1 3)))
  (let (%1522 (Shape %1503))
  (let (%1523 (Constant 0))
  (let (%1524 (Gather %1522 %1523 0))
  (let (%1525 (Shape %1503))
  (let (%1526 (Constant 1))
  (let (%1527 (Gather %1525 %1526 0))
  (let (%1530 (Unsqueeze %1524 (vec 0)))
  (let (%1531 (Unsqueeze %1527 (vec 0)))
  (let (%1534 (Concat %1530 %1531 %2489 %2490 0))
  (let (%1535 (Reshape %1503 %1534))
  (let (%1536 (Shape %1506))
  (let (%1537 (Constant 0))
  (let (%1538 (Gather %1536 %1537 0))
  (let (%1539 (Shape %1506))
  (let (%1540 (Constant 1))
  (let (%1541 (Gather %1539 %1540 0))
  (let (%1544 (Unsqueeze %1538 (vec 0)))
  (let (%1545 (Unsqueeze %1541 (vec 0)))
  (let (%1548 (Concat %1544 %1545 %2491 %2492 0))
  (let (%1549 (Reshape %1506 %1548))
  (let (%1550 (Transpose %1549 (vec 0 2 1 3)))
  (let (%1551 (Transpose %1535 (vec 0 2 3 1)))
  (let (%1552 (MatMul %1521 %1551))
  (let (%1553 (Constant 8.0))
  (let (%1554 (Div %1552 %1553))
  (let (%1555 (Add %1554 %289))
  (let (%1556 (Softmax %1555 3))
  (let (%1557 (MatMul %1556 %1550))
  (let (%1558 (Transpose %1557 (vec 0 2 1 3)))
  (let (%1559 (Shape %1558))
  (let (%1560 (Constant 0))
  (let (%1561 (Gather %1559 %1560 0))
  (let (%1562 (Shape %1558))
  (let (%1563 (Constant 1))
  (let (%1564 (Gather %1562 %1563 0))
  (let (%1566 (Unsqueeze %1561 (vec 0)))
  (let (%1567 (Unsqueeze %1564 (vec 0)))
  (let (%1569 (Concat %1566 %1567 %2493 0))
  (let (%1570 (Reshape %1558 %1569))
  (let (%1572 (MatMul %1570 %2494))
  (let (%1573 (Add %1572 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1574 (Add %1573 %1497))
  (let (%1576 (ReduceMean %1574 (vec -1) 1))
  (let (%1577 (Sub %1574 %1576))
  (let (%1578 (Cast_FLOAT %1577))
  (let (%1580 (Pow %1578 %2495))
  (let (%1581 (ReduceMean %1580 (vec -1) 1))
  (let (%1582 (Constant 9.999999960041972e-13))
  (let (%1583 (Add %1581 %1582))
  (let (%1584 (Sqrt %1583))
  (let (%1585 (Div %1577 %1584))
  (let (%1586 (Mul %1585 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1587 (Add %1586 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1589 (MatMul %1587 %2496))
  (let (%1590 (Add %1589 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1591 (Constant 1.4142135381698608))
  (let (%1592 (Div %1590 %1591))
  (let (%1593 (Erf %1592))
  (let (%1594 (Constant 1.0))
  (let (%1595 (Add %1593 %1594))
  (let (%1596 (Mul %1590 %1595))
  (let (%1597 (Constant 0.5))
  (let (%1598 (Mul %1596 %1597))
  (let (%1600 (MatMul %1598 %2497))
  (let (%1601 (Add %1600 bert.encoder.layer.10.output.dense.bias))
  (let (%1602 (Add %1601 %1587))
  (let (%1604 (ReduceMean %1602 (vec -1) 1))
  (let (%1605 (Sub %1602 %1604))
  (let (%1606 (Cast_FLOAT %1605))
  (let (%1608 (Pow %1606 %2498))
  (let (%1609 (ReduceMean %1608 (vec -1) 1))
  (let (%1610 (Constant 9.999999960041972e-13))
  (let (%1611 (Add %1609 %1610))
  (let (%1612 (Sqrt %1611))
  (let (%1613 (Div %1605 %1612))
  (let (%1614 (Mul %1613 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1615 (Add %1614 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1617 (MatMul %1615 %2499))
  (let (%1618 (Add %1617 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1620 (MatMul %1615 %2500))
  (let (%1621 (Add %1620 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1623 (MatMul %1615 %2501))
  (let (%1624 (Add %1623 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1625 (Shape %1618))
  (let (%1626 (Constant 0))
  (let (%1627 (Gather %1625 %1626 0))
  (let (%1628 (Shape %1618))
  (let (%1629 (Constant 1))
  (let (%1630 (Gather %1628 %1629 0))
  (let (%1633 (Unsqueeze %1627 (vec 0)))
  (let (%1634 (Unsqueeze %1630 (vec 0)))
  (let (%1637 (Concat %1633 %1634 %2502 %2503 0))
  (let (%1638 (Reshape %1618 %1637))
  (let (%1639 (Transpose %1638 (vec 0 2 1 3)))
  (let (%1640 (Shape %1621))
  (let (%1641 (Constant 0))
  (let (%1642 (Gather %1640 %1641 0))
  (let (%1643 (Shape %1621))
  (let (%1644 (Constant 1))
  (let (%1645 (Gather %1643 %1644 0))
  (let (%1648 (Unsqueeze %1642 (vec 0)))
  (let (%1649 (Unsqueeze %1645 (vec 0)))
  (let (%1652 (Concat %1648 %1649 %2504 %2505 0))
  (let (%1653 (Reshape %1621 %1652))
  (let (%1654 (Shape %1624))
  (let (%1655 (Constant 0))
  (let (%1656 (Gather %1654 %1655 0))
  (let (%1657 (Shape %1624))
  (let (%1658 (Constant 1))
  (let (%1659 (Gather %1657 %1658 0))
  (let (%1662 (Unsqueeze %1656 (vec 0)))
  (let (%1663 (Unsqueeze %1659 (vec 0)))
  (let (%1666 (Concat %1662 %1663 %2506 %2507 0))
  (let (%1667 (Reshape %1624 %1666))
  (let (%1668 (Transpose %1667 (vec 0 2 1 3)))
  (let (%1669 (Transpose %1653 (vec 0 2 3 1)))
  (let (%1670 (MatMul %1639 %1669))
  (let (%1671 (Constant 8.0))
  (let (%1672 (Div %1670 %1671))
  (let (%1673 (Add %1672 %289))
  (let (%1674 (Softmax %1673 3))
  (let (%1675 (MatMul %1674 %1668))
  (let (%1676 (Transpose %1675 (vec 0 2 1 3)))
  (let (%1677 (Shape %1676))
  (let (%1678 (Constant 0))
  (let (%1679 (Gather %1677 %1678 0))
  (let (%1680 (Shape %1676))
  (let (%1681 (Constant 1))
  (let (%1682 (Gather %1680 %1681 0))
  (let (%1684 (Unsqueeze %1679 (vec 0)))
  (let (%1685 (Unsqueeze %1682 (vec 0)))
  (let (%1687 (Concat %1684 %1685 %2508 0))
  (let (%1688 (Reshape %1676 %1687))
  (let (%1690 (MatMul %1688 %2509))
  (let (%1691 (Add %1690 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1692 (Add %1691 %1615))
  (let (%1694 (ReduceMean %1692 (vec -1) 1))
  (let (%1695 (Sub %1692 %1694))
  (let (%1696 (Cast_FLOAT %1695))
  (let (%1698 (Pow %1696 %2510))
  (let (%1699 (ReduceMean %1698 (vec -1) 1))
  (let (%1700 (Constant 9.999999960041972e-13))
  (let (%1701 (Add %1699 %1700))
  (let (%1702 (Sqrt %1701))
  (let (%1703 (Div %1695 %1702))
  (let (%1704 (Mul %1703 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1705 (Add %1704 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1707 (MatMul %1705 %2511))
  (let (%1708 (Add %1707 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1709 (Constant 1.4142135381698608))
  (let (%1710 (Div %1708 %1709))
  (let (%1711 (Erf %1710))
  (let (%1712 (Constant 1.0))
  (let (%1713 (Add %1711 %1712))
  (let (%1714 (Mul %1708 %1713))
  (let (%1715 (Constant 0.5))
  (let (%1716 (Mul %1714 %1715))
  (let (%1718 (MatMul %1716 %2512))
  (let (%1719 (Add %1718 bert.encoder.layer.11.output.dense.bias))
  (let (%1720 (Add %1719 %1705))
  (let (%1722 (ReduceMean %1720 (vec -1) 1))
  (let (%1723 (Sub %1720 %1722))
  (let (%1724 (Cast_FLOAT %1723))
  (let (%1726 (Pow %1724 %2513))
  (let (%1727 (ReduceMean %1726 (vec -1) 1))
  (let (%1728 (Constant 9.999999960041972e-13))
  (let (%1729 (Add %1727 %1728))
  (let (%1730 (Sqrt %1729))
  (let (%1731 (Div %1723 %1730))
  (let (%1732 (Mul %1731 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1733 (Add %1732 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1735 (MatMul %1733 %2514))
  (let (%1736 (Add %1735 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1738 (MatMul %1733 %2515))
  (let (%1739 (Add %1738 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1741 (MatMul %1733 %2516))
  (let (%1742 (Add %1741 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1743 (Shape %1736))
  (let (%1744 (Constant 0))
  (let (%1745 (Gather %1743 %1744 0))
  (let (%1746 (Shape %1736))
  (let (%1747 (Constant 1))
  (let (%1748 (Gather %1746 %1747 0))
  (let (%1751 (Unsqueeze %1745 (vec 0)))
  (let (%1752 (Unsqueeze %1748 (vec 0)))
  (let (%1755 (Concat %1751 %1752 %2517 %2518 0))
  (let (%1756 (Reshape %1736 %1755))
  (let (%1757 (Transpose %1756 (vec 0 2 1 3)))
  (let (%1758 (Shape %1739))
  (let (%1759 (Constant 0))
  (let (%1760 (Gather %1758 %1759 0))
  (let (%1761 (Shape %1739))
  (let (%1762 (Constant 1))
  (let (%1763 (Gather %1761 %1762 0))
  (let (%1766 (Unsqueeze %1760 (vec 0)))
  (let (%1767 (Unsqueeze %1763 (vec 0)))
  (let (%1770 (Concat %1766 %1767 %2519 %2520 0))
  (let (%1771 (Reshape %1739 %1770))
  (let (%1772 (Shape %1742))
  (let (%1773 (Constant 0))
  (let (%1774 (Gather %1772 %1773 0))
  (let (%1775 (Shape %1742))
  (let (%1776 (Constant 1))
  (let (%1777 (Gather %1775 %1776 0))
  (let (%1780 (Unsqueeze %1774 (vec 0)))
  (let (%1781 (Unsqueeze %1777 (vec 0)))
  (let (%1784 (Concat %1780 %1781 %2521 %2522 0))
  (let (%1785 (Reshape %1742 %1784))
  (let (%1786 (Transpose %1785 (vec 0 2 1 3)))
  (let (%1787 (Transpose %1771 (vec 0 2 3 1)))
  (let (%1788 (MatMul %1757 %1787))
  (let (%1789 (Constant 8.0))
  (let (%1790 (Div %1788 %1789))
  (let (%1791 (Add %1790 %289))
  (let (%1792 (Softmax %1791 3))
  (let (%1793 (MatMul %1792 %1786))
  (let (%1794 (Transpose %1793 (vec 0 2 1 3)))
  (let (%1795 (Shape %1794))
  (let (%1796 (Constant 0))
  (let (%1797 (Gather %1795 %1796 0))
  (let (%1798 (Shape %1794))
  (let (%1799 (Constant 1))
  (let (%1800 (Gather %1798 %1799 0))
  (let (%1802 (Unsqueeze %1797 (vec 0)))
  (let (%1803 (Unsqueeze %1800 (vec 0)))
  (let (%1805 (Concat %1802 %1803 %2523 0))
  (let (%1806 (Reshape %1794 %1805))
  (let (%1808 (MatMul %1806 %2524))
  (let (%1809 (Add %1808 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1810 (Add %1809 %1733))
  (let (%1812 (ReduceMean %1810 (vec -1) 1))
  (let (%1813 (Sub %1810 %1812))
  (let (%1814 (Cast_FLOAT %1813))
  (let (%1816 (Pow %1814 %2525))
  (let (%1817 (ReduceMean %1816 (vec -1) 1))
  (let (%1818 (Constant 9.999999960041972e-13))
  (let (%1819 (Add %1817 %1818))
  (let (%1820 (Sqrt %1819))
  (let (%1821 (Div %1813 %1820))
  (let (%1822 (Mul %1821 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1823 (Add %1822 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1825 (MatMul %1823 %2526))
  (let (%1826 (Add %1825 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1827 (Constant 1.4142135381698608))
  (let (%1828 (Div %1826 %1827))
  (let (%1829 (Erf %1828))
  (let (%1830 (Constant 1.0))
  (let (%1831 (Add %1829 %1830))
  (let (%1832 (Mul %1826 %1831))
  (let (%1833 (Constant 0.5))
  (let (%1834 (Mul %1832 %1833))
  (let (%1836 (MatMul %1834 %2527))
  (let (%1837 (Add %1836 bert.encoder.layer.12.output.dense.bias))
  (let (%1838 (Add %1837 %1823))
  (let (%1840 (ReduceMean %1838 (vec -1) 1))
  (let (%1841 (Sub %1838 %1840))
  (let (%1842 (Cast_FLOAT %1841))
  (let (%1844 (Pow %1842 %2528))
  (let (%1845 (ReduceMean %1844 (vec -1) 1))
  (let (%1846 (Constant 9.999999960041972e-13))
  (let (%1847 (Add %1845 %1846))
  (let (%1848 (Sqrt %1847))
  (let (%1849 (Div %1841 %1848))
  (let (%1850 (Mul %1849 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1851 (Add %1850 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1853 (MatMul %1851 %2529))
  (let (%1854 (Add %1853 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1856 (MatMul %1851 %2530))
  (let (%1857 (Add %1856 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1859 (MatMul %1851 %2531))
  (let (%1860 (Add %1859 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1861 (Shape %1854))
  (let (%1862 (Constant 0))
  (let (%1863 (Gather %1861 %1862 0))
  (let (%1864 (Shape %1854))
  (let (%1865 (Constant 1))
  (let (%1866 (Gather %1864 %1865 0))
  (let (%1869 (Unsqueeze %1863 (vec 0)))
  (let (%1870 (Unsqueeze %1866 (vec 0)))
  (let (%1873 (Concat %1869 %1870 %2532 %2533 0))
  (let (%1874 (Reshape %1854 %1873))
  (let (%1875 (Transpose %1874 (vec 0 2 1 3)))
  (let (%1876 (Shape %1857))
  (let (%1877 (Constant 0))
  (let (%1878 (Gather %1876 %1877 0))
  (let (%1879 (Shape %1857))
  (let (%1880 (Constant 1))
  (let (%1881 (Gather %1879 %1880 0))
  (let (%1884 (Unsqueeze %1878 (vec 0)))
  (let (%1885 (Unsqueeze %1881 (vec 0)))
  (let (%1888 (Concat %1884 %1885 %2534 %2535 0))
  (let (%1889 (Reshape %1857 %1888))
  (let (%1890 (Shape %1860))
  (let (%1891 (Constant 0))
  (let (%1892 (Gather %1890 %1891 0))
  (let (%1893 (Shape %1860))
  (let (%1894 (Constant 1))
  (let (%1895 (Gather %1893 %1894 0))
  (let (%1898 (Unsqueeze %1892 (vec 0)))
  (let (%1899 (Unsqueeze %1895 (vec 0)))
  (let (%1902 (Concat %1898 %1899 %2536 %2537 0))
  (let (%1903 (Reshape %1860 %1902))
  (let (%1904 (Transpose %1903 (vec 0 2 1 3)))
  (let (%1905 (Transpose %1889 (vec 0 2 3 1)))
  (let (%1906 (MatMul %1875 %1905))
  (let (%1907 (Constant 8.0))
  (let (%1908 (Div %1906 %1907))
  (let (%1909 (Add %1908 %289))
  (let (%1910 (Softmax %1909 3))
  (let (%1911 (MatMul %1910 %1904))
  (let (%1912 (Transpose %1911 (vec 0 2 1 3)))
  (let (%1913 (Shape %1912))
  (let (%1914 (Constant 0))
  (let (%1915 (Gather %1913 %1914 0))
  (let (%1916 (Shape %1912))
  (let (%1917 (Constant 1))
  (let (%1918 (Gather %1916 %1917 0))
  (let (%1920 (Unsqueeze %1915 (vec 0)))
  (let (%1921 (Unsqueeze %1918 (vec 0)))
  (let (%1923 (Concat %1920 %1921 %2538 0))
  (let (%1924 (Reshape %1912 %1923))
  (let (%1926 (MatMul %1924 %2539))
  (let (%1927 (Add %1926 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1928 (Add %1927 %1851))
  (let (%1930 (ReduceMean %1928 (vec -1) 1))
  (let (%1931 (Sub %1928 %1930))
  (let (%1932 (Cast_FLOAT %1931))
  (let (%1934 (Pow %1932 %2540))
  (let (%1935 (ReduceMean %1934 (vec -1) 1))
  (let (%1936 (Constant 9.999999960041972e-13))
  (let (%1937 (Add %1935 %1936))
  (let (%1938 (Sqrt %1937))
  (let (%1939 (Div %1931 %1938))
  (let (%1940 (Mul %1939 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1941 (Add %1940 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1943 (MatMul %1941 %2541))
  (let (%1944 (Add %1943 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1945 (Constant 1.4142135381698608))
  (let (%1946 (Div %1944 %1945))
  (let (%1947 (Erf %1946))
  (let (%1948 (Constant 1.0))
  (let (%1949 (Add %1947 %1948))
  (let (%1950 (Mul %1944 %1949))
  (let (%1951 (Constant 0.5))
  (let (%1952 (Mul %1950 %1951))
  (let (%1954 (MatMul %1952 %2542))
  (let (%1955 (Add %1954 bert.encoder.layer.13.output.dense.bias))
  (let (%1956 (Add %1955 %1941))
  (let (%1958 (ReduceMean %1956 (vec -1) 1))
  (let (%1959 (Sub %1956 %1958))
  (let (%1960 (Cast_FLOAT %1959))
  (let (%1962 (Pow %1960 %2543))
  (let (%1963 (ReduceMean %1962 (vec -1) 1))
  (let (%1964 (Constant 9.999999960041972e-13))
  (let (%1965 (Add %1963 %1964))
  (let (%1966 (Sqrt %1965))
  (let (%1967 (Div %1959 %1966))
  (let (%1968 (Mul %1967 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%1969 (Add %1968 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%1971 (MatMul %1969 %2544))
  (let (%1972 (Add %1971 bert.encoder.layer.14.attention.self.query.bias))
  (let (%1974 (MatMul %1969 %2545))
  (let (%1975 (Add %1974 bert.encoder.layer.14.attention.self.key.bias))
  (let (%1977 (MatMul %1969 %2546))
  (let (%1978 (Add %1977 bert.encoder.layer.14.attention.self.value.bias))
  (let (%1979 (Shape %1972))
  (let (%1980 (Constant 0))
  (let (%1981 (Gather %1979 %1980 0))
  (let (%1982 (Shape %1972))
  (let (%1983 (Constant 1))
  (let (%1984 (Gather %1982 %1983 0))
  (let (%1987 (Unsqueeze %1981 (vec 0)))
  (let (%1988 (Unsqueeze %1984 (vec 0)))
  (let (%1991 (Concat %1987 %1988 %2547 %2548 0))
  (let (%1992 (Reshape %1972 %1991))
  (let (%1993 (Transpose %1992 (vec 0 2 1 3)))
  (let (%1994 (Shape %1975))
  (let (%1995 (Constant 0))
  (let (%1996 (Gather %1994 %1995 0))
  (let (%1997 (Shape %1975))
  (let (%1998 (Constant 1))
  (let (%1999 (Gather %1997 %1998 0))
  (let (%2002 (Unsqueeze %1996 (vec 0)))
  (let (%2003 (Unsqueeze %1999 (vec 0)))
  (let (%2006 (Concat %2002 %2003 %2549 %2550 0))
  (let (%2007 (Reshape %1975 %2006))
  (let (%2008 (Shape %1978))
  (let (%2009 (Constant 0))
  (let (%2010 (Gather %2008 %2009 0))
  (let (%2011 (Shape %1978))
  (let (%2012 (Constant 1))
  (let (%2013 (Gather %2011 %2012 0))
  (let (%2016 (Unsqueeze %2010 (vec 0)))
  (let (%2017 (Unsqueeze %2013 (vec 0)))
  (let (%2020 (Concat %2016 %2017 %2551 %2552 0))
  (let (%2021 (Reshape %1978 %2020))
  (let (%2022 (Transpose %2021 (vec 0 2 1 3)))
  (let (%2023 (Transpose %2007 (vec 0 2 3 1)))
  (let (%2024 (MatMul %1993 %2023))
  (let (%2025 (Constant 8.0))
  (let (%2026 (Div %2024 %2025))
  (let (%2027 (Add %2026 %289))
  (let (%2028 (Softmax %2027 3))
  (let (%2029 (MatMul %2028 %2022))
  (let (%2030 (Transpose %2029 (vec 0 2 1 3)))
  (let (%2031 (Shape %2030))
  (let (%2032 (Constant 0))
  (let (%2033 (Gather %2031 %2032 0))
  (let (%2034 (Shape %2030))
  (let (%2035 (Constant 1))
  (let (%2036 (Gather %2034 %2035 0))
  (let (%2038 (Unsqueeze %2033 (vec 0)))
  (let (%2039 (Unsqueeze %2036 (vec 0)))
  (let (%2041 (Concat %2038 %2039 %2553 0))
  (let (%2042 (Reshape %2030 %2041))
  (let (%2044 (MatMul %2042 %2554))
  (let (%2045 (Add %2044 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2046 (Add %2045 %1969))
  (let (%2048 (ReduceMean %2046 (vec -1) 1))
  (let (%2049 (Sub %2046 %2048))
  (let (%2050 (Cast_FLOAT %2049))
  (let (%2052 (Pow %2050 %2555))
  (let (%2053 (ReduceMean %2052 (vec -1) 1))
  (let (%2054 (Constant 9.999999960041972e-13))
  (let (%2055 (Add %2053 %2054))
  (let (%2056 (Sqrt %2055))
  (let (%2057 (Div %2049 %2056))
  (let (%2058 (Mul %2057 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2059 (Add %2058 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2061 (MatMul %2059 %2556))
  (let (%2062 (Add %2061 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2063 (Constant 1.4142135381698608))
  (let (%2064 (Div %2062 %2063))
  (let (%2065 (Erf %2064))
  (let (%2066 (Constant 1.0))
  (let (%2067 (Add %2065 %2066))
  (let (%2068 (Mul %2062 %2067))
  (let (%2069 (Constant 0.5))
  (let (%2070 (Mul %2068 %2069))
  (let (%2072 (MatMul %2070 %2557))
  (let (%2073 (Add %2072 bert.encoder.layer.14.output.dense.bias))
  (let (%2074 (Add %2073 %2059))
  (let (%2076 (ReduceMean %2074 (vec -1) 1))
  (let (%2077 (Sub %2074 %2076))
  (let (%2078 (Cast_FLOAT %2077))
  (let (%2080 (Pow %2078 %2558))
  (let (%2081 (ReduceMean %2080 (vec -1) 1))
  (let (%2082 (Constant 9.999999960041972e-13))
  (let (%2083 (Add %2081 %2082))
  (let (%2084 (Sqrt %2083))
  (let (%2085 (Div %2077 %2084))
  (let (%2086 (Mul %2085 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2087 (Add %2086 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2089 (MatMul %2087 %2559))
  (let (%2090 (Add %2089 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2092 (MatMul %2087 %2560))
  (let (%2093 (Add %2092 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2095 (MatMul %2087 %2561))
  (let (%2096 (Add %2095 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2097 (Shape %2090))
  (let (%2098 (Constant 0))
  (let (%2099 (Gather %2097 %2098 0))
  (let (%2100 (Shape %2090))
  (let (%2101 (Constant 1))
  (let (%2102 (Gather %2100 %2101 0))
  (let (%2105 (Unsqueeze %2099 (vec 0)))
  (let (%2106 (Unsqueeze %2102 (vec 0)))
  (let (%2109 (Concat %2105 %2106 %2562 %2563 0))
  (let (%2110 (Reshape %2090 %2109))
  (let (%2111 (Transpose %2110 (vec 0 2 1 3)))
  (let (%2112 (Shape %2093))
  (let (%2113 (Constant 0))
  (let (%2114 (Gather %2112 %2113 0))
  (let (%2115 (Shape %2093))
  (let (%2116 (Constant 1))
  (let (%2117 (Gather %2115 %2116 0))
  (let (%2120 (Unsqueeze %2114 (vec 0)))
  (let (%2121 (Unsqueeze %2117 (vec 0)))
  (let (%2124 (Concat %2120 %2121 %2564 %2565 0))
  (let (%2125 (Reshape %2093 %2124))
  (let (%2126 (Shape %2096))
  (let (%2127 (Constant 0))
  (let (%2128 (Gather %2126 %2127 0))
  (let (%2129 (Shape %2096))
  (let (%2130 (Constant 1))
  (let (%2131 (Gather %2129 %2130 0))
  (let (%2134 (Unsqueeze %2128 (vec 0)))
  (let (%2135 (Unsqueeze %2131 (vec 0)))
  (let (%2138 (Concat %2134 %2135 %2566 %2567 0))
  (let (%2139 (Reshape %2096 %2138))
  (let (%2140 (Transpose %2139 (vec 0 2 1 3)))
  (let (%2141 (Transpose %2125 (vec 0 2 3 1)))
  (let (%2142 (MatMul %2111 %2141))
  (let (%2143 (Constant 8.0))
  (let (%2144 (Div %2142 %2143))
  (let (%2145 (Add %2144 %289))
  (let (%2146 (Softmax %2145 3))
  (let (%2147 (MatMul %2146 %2140))
  (let (%2148 (Transpose %2147 (vec 0 2 1 3)))
  (let (%2149 (Shape %2148))
  (let (%2150 (Constant 0))
  (let (%2151 (Gather %2149 %2150 0))
  (let (%2152 (Shape %2148))
  (let (%2153 (Constant 1))
  (let (%2154 (Gather %2152 %2153 0))
  (let (%2156 (Unsqueeze %2151 (vec 0)))
  (let (%2157 (Unsqueeze %2154 (vec 0)))
  (let (%2159 (Concat %2156 %2157 %2568 0))
  (let (%2160 (Reshape %2148 %2159))
  (let (%2162 (MatMul %2160 %2569))
  (let (%2163 (Add %2162 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2164 (Add %2163 %2087))
  (let (%2166 (ReduceMean %2164 (vec -1) 1))
  (let (%2167 (Sub %2164 %2166))
  (let (%2168 (Cast_FLOAT %2167))
  (let (%2170 (Pow %2168 %2570))
  (let (%2171 (ReduceMean %2170 (vec -1) 1))
  (let (%2172 (Constant 9.999999960041972e-13))
  (let (%2173 (Add %2171 %2172))
  (let (%2174 (Sqrt %2173))
  (let (%2175 (Div %2167 %2174))
  (let (%2176 (Mul %2175 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2177 (Add %2176 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2179 (MatMul %2177 %2571))
  (let (%2180 (Add %2179 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2181 (Constant 1.4142135381698608))
  (let (%2182 (Div %2180 %2181))
  (let (%2183 (Erf %2182))
  (let (%2184 (Constant 1.0))
  (let (%2185 (Add %2183 %2184))
  (let (%2186 (Mul %2180 %2185))
  (let (%2187 (Constant 0.5))
  (let (%2188 (Mul %2186 %2187))
  (let (%2190 (MatMul %2188 %2572))
  (let (%2191 (Add %2190 bert.encoder.layer.15.output.dense.bias))
  (let (%2192 (Add %2191 %2177))
  (let (%2194 (ReduceMean %2192 (vec -1) 1))
  (let (%2195 (Sub %2192 %2194))
  (let (%2196 (Cast_FLOAT %2195))
  (let (%2198 (Pow %2196 %2573))
  (let (%2199 (ReduceMean %2198 (vec -1) 1))
  (let (%2200 (Constant 9.999999960041972e-13))
  (let (%2201 (Add %2199 %2200))
  (let (%2202 (Sqrt %2201))
  (let (%2203 (Div %2195 %2202))
  (let (%2204 (Mul %2203 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2205 (Add %2204 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2207 (MatMul %2205 %2574))
  (let (%2208 (Add %2207 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2210 (MatMul %2205 %2575))
  (let (%2211 (Add %2210 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2213 (MatMul %2205 %2576))
  (let (%2214 (Add %2213 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2215 (Shape %2208))
  (let (%2216 (Constant 0))
  (let (%2217 (Gather %2215 %2216 0))
  (let (%2218 (Shape %2208))
  (let (%2219 (Constant 1))
  (let (%2220 (Gather %2218 %2219 0))
  (let (%2223 (Unsqueeze %2217 (vec 0)))
  (let (%2224 (Unsqueeze %2220 (vec 0)))
  (let (%2227 (Concat %2223 %2224 %2577 %2578 0))
  (let (%2228 (Reshape %2208 %2227))
  (let (%2229 (Transpose %2228 (vec 0 2 1 3)))
  (let (%2230 (Shape %2211))
  (let (%2231 (Constant 0))
  (let (%2232 (Gather %2230 %2231 0))
  (let (%2233 (Shape %2211))
  (let (%2234 (Constant 1))
  (let (%2235 (Gather %2233 %2234 0))
  (let (%2238 (Unsqueeze %2232 (vec 0)))
  (let (%2239 (Unsqueeze %2235 (vec 0)))
  (let (%2242 (Concat %2238 %2239 %2579 %2580 0))
  (let (%2243 (Reshape %2211 %2242))
  (let (%2244 (Shape %2214))
  (let (%2245 (Constant 0))
  (let (%2246 (Gather %2244 %2245 0))
  (let (%2247 (Shape %2214))
  (let (%2248 (Constant 1))
  (let (%2249 (Gather %2247 %2248 0))
  (let (%2252 (Unsqueeze %2246 (vec 0)))
  (let (%2253 (Unsqueeze %2249 (vec 0)))
  (let (%2256 (Concat %2252 %2253 %2581 %2582 0))
  (let (%2257 (Reshape %2214 %2256))
  (let (%2258 (Transpose %2257 (vec 0 2 1 3)))
  (let (%2259 (Transpose %2243 (vec 0 2 3 1)))
  (let (%2260 (MatMul %2229 %2259))
  (let (%2261 (Constant 8.0))
  (let (%2262 (Div %2260 %2261))
  (let (%2263 (Add %2262 %289))
  (let (%2264 (Softmax %2263 3))
  (let (%2265 (MatMul %2264 %2258))
  (let (%2266 (Transpose %2265 (vec 0 2 1 3)))
  (let (%2267 (Shape %2266))
  (let (%2268 (Constant 0))
  (let (%2269 (Gather %2267 %2268 0))
  (let (%2270 (Shape %2266))
  (let (%2271 (Constant 1))
  (let (%2272 (Gather %2270 %2271 0))
  (let (%2274 (Unsqueeze %2269 (vec 0)))
  (let (%2275 (Unsqueeze %2272 (vec 0)))
  (let (%2277 (Concat %2274 %2275 %2583 0))
  (let (%2278 (Reshape %2266 %2277))
  (let (%2280 (MatMul %2278 %2584))
  (let (%2281 (Add %2280 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2282 (Add %2281 %2205))
  (let (%2284 (ReduceMean %2282 (vec -1) 1))
  (let (%2285 (Sub %2282 %2284))
  (let (%2286 (Cast_FLOAT %2285))
  (let (%2288 (Pow %2286 %2585))
  (let (%2289 (ReduceMean %2288 (vec -1) 1))
  (let (%2290 (Constant 9.999999960041972e-13))
  (let (%2291 (Add %2289 %2290))
  (let (%2292 (Sqrt %2291))
  (let (%2293 (Div %2285 %2292))
  (let (%2294 (Mul %2293 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2295 (Add %2294 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2297 (MatMul %2295 %2586))
  (let (%2298 (Add %2297 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2299 (Constant 1.4142135381698608))
  (let (%2300 (Div %2298 %2299))
  (let (%2301 (Erf %2300))
  (let (%2302 (Constant 1.0))
  (let (%2303 (Add %2301 %2302))
  (let (%2304 (Mul %2298 %2303))
  (let (%2305 (Constant 0.5))
  (let (%2306 (Mul %2304 %2305))
  (let (%2308 (MatMul %2306 %2587))
  (let (%2309 (Add %2308 bert.encoder.layer.16.output.dense.bias))
  (let (%2310 (Add %2309 %2295))
  (let (%2312 (ReduceMean %2310 (vec -1) 1))
  (let (%2313 (Sub %2310 %2312))
  (let (%2314 (Cast_FLOAT %2313))
  (let (%2316 (Pow %2314 %2588))
  (let (%2317 (ReduceMean %2316 (vec -1) 1))
  (let (%2318 (Constant 9.999999960041972e-13))
  (let (%2319 (Add %2317 %2318))
  (let (%2320 (Sqrt %2319))
  (let (%2321 (Div %2313 %2320))
  (let (%2322 (Mul %2321 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2323 (Add %2322 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2325 (MatMul %2323 %2589))
  (let (%2326 (Add %2325 qa_outputs.bias))
  (let ((%2327 %2328) (Split %2326 (vec 1 1) -1))
  (let (output_0 (Squeeze %2327 (vec -1)))
  (let (output_1 (Squeeze %2328 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

