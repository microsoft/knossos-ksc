;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert16.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2197 (vec 0))
  (let (%2198 (vec 1))
  (let (%2199 2.0)
  (let (%2200 (load-from-onnx-float32 768 768 "%2200"))
  (let (%2201 (load-from-onnx-float32 768 768 "%2201"))
  (let (%2202 (load-from-onnx-float32 768 768 "%2202"))
  (let (%2203 (vec 12))
  (let (%2204 (vec 64))
  (let (%2205 (vec 12))
  (let (%2206 (vec 64))
  (let (%2207 (vec 12))
  (let (%2208 (vec 64))
  (let (%2209 (vec 768))
  (let (%2210 (load-from-onnx-float32 768 768 "%2210"))
  (let (%2211 2.0)
  (let (%2212 (load-from-onnx-float32 768 3072 "%2212"))
  (let (%2213 (load-from-onnx-float32 3072 768 "%2213"))
  (let (%2214 2.0)
  (let (%2215 (load-from-onnx-float32 768 768 "%2215"))
  (let (%2216 (load-from-onnx-float32 768 768 "%2216"))
  (let (%2217 (load-from-onnx-float32 768 768 "%2217"))
  (let (%2218 (vec 12))
  (let (%2219 (vec 64))
  (let (%2220 (vec 12))
  (let (%2221 (vec 64))
  (let (%2222 (vec 12))
  (let (%2223 (vec 64))
  (let (%2224 (vec 768))
  (let (%2225 (load-from-onnx-float32 768 768 "%2225"))
  (let (%2226 2.0)
  (let (%2227 (load-from-onnx-float32 768 3072 "%2227"))
  (let (%2228 (load-from-onnx-float32 3072 768 "%2228"))
  (let (%2229 2.0)
  (let (%2230 (load-from-onnx-float32 768 768 "%2230"))
  (let (%2231 (load-from-onnx-float32 768 768 "%2231"))
  (let (%2232 (load-from-onnx-float32 768 768 "%2232"))
  (let (%2233 (vec 12))
  (let (%2234 (vec 64))
  (let (%2235 (vec 12))
  (let (%2236 (vec 64))
  (let (%2237 (vec 12))
  (let (%2238 (vec 64))
  (let (%2239 (vec 768))
  (let (%2240 (load-from-onnx-float32 768 768 "%2240"))
  (let (%2241 2.0)
  (let (%2242 (load-from-onnx-float32 768 3072 "%2242"))
  (let (%2243 (load-from-onnx-float32 3072 768 "%2243"))
  (let (%2244 2.0)
  (let (%2245 (load-from-onnx-float32 768 768 "%2245"))
  (let (%2246 (load-from-onnx-float32 768 768 "%2246"))
  (let (%2247 (load-from-onnx-float32 768 768 "%2247"))
  (let (%2248 (vec 12))
  (let (%2249 (vec 64))
  (let (%2250 (vec 12))
  (let (%2251 (vec 64))
  (let (%2252 (vec 12))
  (let (%2253 (vec 64))
  (let (%2254 (vec 768))
  (let (%2255 (load-from-onnx-float32 768 768 "%2255"))
  (let (%2256 2.0)
  (let (%2257 (load-from-onnx-float32 768 3072 "%2257"))
  (let (%2258 (load-from-onnx-float32 3072 768 "%2258"))
  (let (%2259 2.0)
  (let (%2260 (load-from-onnx-float32 768 768 "%2260"))
  (let (%2261 (load-from-onnx-float32 768 768 "%2261"))
  (let (%2262 (load-from-onnx-float32 768 768 "%2262"))
  (let (%2263 (vec 12))
  (let (%2264 (vec 64))
  (let (%2265 (vec 12))
  (let (%2266 (vec 64))
  (let (%2267 (vec 12))
  (let (%2268 (vec 64))
  (let (%2269 (vec 768))
  (let (%2270 (load-from-onnx-float32 768 768 "%2270"))
  (let (%2271 2.0)
  (let (%2272 (load-from-onnx-float32 768 3072 "%2272"))
  (let (%2273 (load-from-onnx-float32 3072 768 "%2273"))
  (let (%2274 2.0)
  (let (%2275 (load-from-onnx-float32 768 768 "%2275"))
  (let (%2276 (load-from-onnx-float32 768 768 "%2276"))
  (let (%2277 (load-from-onnx-float32 768 768 "%2277"))
  (let (%2278 (vec 12))
  (let (%2279 (vec 64))
  (let (%2280 (vec 12))
  (let (%2281 (vec 64))
  (let (%2282 (vec 12))
  (let (%2283 (vec 64))
  (let (%2284 (vec 768))
  (let (%2285 (load-from-onnx-float32 768 768 "%2285"))
  (let (%2286 2.0)
  (let (%2287 (load-from-onnx-float32 768 3072 "%2287"))
  (let (%2288 (load-from-onnx-float32 3072 768 "%2288"))
  (let (%2289 2.0)
  (let (%2290 (load-from-onnx-float32 768 768 "%2290"))
  (let (%2291 (load-from-onnx-float32 768 768 "%2291"))
  (let (%2292 (load-from-onnx-float32 768 768 "%2292"))
  (let (%2293 (vec 12))
  (let (%2294 (vec 64))
  (let (%2295 (vec 12))
  (let (%2296 (vec 64))
  (let (%2297 (vec 12))
  (let (%2298 (vec 64))
  (let (%2299 (vec 768))
  (let (%2300 (load-from-onnx-float32 768 768 "%2300"))
  (let (%2301 2.0)
  (let (%2302 (load-from-onnx-float32 768 3072 "%2302"))
  (let (%2303 (load-from-onnx-float32 3072 768 "%2303"))
  (let (%2304 2.0)
  (let (%2305 (load-from-onnx-float32 768 768 "%2305"))
  (let (%2306 (load-from-onnx-float32 768 768 "%2306"))
  (let (%2307 (load-from-onnx-float32 768 768 "%2307"))
  (let (%2308 (vec 12))
  (let (%2309 (vec 64))
  (let (%2310 (vec 12))
  (let (%2311 (vec 64))
  (let (%2312 (vec 12))
  (let (%2313 (vec 64))
  (let (%2314 (vec 768))
  (let (%2315 (load-from-onnx-float32 768 768 "%2315"))
  (let (%2316 2.0)
  (let (%2317 (load-from-onnx-float32 768 3072 "%2317"))
  (let (%2318 (load-from-onnx-float32 3072 768 "%2318"))
  (let (%2319 2.0)
  (let (%2320 (load-from-onnx-float32 768 768 "%2320"))
  (let (%2321 (load-from-onnx-float32 768 768 "%2321"))
  (let (%2322 (load-from-onnx-float32 768 768 "%2322"))
  (let (%2323 (vec 12))
  (let (%2324 (vec 64))
  (let (%2325 (vec 12))
  (let (%2326 (vec 64))
  (let (%2327 (vec 12))
  (let (%2328 (vec 64))
  (let (%2329 (vec 768))
  (let (%2330 (load-from-onnx-float32 768 768 "%2330"))
  (let (%2331 2.0)
  (let (%2332 (load-from-onnx-float32 768 3072 "%2332"))
  (let (%2333 (load-from-onnx-float32 3072 768 "%2333"))
  (let (%2334 2.0)
  (let (%2335 (load-from-onnx-float32 768 768 "%2335"))
  (let (%2336 (load-from-onnx-float32 768 768 "%2336"))
  (let (%2337 (load-from-onnx-float32 768 768 "%2337"))
  (let (%2338 (vec 12))
  (let (%2339 (vec 64))
  (let (%2340 (vec 12))
  (let (%2341 (vec 64))
  (let (%2342 (vec 12))
  (let (%2343 (vec 64))
  (let (%2344 (vec 768))
  (let (%2345 (load-from-onnx-float32 768 768 "%2345"))
  (let (%2346 2.0)
  (let (%2347 (load-from-onnx-float32 768 3072 "%2347"))
  (let (%2348 (load-from-onnx-float32 3072 768 "%2348"))
  (let (%2349 2.0)
  (let (%2350 (load-from-onnx-float32 768 768 "%2350"))
  (let (%2351 (load-from-onnx-float32 768 768 "%2351"))
  (let (%2352 (load-from-onnx-float32 768 768 "%2352"))
  (let (%2353 (vec 12))
  (let (%2354 (vec 64))
  (let (%2355 (vec 12))
  (let (%2356 (vec 64))
  (let (%2357 (vec 12))
  (let (%2358 (vec 64))
  (let (%2359 (vec 768))
  (let (%2360 (load-from-onnx-float32 768 768 "%2360"))
  (let (%2361 2.0)
  (let (%2362 (load-from-onnx-float32 768 3072 "%2362"))
  (let (%2363 (load-from-onnx-float32 3072 768 "%2363"))
  (let (%2364 2.0)
  (let (%2365 (load-from-onnx-float32 768 768 "%2365"))
  (let (%2366 (load-from-onnx-float32 768 768 "%2366"))
  (let (%2367 (load-from-onnx-float32 768 768 "%2367"))
  (let (%2368 (vec 12))
  (let (%2369 (vec 64))
  (let (%2370 (vec 12))
  (let (%2371 (vec 64))
  (let (%2372 (vec 12))
  (let (%2373 (vec 64))
  (let (%2374 (vec 768))
  (let (%2375 (load-from-onnx-float32 768 768 "%2375"))
  (let (%2376 2.0)
  (let (%2377 (load-from-onnx-float32 768 3072 "%2377"))
  (let (%2378 (load-from-onnx-float32 3072 768 "%2378"))
  (let (%2379 2.0)
  (let (%2380 (load-from-onnx-float32 768 768 "%2380"))
  (let (%2381 (load-from-onnx-float32 768 768 "%2381"))
  (let (%2382 (load-from-onnx-float32 768 768 "%2382"))
  (let (%2383 (vec 12))
  (let (%2384 (vec 64))
  (let (%2385 (vec 12))
  (let (%2386 (vec 64))
  (let (%2387 (vec 12))
  (let (%2388 (vec 64))
  (let (%2389 (vec 768))
  (let (%2390 (load-from-onnx-float32 768 768 "%2390"))
  (let (%2391 2.0)
  (let (%2392 (load-from-onnx-float32 768 3072 "%2392"))
  (let (%2393 (load-from-onnx-float32 3072 768 "%2393"))
  (let (%2394 2.0)
  (let (%2395 (load-from-onnx-float32 768 768 "%2395"))
  (let (%2396 (load-from-onnx-float32 768 768 "%2396"))
  (let (%2397 (load-from-onnx-float32 768 768 "%2397"))
  (let (%2398 (vec 12))
  (let (%2399 (vec 64))
  (let (%2400 (vec 12))
  (let (%2401 (vec 64))
  (let (%2402 (vec 12))
  (let (%2403 (vec 64))
  (let (%2404 (vec 768))
  (let (%2405 (load-from-onnx-float32 768 768 "%2405"))
  (let (%2406 2.0)
  (let (%2407 (load-from-onnx-float32 768 3072 "%2407"))
  (let (%2408 (load-from-onnx-float32 3072 768 "%2408"))
  (let (%2409 2.0)
  (let (%2410 (load-from-onnx-float32 768 768 "%2410"))
  (let (%2411 (load-from-onnx-float32 768 768 "%2411"))
  (let (%2412 (load-from-onnx-float32 768 768 "%2412"))
  (let (%2413 (vec 12))
  (let (%2414 (vec 64))
  (let (%2415 (vec 12))
  (let (%2416 (vec 64))
  (let (%2417 (vec 12))
  (let (%2418 (vec 64))
  (let (%2419 (vec 768))
  (let (%2420 (load-from-onnx-float32 768 768 "%2420"))
  (let (%2421 2.0)
  (let (%2422 (load-from-onnx-float32 768 3072 "%2422"))
  (let (%2423 (load-from-onnx-float32 3072 768 "%2423"))
  (let (%2424 2.0)
  (let (%2425 (load-from-onnx-float32 768 768 "%2425"))
  (let (%2426 (load-from-onnx-float32 768 768 "%2426"))
  (let (%2427 (load-from-onnx-float32 768 768 "%2427"))
  (let (%2428 (vec 12))
  (let (%2429 (vec 64))
  (let (%2430 (vec 12))
  (let (%2431 (vec 64))
  (let (%2432 (vec 12))
  (let (%2433 (vec 64))
  (let (%2434 (vec 768))
  (let (%2435 (load-from-onnx-float32 768 768 "%2435"))
  (let (%2436 2.0)
  (let (%2437 (load-from-onnx-float32 768 3072 "%2437"))
  (let (%2438 (load-from-onnx-float32 3072 768 "%2438"))
  (let (%2439 2.0)
  (let (%2440 (load-from-onnx-float32 768 2 "%2440"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%267 (Unsqueeze attention_mask (vec 1)))
  (let (%268 (Unsqueeze %267 (vec 2)))
  (let (%269 (Cast_FLOAT %268))
  (let (%270 (Constant 1.0))
  (let (%271 (Sub %270 %269))
  (let (%272 (Constant -10000.0))
  (let (%273 (Mul %271 %272))
  (let (%274 (Shape input_ids))
  (let (%275 (Constant 1))
  (let (%276 (Gather %274 %275 0))
  (let (%280 (Unsqueeze %276 (vec 0)))
  (let (%282 (Constant (vec 1)))
  (let (%283 (Slice bert.embeddings.position_ids %2197 %280 %2198 %282))
  (let (%284 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%285 (Gather bert.embeddings.position_embeddings.weight %283 0))
  (let (%286 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%287 (Add %284 %285))
  (let (%288 (Add %287 %286))
  (let (%290 (ReduceMean %288 (vec -1) 1))
  (let (%291 (Sub %288 %290))
  (let (%292 (Cast_FLOAT %291))
  (let (%294 (Pow %292 %2199))
  (let (%295 (ReduceMean %294 (vec -1) 1))
  (let (%296 (Constant 9.999999960041972e-13))
  (let (%297 (Add %295 %296))
  (let (%298 (Sqrt %297))
  (let (%299 (Div %291 %298))
  (let (%300 (Mul %299 bert.embeddings.LayerNorm.weight))
  (let (%301 (Add %300 bert.embeddings.LayerNorm.bias))
  (let (%303 (MatMul %301 %2200))
  (let (%304 (Add %303 bert.encoder.layer.0.attention.self.query.bias))
  (let (%306 (MatMul %301 %2201))
  (let (%307 (Add %306 bert.encoder.layer.0.attention.self.key.bias))
  (let (%309 (MatMul %301 %2202))
  (let (%310 (Add %309 bert.encoder.layer.0.attention.self.value.bias))
  (let (%311 (Shape %304))
  (let (%312 (Constant 0))
  (let (%313 (Gather %311 %312 0))
  (let (%314 (Shape %304))
  (let (%315 (Constant 1))
  (let (%316 (Gather %314 %315 0))
  (let (%319 (Unsqueeze %313 (vec 0)))
  (let (%320 (Unsqueeze %316 (vec 0)))
  (let (%323 (Concat %319 %320 %2203 %2204 0))
  (let (%324 (Reshape %304 %323))
  (let (%325 (Transpose %324 (vec 0 2 1 3)))
  (let (%326 (Shape %307))
  (let (%327 (Constant 0))
  (let (%328 (Gather %326 %327 0))
  (let (%329 (Shape %307))
  (let (%330 (Constant 1))
  (let (%331 (Gather %329 %330 0))
  (let (%334 (Unsqueeze %328 (vec 0)))
  (let (%335 (Unsqueeze %331 (vec 0)))
  (let (%338 (Concat %334 %335 %2205 %2206 0))
  (let (%339 (Reshape %307 %338))
  (let (%340 (Shape %310))
  (let (%341 (Constant 0))
  (let (%342 (Gather %340 %341 0))
  (let (%343 (Shape %310))
  (let (%344 (Constant 1))
  (let (%345 (Gather %343 %344 0))
  (let (%348 (Unsqueeze %342 (vec 0)))
  (let (%349 (Unsqueeze %345 (vec 0)))
  (let (%352 (Concat %348 %349 %2207 %2208 0))
  (let (%353 (Reshape %310 %352))
  (let (%354 (Transpose %353 (vec 0 2 1 3)))
  (let (%355 (Transpose %339 (vec 0 2 3 1)))
  (let (%356 (MatMul %325 %355))
  (let (%357 (Constant 8.0))
  (let (%358 (Div %356 %357))
  (let (%359 (Add %358 %273))
  (let (%360 (Softmax %359 3))
  (let (%361 (MatMul %360 %354))
  (let (%362 (Transpose %361 (vec 0 2 1 3)))
  (let (%363 (Shape %362))
  (let (%364 (Constant 0))
  (let (%365 (Gather %363 %364 0))
  (let (%366 (Shape %362))
  (let (%367 (Constant 1))
  (let (%368 (Gather %366 %367 0))
  (let (%370 (Unsqueeze %365 (vec 0)))
  (let (%371 (Unsqueeze %368 (vec 0)))
  (let (%373 (Concat %370 %371 %2209 0))
  (let (%374 (Reshape %362 %373))
  (let (%376 (MatMul %374 %2210))
  (let (%377 (Add %376 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%378 (Add %377 %301))
  (let (%380 (ReduceMean %378 (vec -1) 1))
  (let (%381 (Sub %378 %380))
  (let (%382 (Cast_FLOAT %381))
  (let (%384 (Pow %382 %2211))
  (let (%385 (ReduceMean %384 (vec -1) 1))
  (let (%386 (Constant 9.999999960041972e-13))
  (let (%387 (Add %385 %386))
  (let (%388 (Sqrt %387))
  (let (%389 (Div %381 %388))
  (let (%390 (Mul %389 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%391 (Add %390 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%393 (MatMul %391 %2212))
  (let (%394 (Add %393 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%395 (Constant 1.4142135381698608))
  (let (%396 (Div %394 %395))
  (let (%397 (Erf %396))
  (let (%398 (Constant 1.0))
  (let (%399 (Add %397 %398))
  (let (%400 (Mul %394 %399))
  (let (%401 (Constant 0.5))
  (let (%402 (Mul %400 %401))
  (let (%404 (MatMul %402 %2213))
  (let (%405 (Add %404 bert.encoder.layer.0.output.dense.bias))
  (let (%406 (Add %405 %391))
  (let (%408 (ReduceMean %406 (vec -1) 1))
  (let (%409 (Sub %406 %408))
  (let (%410 (Cast_FLOAT %409))
  (let (%412 (Pow %410 %2214))
  (let (%413 (ReduceMean %412 (vec -1) 1))
  (let (%414 (Constant 9.999999960041972e-13))
  (let (%415 (Add %413 %414))
  (let (%416 (Sqrt %415))
  (let (%417 (Div %409 %416))
  (let (%418 (Mul %417 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%419 (Add %418 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%421 (MatMul %419 %2215))
  (let (%422 (Add %421 bert.encoder.layer.1.attention.self.query.bias))
  (let (%424 (MatMul %419 %2216))
  (let (%425 (Add %424 bert.encoder.layer.1.attention.self.key.bias))
  (let (%427 (MatMul %419 %2217))
  (let (%428 (Add %427 bert.encoder.layer.1.attention.self.value.bias))
  (let (%429 (Shape %422))
  (let (%430 (Constant 0))
  (let (%431 (Gather %429 %430 0))
  (let (%432 (Shape %422))
  (let (%433 (Constant 1))
  (let (%434 (Gather %432 %433 0))
  (let (%437 (Unsqueeze %431 (vec 0)))
  (let (%438 (Unsqueeze %434 (vec 0)))
  (let (%441 (Concat %437 %438 %2218 %2219 0))
  (let (%442 (Reshape %422 %441))
  (let (%443 (Transpose %442 (vec 0 2 1 3)))
  (let (%444 (Shape %425))
  (let (%445 (Constant 0))
  (let (%446 (Gather %444 %445 0))
  (let (%447 (Shape %425))
  (let (%448 (Constant 1))
  (let (%449 (Gather %447 %448 0))
  (let (%452 (Unsqueeze %446 (vec 0)))
  (let (%453 (Unsqueeze %449 (vec 0)))
  (let (%456 (Concat %452 %453 %2220 %2221 0))
  (let (%457 (Reshape %425 %456))
  (let (%458 (Shape %428))
  (let (%459 (Constant 0))
  (let (%460 (Gather %458 %459 0))
  (let (%461 (Shape %428))
  (let (%462 (Constant 1))
  (let (%463 (Gather %461 %462 0))
  (let (%466 (Unsqueeze %460 (vec 0)))
  (let (%467 (Unsqueeze %463 (vec 0)))
  (let (%470 (Concat %466 %467 %2222 %2223 0))
  (let (%471 (Reshape %428 %470))
  (let (%472 (Transpose %471 (vec 0 2 1 3)))
  (let (%473 (Transpose %457 (vec 0 2 3 1)))
  (let (%474 (MatMul %443 %473))
  (let (%475 (Constant 8.0))
  (let (%476 (Div %474 %475))
  (let (%477 (Add %476 %273))
  (let (%478 (Softmax %477 3))
  (let (%479 (MatMul %478 %472))
  (let (%480 (Transpose %479 (vec 0 2 1 3)))
  (let (%481 (Shape %480))
  (let (%482 (Constant 0))
  (let (%483 (Gather %481 %482 0))
  (let (%484 (Shape %480))
  (let (%485 (Constant 1))
  (let (%486 (Gather %484 %485 0))
  (let (%488 (Unsqueeze %483 (vec 0)))
  (let (%489 (Unsqueeze %486 (vec 0)))
  (let (%491 (Concat %488 %489 %2224 0))
  (let (%492 (Reshape %480 %491))
  (let (%494 (MatMul %492 %2225))
  (let (%495 (Add %494 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%496 (Add %495 %419))
  (let (%498 (ReduceMean %496 (vec -1) 1))
  (let (%499 (Sub %496 %498))
  (let (%500 (Cast_FLOAT %499))
  (let (%502 (Pow %500 %2226))
  (let (%503 (ReduceMean %502 (vec -1) 1))
  (let (%504 (Constant 9.999999960041972e-13))
  (let (%505 (Add %503 %504))
  (let (%506 (Sqrt %505))
  (let (%507 (Div %499 %506))
  (let (%508 (Mul %507 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%509 (Add %508 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%511 (MatMul %509 %2227))
  (let (%512 (Add %511 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%513 (Constant 1.4142135381698608))
  (let (%514 (Div %512 %513))
  (let (%515 (Erf %514))
  (let (%516 (Constant 1.0))
  (let (%517 (Add %515 %516))
  (let (%518 (Mul %512 %517))
  (let (%519 (Constant 0.5))
  (let (%520 (Mul %518 %519))
  (let (%522 (MatMul %520 %2228))
  (let (%523 (Add %522 bert.encoder.layer.1.output.dense.bias))
  (let (%524 (Add %523 %509))
  (let (%526 (ReduceMean %524 (vec -1) 1))
  (let (%527 (Sub %524 %526))
  (let (%528 (Cast_FLOAT %527))
  (let (%530 (Pow %528 %2229))
  (let (%531 (ReduceMean %530 (vec -1) 1))
  (let (%532 (Constant 9.999999960041972e-13))
  (let (%533 (Add %531 %532))
  (let (%534 (Sqrt %533))
  (let (%535 (Div %527 %534))
  (let (%536 (Mul %535 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%537 (Add %536 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%539 (MatMul %537 %2230))
  (let (%540 (Add %539 bert.encoder.layer.2.attention.self.query.bias))
  (let (%542 (MatMul %537 %2231))
  (let (%543 (Add %542 bert.encoder.layer.2.attention.self.key.bias))
  (let (%545 (MatMul %537 %2232))
  (let (%546 (Add %545 bert.encoder.layer.2.attention.self.value.bias))
  (let (%547 (Shape %540))
  (let (%548 (Constant 0))
  (let (%549 (Gather %547 %548 0))
  (let (%550 (Shape %540))
  (let (%551 (Constant 1))
  (let (%552 (Gather %550 %551 0))
  (let (%555 (Unsqueeze %549 (vec 0)))
  (let (%556 (Unsqueeze %552 (vec 0)))
  (let (%559 (Concat %555 %556 %2233 %2234 0))
  (let (%560 (Reshape %540 %559))
  (let (%561 (Transpose %560 (vec 0 2 1 3)))
  (let (%562 (Shape %543))
  (let (%563 (Constant 0))
  (let (%564 (Gather %562 %563 0))
  (let (%565 (Shape %543))
  (let (%566 (Constant 1))
  (let (%567 (Gather %565 %566 0))
  (let (%570 (Unsqueeze %564 (vec 0)))
  (let (%571 (Unsqueeze %567 (vec 0)))
  (let (%574 (Concat %570 %571 %2235 %2236 0))
  (let (%575 (Reshape %543 %574))
  (let (%576 (Shape %546))
  (let (%577 (Constant 0))
  (let (%578 (Gather %576 %577 0))
  (let (%579 (Shape %546))
  (let (%580 (Constant 1))
  (let (%581 (Gather %579 %580 0))
  (let (%584 (Unsqueeze %578 (vec 0)))
  (let (%585 (Unsqueeze %581 (vec 0)))
  (let (%588 (Concat %584 %585 %2237 %2238 0))
  (let (%589 (Reshape %546 %588))
  (let (%590 (Transpose %589 (vec 0 2 1 3)))
  (let (%591 (Transpose %575 (vec 0 2 3 1)))
  (let (%592 (MatMul %561 %591))
  (let (%593 (Constant 8.0))
  (let (%594 (Div %592 %593))
  (let (%595 (Add %594 %273))
  (let (%596 (Softmax %595 3))
  (let (%597 (MatMul %596 %590))
  (let (%598 (Transpose %597 (vec 0 2 1 3)))
  (let (%599 (Shape %598))
  (let (%600 (Constant 0))
  (let (%601 (Gather %599 %600 0))
  (let (%602 (Shape %598))
  (let (%603 (Constant 1))
  (let (%604 (Gather %602 %603 0))
  (let (%606 (Unsqueeze %601 (vec 0)))
  (let (%607 (Unsqueeze %604 (vec 0)))
  (let (%609 (Concat %606 %607 %2239 0))
  (let (%610 (Reshape %598 %609))
  (let (%612 (MatMul %610 %2240))
  (let (%613 (Add %612 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%614 (Add %613 %537))
  (let (%616 (ReduceMean %614 (vec -1) 1))
  (let (%617 (Sub %614 %616))
  (let (%618 (Cast_FLOAT %617))
  (let (%620 (Pow %618 %2241))
  (let (%621 (ReduceMean %620 (vec -1) 1))
  (let (%622 (Constant 9.999999960041972e-13))
  (let (%623 (Add %621 %622))
  (let (%624 (Sqrt %623))
  (let (%625 (Div %617 %624))
  (let (%626 (Mul %625 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%627 (Add %626 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%629 (MatMul %627 %2242))
  (let (%630 (Add %629 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%631 (Constant 1.4142135381698608))
  (let (%632 (Div %630 %631))
  (let (%633 (Erf %632))
  (let (%634 (Constant 1.0))
  (let (%635 (Add %633 %634))
  (let (%636 (Mul %630 %635))
  (let (%637 (Constant 0.5))
  (let (%638 (Mul %636 %637))
  (let (%640 (MatMul %638 %2243))
  (let (%641 (Add %640 bert.encoder.layer.2.output.dense.bias))
  (let (%642 (Add %641 %627))
  (let (%644 (ReduceMean %642 (vec -1) 1))
  (let (%645 (Sub %642 %644))
  (let (%646 (Cast_FLOAT %645))
  (let (%648 (Pow %646 %2244))
  (let (%649 (ReduceMean %648 (vec -1) 1))
  (let (%650 (Constant 9.999999960041972e-13))
  (let (%651 (Add %649 %650))
  (let (%652 (Sqrt %651))
  (let (%653 (Div %645 %652))
  (let (%654 (Mul %653 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%655 (Add %654 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%657 (MatMul %655 %2245))
  (let (%658 (Add %657 bert.encoder.layer.3.attention.self.query.bias))
  (let (%660 (MatMul %655 %2246))
  (let (%661 (Add %660 bert.encoder.layer.3.attention.self.key.bias))
  (let (%663 (MatMul %655 %2247))
  (let (%664 (Add %663 bert.encoder.layer.3.attention.self.value.bias))
  (let (%665 (Shape %658))
  (let (%666 (Constant 0))
  (let (%667 (Gather %665 %666 0))
  (let (%668 (Shape %658))
  (let (%669 (Constant 1))
  (let (%670 (Gather %668 %669 0))
  (let (%673 (Unsqueeze %667 (vec 0)))
  (let (%674 (Unsqueeze %670 (vec 0)))
  (let (%677 (Concat %673 %674 %2248 %2249 0))
  (let (%678 (Reshape %658 %677))
  (let (%679 (Transpose %678 (vec 0 2 1 3)))
  (let (%680 (Shape %661))
  (let (%681 (Constant 0))
  (let (%682 (Gather %680 %681 0))
  (let (%683 (Shape %661))
  (let (%684 (Constant 1))
  (let (%685 (Gather %683 %684 0))
  (let (%688 (Unsqueeze %682 (vec 0)))
  (let (%689 (Unsqueeze %685 (vec 0)))
  (let (%692 (Concat %688 %689 %2250 %2251 0))
  (let (%693 (Reshape %661 %692))
  (let (%694 (Shape %664))
  (let (%695 (Constant 0))
  (let (%696 (Gather %694 %695 0))
  (let (%697 (Shape %664))
  (let (%698 (Constant 1))
  (let (%699 (Gather %697 %698 0))
  (let (%702 (Unsqueeze %696 (vec 0)))
  (let (%703 (Unsqueeze %699 (vec 0)))
  (let (%706 (Concat %702 %703 %2252 %2253 0))
  (let (%707 (Reshape %664 %706))
  (let (%708 (Transpose %707 (vec 0 2 1 3)))
  (let (%709 (Transpose %693 (vec 0 2 3 1)))
  (let (%710 (MatMul %679 %709))
  (let (%711 (Constant 8.0))
  (let (%712 (Div %710 %711))
  (let (%713 (Add %712 %273))
  (let (%714 (Softmax %713 3))
  (let (%715 (MatMul %714 %708))
  (let (%716 (Transpose %715 (vec 0 2 1 3)))
  (let (%717 (Shape %716))
  (let (%718 (Constant 0))
  (let (%719 (Gather %717 %718 0))
  (let (%720 (Shape %716))
  (let (%721 (Constant 1))
  (let (%722 (Gather %720 %721 0))
  (let (%724 (Unsqueeze %719 (vec 0)))
  (let (%725 (Unsqueeze %722 (vec 0)))
  (let (%727 (Concat %724 %725 %2254 0))
  (let (%728 (Reshape %716 %727))
  (let (%730 (MatMul %728 %2255))
  (let (%731 (Add %730 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%732 (Add %731 %655))
  (let (%734 (ReduceMean %732 (vec -1) 1))
  (let (%735 (Sub %732 %734))
  (let (%736 (Cast_FLOAT %735))
  (let (%738 (Pow %736 %2256))
  (let (%739 (ReduceMean %738 (vec -1) 1))
  (let (%740 (Constant 9.999999960041972e-13))
  (let (%741 (Add %739 %740))
  (let (%742 (Sqrt %741))
  (let (%743 (Div %735 %742))
  (let (%744 (Mul %743 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%745 (Add %744 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%747 (MatMul %745 %2257))
  (let (%748 (Add %747 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%749 (Constant 1.4142135381698608))
  (let (%750 (Div %748 %749))
  (let (%751 (Erf %750))
  (let (%752 (Constant 1.0))
  (let (%753 (Add %751 %752))
  (let (%754 (Mul %748 %753))
  (let (%755 (Constant 0.5))
  (let (%756 (Mul %754 %755))
  (let (%758 (MatMul %756 %2258))
  (let (%759 (Add %758 bert.encoder.layer.3.output.dense.bias))
  (let (%760 (Add %759 %745))
  (let (%762 (ReduceMean %760 (vec -1) 1))
  (let (%763 (Sub %760 %762))
  (let (%764 (Cast_FLOAT %763))
  (let (%766 (Pow %764 %2259))
  (let (%767 (ReduceMean %766 (vec -1) 1))
  (let (%768 (Constant 9.999999960041972e-13))
  (let (%769 (Add %767 %768))
  (let (%770 (Sqrt %769))
  (let (%771 (Div %763 %770))
  (let (%772 (Mul %771 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%773 (Add %772 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%775 (MatMul %773 %2260))
  (let (%776 (Add %775 bert.encoder.layer.4.attention.self.query.bias))
  (let (%778 (MatMul %773 %2261))
  (let (%779 (Add %778 bert.encoder.layer.4.attention.self.key.bias))
  (let (%781 (MatMul %773 %2262))
  (let (%782 (Add %781 bert.encoder.layer.4.attention.self.value.bias))
  (let (%783 (Shape %776))
  (let (%784 (Constant 0))
  (let (%785 (Gather %783 %784 0))
  (let (%786 (Shape %776))
  (let (%787 (Constant 1))
  (let (%788 (Gather %786 %787 0))
  (let (%791 (Unsqueeze %785 (vec 0)))
  (let (%792 (Unsqueeze %788 (vec 0)))
  (let (%795 (Concat %791 %792 %2263 %2264 0))
  (let (%796 (Reshape %776 %795))
  (let (%797 (Transpose %796 (vec 0 2 1 3)))
  (let (%798 (Shape %779))
  (let (%799 (Constant 0))
  (let (%800 (Gather %798 %799 0))
  (let (%801 (Shape %779))
  (let (%802 (Constant 1))
  (let (%803 (Gather %801 %802 0))
  (let (%806 (Unsqueeze %800 (vec 0)))
  (let (%807 (Unsqueeze %803 (vec 0)))
  (let (%810 (Concat %806 %807 %2265 %2266 0))
  (let (%811 (Reshape %779 %810))
  (let (%812 (Shape %782))
  (let (%813 (Constant 0))
  (let (%814 (Gather %812 %813 0))
  (let (%815 (Shape %782))
  (let (%816 (Constant 1))
  (let (%817 (Gather %815 %816 0))
  (let (%820 (Unsqueeze %814 (vec 0)))
  (let (%821 (Unsqueeze %817 (vec 0)))
  (let (%824 (Concat %820 %821 %2267 %2268 0))
  (let (%825 (Reshape %782 %824))
  (let (%826 (Transpose %825 (vec 0 2 1 3)))
  (let (%827 (Transpose %811 (vec 0 2 3 1)))
  (let (%828 (MatMul %797 %827))
  (let (%829 (Constant 8.0))
  (let (%830 (Div %828 %829))
  (let (%831 (Add %830 %273))
  (let (%832 (Softmax %831 3))
  (let (%833 (MatMul %832 %826))
  (let (%834 (Transpose %833 (vec 0 2 1 3)))
  (let (%835 (Shape %834))
  (let (%836 (Constant 0))
  (let (%837 (Gather %835 %836 0))
  (let (%838 (Shape %834))
  (let (%839 (Constant 1))
  (let (%840 (Gather %838 %839 0))
  (let (%842 (Unsqueeze %837 (vec 0)))
  (let (%843 (Unsqueeze %840 (vec 0)))
  (let (%845 (Concat %842 %843 %2269 0))
  (let (%846 (Reshape %834 %845))
  (let (%848 (MatMul %846 %2270))
  (let (%849 (Add %848 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%850 (Add %849 %773))
  (let (%852 (ReduceMean %850 (vec -1) 1))
  (let (%853 (Sub %850 %852))
  (let (%854 (Cast_FLOAT %853))
  (let (%856 (Pow %854 %2271))
  (let (%857 (ReduceMean %856 (vec -1) 1))
  (let (%858 (Constant 9.999999960041972e-13))
  (let (%859 (Add %857 %858))
  (let (%860 (Sqrt %859))
  (let (%861 (Div %853 %860))
  (let (%862 (Mul %861 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%863 (Add %862 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%865 (MatMul %863 %2272))
  (let (%866 (Add %865 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%867 (Constant 1.4142135381698608))
  (let (%868 (Div %866 %867))
  (let (%869 (Erf %868))
  (let (%870 (Constant 1.0))
  (let (%871 (Add %869 %870))
  (let (%872 (Mul %866 %871))
  (let (%873 (Constant 0.5))
  (let (%874 (Mul %872 %873))
  (let (%876 (MatMul %874 %2273))
  (let (%877 (Add %876 bert.encoder.layer.4.output.dense.bias))
  (let (%878 (Add %877 %863))
  (let (%880 (ReduceMean %878 (vec -1) 1))
  (let (%881 (Sub %878 %880))
  (let (%882 (Cast_FLOAT %881))
  (let (%884 (Pow %882 %2274))
  (let (%885 (ReduceMean %884 (vec -1) 1))
  (let (%886 (Constant 9.999999960041972e-13))
  (let (%887 (Add %885 %886))
  (let (%888 (Sqrt %887))
  (let (%889 (Div %881 %888))
  (let (%890 (Mul %889 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%891 (Add %890 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%893 (MatMul %891 %2275))
  (let (%894 (Add %893 bert.encoder.layer.5.attention.self.query.bias))
  (let (%896 (MatMul %891 %2276))
  (let (%897 (Add %896 bert.encoder.layer.5.attention.self.key.bias))
  (let (%899 (MatMul %891 %2277))
  (let (%900 (Add %899 bert.encoder.layer.5.attention.self.value.bias))
  (let (%901 (Shape %894))
  (let (%902 (Constant 0))
  (let (%903 (Gather %901 %902 0))
  (let (%904 (Shape %894))
  (let (%905 (Constant 1))
  (let (%906 (Gather %904 %905 0))
  (let (%909 (Unsqueeze %903 (vec 0)))
  (let (%910 (Unsqueeze %906 (vec 0)))
  (let (%913 (Concat %909 %910 %2278 %2279 0))
  (let (%914 (Reshape %894 %913))
  (let (%915 (Transpose %914 (vec 0 2 1 3)))
  (let (%916 (Shape %897))
  (let (%917 (Constant 0))
  (let (%918 (Gather %916 %917 0))
  (let (%919 (Shape %897))
  (let (%920 (Constant 1))
  (let (%921 (Gather %919 %920 0))
  (let (%924 (Unsqueeze %918 (vec 0)))
  (let (%925 (Unsqueeze %921 (vec 0)))
  (let (%928 (Concat %924 %925 %2280 %2281 0))
  (let (%929 (Reshape %897 %928))
  (let (%930 (Shape %900))
  (let (%931 (Constant 0))
  (let (%932 (Gather %930 %931 0))
  (let (%933 (Shape %900))
  (let (%934 (Constant 1))
  (let (%935 (Gather %933 %934 0))
  (let (%938 (Unsqueeze %932 (vec 0)))
  (let (%939 (Unsqueeze %935 (vec 0)))
  (let (%942 (Concat %938 %939 %2282 %2283 0))
  (let (%943 (Reshape %900 %942))
  (let (%944 (Transpose %943 (vec 0 2 1 3)))
  (let (%945 (Transpose %929 (vec 0 2 3 1)))
  (let (%946 (MatMul %915 %945))
  (let (%947 (Constant 8.0))
  (let (%948 (Div %946 %947))
  (let (%949 (Add %948 %273))
  (let (%950 (Softmax %949 3))
  (let (%951 (MatMul %950 %944))
  (let (%952 (Transpose %951 (vec 0 2 1 3)))
  (let (%953 (Shape %952))
  (let (%954 (Constant 0))
  (let (%955 (Gather %953 %954 0))
  (let (%956 (Shape %952))
  (let (%957 (Constant 1))
  (let (%958 (Gather %956 %957 0))
  (let (%960 (Unsqueeze %955 (vec 0)))
  (let (%961 (Unsqueeze %958 (vec 0)))
  (let (%963 (Concat %960 %961 %2284 0))
  (let (%964 (Reshape %952 %963))
  (let (%966 (MatMul %964 %2285))
  (let (%967 (Add %966 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%968 (Add %967 %891))
  (let (%970 (ReduceMean %968 (vec -1) 1))
  (let (%971 (Sub %968 %970))
  (let (%972 (Cast_FLOAT %971))
  (let (%974 (Pow %972 %2286))
  (let (%975 (ReduceMean %974 (vec -1) 1))
  (let (%976 (Constant 9.999999960041972e-13))
  (let (%977 (Add %975 %976))
  (let (%978 (Sqrt %977))
  (let (%979 (Div %971 %978))
  (let (%980 (Mul %979 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%981 (Add %980 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%983 (MatMul %981 %2287))
  (let (%984 (Add %983 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%985 (Constant 1.4142135381698608))
  (let (%986 (Div %984 %985))
  (let (%987 (Erf %986))
  (let (%988 (Constant 1.0))
  (let (%989 (Add %987 %988))
  (let (%990 (Mul %984 %989))
  (let (%991 (Constant 0.5))
  (let (%992 (Mul %990 %991))
  (let (%994 (MatMul %992 %2288))
  (let (%995 (Add %994 bert.encoder.layer.5.output.dense.bias))
  (let (%996 (Add %995 %981))
  (let (%998 (ReduceMean %996 (vec -1) 1))
  (let (%999 (Sub %996 %998))
  (let (%1000 (Cast_FLOAT %999))
  (let (%1002 (Pow %1000 %2289))
  (let (%1003 (ReduceMean %1002 (vec -1) 1))
  (let (%1004 (Constant 9.999999960041972e-13))
  (let (%1005 (Add %1003 %1004))
  (let (%1006 (Sqrt %1005))
  (let (%1007 (Div %999 %1006))
  (let (%1008 (Mul %1007 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1009 (Add %1008 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1011 (MatMul %1009 %2290))
  (let (%1012 (Add %1011 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1014 (MatMul %1009 %2291))
  (let (%1015 (Add %1014 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1017 (MatMul %1009 %2292))
  (let (%1018 (Add %1017 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1019 (Shape %1012))
  (let (%1020 (Constant 0))
  (let (%1021 (Gather %1019 %1020 0))
  (let (%1022 (Shape %1012))
  (let (%1023 (Constant 1))
  (let (%1024 (Gather %1022 %1023 0))
  (let (%1027 (Unsqueeze %1021 (vec 0)))
  (let (%1028 (Unsqueeze %1024 (vec 0)))
  (let (%1031 (Concat %1027 %1028 %2293 %2294 0))
  (let (%1032 (Reshape %1012 %1031))
  (let (%1033 (Transpose %1032 (vec 0 2 1 3)))
  (let (%1034 (Shape %1015))
  (let (%1035 (Constant 0))
  (let (%1036 (Gather %1034 %1035 0))
  (let (%1037 (Shape %1015))
  (let (%1038 (Constant 1))
  (let (%1039 (Gather %1037 %1038 0))
  (let (%1042 (Unsqueeze %1036 (vec 0)))
  (let (%1043 (Unsqueeze %1039 (vec 0)))
  (let (%1046 (Concat %1042 %1043 %2295 %2296 0))
  (let (%1047 (Reshape %1015 %1046))
  (let (%1048 (Shape %1018))
  (let (%1049 (Constant 0))
  (let (%1050 (Gather %1048 %1049 0))
  (let (%1051 (Shape %1018))
  (let (%1052 (Constant 1))
  (let (%1053 (Gather %1051 %1052 0))
  (let (%1056 (Unsqueeze %1050 (vec 0)))
  (let (%1057 (Unsqueeze %1053 (vec 0)))
  (let (%1060 (Concat %1056 %1057 %2297 %2298 0))
  (let (%1061 (Reshape %1018 %1060))
  (let (%1062 (Transpose %1061 (vec 0 2 1 3)))
  (let (%1063 (Transpose %1047 (vec 0 2 3 1)))
  (let (%1064 (MatMul %1033 %1063))
  (let (%1065 (Constant 8.0))
  (let (%1066 (Div %1064 %1065))
  (let (%1067 (Add %1066 %273))
  (let (%1068 (Softmax %1067 3))
  (let (%1069 (MatMul %1068 %1062))
  (let (%1070 (Transpose %1069 (vec 0 2 1 3)))
  (let (%1071 (Shape %1070))
  (let (%1072 (Constant 0))
  (let (%1073 (Gather %1071 %1072 0))
  (let (%1074 (Shape %1070))
  (let (%1075 (Constant 1))
  (let (%1076 (Gather %1074 %1075 0))
  (let (%1078 (Unsqueeze %1073 (vec 0)))
  (let (%1079 (Unsqueeze %1076 (vec 0)))
  (let (%1081 (Concat %1078 %1079 %2299 0))
  (let (%1082 (Reshape %1070 %1081))
  (let (%1084 (MatMul %1082 %2300))
  (let (%1085 (Add %1084 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1086 (Add %1085 %1009))
  (let (%1088 (ReduceMean %1086 (vec -1) 1))
  (let (%1089 (Sub %1086 %1088))
  (let (%1090 (Cast_FLOAT %1089))
  (let (%1092 (Pow %1090 %2301))
  (let (%1093 (ReduceMean %1092 (vec -1) 1))
  (let (%1094 (Constant 9.999999960041972e-13))
  (let (%1095 (Add %1093 %1094))
  (let (%1096 (Sqrt %1095))
  (let (%1097 (Div %1089 %1096))
  (let (%1098 (Mul %1097 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1099 (Add %1098 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1101 (MatMul %1099 %2302))
  (let (%1102 (Add %1101 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1103 (Constant 1.4142135381698608))
  (let (%1104 (Div %1102 %1103))
  (let (%1105 (Erf %1104))
  (let (%1106 (Constant 1.0))
  (let (%1107 (Add %1105 %1106))
  (let (%1108 (Mul %1102 %1107))
  (let (%1109 (Constant 0.5))
  (let (%1110 (Mul %1108 %1109))
  (let (%1112 (MatMul %1110 %2303))
  (let (%1113 (Add %1112 bert.encoder.layer.6.output.dense.bias))
  (let (%1114 (Add %1113 %1099))
  (let (%1116 (ReduceMean %1114 (vec -1) 1))
  (let (%1117 (Sub %1114 %1116))
  (let (%1118 (Cast_FLOAT %1117))
  (let (%1120 (Pow %1118 %2304))
  (let (%1121 (ReduceMean %1120 (vec -1) 1))
  (let (%1122 (Constant 9.999999960041972e-13))
  (let (%1123 (Add %1121 %1122))
  (let (%1124 (Sqrt %1123))
  (let (%1125 (Div %1117 %1124))
  (let (%1126 (Mul %1125 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1127 (Add %1126 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1129 (MatMul %1127 %2305))
  (let (%1130 (Add %1129 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1132 (MatMul %1127 %2306))
  (let (%1133 (Add %1132 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1135 (MatMul %1127 %2307))
  (let (%1136 (Add %1135 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1137 (Shape %1130))
  (let (%1138 (Constant 0))
  (let (%1139 (Gather %1137 %1138 0))
  (let (%1140 (Shape %1130))
  (let (%1141 (Constant 1))
  (let (%1142 (Gather %1140 %1141 0))
  (let (%1145 (Unsqueeze %1139 (vec 0)))
  (let (%1146 (Unsqueeze %1142 (vec 0)))
  (let (%1149 (Concat %1145 %1146 %2308 %2309 0))
  (let (%1150 (Reshape %1130 %1149))
  (let (%1151 (Transpose %1150 (vec 0 2 1 3)))
  (let (%1152 (Shape %1133))
  (let (%1153 (Constant 0))
  (let (%1154 (Gather %1152 %1153 0))
  (let (%1155 (Shape %1133))
  (let (%1156 (Constant 1))
  (let (%1157 (Gather %1155 %1156 0))
  (let (%1160 (Unsqueeze %1154 (vec 0)))
  (let (%1161 (Unsqueeze %1157 (vec 0)))
  (let (%1164 (Concat %1160 %1161 %2310 %2311 0))
  (let (%1165 (Reshape %1133 %1164))
  (let (%1166 (Shape %1136))
  (let (%1167 (Constant 0))
  (let (%1168 (Gather %1166 %1167 0))
  (let (%1169 (Shape %1136))
  (let (%1170 (Constant 1))
  (let (%1171 (Gather %1169 %1170 0))
  (let (%1174 (Unsqueeze %1168 (vec 0)))
  (let (%1175 (Unsqueeze %1171 (vec 0)))
  (let (%1178 (Concat %1174 %1175 %2312 %2313 0))
  (let (%1179 (Reshape %1136 %1178))
  (let (%1180 (Transpose %1179 (vec 0 2 1 3)))
  (let (%1181 (Transpose %1165 (vec 0 2 3 1)))
  (let (%1182 (MatMul %1151 %1181))
  (let (%1183 (Constant 8.0))
  (let (%1184 (Div %1182 %1183))
  (let (%1185 (Add %1184 %273))
  (let (%1186 (Softmax %1185 3))
  (let (%1187 (MatMul %1186 %1180))
  (let (%1188 (Transpose %1187 (vec 0 2 1 3)))
  (let (%1189 (Shape %1188))
  (let (%1190 (Constant 0))
  (let (%1191 (Gather %1189 %1190 0))
  (let (%1192 (Shape %1188))
  (let (%1193 (Constant 1))
  (let (%1194 (Gather %1192 %1193 0))
  (let (%1196 (Unsqueeze %1191 (vec 0)))
  (let (%1197 (Unsqueeze %1194 (vec 0)))
  (let (%1199 (Concat %1196 %1197 %2314 0))
  (let (%1200 (Reshape %1188 %1199))
  (let (%1202 (MatMul %1200 %2315))
  (let (%1203 (Add %1202 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1204 (Add %1203 %1127))
  (let (%1206 (ReduceMean %1204 (vec -1) 1))
  (let (%1207 (Sub %1204 %1206))
  (let (%1208 (Cast_FLOAT %1207))
  (let (%1210 (Pow %1208 %2316))
  (let (%1211 (ReduceMean %1210 (vec -1) 1))
  (let (%1212 (Constant 9.999999960041972e-13))
  (let (%1213 (Add %1211 %1212))
  (let (%1214 (Sqrt %1213))
  (let (%1215 (Div %1207 %1214))
  (let (%1216 (Mul %1215 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1217 (Add %1216 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1219 (MatMul %1217 %2317))
  (let (%1220 (Add %1219 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1221 (Constant 1.4142135381698608))
  (let (%1222 (Div %1220 %1221))
  (let (%1223 (Erf %1222))
  (let (%1224 (Constant 1.0))
  (let (%1225 (Add %1223 %1224))
  (let (%1226 (Mul %1220 %1225))
  (let (%1227 (Constant 0.5))
  (let (%1228 (Mul %1226 %1227))
  (let (%1230 (MatMul %1228 %2318))
  (let (%1231 (Add %1230 bert.encoder.layer.7.output.dense.bias))
  (let (%1232 (Add %1231 %1217))
  (let (%1234 (ReduceMean %1232 (vec -1) 1))
  (let (%1235 (Sub %1232 %1234))
  (let (%1236 (Cast_FLOAT %1235))
  (let (%1238 (Pow %1236 %2319))
  (let (%1239 (ReduceMean %1238 (vec -1) 1))
  (let (%1240 (Constant 9.999999960041972e-13))
  (let (%1241 (Add %1239 %1240))
  (let (%1242 (Sqrt %1241))
  (let (%1243 (Div %1235 %1242))
  (let (%1244 (Mul %1243 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1245 (Add %1244 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1247 (MatMul %1245 %2320))
  (let (%1248 (Add %1247 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1250 (MatMul %1245 %2321))
  (let (%1251 (Add %1250 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1253 (MatMul %1245 %2322))
  (let (%1254 (Add %1253 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1255 (Shape %1248))
  (let (%1256 (Constant 0))
  (let (%1257 (Gather %1255 %1256 0))
  (let (%1258 (Shape %1248))
  (let (%1259 (Constant 1))
  (let (%1260 (Gather %1258 %1259 0))
  (let (%1263 (Unsqueeze %1257 (vec 0)))
  (let (%1264 (Unsqueeze %1260 (vec 0)))
  (let (%1267 (Concat %1263 %1264 %2323 %2324 0))
  (let (%1268 (Reshape %1248 %1267))
  (let (%1269 (Transpose %1268 (vec 0 2 1 3)))
  (let (%1270 (Shape %1251))
  (let (%1271 (Constant 0))
  (let (%1272 (Gather %1270 %1271 0))
  (let (%1273 (Shape %1251))
  (let (%1274 (Constant 1))
  (let (%1275 (Gather %1273 %1274 0))
  (let (%1278 (Unsqueeze %1272 (vec 0)))
  (let (%1279 (Unsqueeze %1275 (vec 0)))
  (let (%1282 (Concat %1278 %1279 %2325 %2326 0))
  (let (%1283 (Reshape %1251 %1282))
  (let (%1284 (Shape %1254))
  (let (%1285 (Constant 0))
  (let (%1286 (Gather %1284 %1285 0))
  (let (%1287 (Shape %1254))
  (let (%1288 (Constant 1))
  (let (%1289 (Gather %1287 %1288 0))
  (let (%1292 (Unsqueeze %1286 (vec 0)))
  (let (%1293 (Unsqueeze %1289 (vec 0)))
  (let (%1296 (Concat %1292 %1293 %2327 %2328 0))
  (let (%1297 (Reshape %1254 %1296))
  (let (%1298 (Transpose %1297 (vec 0 2 1 3)))
  (let (%1299 (Transpose %1283 (vec 0 2 3 1)))
  (let (%1300 (MatMul %1269 %1299))
  (let (%1301 (Constant 8.0))
  (let (%1302 (Div %1300 %1301))
  (let (%1303 (Add %1302 %273))
  (let (%1304 (Softmax %1303 3))
  (let (%1305 (MatMul %1304 %1298))
  (let (%1306 (Transpose %1305 (vec 0 2 1 3)))
  (let (%1307 (Shape %1306))
  (let (%1308 (Constant 0))
  (let (%1309 (Gather %1307 %1308 0))
  (let (%1310 (Shape %1306))
  (let (%1311 (Constant 1))
  (let (%1312 (Gather %1310 %1311 0))
  (let (%1314 (Unsqueeze %1309 (vec 0)))
  (let (%1315 (Unsqueeze %1312 (vec 0)))
  (let (%1317 (Concat %1314 %1315 %2329 0))
  (let (%1318 (Reshape %1306 %1317))
  (let (%1320 (MatMul %1318 %2330))
  (let (%1321 (Add %1320 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1322 (Add %1321 %1245))
  (let (%1324 (ReduceMean %1322 (vec -1) 1))
  (let (%1325 (Sub %1322 %1324))
  (let (%1326 (Cast_FLOAT %1325))
  (let (%1328 (Pow %1326 %2331))
  (let (%1329 (ReduceMean %1328 (vec -1) 1))
  (let (%1330 (Constant 9.999999960041972e-13))
  (let (%1331 (Add %1329 %1330))
  (let (%1332 (Sqrt %1331))
  (let (%1333 (Div %1325 %1332))
  (let (%1334 (Mul %1333 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1335 (Add %1334 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1337 (MatMul %1335 %2332))
  (let (%1338 (Add %1337 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1339 (Constant 1.4142135381698608))
  (let (%1340 (Div %1338 %1339))
  (let (%1341 (Erf %1340))
  (let (%1342 (Constant 1.0))
  (let (%1343 (Add %1341 %1342))
  (let (%1344 (Mul %1338 %1343))
  (let (%1345 (Constant 0.5))
  (let (%1346 (Mul %1344 %1345))
  (let (%1348 (MatMul %1346 %2333))
  (let (%1349 (Add %1348 bert.encoder.layer.8.output.dense.bias))
  (let (%1350 (Add %1349 %1335))
  (let (%1352 (ReduceMean %1350 (vec -1) 1))
  (let (%1353 (Sub %1350 %1352))
  (let (%1354 (Cast_FLOAT %1353))
  (let (%1356 (Pow %1354 %2334))
  (let (%1357 (ReduceMean %1356 (vec -1) 1))
  (let (%1358 (Constant 9.999999960041972e-13))
  (let (%1359 (Add %1357 %1358))
  (let (%1360 (Sqrt %1359))
  (let (%1361 (Div %1353 %1360))
  (let (%1362 (Mul %1361 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1363 (Add %1362 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1365 (MatMul %1363 %2335))
  (let (%1366 (Add %1365 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1368 (MatMul %1363 %2336))
  (let (%1369 (Add %1368 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1371 (MatMul %1363 %2337))
  (let (%1372 (Add %1371 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1373 (Shape %1366))
  (let (%1374 (Constant 0))
  (let (%1375 (Gather %1373 %1374 0))
  (let (%1376 (Shape %1366))
  (let (%1377 (Constant 1))
  (let (%1378 (Gather %1376 %1377 0))
  (let (%1381 (Unsqueeze %1375 (vec 0)))
  (let (%1382 (Unsqueeze %1378 (vec 0)))
  (let (%1385 (Concat %1381 %1382 %2338 %2339 0))
  (let (%1386 (Reshape %1366 %1385))
  (let (%1387 (Transpose %1386 (vec 0 2 1 3)))
  (let (%1388 (Shape %1369))
  (let (%1389 (Constant 0))
  (let (%1390 (Gather %1388 %1389 0))
  (let (%1391 (Shape %1369))
  (let (%1392 (Constant 1))
  (let (%1393 (Gather %1391 %1392 0))
  (let (%1396 (Unsqueeze %1390 (vec 0)))
  (let (%1397 (Unsqueeze %1393 (vec 0)))
  (let (%1400 (Concat %1396 %1397 %2340 %2341 0))
  (let (%1401 (Reshape %1369 %1400))
  (let (%1402 (Shape %1372))
  (let (%1403 (Constant 0))
  (let (%1404 (Gather %1402 %1403 0))
  (let (%1405 (Shape %1372))
  (let (%1406 (Constant 1))
  (let (%1407 (Gather %1405 %1406 0))
  (let (%1410 (Unsqueeze %1404 (vec 0)))
  (let (%1411 (Unsqueeze %1407 (vec 0)))
  (let (%1414 (Concat %1410 %1411 %2342 %2343 0))
  (let (%1415 (Reshape %1372 %1414))
  (let (%1416 (Transpose %1415 (vec 0 2 1 3)))
  (let (%1417 (Transpose %1401 (vec 0 2 3 1)))
  (let (%1418 (MatMul %1387 %1417))
  (let (%1419 (Constant 8.0))
  (let (%1420 (Div %1418 %1419))
  (let (%1421 (Add %1420 %273))
  (let (%1422 (Softmax %1421 3))
  (let (%1423 (MatMul %1422 %1416))
  (let (%1424 (Transpose %1423 (vec 0 2 1 3)))
  (let (%1425 (Shape %1424))
  (let (%1426 (Constant 0))
  (let (%1427 (Gather %1425 %1426 0))
  (let (%1428 (Shape %1424))
  (let (%1429 (Constant 1))
  (let (%1430 (Gather %1428 %1429 0))
  (let (%1432 (Unsqueeze %1427 (vec 0)))
  (let (%1433 (Unsqueeze %1430 (vec 0)))
  (let (%1435 (Concat %1432 %1433 %2344 0))
  (let (%1436 (Reshape %1424 %1435))
  (let (%1438 (MatMul %1436 %2345))
  (let (%1439 (Add %1438 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1440 (Add %1439 %1363))
  (let (%1442 (ReduceMean %1440 (vec -1) 1))
  (let (%1443 (Sub %1440 %1442))
  (let (%1444 (Cast_FLOAT %1443))
  (let (%1446 (Pow %1444 %2346))
  (let (%1447 (ReduceMean %1446 (vec -1) 1))
  (let (%1448 (Constant 9.999999960041972e-13))
  (let (%1449 (Add %1447 %1448))
  (let (%1450 (Sqrt %1449))
  (let (%1451 (Div %1443 %1450))
  (let (%1452 (Mul %1451 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1453 (Add %1452 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1455 (MatMul %1453 %2347))
  (let (%1456 (Add %1455 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1457 (Constant 1.4142135381698608))
  (let (%1458 (Div %1456 %1457))
  (let (%1459 (Erf %1458))
  (let (%1460 (Constant 1.0))
  (let (%1461 (Add %1459 %1460))
  (let (%1462 (Mul %1456 %1461))
  (let (%1463 (Constant 0.5))
  (let (%1464 (Mul %1462 %1463))
  (let (%1466 (MatMul %1464 %2348))
  (let (%1467 (Add %1466 bert.encoder.layer.9.output.dense.bias))
  (let (%1468 (Add %1467 %1453))
  (let (%1470 (ReduceMean %1468 (vec -1) 1))
  (let (%1471 (Sub %1468 %1470))
  (let (%1472 (Cast_FLOAT %1471))
  (let (%1474 (Pow %1472 %2349))
  (let (%1475 (ReduceMean %1474 (vec -1) 1))
  (let (%1476 (Constant 9.999999960041972e-13))
  (let (%1477 (Add %1475 %1476))
  (let (%1478 (Sqrt %1477))
  (let (%1479 (Div %1471 %1478))
  (let (%1480 (Mul %1479 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1481 (Add %1480 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1483 (MatMul %1481 %2350))
  (let (%1484 (Add %1483 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1486 (MatMul %1481 %2351))
  (let (%1487 (Add %1486 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1489 (MatMul %1481 %2352))
  (let (%1490 (Add %1489 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1491 (Shape %1484))
  (let (%1492 (Constant 0))
  (let (%1493 (Gather %1491 %1492 0))
  (let (%1494 (Shape %1484))
  (let (%1495 (Constant 1))
  (let (%1496 (Gather %1494 %1495 0))
  (let (%1499 (Unsqueeze %1493 (vec 0)))
  (let (%1500 (Unsqueeze %1496 (vec 0)))
  (let (%1503 (Concat %1499 %1500 %2353 %2354 0))
  (let (%1504 (Reshape %1484 %1503))
  (let (%1505 (Transpose %1504 (vec 0 2 1 3)))
  (let (%1506 (Shape %1487))
  (let (%1507 (Constant 0))
  (let (%1508 (Gather %1506 %1507 0))
  (let (%1509 (Shape %1487))
  (let (%1510 (Constant 1))
  (let (%1511 (Gather %1509 %1510 0))
  (let (%1514 (Unsqueeze %1508 (vec 0)))
  (let (%1515 (Unsqueeze %1511 (vec 0)))
  (let (%1518 (Concat %1514 %1515 %2355 %2356 0))
  (let (%1519 (Reshape %1487 %1518))
  (let (%1520 (Shape %1490))
  (let (%1521 (Constant 0))
  (let (%1522 (Gather %1520 %1521 0))
  (let (%1523 (Shape %1490))
  (let (%1524 (Constant 1))
  (let (%1525 (Gather %1523 %1524 0))
  (let (%1528 (Unsqueeze %1522 (vec 0)))
  (let (%1529 (Unsqueeze %1525 (vec 0)))
  (let (%1532 (Concat %1528 %1529 %2357 %2358 0))
  (let (%1533 (Reshape %1490 %1532))
  (let (%1534 (Transpose %1533 (vec 0 2 1 3)))
  (let (%1535 (Transpose %1519 (vec 0 2 3 1)))
  (let (%1536 (MatMul %1505 %1535))
  (let (%1537 (Constant 8.0))
  (let (%1538 (Div %1536 %1537))
  (let (%1539 (Add %1538 %273))
  (let (%1540 (Softmax %1539 3))
  (let (%1541 (MatMul %1540 %1534))
  (let (%1542 (Transpose %1541 (vec 0 2 1 3)))
  (let (%1543 (Shape %1542))
  (let (%1544 (Constant 0))
  (let (%1545 (Gather %1543 %1544 0))
  (let (%1546 (Shape %1542))
  (let (%1547 (Constant 1))
  (let (%1548 (Gather %1546 %1547 0))
  (let (%1550 (Unsqueeze %1545 (vec 0)))
  (let (%1551 (Unsqueeze %1548 (vec 0)))
  (let (%1553 (Concat %1550 %1551 %2359 0))
  (let (%1554 (Reshape %1542 %1553))
  (let (%1556 (MatMul %1554 %2360))
  (let (%1557 (Add %1556 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1558 (Add %1557 %1481))
  (let (%1560 (ReduceMean %1558 (vec -1) 1))
  (let (%1561 (Sub %1558 %1560))
  (let (%1562 (Cast_FLOAT %1561))
  (let (%1564 (Pow %1562 %2361))
  (let (%1565 (ReduceMean %1564 (vec -1) 1))
  (let (%1566 (Constant 9.999999960041972e-13))
  (let (%1567 (Add %1565 %1566))
  (let (%1568 (Sqrt %1567))
  (let (%1569 (Div %1561 %1568))
  (let (%1570 (Mul %1569 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1571 (Add %1570 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1573 (MatMul %1571 %2362))
  (let (%1574 (Add %1573 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1575 (Constant 1.4142135381698608))
  (let (%1576 (Div %1574 %1575))
  (let (%1577 (Erf %1576))
  (let (%1578 (Constant 1.0))
  (let (%1579 (Add %1577 %1578))
  (let (%1580 (Mul %1574 %1579))
  (let (%1581 (Constant 0.5))
  (let (%1582 (Mul %1580 %1581))
  (let (%1584 (MatMul %1582 %2363))
  (let (%1585 (Add %1584 bert.encoder.layer.10.output.dense.bias))
  (let (%1586 (Add %1585 %1571))
  (let (%1588 (ReduceMean %1586 (vec -1) 1))
  (let (%1589 (Sub %1586 %1588))
  (let (%1590 (Cast_FLOAT %1589))
  (let (%1592 (Pow %1590 %2364))
  (let (%1593 (ReduceMean %1592 (vec -1) 1))
  (let (%1594 (Constant 9.999999960041972e-13))
  (let (%1595 (Add %1593 %1594))
  (let (%1596 (Sqrt %1595))
  (let (%1597 (Div %1589 %1596))
  (let (%1598 (Mul %1597 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1599 (Add %1598 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1601 (MatMul %1599 %2365))
  (let (%1602 (Add %1601 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1604 (MatMul %1599 %2366))
  (let (%1605 (Add %1604 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1607 (MatMul %1599 %2367))
  (let (%1608 (Add %1607 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1609 (Shape %1602))
  (let (%1610 (Constant 0))
  (let (%1611 (Gather %1609 %1610 0))
  (let (%1612 (Shape %1602))
  (let (%1613 (Constant 1))
  (let (%1614 (Gather %1612 %1613 0))
  (let (%1617 (Unsqueeze %1611 (vec 0)))
  (let (%1618 (Unsqueeze %1614 (vec 0)))
  (let (%1621 (Concat %1617 %1618 %2368 %2369 0))
  (let (%1622 (Reshape %1602 %1621))
  (let (%1623 (Transpose %1622 (vec 0 2 1 3)))
  (let (%1624 (Shape %1605))
  (let (%1625 (Constant 0))
  (let (%1626 (Gather %1624 %1625 0))
  (let (%1627 (Shape %1605))
  (let (%1628 (Constant 1))
  (let (%1629 (Gather %1627 %1628 0))
  (let (%1632 (Unsqueeze %1626 (vec 0)))
  (let (%1633 (Unsqueeze %1629 (vec 0)))
  (let (%1636 (Concat %1632 %1633 %2370 %2371 0))
  (let (%1637 (Reshape %1605 %1636))
  (let (%1638 (Shape %1608))
  (let (%1639 (Constant 0))
  (let (%1640 (Gather %1638 %1639 0))
  (let (%1641 (Shape %1608))
  (let (%1642 (Constant 1))
  (let (%1643 (Gather %1641 %1642 0))
  (let (%1646 (Unsqueeze %1640 (vec 0)))
  (let (%1647 (Unsqueeze %1643 (vec 0)))
  (let (%1650 (Concat %1646 %1647 %2372 %2373 0))
  (let (%1651 (Reshape %1608 %1650))
  (let (%1652 (Transpose %1651 (vec 0 2 1 3)))
  (let (%1653 (Transpose %1637 (vec 0 2 3 1)))
  (let (%1654 (MatMul %1623 %1653))
  (let (%1655 (Constant 8.0))
  (let (%1656 (Div %1654 %1655))
  (let (%1657 (Add %1656 %273))
  (let (%1658 (Softmax %1657 3))
  (let (%1659 (MatMul %1658 %1652))
  (let (%1660 (Transpose %1659 (vec 0 2 1 3)))
  (let (%1661 (Shape %1660))
  (let (%1662 (Constant 0))
  (let (%1663 (Gather %1661 %1662 0))
  (let (%1664 (Shape %1660))
  (let (%1665 (Constant 1))
  (let (%1666 (Gather %1664 %1665 0))
  (let (%1668 (Unsqueeze %1663 (vec 0)))
  (let (%1669 (Unsqueeze %1666 (vec 0)))
  (let (%1671 (Concat %1668 %1669 %2374 0))
  (let (%1672 (Reshape %1660 %1671))
  (let (%1674 (MatMul %1672 %2375))
  (let (%1675 (Add %1674 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1676 (Add %1675 %1599))
  (let (%1678 (ReduceMean %1676 (vec -1) 1))
  (let (%1679 (Sub %1676 %1678))
  (let (%1680 (Cast_FLOAT %1679))
  (let (%1682 (Pow %1680 %2376))
  (let (%1683 (ReduceMean %1682 (vec -1) 1))
  (let (%1684 (Constant 9.999999960041972e-13))
  (let (%1685 (Add %1683 %1684))
  (let (%1686 (Sqrt %1685))
  (let (%1687 (Div %1679 %1686))
  (let (%1688 (Mul %1687 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1689 (Add %1688 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1691 (MatMul %1689 %2377))
  (let (%1692 (Add %1691 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1693 (Constant 1.4142135381698608))
  (let (%1694 (Div %1692 %1693))
  (let (%1695 (Erf %1694))
  (let (%1696 (Constant 1.0))
  (let (%1697 (Add %1695 %1696))
  (let (%1698 (Mul %1692 %1697))
  (let (%1699 (Constant 0.5))
  (let (%1700 (Mul %1698 %1699))
  (let (%1702 (MatMul %1700 %2378))
  (let (%1703 (Add %1702 bert.encoder.layer.11.output.dense.bias))
  (let (%1704 (Add %1703 %1689))
  (let (%1706 (ReduceMean %1704 (vec -1) 1))
  (let (%1707 (Sub %1704 %1706))
  (let (%1708 (Cast_FLOAT %1707))
  (let (%1710 (Pow %1708 %2379))
  (let (%1711 (ReduceMean %1710 (vec -1) 1))
  (let (%1712 (Constant 9.999999960041972e-13))
  (let (%1713 (Add %1711 %1712))
  (let (%1714 (Sqrt %1713))
  (let (%1715 (Div %1707 %1714))
  (let (%1716 (Mul %1715 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1717 (Add %1716 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1719 (MatMul %1717 %2380))
  (let (%1720 (Add %1719 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1722 (MatMul %1717 %2381))
  (let (%1723 (Add %1722 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1725 (MatMul %1717 %2382))
  (let (%1726 (Add %1725 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1727 (Shape %1720))
  (let (%1728 (Constant 0))
  (let (%1729 (Gather %1727 %1728 0))
  (let (%1730 (Shape %1720))
  (let (%1731 (Constant 1))
  (let (%1732 (Gather %1730 %1731 0))
  (let (%1735 (Unsqueeze %1729 (vec 0)))
  (let (%1736 (Unsqueeze %1732 (vec 0)))
  (let (%1739 (Concat %1735 %1736 %2383 %2384 0))
  (let (%1740 (Reshape %1720 %1739))
  (let (%1741 (Transpose %1740 (vec 0 2 1 3)))
  (let (%1742 (Shape %1723))
  (let (%1743 (Constant 0))
  (let (%1744 (Gather %1742 %1743 0))
  (let (%1745 (Shape %1723))
  (let (%1746 (Constant 1))
  (let (%1747 (Gather %1745 %1746 0))
  (let (%1750 (Unsqueeze %1744 (vec 0)))
  (let (%1751 (Unsqueeze %1747 (vec 0)))
  (let (%1754 (Concat %1750 %1751 %2385 %2386 0))
  (let (%1755 (Reshape %1723 %1754))
  (let (%1756 (Shape %1726))
  (let (%1757 (Constant 0))
  (let (%1758 (Gather %1756 %1757 0))
  (let (%1759 (Shape %1726))
  (let (%1760 (Constant 1))
  (let (%1761 (Gather %1759 %1760 0))
  (let (%1764 (Unsqueeze %1758 (vec 0)))
  (let (%1765 (Unsqueeze %1761 (vec 0)))
  (let (%1768 (Concat %1764 %1765 %2387 %2388 0))
  (let (%1769 (Reshape %1726 %1768))
  (let (%1770 (Transpose %1769 (vec 0 2 1 3)))
  (let (%1771 (Transpose %1755 (vec 0 2 3 1)))
  (let (%1772 (MatMul %1741 %1771))
  (let (%1773 (Constant 8.0))
  (let (%1774 (Div %1772 %1773))
  (let (%1775 (Add %1774 %273))
  (let (%1776 (Softmax %1775 3))
  (let (%1777 (MatMul %1776 %1770))
  (let (%1778 (Transpose %1777 (vec 0 2 1 3)))
  (let (%1779 (Shape %1778))
  (let (%1780 (Constant 0))
  (let (%1781 (Gather %1779 %1780 0))
  (let (%1782 (Shape %1778))
  (let (%1783 (Constant 1))
  (let (%1784 (Gather %1782 %1783 0))
  (let (%1786 (Unsqueeze %1781 (vec 0)))
  (let (%1787 (Unsqueeze %1784 (vec 0)))
  (let (%1789 (Concat %1786 %1787 %2389 0))
  (let (%1790 (Reshape %1778 %1789))
  (let (%1792 (MatMul %1790 %2390))
  (let (%1793 (Add %1792 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1794 (Add %1793 %1717))
  (let (%1796 (ReduceMean %1794 (vec -1) 1))
  (let (%1797 (Sub %1794 %1796))
  (let (%1798 (Cast_FLOAT %1797))
  (let (%1800 (Pow %1798 %2391))
  (let (%1801 (ReduceMean %1800 (vec -1) 1))
  (let (%1802 (Constant 9.999999960041972e-13))
  (let (%1803 (Add %1801 %1802))
  (let (%1804 (Sqrt %1803))
  (let (%1805 (Div %1797 %1804))
  (let (%1806 (Mul %1805 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1807 (Add %1806 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1809 (MatMul %1807 %2392))
  (let (%1810 (Add %1809 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1811 (Constant 1.4142135381698608))
  (let (%1812 (Div %1810 %1811))
  (let (%1813 (Erf %1812))
  (let (%1814 (Constant 1.0))
  (let (%1815 (Add %1813 %1814))
  (let (%1816 (Mul %1810 %1815))
  (let (%1817 (Constant 0.5))
  (let (%1818 (Mul %1816 %1817))
  (let (%1820 (MatMul %1818 %2393))
  (let (%1821 (Add %1820 bert.encoder.layer.12.output.dense.bias))
  (let (%1822 (Add %1821 %1807))
  (let (%1824 (ReduceMean %1822 (vec -1) 1))
  (let (%1825 (Sub %1822 %1824))
  (let (%1826 (Cast_FLOAT %1825))
  (let (%1828 (Pow %1826 %2394))
  (let (%1829 (ReduceMean %1828 (vec -1) 1))
  (let (%1830 (Constant 9.999999960041972e-13))
  (let (%1831 (Add %1829 %1830))
  (let (%1832 (Sqrt %1831))
  (let (%1833 (Div %1825 %1832))
  (let (%1834 (Mul %1833 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1835 (Add %1834 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1837 (MatMul %1835 %2395))
  (let (%1838 (Add %1837 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1840 (MatMul %1835 %2396))
  (let (%1841 (Add %1840 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1843 (MatMul %1835 %2397))
  (let (%1844 (Add %1843 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1845 (Shape %1838))
  (let (%1846 (Constant 0))
  (let (%1847 (Gather %1845 %1846 0))
  (let (%1848 (Shape %1838))
  (let (%1849 (Constant 1))
  (let (%1850 (Gather %1848 %1849 0))
  (let (%1853 (Unsqueeze %1847 (vec 0)))
  (let (%1854 (Unsqueeze %1850 (vec 0)))
  (let (%1857 (Concat %1853 %1854 %2398 %2399 0))
  (let (%1858 (Reshape %1838 %1857))
  (let (%1859 (Transpose %1858 (vec 0 2 1 3)))
  (let (%1860 (Shape %1841))
  (let (%1861 (Constant 0))
  (let (%1862 (Gather %1860 %1861 0))
  (let (%1863 (Shape %1841))
  (let (%1864 (Constant 1))
  (let (%1865 (Gather %1863 %1864 0))
  (let (%1868 (Unsqueeze %1862 (vec 0)))
  (let (%1869 (Unsqueeze %1865 (vec 0)))
  (let (%1872 (Concat %1868 %1869 %2400 %2401 0))
  (let (%1873 (Reshape %1841 %1872))
  (let (%1874 (Shape %1844))
  (let (%1875 (Constant 0))
  (let (%1876 (Gather %1874 %1875 0))
  (let (%1877 (Shape %1844))
  (let (%1878 (Constant 1))
  (let (%1879 (Gather %1877 %1878 0))
  (let (%1882 (Unsqueeze %1876 (vec 0)))
  (let (%1883 (Unsqueeze %1879 (vec 0)))
  (let (%1886 (Concat %1882 %1883 %2402 %2403 0))
  (let (%1887 (Reshape %1844 %1886))
  (let (%1888 (Transpose %1887 (vec 0 2 1 3)))
  (let (%1889 (Transpose %1873 (vec 0 2 3 1)))
  (let (%1890 (MatMul %1859 %1889))
  (let (%1891 (Constant 8.0))
  (let (%1892 (Div %1890 %1891))
  (let (%1893 (Add %1892 %273))
  (let (%1894 (Softmax %1893 3))
  (let (%1895 (MatMul %1894 %1888))
  (let (%1896 (Transpose %1895 (vec 0 2 1 3)))
  (let (%1897 (Shape %1896))
  (let (%1898 (Constant 0))
  (let (%1899 (Gather %1897 %1898 0))
  (let (%1900 (Shape %1896))
  (let (%1901 (Constant 1))
  (let (%1902 (Gather %1900 %1901 0))
  (let (%1904 (Unsqueeze %1899 (vec 0)))
  (let (%1905 (Unsqueeze %1902 (vec 0)))
  (let (%1907 (Concat %1904 %1905 %2404 0))
  (let (%1908 (Reshape %1896 %1907))
  (let (%1910 (MatMul %1908 %2405))
  (let (%1911 (Add %1910 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1912 (Add %1911 %1835))
  (let (%1914 (ReduceMean %1912 (vec -1) 1))
  (let (%1915 (Sub %1912 %1914))
  (let (%1916 (Cast_FLOAT %1915))
  (let (%1918 (Pow %1916 %2406))
  (let (%1919 (ReduceMean %1918 (vec -1) 1))
  (let (%1920 (Constant 9.999999960041972e-13))
  (let (%1921 (Add %1919 %1920))
  (let (%1922 (Sqrt %1921))
  (let (%1923 (Div %1915 %1922))
  (let (%1924 (Mul %1923 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%1925 (Add %1924 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%1927 (MatMul %1925 %2407))
  (let (%1928 (Add %1927 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%1929 (Constant 1.4142135381698608))
  (let (%1930 (Div %1928 %1929))
  (let (%1931 (Erf %1930))
  (let (%1932 (Constant 1.0))
  (let (%1933 (Add %1931 %1932))
  (let (%1934 (Mul %1928 %1933))
  (let (%1935 (Constant 0.5))
  (let (%1936 (Mul %1934 %1935))
  (let (%1938 (MatMul %1936 %2408))
  (let (%1939 (Add %1938 bert.encoder.layer.13.output.dense.bias))
  (let (%1940 (Add %1939 %1925))
  (let (%1942 (ReduceMean %1940 (vec -1) 1))
  (let (%1943 (Sub %1940 %1942))
  (let (%1944 (Cast_FLOAT %1943))
  (let (%1946 (Pow %1944 %2409))
  (let (%1947 (ReduceMean %1946 (vec -1) 1))
  (let (%1948 (Constant 9.999999960041972e-13))
  (let (%1949 (Add %1947 %1948))
  (let (%1950 (Sqrt %1949))
  (let (%1951 (Div %1943 %1950))
  (let (%1952 (Mul %1951 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%1953 (Add %1952 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%1955 (MatMul %1953 %2410))
  (let (%1956 (Add %1955 bert.encoder.layer.14.attention.self.query.bias))
  (let (%1958 (MatMul %1953 %2411))
  (let (%1959 (Add %1958 bert.encoder.layer.14.attention.self.key.bias))
  (let (%1961 (MatMul %1953 %2412))
  (let (%1962 (Add %1961 bert.encoder.layer.14.attention.self.value.bias))
  (let (%1963 (Shape %1956))
  (let (%1964 (Constant 0))
  (let (%1965 (Gather %1963 %1964 0))
  (let (%1966 (Shape %1956))
  (let (%1967 (Constant 1))
  (let (%1968 (Gather %1966 %1967 0))
  (let (%1971 (Unsqueeze %1965 (vec 0)))
  (let (%1972 (Unsqueeze %1968 (vec 0)))
  (let (%1975 (Concat %1971 %1972 %2413 %2414 0))
  (let (%1976 (Reshape %1956 %1975))
  (let (%1977 (Transpose %1976 (vec 0 2 1 3)))
  (let (%1978 (Shape %1959))
  (let (%1979 (Constant 0))
  (let (%1980 (Gather %1978 %1979 0))
  (let (%1981 (Shape %1959))
  (let (%1982 (Constant 1))
  (let (%1983 (Gather %1981 %1982 0))
  (let (%1986 (Unsqueeze %1980 (vec 0)))
  (let (%1987 (Unsqueeze %1983 (vec 0)))
  (let (%1990 (Concat %1986 %1987 %2415 %2416 0))
  (let (%1991 (Reshape %1959 %1990))
  (let (%1992 (Shape %1962))
  (let (%1993 (Constant 0))
  (let (%1994 (Gather %1992 %1993 0))
  (let (%1995 (Shape %1962))
  (let (%1996 (Constant 1))
  (let (%1997 (Gather %1995 %1996 0))
  (let (%2000 (Unsqueeze %1994 (vec 0)))
  (let (%2001 (Unsqueeze %1997 (vec 0)))
  (let (%2004 (Concat %2000 %2001 %2417 %2418 0))
  (let (%2005 (Reshape %1962 %2004))
  (let (%2006 (Transpose %2005 (vec 0 2 1 3)))
  (let (%2007 (Transpose %1991 (vec 0 2 3 1)))
  (let (%2008 (MatMul %1977 %2007))
  (let (%2009 (Constant 8.0))
  (let (%2010 (Div %2008 %2009))
  (let (%2011 (Add %2010 %273))
  (let (%2012 (Softmax %2011 3))
  (let (%2013 (MatMul %2012 %2006))
  (let (%2014 (Transpose %2013 (vec 0 2 1 3)))
  (let (%2015 (Shape %2014))
  (let (%2016 (Constant 0))
  (let (%2017 (Gather %2015 %2016 0))
  (let (%2018 (Shape %2014))
  (let (%2019 (Constant 1))
  (let (%2020 (Gather %2018 %2019 0))
  (let (%2022 (Unsqueeze %2017 (vec 0)))
  (let (%2023 (Unsqueeze %2020 (vec 0)))
  (let (%2025 (Concat %2022 %2023 %2419 0))
  (let (%2026 (Reshape %2014 %2025))
  (let (%2028 (MatMul %2026 %2420))
  (let (%2029 (Add %2028 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2030 (Add %2029 %1953))
  (let (%2032 (ReduceMean %2030 (vec -1) 1))
  (let (%2033 (Sub %2030 %2032))
  (let (%2034 (Cast_FLOAT %2033))
  (let (%2036 (Pow %2034 %2421))
  (let (%2037 (ReduceMean %2036 (vec -1) 1))
  (let (%2038 (Constant 9.999999960041972e-13))
  (let (%2039 (Add %2037 %2038))
  (let (%2040 (Sqrt %2039))
  (let (%2041 (Div %2033 %2040))
  (let (%2042 (Mul %2041 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2043 (Add %2042 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2045 (MatMul %2043 %2422))
  (let (%2046 (Add %2045 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2047 (Constant 1.4142135381698608))
  (let (%2048 (Div %2046 %2047))
  (let (%2049 (Erf %2048))
  (let (%2050 (Constant 1.0))
  (let (%2051 (Add %2049 %2050))
  (let (%2052 (Mul %2046 %2051))
  (let (%2053 (Constant 0.5))
  (let (%2054 (Mul %2052 %2053))
  (let (%2056 (MatMul %2054 %2423))
  (let (%2057 (Add %2056 bert.encoder.layer.14.output.dense.bias))
  (let (%2058 (Add %2057 %2043))
  (let (%2060 (ReduceMean %2058 (vec -1) 1))
  (let (%2061 (Sub %2058 %2060))
  (let (%2062 (Cast_FLOAT %2061))
  (let (%2064 (Pow %2062 %2424))
  (let (%2065 (ReduceMean %2064 (vec -1) 1))
  (let (%2066 (Constant 9.999999960041972e-13))
  (let (%2067 (Add %2065 %2066))
  (let (%2068 (Sqrt %2067))
  (let (%2069 (Div %2061 %2068))
  (let (%2070 (Mul %2069 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2071 (Add %2070 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2073 (MatMul %2071 %2425))
  (let (%2074 (Add %2073 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2076 (MatMul %2071 %2426))
  (let (%2077 (Add %2076 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2079 (MatMul %2071 %2427))
  (let (%2080 (Add %2079 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2081 (Shape %2074))
  (let (%2082 (Constant 0))
  (let (%2083 (Gather %2081 %2082 0))
  (let (%2084 (Shape %2074))
  (let (%2085 (Constant 1))
  (let (%2086 (Gather %2084 %2085 0))
  (let (%2089 (Unsqueeze %2083 (vec 0)))
  (let (%2090 (Unsqueeze %2086 (vec 0)))
  (let (%2093 (Concat %2089 %2090 %2428 %2429 0))
  (let (%2094 (Reshape %2074 %2093))
  (let (%2095 (Transpose %2094 (vec 0 2 1 3)))
  (let (%2096 (Shape %2077))
  (let (%2097 (Constant 0))
  (let (%2098 (Gather %2096 %2097 0))
  (let (%2099 (Shape %2077))
  (let (%2100 (Constant 1))
  (let (%2101 (Gather %2099 %2100 0))
  (let (%2104 (Unsqueeze %2098 (vec 0)))
  (let (%2105 (Unsqueeze %2101 (vec 0)))
  (let (%2108 (Concat %2104 %2105 %2430 %2431 0))
  (let (%2109 (Reshape %2077 %2108))
  (let (%2110 (Shape %2080))
  (let (%2111 (Constant 0))
  (let (%2112 (Gather %2110 %2111 0))
  (let (%2113 (Shape %2080))
  (let (%2114 (Constant 1))
  (let (%2115 (Gather %2113 %2114 0))
  (let (%2118 (Unsqueeze %2112 (vec 0)))
  (let (%2119 (Unsqueeze %2115 (vec 0)))
  (let (%2122 (Concat %2118 %2119 %2432 %2433 0))
  (let (%2123 (Reshape %2080 %2122))
  (let (%2124 (Transpose %2123 (vec 0 2 1 3)))
  (let (%2125 (Transpose %2109 (vec 0 2 3 1)))
  (let (%2126 (MatMul %2095 %2125))
  (let (%2127 (Constant 8.0))
  (let (%2128 (Div %2126 %2127))
  (let (%2129 (Add %2128 %273))
  (let (%2130 (Softmax %2129 3))
  (let (%2131 (MatMul %2130 %2124))
  (let (%2132 (Transpose %2131 (vec 0 2 1 3)))
  (let (%2133 (Shape %2132))
  (let (%2134 (Constant 0))
  (let (%2135 (Gather %2133 %2134 0))
  (let (%2136 (Shape %2132))
  (let (%2137 (Constant 1))
  (let (%2138 (Gather %2136 %2137 0))
  (let (%2140 (Unsqueeze %2135 (vec 0)))
  (let (%2141 (Unsqueeze %2138 (vec 0)))
  (let (%2143 (Concat %2140 %2141 %2434 0))
  (let (%2144 (Reshape %2132 %2143))
  (let (%2146 (MatMul %2144 %2435))
  (let (%2147 (Add %2146 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2148 (Add %2147 %2071))
  (let (%2150 (ReduceMean %2148 (vec -1) 1))
  (let (%2151 (Sub %2148 %2150))
  (let (%2152 (Cast_FLOAT %2151))
  (let (%2154 (Pow %2152 %2436))
  (let (%2155 (ReduceMean %2154 (vec -1) 1))
  (let (%2156 (Constant 9.999999960041972e-13))
  (let (%2157 (Add %2155 %2156))
  (let (%2158 (Sqrt %2157))
  (let (%2159 (Div %2151 %2158))
  (let (%2160 (Mul %2159 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2161 (Add %2160 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2163 (MatMul %2161 %2437))
  (let (%2164 (Add %2163 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2165 (Constant 1.4142135381698608))
  (let (%2166 (Div %2164 %2165))
  (let (%2167 (Erf %2166))
  (let (%2168 (Constant 1.0))
  (let (%2169 (Add %2167 %2168))
  (let (%2170 (Mul %2164 %2169))
  (let (%2171 (Constant 0.5))
  (let (%2172 (Mul %2170 %2171))
  (let (%2174 (MatMul %2172 %2438))
  (let (%2175 (Add %2174 bert.encoder.layer.15.output.dense.bias))
  (let (%2176 (Add %2175 %2161))
  (let (%2178 (ReduceMean %2176 (vec -1) 1))
  (let (%2179 (Sub %2176 %2178))
  (let (%2180 (Cast_FLOAT %2179))
  (let (%2182 (Pow %2180 %2439))
  (let (%2183 (ReduceMean %2182 (vec -1) 1))
  (let (%2184 (Constant 9.999999960041972e-13))
  (let (%2185 (Add %2183 %2184))
  (let (%2186 (Sqrt %2185))
  (let (%2187 (Div %2179 %2186))
  (let (%2188 (Mul %2187 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2189 (Add %2188 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2191 (MatMul %2189 %2440))
  (let (%2192 (Add %2191 qa_outputs.bias))
  (let ((%2193 %2194) (Split %2192 (vec 1 1) -1))
  (let (output_0 (Squeeze %2193 (vec -1)))
  (let (output_1 (Squeeze %2194 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

