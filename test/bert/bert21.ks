;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert21.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%2867 (vec 0))
  (let (%2868 (vec 1))
  (let (%2869 2.0)
  (let (%2870 (load-from-onnx-float32 768 768 "%2870"))
  (let (%2871 (load-from-onnx-float32 768 768 "%2871"))
  (let (%2872 (load-from-onnx-float32 768 768 "%2872"))
  (let (%2873 (vec 12))
  (let (%2874 (vec 64))
  (let (%2875 (vec 12))
  (let (%2876 (vec 64))
  (let (%2877 (vec 12))
  (let (%2878 (vec 64))
  (let (%2879 (vec 768))
  (let (%2880 (load-from-onnx-float32 768 768 "%2880"))
  (let (%2881 2.0)
  (let (%2882 (load-from-onnx-float32 768 3072 "%2882"))
  (let (%2883 (load-from-onnx-float32 3072 768 "%2883"))
  (let (%2884 2.0)
  (let (%2885 (load-from-onnx-float32 768 768 "%2885"))
  (let (%2886 (load-from-onnx-float32 768 768 "%2886"))
  (let (%2887 (load-from-onnx-float32 768 768 "%2887"))
  (let (%2888 (vec 12))
  (let (%2889 (vec 64))
  (let (%2890 (vec 12))
  (let (%2891 (vec 64))
  (let (%2892 (vec 12))
  (let (%2893 (vec 64))
  (let (%2894 (vec 768))
  (let (%2895 (load-from-onnx-float32 768 768 "%2895"))
  (let (%2896 2.0)
  (let (%2897 (load-from-onnx-float32 768 3072 "%2897"))
  (let (%2898 (load-from-onnx-float32 3072 768 "%2898"))
  (let (%2899 2.0)
  (let (%2900 (load-from-onnx-float32 768 768 "%2900"))
  (let (%2901 (load-from-onnx-float32 768 768 "%2901"))
  (let (%2902 (load-from-onnx-float32 768 768 "%2902"))
  (let (%2903 (vec 12))
  (let (%2904 (vec 64))
  (let (%2905 (vec 12))
  (let (%2906 (vec 64))
  (let (%2907 (vec 12))
  (let (%2908 (vec 64))
  (let (%2909 (vec 768))
  (let (%2910 (load-from-onnx-float32 768 768 "%2910"))
  (let (%2911 2.0)
  (let (%2912 (load-from-onnx-float32 768 3072 "%2912"))
  (let (%2913 (load-from-onnx-float32 3072 768 "%2913"))
  (let (%2914 2.0)
  (let (%2915 (load-from-onnx-float32 768 768 "%2915"))
  (let (%2916 (load-from-onnx-float32 768 768 "%2916"))
  (let (%2917 (load-from-onnx-float32 768 768 "%2917"))
  (let (%2918 (vec 12))
  (let (%2919 (vec 64))
  (let (%2920 (vec 12))
  (let (%2921 (vec 64))
  (let (%2922 (vec 12))
  (let (%2923 (vec 64))
  (let (%2924 (vec 768))
  (let (%2925 (load-from-onnx-float32 768 768 "%2925"))
  (let (%2926 2.0)
  (let (%2927 (load-from-onnx-float32 768 3072 "%2927"))
  (let (%2928 (load-from-onnx-float32 3072 768 "%2928"))
  (let (%2929 2.0)
  (let (%2930 (load-from-onnx-float32 768 768 "%2930"))
  (let (%2931 (load-from-onnx-float32 768 768 "%2931"))
  (let (%2932 (load-from-onnx-float32 768 768 "%2932"))
  (let (%2933 (vec 12))
  (let (%2934 (vec 64))
  (let (%2935 (vec 12))
  (let (%2936 (vec 64))
  (let (%2937 (vec 12))
  (let (%2938 (vec 64))
  (let (%2939 (vec 768))
  (let (%2940 (load-from-onnx-float32 768 768 "%2940"))
  (let (%2941 2.0)
  (let (%2942 (load-from-onnx-float32 768 3072 "%2942"))
  (let (%2943 (load-from-onnx-float32 3072 768 "%2943"))
  (let (%2944 2.0)
  (let (%2945 (load-from-onnx-float32 768 768 "%2945"))
  (let (%2946 (load-from-onnx-float32 768 768 "%2946"))
  (let (%2947 (load-from-onnx-float32 768 768 "%2947"))
  (let (%2948 (vec 12))
  (let (%2949 (vec 64))
  (let (%2950 (vec 12))
  (let (%2951 (vec 64))
  (let (%2952 (vec 12))
  (let (%2953 (vec 64))
  (let (%2954 (vec 768))
  (let (%2955 (load-from-onnx-float32 768 768 "%2955"))
  (let (%2956 2.0)
  (let (%2957 (load-from-onnx-float32 768 3072 "%2957"))
  (let (%2958 (load-from-onnx-float32 3072 768 "%2958"))
  (let (%2959 2.0)
  (let (%2960 (load-from-onnx-float32 768 768 "%2960"))
  (let (%2961 (load-from-onnx-float32 768 768 "%2961"))
  (let (%2962 (load-from-onnx-float32 768 768 "%2962"))
  (let (%2963 (vec 12))
  (let (%2964 (vec 64))
  (let (%2965 (vec 12))
  (let (%2966 (vec 64))
  (let (%2967 (vec 12))
  (let (%2968 (vec 64))
  (let (%2969 (vec 768))
  (let (%2970 (load-from-onnx-float32 768 768 "%2970"))
  (let (%2971 2.0)
  (let (%2972 (load-from-onnx-float32 768 3072 "%2972"))
  (let (%2973 (load-from-onnx-float32 3072 768 "%2973"))
  (let (%2974 2.0)
  (let (%2975 (load-from-onnx-float32 768 768 "%2975"))
  (let (%2976 (load-from-onnx-float32 768 768 "%2976"))
  (let (%2977 (load-from-onnx-float32 768 768 "%2977"))
  (let (%2978 (vec 12))
  (let (%2979 (vec 64))
  (let (%2980 (vec 12))
  (let (%2981 (vec 64))
  (let (%2982 (vec 12))
  (let (%2983 (vec 64))
  (let (%2984 (vec 768))
  (let (%2985 (load-from-onnx-float32 768 768 "%2985"))
  (let (%2986 2.0)
  (let (%2987 (load-from-onnx-float32 768 3072 "%2987"))
  (let (%2988 (load-from-onnx-float32 3072 768 "%2988"))
  (let (%2989 2.0)
  (let (%2990 (load-from-onnx-float32 768 768 "%2990"))
  (let (%2991 (load-from-onnx-float32 768 768 "%2991"))
  (let (%2992 (load-from-onnx-float32 768 768 "%2992"))
  (let (%2993 (vec 12))
  (let (%2994 (vec 64))
  (let (%2995 (vec 12))
  (let (%2996 (vec 64))
  (let (%2997 (vec 12))
  (let (%2998 (vec 64))
  (let (%2999 (vec 768))
  (let (%3000 (load-from-onnx-float32 768 768 "%3000"))
  (let (%3001 2.0)
  (let (%3002 (load-from-onnx-float32 768 3072 "%3002"))
  (let (%3003 (load-from-onnx-float32 3072 768 "%3003"))
  (let (%3004 2.0)
  (let (%3005 (load-from-onnx-float32 768 768 "%3005"))
  (let (%3006 (load-from-onnx-float32 768 768 "%3006"))
  (let (%3007 (load-from-onnx-float32 768 768 "%3007"))
  (let (%3008 (vec 12))
  (let (%3009 (vec 64))
  (let (%3010 (vec 12))
  (let (%3011 (vec 64))
  (let (%3012 (vec 12))
  (let (%3013 (vec 64))
  (let (%3014 (vec 768))
  (let (%3015 (load-from-onnx-float32 768 768 "%3015"))
  (let (%3016 2.0)
  (let (%3017 (load-from-onnx-float32 768 3072 "%3017"))
  (let (%3018 (load-from-onnx-float32 3072 768 "%3018"))
  (let (%3019 2.0)
  (let (%3020 (load-from-onnx-float32 768 768 "%3020"))
  (let (%3021 (load-from-onnx-float32 768 768 "%3021"))
  (let (%3022 (load-from-onnx-float32 768 768 "%3022"))
  (let (%3023 (vec 12))
  (let (%3024 (vec 64))
  (let (%3025 (vec 12))
  (let (%3026 (vec 64))
  (let (%3027 (vec 12))
  (let (%3028 (vec 64))
  (let (%3029 (vec 768))
  (let (%3030 (load-from-onnx-float32 768 768 "%3030"))
  (let (%3031 2.0)
  (let (%3032 (load-from-onnx-float32 768 3072 "%3032"))
  (let (%3033 (load-from-onnx-float32 3072 768 "%3033"))
  (let (%3034 2.0)
  (let (%3035 (load-from-onnx-float32 768 768 "%3035"))
  (let (%3036 (load-from-onnx-float32 768 768 "%3036"))
  (let (%3037 (load-from-onnx-float32 768 768 "%3037"))
  (let (%3038 (vec 12))
  (let (%3039 (vec 64))
  (let (%3040 (vec 12))
  (let (%3041 (vec 64))
  (let (%3042 (vec 12))
  (let (%3043 (vec 64))
  (let (%3044 (vec 768))
  (let (%3045 (load-from-onnx-float32 768 768 "%3045"))
  (let (%3046 2.0)
  (let (%3047 (load-from-onnx-float32 768 3072 "%3047"))
  (let (%3048 (load-from-onnx-float32 3072 768 "%3048"))
  (let (%3049 2.0)
  (let (%3050 (load-from-onnx-float32 768 768 "%3050"))
  (let (%3051 (load-from-onnx-float32 768 768 "%3051"))
  (let (%3052 (load-from-onnx-float32 768 768 "%3052"))
  (let (%3053 (vec 12))
  (let (%3054 (vec 64))
  (let (%3055 (vec 12))
  (let (%3056 (vec 64))
  (let (%3057 (vec 12))
  (let (%3058 (vec 64))
  (let (%3059 (vec 768))
  (let (%3060 (load-from-onnx-float32 768 768 "%3060"))
  (let (%3061 2.0)
  (let (%3062 (load-from-onnx-float32 768 3072 "%3062"))
  (let (%3063 (load-from-onnx-float32 3072 768 "%3063"))
  (let (%3064 2.0)
  (let (%3065 (load-from-onnx-float32 768 768 "%3065"))
  (let (%3066 (load-from-onnx-float32 768 768 "%3066"))
  (let (%3067 (load-from-onnx-float32 768 768 "%3067"))
  (let (%3068 (vec 12))
  (let (%3069 (vec 64))
  (let (%3070 (vec 12))
  (let (%3071 (vec 64))
  (let (%3072 (vec 12))
  (let (%3073 (vec 64))
  (let (%3074 (vec 768))
  (let (%3075 (load-from-onnx-float32 768 768 "%3075"))
  (let (%3076 2.0)
  (let (%3077 (load-from-onnx-float32 768 3072 "%3077"))
  (let (%3078 (load-from-onnx-float32 3072 768 "%3078"))
  (let (%3079 2.0)
  (let (%3080 (load-from-onnx-float32 768 768 "%3080"))
  (let (%3081 (load-from-onnx-float32 768 768 "%3081"))
  (let (%3082 (load-from-onnx-float32 768 768 "%3082"))
  (let (%3083 (vec 12))
  (let (%3084 (vec 64))
  (let (%3085 (vec 12))
  (let (%3086 (vec 64))
  (let (%3087 (vec 12))
  (let (%3088 (vec 64))
  (let (%3089 (vec 768))
  (let (%3090 (load-from-onnx-float32 768 768 "%3090"))
  (let (%3091 2.0)
  (let (%3092 (load-from-onnx-float32 768 3072 "%3092"))
  (let (%3093 (load-from-onnx-float32 3072 768 "%3093"))
  (let (%3094 2.0)
  (let (%3095 (load-from-onnx-float32 768 768 "%3095"))
  (let (%3096 (load-from-onnx-float32 768 768 "%3096"))
  (let (%3097 (load-from-onnx-float32 768 768 "%3097"))
  (let (%3098 (vec 12))
  (let (%3099 (vec 64))
  (let (%3100 (vec 12))
  (let (%3101 (vec 64))
  (let (%3102 (vec 12))
  (let (%3103 (vec 64))
  (let (%3104 (vec 768))
  (let (%3105 (load-from-onnx-float32 768 768 "%3105"))
  (let (%3106 2.0)
  (let (%3107 (load-from-onnx-float32 768 3072 "%3107"))
  (let (%3108 (load-from-onnx-float32 3072 768 "%3108"))
  (let (%3109 2.0)
  (let (%3110 (load-from-onnx-float32 768 768 "%3110"))
  (let (%3111 (load-from-onnx-float32 768 768 "%3111"))
  (let (%3112 (load-from-onnx-float32 768 768 "%3112"))
  (let (%3113 (vec 12))
  (let (%3114 (vec 64))
  (let (%3115 (vec 12))
  (let (%3116 (vec 64))
  (let (%3117 (vec 12))
  (let (%3118 (vec 64))
  (let (%3119 (vec 768))
  (let (%3120 (load-from-onnx-float32 768 768 "%3120"))
  (let (%3121 2.0)
  (let (%3122 (load-from-onnx-float32 768 3072 "%3122"))
  (let (%3123 (load-from-onnx-float32 3072 768 "%3123"))
  (let (%3124 2.0)
  (let (%3125 (load-from-onnx-float32 768 768 "%3125"))
  (let (%3126 (load-from-onnx-float32 768 768 "%3126"))
  (let (%3127 (load-from-onnx-float32 768 768 "%3127"))
  (let (%3128 (vec 12))
  (let (%3129 (vec 64))
  (let (%3130 (vec 12))
  (let (%3131 (vec 64))
  (let (%3132 (vec 12))
  (let (%3133 (vec 64))
  (let (%3134 (vec 768))
  (let (%3135 (load-from-onnx-float32 768 768 "%3135"))
  (let (%3136 2.0)
  (let (%3137 (load-from-onnx-float32 768 3072 "%3137"))
  (let (%3138 (load-from-onnx-float32 3072 768 "%3138"))
  (let (%3139 2.0)
  (let (%3140 (load-from-onnx-float32 768 768 "%3140"))
  (let (%3141 (load-from-onnx-float32 768 768 "%3141"))
  (let (%3142 (load-from-onnx-float32 768 768 "%3142"))
  (let (%3143 (vec 12))
  (let (%3144 (vec 64))
  (let (%3145 (vec 12))
  (let (%3146 (vec 64))
  (let (%3147 (vec 12))
  (let (%3148 (vec 64))
  (let (%3149 (vec 768))
  (let (%3150 (load-from-onnx-float32 768 768 "%3150"))
  (let (%3151 2.0)
  (let (%3152 (load-from-onnx-float32 768 3072 "%3152"))
  (let (%3153 (load-from-onnx-float32 3072 768 "%3153"))
  (let (%3154 2.0)
  (let (%3155 (load-from-onnx-float32 768 768 "%3155"))
  (let (%3156 (load-from-onnx-float32 768 768 "%3156"))
  (let (%3157 (load-from-onnx-float32 768 768 "%3157"))
  (let (%3158 (vec 12))
  (let (%3159 (vec 64))
  (let (%3160 (vec 12))
  (let (%3161 (vec 64))
  (let (%3162 (vec 12))
  (let (%3163 (vec 64))
  (let (%3164 (vec 768))
  (let (%3165 (load-from-onnx-float32 768 768 "%3165"))
  (let (%3166 2.0)
  (let (%3167 (load-from-onnx-float32 768 3072 "%3167"))
  (let (%3168 (load-from-onnx-float32 3072 768 "%3168"))
  (let (%3169 2.0)
  (let (%3170 (load-from-onnx-float32 768 768 "%3170"))
  (let (%3171 (load-from-onnx-float32 768 768 "%3171"))
  (let (%3172 (load-from-onnx-float32 768 768 "%3172"))
  (let (%3173 (vec 12))
  (let (%3174 (vec 64))
  (let (%3175 (vec 12))
  (let (%3176 (vec 64))
  (let (%3177 (vec 12))
  (let (%3178 (vec 64))
  (let (%3179 (vec 768))
  (let (%3180 (load-from-onnx-float32 768 768 "%3180"))
  (let (%3181 2.0)
  (let (%3182 (load-from-onnx-float32 768 3072 "%3182"))
  (let (%3183 (load-from-onnx-float32 3072 768 "%3183"))
  (let (%3184 2.0)
  (let (%3185 (load-from-onnx-float32 768 2 "%3185"))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.output.dense.bias"))
  (let (bert.encoder.layer.10.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.key.bias"))
  (let (bert.encoder.layer.10.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.query.bias"))
  (let (bert.encoder.layer.10.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.attention.self.value.bias"))
  (let (bert.encoder.layer.10.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.10.intermediate.dense.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.bias"))
  (let (bert.encoder.layer.10.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.10.output.LayerNorm.weight"))
  (let (bert.encoder.layer.10.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.10.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.output.dense.bias"))
  (let (bert.encoder.layer.11.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.key.bias"))
  (let (bert.encoder.layer.11.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.query.bias"))
  (let (bert.encoder.layer.11.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.attention.self.value.bias"))
  (let (bert.encoder.layer.11.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.11.intermediate.dense.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.bias"))
  (let (bert.encoder.layer.11.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.11.output.LayerNorm.weight"))
  (let (bert.encoder.layer.11.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.11.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.output.dense.bias"))
  (let (bert.encoder.layer.12.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.key.bias"))
  (let (bert.encoder.layer.12.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.query.bias"))
  (let (bert.encoder.layer.12.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.attention.self.value.bias"))
  (let (bert.encoder.layer.12.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.12.intermediate.dense.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.bias"))
  (let (bert.encoder.layer.12.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.12.output.LayerNorm.weight"))
  (let (bert.encoder.layer.12.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.12.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.output.dense.bias"))
  (let (bert.encoder.layer.13.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.key.bias"))
  (let (bert.encoder.layer.13.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.query.bias"))
  (let (bert.encoder.layer.13.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.attention.self.value.bias"))
  (let (bert.encoder.layer.13.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.13.intermediate.dense.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.bias"))
  (let (bert.encoder.layer.13.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.13.output.LayerNorm.weight"))
  (let (bert.encoder.layer.13.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.13.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.output.dense.bias"))
  (let (bert.encoder.layer.14.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.key.bias"))
  (let (bert.encoder.layer.14.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.query.bias"))
  (let (bert.encoder.layer.14.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.attention.self.value.bias"))
  (let (bert.encoder.layer.14.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.14.intermediate.dense.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.bias"))
  (let (bert.encoder.layer.14.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.14.output.LayerNorm.weight"))
  (let (bert.encoder.layer.14.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.14.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.output.dense.bias"))
  (let (bert.encoder.layer.15.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.key.bias"))
  (let (bert.encoder.layer.15.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.query.bias"))
  (let (bert.encoder.layer.15.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.attention.self.value.bias"))
  (let (bert.encoder.layer.15.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.15.intermediate.dense.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.bias"))
  (let (bert.encoder.layer.15.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.15.output.LayerNorm.weight"))
  (let (bert.encoder.layer.15.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.15.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.output.dense.bias"))
  (let (bert.encoder.layer.16.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.key.bias"))
  (let (bert.encoder.layer.16.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.query.bias"))
  (let (bert.encoder.layer.16.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.attention.self.value.bias"))
  (let (bert.encoder.layer.16.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.16.intermediate.dense.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.bias"))
  (let (bert.encoder.layer.16.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.16.output.LayerNorm.weight"))
  (let (bert.encoder.layer.16.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.16.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.output.dense.bias"))
  (let (bert.encoder.layer.17.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.key.bias"))
  (let (bert.encoder.layer.17.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.query.bias"))
  (let (bert.encoder.layer.17.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.attention.self.value.bias"))
  (let (bert.encoder.layer.17.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.17.intermediate.dense.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.bias"))
  (let (bert.encoder.layer.17.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.17.output.LayerNorm.weight"))
  (let (bert.encoder.layer.17.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.17.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.output.dense.bias"))
  (let (bert.encoder.layer.18.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.key.bias"))
  (let (bert.encoder.layer.18.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.query.bias"))
  (let (bert.encoder.layer.18.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.attention.self.value.bias"))
  (let (bert.encoder.layer.18.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.18.intermediate.dense.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.bias"))
  (let (bert.encoder.layer.18.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.18.output.LayerNorm.weight"))
  (let (bert.encoder.layer.18.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.18.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.output.dense.bias"))
  (let (bert.encoder.layer.19.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.key.bias"))
  (let (bert.encoder.layer.19.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.query.bias"))
  (let (bert.encoder.layer.19.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.attention.self.value.bias"))
  (let (bert.encoder.layer.19.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.19.intermediate.dense.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.bias"))
  (let (bert.encoder.layer.19.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.19.output.LayerNorm.weight"))
  (let (bert.encoder.layer.19.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.19.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.output.dense.bias"))
  (let (bert.encoder.layer.20.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.key.bias"))
  (let (bert.encoder.layer.20.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.query.bias"))
  (let (bert.encoder.layer.20.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.attention.self.value.bias"))
  (let (bert.encoder.layer.20.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.20.intermediate.dense.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.bias"))
  (let (bert.encoder.layer.20.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.20.output.LayerNorm.weight"))
  (let (bert.encoder.layer.20.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.20.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.output.dense.bias"))
  (let (bert.encoder.layer.7.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.key.bias"))
  (let (bert.encoder.layer.7.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.query.bias"))
  (let (bert.encoder.layer.7.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.attention.self.value.bias"))
  (let (bert.encoder.layer.7.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.7.intermediate.dense.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.bias"))
  (let (bert.encoder.layer.7.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.7.output.LayerNorm.weight"))
  (let (bert.encoder.layer.7.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.7.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.output.dense.bias"))
  (let (bert.encoder.layer.8.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.key.bias"))
  (let (bert.encoder.layer.8.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.query.bias"))
  (let (bert.encoder.layer.8.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.attention.self.value.bias"))
  (let (bert.encoder.layer.8.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.8.intermediate.dense.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.bias"))
  (let (bert.encoder.layer.8.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.8.output.LayerNorm.weight"))
  (let (bert.encoder.layer.8.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.8.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.output.dense.bias"))
  (let (bert.encoder.layer.9.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.key.bias"))
  (let (bert.encoder.layer.9.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.query.bias"))
  (let (bert.encoder.layer.9.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.attention.self.value.bias"))
  (let (bert.encoder.layer.9.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.9.intermediate.dense.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.bias"))
  (let (bert.encoder.layer.9.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.9.output.LayerNorm.weight"))
  (let (bert.encoder.layer.9.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.9.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%347 (Unsqueeze attention_mask (vec 1)))
  (let (%348 (Unsqueeze %347 (vec 2)))
  (let (%349 (Cast_FLOAT %348))
  (let (%350 (Constant 1.0))
  (let (%351 (Sub %350 %349))
  (let (%352 (Constant -10000.0))
  (let (%353 (Mul %351 %352))
  (let (%354 (Shape input_ids))
  (let (%355 (Constant 1))
  (let (%356 (Gather %354 %355 0))
  (let (%360 (Unsqueeze %356 (vec 0)))
  (let (%362 (Constant (vec 1)))
  (let (%363 (Slice bert.embeddings.position_ids %2867 %360 %2868 %362))
  (let (%364 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%365 (Gather bert.embeddings.position_embeddings.weight %363 0))
  (let (%366 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%367 (Add %364 %365))
  (let (%368 (Add %367 %366))
  (let (%370 (ReduceMean %368 (vec -1) 1))
  (let (%371 (Sub %368 %370))
  (let (%372 (Cast_FLOAT %371))
  (let (%374 (Pow %372 %2869))
  (let (%375 (ReduceMean %374 (vec -1) 1))
  (let (%376 (Constant 9.999999960041972e-13))
  (let (%377 (Add %375 %376))
  (let (%378 (Sqrt %377))
  (let (%379 (Div %371 %378))
  (let (%380 (Mul %379 bert.embeddings.LayerNorm.weight))
  (let (%381 (Add %380 bert.embeddings.LayerNorm.bias))
  (let (%383 (MatMul %381 %2870))
  (let (%384 (Add %383 bert.encoder.layer.0.attention.self.query.bias))
  (let (%386 (MatMul %381 %2871))
  (let (%387 (Add %386 bert.encoder.layer.0.attention.self.key.bias))
  (let (%389 (MatMul %381 %2872))
  (let (%390 (Add %389 bert.encoder.layer.0.attention.self.value.bias))
  (let (%391 (Shape %384))
  (let (%392 (Constant 0))
  (let (%393 (Gather %391 %392 0))
  (let (%394 (Shape %384))
  (let (%395 (Constant 1))
  (let (%396 (Gather %394 %395 0))
  (let (%399 (Unsqueeze %393 (vec 0)))
  (let (%400 (Unsqueeze %396 (vec 0)))
  (let (%403 (Concat %399 %400 %2873 %2874 0))
  (let (%404 (Reshape %384 %403))
  (let (%405 (Transpose %404 (vec 0 2 1 3)))
  (let (%406 (Shape %387))
  (let (%407 (Constant 0))
  (let (%408 (Gather %406 %407 0))
  (let (%409 (Shape %387))
  (let (%410 (Constant 1))
  (let (%411 (Gather %409 %410 0))
  (let (%414 (Unsqueeze %408 (vec 0)))
  (let (%415 (Unsqueeze %411 (vec 0)))
  (let (%418 (Concat %414 %415 %2875 %2876 0))
  (let (%419 (Reshape %387 %418))
  (let (%420 (Shape %390))
  (let (%421 (Constant 0))
  (let (%422 (Gather %420 %421 0))
  (let (%423 (Shape %390))
  (let (%424 (Constant 1))
  (let (%425 (Gather %423 %424 0))
  (let (%428 (Unsqueeze %422 (vec 0)))
  (let (%429 (Unsqueeze %425 (vec 0)))
  (let (%432 (Concat %428 %429 %2877 %2878 0))
  (let (%433 (Reshape %390 %432))
  (let (%434 (Transpose %433 (vec 0 2 1 3)))
  (let (%435 (Transpose %419 (vec 0 2 3 1)))
  (let (%436 (MatMul %405 %435))
  (let (%437 (Constant 8.0))
  (let (%438 (Div %436 %437))
  (let (%439 (Add %438 %353))
  (let (%440 (Softmax %439 3))
  (let (%441 (MatMul %440 %434))
  (let (%442 (Transpose %441 (vec 0 2 1 3)))
  (let (%443 (Shape %442))
  (let (%444 (Constant 0))
  (let (%445 (Gather %443 %444 0))
  (let (%446 (Shape %442))
  (let (%447 (Constant 1))
  (let (%448 (Gather %446 %447 0))
  (let (%450 (Unsqueeze %445 (vec 0)))
  (let (%451 (Unsqueeze %448 (vec 0)))
  (let (%453 (Concat %450 %451 %2879 0))
  (let (%454 (Reshape %442 %453))
  (let (%456 (MatMul %454 %2880))
  (let (%457 (Add %456 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%458 (Add %457 %381))
  (let (%460 (ReduceMean %458 (vec -1) 1))
  (let (%461 (Sub %458 %460))
  (let (%462 (Cast_FLOAT %461))
  (let (%464 (Pow %462 %2881))
  (let (%465 (ReduceMean %464 (vec -1) 1))
  (let (%466 (Constant 9.999999960041972e-13))
  (let (%467 (Add %465 %466))
  (let (%468 (Sqrt %467))
  (let (%469 (Div %461 %468))
  (let (%470 (Mul %469 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%471 (Add %470 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%473 (MatMul %471 %2882))
  (let (%474 (Add %473 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%475 (Constant 1.4142135381698608))
  (let (%476 (Div %474 %475))
  (let (%477 (Erf %476))
  (let (%478 (Constant 1.0))
  (let (%479 (Add %477 %478))
  (let (%480 (Mul %474 %479))
  (let (%481 (Constant 0.5))
  (let (%482 (Mul %480 %481))
  (let (%484 (MatMul %482 %2883))
  (let (%485 (Add %484 bert.encoder.layer.0.output.dense.bias))
  (let (%486 (Add %485 %471))
  (let (%488 (ReduceMean %486 (vec -1) 1))
  (let (%489 (Sub %486 %488))
  (let (%490 (Cast_FLOAT %489))
  (let (%492 (Pow %490 %2884))
  (let (%493 (ReduceMean %492 (vec -1) 1))
  (let (%494 (Constant 9.999999960041972e-13))
  (let (%495 (Add %493 %494))
  (let (%496 (Sqrt %495))
  (let (%497 (Div %489 %496))
  (let (%498 (Mul %497 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%499 (Add %498 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%501 (MatMul %499 %2885))
  (let (%502 (Add %501 bert.encoder.layer.1.attention.self.query.bias))
  (let (%504 (MatMul %499 %2886))
  (let (%505 (Add %504 bert.encoder.layer.1.attention.self.key.bias))
  (let (%507 (MatMul %499 %2887))
  (let (%508 (Add %507 bert.encoder.layer.1.attention.self.value.bias))
  (let (%509 (Shape %502))
  (let (%510 (Constant 0))
  (let (%511 (Gather %509 %510 0))
  (let (%512 (Shape %502))
  (let (%513 (Constant 1))
  (let (%514 (Gather %512 %513 0))
  (let (%517 (Unsqueeze %511 (vec 0)))
  (let (%518 (Unsqueeze %514 (vec 0)))
  (let (%521 (Concat %517 %518 %2888 %2889 0))
  (let (%522 (Reshape %502 %521))
  (let (%523 (Transpose %522 (vec 0 2 1 3)))
  (let (%524 (Shape %505))
  (let (%525 (Constant 0))
  (let (%526 (Gather %524 %525 0))
  (let (%527 (Shape %505))
  (let (%528 (Constant 1))
  (let (%529 (Gather %527 %528 0))
  (let (%532 (Unsqueeze %526 (vec 0)))
  (let (%533 (Unsqueeze %529 (vec 0)))
  (let (%536 (Concat %532 %533 %2890 %2891 0))
  (let (%537 (Reshape %505 %536))
  (let (%538 (Shape %508))
  (let (%539 (Constant 0))
  (let (%540 (Gather %538 %539 0))
  (let (%541 (Shape %508))
  (let (%542 (Constant 1))
  (let (%543 (Gather %541 %542 0))
  (let (%546 (Unsqueeze %540 (vec 0)))
  (let (%547 (Unsqueeze %543 (vec 0)))
  (let (%550 (Concat %546 %547 %2892 %2893 0))
  (let (%551 (Reshape %508 %550))
  (let (%552 (Transpose %551 (vec 0 2 1 3)))
  (let (%553 (Transpose %537 (vec 0 2 3 1)))
  (let (%554 (MatMul %523 %553))
  (let (%555 (Constant 8.0))
  (let (%556 (Div %554 %555))
  (let (%557 (Add %556 %353))
  (let (%558 (Softmax %557 3))
  (let (%559 (MatMul %558 %552))
  (let (%560 (Transpose %559 (vec 0 2 1 3)))
  (let (%561 (Shape %560))
  (let (%562 (Constant 0))
  (let (%563 (Gather %561 %562 0))
  (let (%564 (Shape %560))
  (let (%565 (Constant 1))
  (let (%566 (Gather %564 %565 0))
  (let (%568 (Unsqueeze %563 (vec 0)))
  (let (%569 (Unsqueeze %566 (vec 0)))
  (let (%571 (Concat %568 %569 %2894 0))
  (let (%572 (Reshape %560 %571))
  (let (%574 (MatMul %572 %2895))
  (let (%575 (Add %574 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%576 (Add %575 %499))
  (let (%578 (ReduceMean %576 (vec -1) 1))
  (let (%579 (Sub %576 %578))
  (let (%580 (Cast_FLOAT %579))
  (let (%582 (Pow %580 %2896))
  (let (%583 (ReduceMean %582 (vec -1) 1))
  (let (%584 (Constant 9.999999960041972e-13))
  (let (%585 (Add %583 %584))
  (let (%586 (Sqrt %585))
  (let (%587 (Div %579 %586))
  (let (%588 (Mul %587 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%589 (Add %588 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%591 (MatMul %589 %2897))
  (let (%592 (Add %591 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%593 (Constant 1.4142135381698608))
  (let (%594 (Div %592 %593))
  (let (%595 (Erf %594))
  (let (%596 (Constant 1.0))
  (let (%597 (Add %595 %596))
  (let (%598 (Mul %592 %597))
  (let (%599 (Constant 0.5))
  (let (%600 (Mul %598 %599))
  (let (%602 (MatMul %600 %2898))
  (let (%603 (Add %602 bert.encoder.layer.1.output.dense.bias))
  (let (%604 (Add %603 %589))
  (let (%606 (ReduceMean %604 (vec -1) 1))
  (let (%607 (Sub %604 %606))
  (let (%608 (Cast_FLOAT %607))
  (let (%610 (Pow %608 %2899))
  (let (%611 (ReduceMean %610 (vec -1) 1))
  (let (%612 (Constant 9.999999960041972e-13))
  (let (%613 (Add %611 %612))
  (let (%614 (Sqrt %613))
  (let (%615 (Div %607 %614))
  (let (%616 (Mul %615 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%617 (Add %616 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%619 (MatMul %617 %2900))
  (let (%620 (Add %619 bert.encoder.layer.2.attention.self.query.bias))
  (let (%622 (MatMul %617 %2901))
  (let (%623 (Add %622 bert.encoder.layer.2.attention.self.key.bias))
  (let (%625 (MatMul %617 %2902))
  (let (%626 (Add %625 bert.encoder.layer.2.attention.self.value.bias))
  (let (%627 (Shape %620))
  (let (%628 (Constant 0))
  (let (%629 (Gather %627 %628 0))
  (let (%630 (Shape %620))
  (let (%631 (Constant 1))
  (let (%632 (Gather %630 %631 0))
  (let (%635 (Unsqueeze %629 (vec 0)))
  (let (%636 (Unsqueeze %632 (vec 0)))
  (let (%639 (Concat %635 %636 %2903 %2904 0))
  (let (%640 (Reshape %620 %639))
  (let (%641 (Transpose %640 (vec 0 2 1 3)))
  (let (%642 (Shape %623))
  (let (%643 (Constant 0))
  (let (%644 (Gather %642 %643 0))
  (let (%645 (Shape %623))
  (let (%646 (Constant 1))
  (let (%647 (Gather %645 %646 0))
  (let (%650 (Unsqueeze %644 (vec 0)))
  (let (%651 (Unsqueeze %647 (vec 0)))
  (let (%654 (Concat %650 %651 %2905 %2906 0))
  (let (%655 (Reshape %623 %654))
  (let (%656 (Shape %626))
  (let (%657 (Constant 0))
  (let (%658 (Gather %656 %657 0))
  (let (%659 (Shape %626))
  (let (%660 (Constant 1))
  (let (%661 (Gather %659 %660 0))
  (let (%664 (Unsqueeze %658 (vec 0)))
  (let (%665 (Unsqueeze %661 (vec 0)))
  (let (%668 (Concat %664 %665 %2907 %2908 0))
  (let (%669 (Reshape %626 %668))
  (let (%670 (Transpose %669 (vec 0 2 1 3)))
  (let (%671 (Transpose %655 (vec 0 2 3 1)))
  (let (%672 (MatMul %641 %671))
  (let (%673 (Constant 8.0))
  (let (%674 (Div %672 %673))
  (let (%675 (Add %674 %353))
  (let (%676 (Softmax %675 3))
  (let (%677 (MatMul %676 %670))
  (let (%678 (Transpose %677 (vec 0 2 1 3)))
  (let (%679 (Shape %678))
  (let (%680 (Constant 0))
  (let (%681 (Gather %679 %680 0))
  (let (%682 (Shape %678))
  (let (%683 (Constant 1))
  (let (%684 (Gather %682 %683 0))
  (let (%686 (Unsqueeze %681 (vec 0)))
  (let (%687 (Unsqueeze %684 (vec 0)))
  (let (%689 (Concat %686 %687 %2909 0))
  (let (%690 (Reshape %678 %689))
  (let (%692 (MatMul %690 %2910))
  (let (%693 (Add %692 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%694 (Add %693 %617))
  (let (%696 (ReduceMean %694 (vec -1) 1))
  (let (%697 (Sub %694 %696))
  (let (%698 (Cast_FLOAT %697))
  (let (%700 (Pow %698 %2911))
  (let (%701 (ReduceMean %700 (vec -1) 1))
  (let (%702 (Constant 9.999999960041972e-13))
  (let (%703 (Add %701 %702))
  (let (%704 (Sqrt %703))
  (let (%705 (Div %697 %704))
  (let (%706 (Mul %705 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%707 (Add %706 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%709 (MatMul %707 %2912))
  (let (%710 (Add %709 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%711 (Constant 1.4142135381698608))
  (let (%712 (Div %710 %711))
  (let (%713 (Erf %712))
  (let (%714 (Constant 1.0))
  (let (%715 (Add %713 %714))
  (let (%716 (Mul %710 %715))
  (let (%717 (Constant 0.5))
  (let (%718 (Mul %716 %717))
  (let (%720 (MatMul %718 %2913))
  (let (%721 (Add %720 bert.encoder.layer.2.output.dense.bias))
  (let (%722 (Add %721 %707))
  (let (%724 (ReduceMean %722 (vec -1) 1))
  (let (%725 (Sub %722 %724))
  (let (%726 (Cast_FLOAT %725))
  (let (%728 (Pow %726 %2914))
  (let (%729 (ReduceMean %728 (vec -1) 1))
  (let (%730 (Constant 9.999999960041972e-13))
  (let (%731 (Add %729 %730))
  (let (%732 (Sqrt %731))
  (let (%733 (Div %725 %732))
  (let (%734 (Mul %733 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%735 (Add %734 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%737 (MatMul %735 %2915))
  (let (%738 (Add %737 bert.encoder.layer.3.attention.self.query.bias))
  (let (%740 (MatMul %735 %2916))
  (let (%741 (Add %740 bert.encoder.layer.3.attention.self.key.bias))
  (let (%743 (MatMul %735 %2917))
  (let (%744 (Add %743 bert.encoder.layer.3.attention.self.value.bias))
  (let (%745 (Shape %738))
  (let (%746 (Constant 0))
  (let (%747 (Gather %745 %746 0))
  (let (%748 (Shape %738))
  (let (%749 (Constant 1))
  (let (%750 (Gather %748 %749 0))
  (let (%753 (Unsqueeze %747 (vec 0)))
  (let (%754 (Unsqueeze %750 (vec 0)))
  (let (%757 (Concat %753 %754 %2918 %2919 0))
  (let (%758 (Reshape %738 %757))
  (let (%759 (Transpose %758 (vec 0 2 1 3)))
  (let (%760 (Shape %741))
  (let (%761 (Constant 0))
  (let (%762 (Gather %760 %761 0))
  (let (%763 (Shape %741))
  (let (%764 (Constant 1))
  (let (%765 (Gather %763 %764 0))
  (let (%768 (Unsqueeze %762 (vec 0)))
  (let (%769 (Unsqueeze %765 (vec 0)))
  (let (%772 (Concat %768 %769 %2920 %2921 0))
  (let (%773 (Reshape %741 %772))
  (let (%774 (Shape %744))
  (let (%775 (Constant 0))
  (let (%776 (Gather %774 %775 0))
  (let (%777 (Shape %744))
  (let (%778 (Constant 1))
  (let (%779 (Gather %777 %778 0))
  (let (%782 (Unsqueeze %776 (vec 0)))
  (let (%783 (Unsqueeze %779 (vec 0)))
  (let (%786 (Concat %782 %783 %2922 %2923 0))
  (let (%787 (Reshape %744 %786))
  (let (%788 (Transpose %787 (vec 0 2 1 3)))
  (let (%789 (Transpose %773 (vec 0 2 3 1)))
  (let (%790 (MatMul %759 %789))
  (let (%791 (Constant 8.0))
  (let (%792 (Div %790 %791))
  (let (%793 (Add %792 %353))
  (let (%794 (Softmax %793 3))
  (let (%795 (MatMul %794 %788))
  (let (%796 (Transpose %795 (vec 0 2 1 3)))
  (let (%797 (Shape %796))
  (let (%798 (Constant 0))
  (let (%799 (Gather %797 %798 0))
  (let (%800 (Shape %796))
  (let (%801 (Constant 1))
  (let (%802 (Gather %800 %801 0))
  (let (%804 (Unsqueeze %799 (vec 0)))
  (let (%805 (Unsqueeze %802 (vec 0)))
  (let (%807 (Concat %804 %805 %2924 0))
  (let (%808 (Reshape %796 %807))
  (let (%810 (MatMul %808 %2925))
  (let (%811 (Add %810 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%812 (Add %811 %735))
  (let (%814 (ReduceMean %812 (vec -1) 1))
  (let (%815 (Sub %812 %814))
  (let (%816 (Cast_FLOAT %815))
  (let (%818 (Pow %816 %2926))
  (let (%819 (ReduceMean %818 (vec -1) 1))
  (let (%820 (Constant 9.999999960041972e-13))
  (let (%821 (Add %819 %820))
  (let (%822 (Sqrt %821))
  (let (%823 (Div %815 %822))
  (let (%824 (Mul %823 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%825 (Add %824 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%827 (MatMul %825 %2927))
  (let (%828 (Add %827 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%829 (Constant 1.4142135381698608))
  (let (%830 (Div %828 %829))
  (let (%831 (Erf %830))
  (let (%832 (Constant 1.0))
  (let (%833 (Add %831 %832))
  (let (%834 (Mul %828 %833))
  (let (%835 (Constant 0.5))
  (let (%836 (Mul %834 %835))
  (let (%838 (MatMul %836 %2928))
  (let (%839 (Add %838 bert.encoder.layer.3.output.dense.bias))
  (let (%840 (Add %839 %825))
  (let (%842 (ReduceMean %840 (vec -1) 1))
  (let (%843 (Sub %840 %842))
  (let (%844 (Cast_FLOAT %843))
  (let (%846 (Pow %844 %2929))
  (let (%847 (ReduceMean %846 (vec -1) 1))
  (let (%848 (Constant 9.999999960041972e-13))
  (let (%849 (Add %847 %848))
  (let (%850 (Sqrt %849))
  (let (%851 (Div %843 %850))
  (let (%852 (Mul %851 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%853 (Add %852 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%855 (MatMul %853 %2930))
  (let (%856 (Add %855 bert.encoder.layer.4.attention.self.query.bias))
  (let (%858 (MatMul %853 %2931))
  (let (%859 (Add %858 bert.encoder.layer.4.attention.self.key.bias))
  (let (%861 (MatMul %853 %2932))
  (let (%862 (Add %861 bert.encoder.layer.4.attention.self.value.bias))
  (let (%863 (Shape %856))
  (let (%864 (Constant 0))
  (let (%865 (Gather %863 %864 0))
  (let (%866 (Shape %856))
  (let (%867 (Constant 1))
  (let (%868 (Gather %866 %867 0))
  (let (%871 (Unsqueeze %865 (vec 0)))
  (let (%872 (Unsqueeze %868 (vec 0)))
  (let (%875 (Concat %871 %872 %2933 %2934 0))
  (let (%876 (Reshape %856 %875))
  (let (%877 (Transpose %876 (vec 0 2 1 3)))
  (let (%878 (Shape %859))
  (let (%879 (Constant 0))
  (let (%880 (Gather %878 %879 0))
  (let (%881 (Shape %859))
  (let (%882 (Constant 1))
  (let (%883 (Gather %881 %882 0))
  (let (%886 (Unsqueeze %880 (vec 0)))
  (let (%887 (Unsqueeze %883 (vec 0)))
  (let (%890 (Concat %886 %887 %2935 %2936 0))
  (let (%891 (Reshape %859 %890))
  (let (%892 (Shape %862))
  (let (%893 (Constant 0))
  (let (%894 (Gather %892 %893 0))
  (let (%895 (Shape %862))
  (let (%896 (Constant 1))
  (let (%897 (Gather %895 %896 0))
  (let (%900 (Unsqueeze %894 (vec 0)))
  (let (%901 (Unsqueeze %897 (vec 0)))
  (let (%904 (Concat %900 %901 %2937 %2938 0))
  (let (%905 (Reshape %862 %904))
  (let (%906 (Transpose %905 (vec 0 2 1 3)))
  (let (%907 (Transpose %891 (vec 0 2 3 1)))
  (let (%908 (MatMul %877 %907))
  (let (%909 (Constant 8.0))
  (let (%910 (Div %908 %909))
  (let (%911 (Add %910 %353))
  (let (%912 (Softmax %911 3))
  (let (%913 (MatMul %912 %906))
  (let (%914 (Transpose %913 (vec 0 2 1 3)))
  (let (%915 (Shape %914))
  (let (%916 (Constant 0))
  (let (%917 (Gather %915 %916 0))
  (let (%918 (Shape %914))
  (let (%919 (Constant 1))
  (let (%920 (Gather %918 %919 0))
  (let (%922 (Unsqueeze %917 (vec 0)))
  (let (%923 (Unsqueeze %920 (vec 0)))
  (let (%925 (Concat %922 %923 %2939 0))
  (let (%926 (Reshape %914 %925))
  (let (%928 (MatMul %926 %2940))
  (let (%929 (Add %928 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%930 (Add %929 %853))
  (let (%932 (ReduceMean %930 (vec -1) 1))
  (let (%933 (Sub %930 %932))
  (let (%934 (Cast_FLOAT %933))
  (let (%936 (Pow %934 %2941))
  (let (%937 (ReduceMean %936 (vec -1) 1))
  (let (%938 (Constant 9.999999960041972e-13))
  (let (%939 (Add %937 %938))
  (let (%940 (Sqrt %939))
  (let (%941 (Div %933 %940))
  (let (%942 (Mul %941 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%943 (Add %942 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%945 (MatMul %943 %2942))
  (let (%946 (Add %945 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%947 (Constant 1.4142135381698608))
  (let (%948 (Div %946 %947))
  (let (%949 (Erf %948))
  (let (%950 (Constant 1.0))
  (let (%951 (Add %949 %950))
  (let (%952 (Mul %946 %951))
  (let (%953 (Constant 0.5))
  (let (%954 (Mul %952 %953))
  (let (%956 (MatMul %954 %2943))
  (let (%957 (Add %956 bert.encoder.layer.4.output.dense.bias))
  (let (%958 (Add %957 %943))
  (let (%960 (ReduceMean %958 (vec -1) 1))
  (let (%961 (Sub %958 %960))
  (let (%962 (Cast_FLOAT %961))
  (let (%964 (Pow %962 %2944))
  (let (%965 (ReduceMean %964 (vec -1) 1))
  (let (%966 (Constant 9.999999960041972e-13))
  (let (%967 (Add %965 %966))
  (let (%968 (Sqrt %967))
  (let (%969 (Div %961 %968))
  (let (%970 (Mul %969 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%971 (Add %970 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%973 (MatMul %971 %2945))
  (let (%974 (Add %973 bert.encoder.layer.5.attention.self.query.bias))
  (let (%976 (MatMul %971 %2946))
  (let (%977 (Add %976 bert.encoder.layer.5.attention.self.key.bias))
  (let (%979 (MatMul %971 %2947))
  (let (%980 (Add %979 bert.encoder.layer.5.attention.self.value.bias))
  (let (%981 (Shape %974))
  (let (%982 (Constant 0))
  (let (%983 (Gather %981 %982 0))
  (let (%984 (Shape %974))
  (let (%985 (Constant 1))
  (let (%986 (Gather %984 %985 0))
  (let (%989 (Unsqueeze %983 (vec 0)))
  (let (%990 (Unsqueeze %986 (vec 0)))
  (let (%993 (Concat %989 %990 %2948 %2949 0))
  (let (%994 (Reshape %974 %993))
  (let (%995 (Transpose %994 (vec 0 2 1 3)))
  (let (%996 (Shape %977))
  (let (%997 (Constant 0))
  (let (%998 (Gather %996 %997 0))
  (let (%999 (Shape %977))
  (let (%1000 (Constant 1))
  (let (%1001 (Gather %999 %1000 0))
  (let (%1004 (Unsqueeze %998 (vec 0)))
  (let (%1005 (Unsqueeze %1001 (vec 0)))
  (let (%1008 (Concat %1004 %1005 %2950 %2951 0))
  (let (%1009 (Reshape %977 %1008))
  (let (%1010 (Shape %980))
  (let (%1011 (Constant 0))
  (let (%1012 (Gather %1010 %1011 0))
  (let (%1013 (Shape %980))
  (let (%1014 (Constant 1))
  (let (%1015 (Gather %1013 %1014 0))
  (let (%1018 (Unsqueeze %1012 (vec 0)))
  (let (%1019 (Unsqueeze %1015 (vec 0)))
  (let (%1022 (Concat %1018 %1019 %2952 %2953 0))
  (let (%1023 (Reshape %980 %1022))
  (let (%1024 (Transpose %1023 (vec 0 2 1 3)))
  (let (%1025 (Transpose %1009 (vec 0 2 3 1)))
  (let (%1026 (MatMul %995 %1025))
  (let (%1027 (Constant 8.0))
  (let (%1028 (Div %1026 %1027))
  (let (%1029 (Add %1028 %353))
  (let (%1030 (Softmax %1029 3))
  (let (%1031 (MatMul %1030 %1024))
  (let (%1032 (Transpose %1031 (vec 0 2 1 3)))
  (let (%1033 (Shape %1032))
  (let (%1034 (Constant 0))
  (let (%1035 (Gather %1033 %1034 0))
  (let (%1036 (Shape %1032))
  (let (%1037 (Constant 1))
  (let (%1038 (Gather %1036 %1037 0))
  (let (%1040 (Unsqueeze %1035 (vec 0)))
  (let (%1041 (Unsqueeze %1038 (vec 0)))
  (let (%1043 (Concat %1040 %1041 %2954 0))
  (let (%1044 (Reshape %1032 %1043))
  (let (%1046 (MatMul %1044 %2955))
  (let (%1047 (Add %1046 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%1048 (Add %1047 %971))
  (let (%1050 (ReduceMean %1048 (vec -1) 1))
  (let (%1051 (Sub %1048 %1050))
  (let (%1052 (Cast_FLOAT %1051))
  (let (%1054 (Pow %1052 %2956))
  (let (%1055 (ReduceMean %1054 (vec -1) 1))
  (let (%1056 (Constant 9.999999960041972e-13))
  (let (%1057 (Add %1055 %1056))
  (let (%1058 (Sqrt %1057))
  (let (%1059 (Div %1051 %1058))
  (let (%1060 (Mul %1059 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%1061 (Add %1060 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%1063 (MatMul %1061 %2957))
  (let (%1064 (Add %1063 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%1065 (Constant 1.4142135381698608))
  (let (%1066 (Div %1064 %1065))
  (let (%1067 (Erf %1066))
  (let (%1068 (Constant 1.0))
  (let (%1069 (Add %1067 %1068))
  (let (%1070 (Mul %1064 %1069))
  (let (%1071 (Constant 0.5))
  (let (%1072 (Mul %1070 %1071))
  (let (%1074 (MatMul %1072 %2958))
  (let (%1075 (Add %1074 bert.encoder.layer.5.output.dense.bias))
  (let (%1076 (Add %1075 %1061))
  (let (%1078 (ReduceMean %1076 (vec -1) 1))
  (let (%1079 (Sub %1076 %1078))
  (let (%1080 (Cast_FLOAT %1079))
  (let (%1082 (Pow %1080 %2959))
  (let (%1083 (ReduceMean %1082 (vec -1) 1))
  (let (%1084 (Constant 9.999999960041972e-13))
  (let (%1085 (Add %1083 %1084))
  (let (%1086 (Sqrt %1085))
  (let (%1087 (Div %1079 %1086))
  (let (%1088 (Mul %1087 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%1089 (Add %1088 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%1091 (MatMul %1089 %2960))
  (let (%1092 (Add %1091 bert.encoder.layer.6.attention.self.query.bias))
  (let (%1094 (MatMul %1089 %2961))
  (let (%1095 (Add %1094 bert.encoder.layer.6.attention.self.key.bias))
  (let (%1097 (MatMul %1089 %2962))
  (let (%1098 (Add %1097 bert.encoder.layer.6.attention.self.value.bias))
  (let (%1099 (Shape %1092))
  (let (%1100 (Constant 0))
  (let (%1101 (Gather %1099 %1100 0))
  (let (%1102 (Shape %1092))
  (let (%1103 (Constant 1))
  (let (%1104 (Gather %1102 %1103 0))
  (let (%1107 (Unsqueeze %1101 (vec 0)))
  (let (%1108 (Unsqueeze %1104 (vec 0)))
  (let (%1111 (Concat %1107 %1108 %2963 %2964 0))
  (let (%1112 (Reshape %1092 %1111))
  (let (%1113 (Transpose %1112 (vec 0 2 1 3)))
  (let (%1114 (Shape %1095))
  (let (%1115 (Constant 0))
  (let (%1116 (Gather %1114 %1115 0))
  (let (%1117 (Shape %1095))
  (let (%1118 (Constant 1))
  (let (%1119 (Gather %1117 %1118 0))
  (let (%1122 (Unsqueeze %1116 (vec 0)))
  (let (%1123 (Unsqueeze %1119 (vec 0)))
  (let (%1126 (Concat %1122 %1123 %2965 %2966 0))
  (let (%1127 (Reshape %1095 %1126))
  (let (%1128 (Shape %1098))
  (let (%1129 (Constant 0))
  (let (%1130 (Gather %1128 %1129 0))
  (let (%1131 (Shape %1098))
  (let (%1132 (Constant 1))
  (let (%1133 (Gather %1131 %1132 0))
  (let (%1136 (Unsqueeze %1130 (vec 0)))
  (let (%1137 (Unsqueeze %1133 (vec 0)))
  (let (%1140 (Concat %1136 %1137 %2967 %2968 0))
  (let (%1141 (Reshape %1098 %1140))
  (let (%1142 (Transpose %1141 (vec 0 2 1 3)))
  (let (%1143 (Transpose %1127 (vec 0 2 3 1)))
  (let (%1144 (MatMul %1113 %1143))
  (let (%1145 (Constant 8.0))
  (let (%1146 (Div %1144 %1145))
  (let (%1147 (Add %1146 %353))
  (let (%1148 (Softmax %1147 3))
  (let (%1149 (MatMul %1148 %1142))
  (let (%1150 (Transpose %1149 (vec 0 2 1 3)))
  (let (%1151 (Shape %1150))
  (let (%1152 (Constant 0))
  (let (%1153 (Gather %1151 %1152 0))
  (let (%1154 (Shape %1150))
  (let (%1155 (Constant 1))
  (let (%1156 (Gather %1154 %1155 0))
  (let (%1158 (Unsqueeze %1153 (vec 0)))
  (let (%1159 (Unsqueeze %1156 (vec 0)))
  (let (%1161 (Concat %1158 %1159 %2969 0))
  (let (%1162 (Reshape %1150 %1161))
  (let (%1164 (MatMul %1162 %2970))
  (let (%1165 (Add %1164 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%1166 (Add %1165 %1089))
  (let (%1168 (ReduceMean %1166 (vec -1) 1))
  (let (%1169 (Sub %1166 %1168))
  (let (%1170 (Cast_FLOAT %1169))
  (let (%1172 (Pow %1170 %2971))
  (let (%1173 (ReduceMean %1172 (vec -1) 1))
  (let (%1174 (Constant 9.999999960041972e-13))
  (let (%1175 (Add %1173 %1174))
  (let (%1176 (Sqrt %1175))
  (let (%1177 (Div %1169 %1176))
  (let (%1178 (Mul %1177 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%1179 (Add %1178 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%1181 (MatMul %1179 %2972))
  (let (%1182 (Add %1181 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%1183 (Constant 1.4142135381698608))
  (let (%1184 (Div %1182 %1183))
  (let (%1185 (Erf %1184))
  (let (%1186 (Constant 1.0))
  (let (%1187 (Add %1185 %1186))
  (let (%1188 (Mul %1182 %1187))
  (let (%1189 (Constant 0.5))
  (let (%1190 (Mul %1188 %1189))
  (let (%1192 (MatMul %1190 %2973))
  (let (%1193 (Add %1192 bert.encoder.layer.6.output.dense.bias))
  (let (%1194 (Add %1193 %1179))
  (let (%1196 (ReduceMean %1194 (vec -1) 1))
  (let (%1197 (Sub %1194 %1196))
  (let (%1198 (Cast_FLOAT %1197))
  (let (%1200 (Pow %1198 %2974))
  (let (%1201 (ReduceMean %1200 (vec -1) 1))
  (let (%1202 (Constant 9.999999960041972e-13))
  (let (%1203 (Add %1201 %1202))
  (let (%1204 (Sqrt %1203))
  (let (%1205 (Div %1197 %1204))
  (let (%1206 (Mul %1205 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%1207 (Add %1206 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%1209 (MatMul %1207 %2975))
  (let (%1210 (Add %1209 bert.encoder.layer.7.attention.self.query.bias))
  (let (%1212 (MatMul %1207 %2976))
  (let (%1213 (Add %1212 bert.encoder.layer.7.attention.self.key.bias))
  (let (%1215 (MatMul %1207 %2977))
  (let (%1216 (Add %1215 bert.encoder.layer.7.attention.self.value.bias))
  (let (%1217 (Shape %1210))
  (let (%1218 (Constant 0))
  (let (%1219 (Gather %1217 %1218 0))
  (let (%1220 (Shape %1210))
  (let (%1221 (Constant 1))
  (let (%1222 (Gather %1220 %1221 0))
  (let (%1225 (Unsqueeze %1219 (vec 0)))
  (let (%1226 (Unsqueeze %1222 (vec 0)))
  (let (%1229 (Concat %1225 %1226 %2978 %2979 0))
  (let (%1230 (Reshape %1210 %1229))
  (let (%1231 (Transpose %1230 (vec 0 2 1 3)))
  (let (%1232 (Shape %1213))
  (let (%1233 (Constant 0))
  (let (%1234 (Gather %1232 %1233 0))
  (let (%1235 (Shape %1213))
  (let (%1236 (Constant 1))
  (let (%1237 (Gather %1235 %1236 0))
  (let (%1240 (Unsqueeze %1234 (vec 0)))
  (let (%1241 (Unsqueeze %1237 (vec 0)))
  (let (%1244 (Concat %1240 %1241 %2980 %2981 0))
  (let (%1245 (Reshape %1213 %1244))
  (let (%1246 (Shape %1216))
  (let (%1247 (Constant 0))
  (let (%1248 (Gather %1246 %1247 0))
  (let (%1249 (Shape %1216))
  (let (%1250 (Constant 1))
  (let (%1251 (Gather %1249 %1250 0))
  (let (%1254 (Unsqueeze %1248 (vec 0)))
  (let (%1255 (Unsqueeze %1251 (vec 0)))
  (let (%1258 (Concat %1254 %1255 %2982 %2983 0))
  (let (%1259 (Reshape %1216 %1258))
  (let (%1260 (Transpose %1259 (vec 0 2 1 3)))
  (let (%1261 (Transpose %1245 (vec 0 2 3 1)))
  (let (%1262 (MatMul %1231 %1261))
  (let (%1263 (Constant 8.0))
  (let (%1264 (Div %1262 %1263))
  (let (%1265 (Add %1264 %353))
  (let (%1266 (Softmax %1265 3))
  (let (%1267 (MatMul %1266 %1260))
  (let (%1268 (Transpose %1267 (vec 0 2 1 3)))
  (let (%1269 (Shape %1268))
  (let (%1270 (Constant 0))
  (let (%1271 (Gather %1269 %1270 0))
  (let (%1272 (Shape %1268))
  (let (%1273 (Constant 1))
  (let (%1274 (Gather %1272 %1273 0))
  (let (%1276 (Unsqueeze %1271 (vec 0)))
  (let (%1277 (Unsqueeze %1274 (vec 0)))
  (let (%1279 (Concat %1276 %1277 %2984 0))
  (let (%1280 (Reshape %1268 %1279))
  (let (%1282 (MatMul %1280 %2985))
  (let (%1283 (Add %1282 bert.encoder.layer.7.attention.output.dense.bias))
  (let (%1284 (Add %1283 %1207))
  (let (%1286 (ReduceMean %1284 (vec -1) 1))
  (let (%1287 (Sub %1284 %1286))
  (let (%1288 (Cast_FLOAT %1287))
  (let (%1290 (Pow %1288 %2986))
  (let (%1291 (ReduceMean %1290 (vec -1) 1))
  (let (%1292 (Constant 9.999999960041972e-13))
  (let (%1293 (Add %1291 %1292))
  (let (%1294 (Sqrt %1293))
  (let (%1295 (Div %1287 %1294))
  (let (%1296 (Mul %1295 bert.encoder.layer.7.attention.output.LayerNorm.weight))
  (let (%1297 (Add %1296 bert.encoder.layer.7.attention.output.LayerNorm.bias))
  (let (%1299 (MatMul %1297 %2987))
  (let (%1300 (Add %1299 bert.encoder.layer.7.intermediate.dense.bias))
  (let (%1301 (Constant 1.4142135381698608))
  (let (%1302 (Div %1300 %1301))
  (let (%1303 (Erf %1302))
  (let (%1304 (Constant 1.0))
  (let (%1305 (Add %1303 %1304))
  (let (%1306 (Mul %1300 %1305))
  (let (%1307 (Constant 0.5))
  (let (%1308 (Mul %1306 %1307))
  (let (%1310 (MatMul %1308 %2988))
  (let (%1311 (Add %1310 bert.encoder.layer.7.output.dense.bias))
  (let (%1312 (Add %1311 %1297))
  (let (%1314 (ReduceMean %1312 (vec -1) 1))
  (let (%1315 (Sub %1312 %1314))
  (let (%1316 (Cast_FLOAT %1315))
  (let (%1318 (Pow %1316 %2989))
  (let (%1319 (ReduceMean %1318 (vec -1) 1))
  (let (%1320 (Constant 9.999999960041972e-13))
  (let (%1321 (Add %1319 %1320))
  (let (%1322 (Sqrt %1321))
  (let (%1323 (Div %1315 %1322))
  (let (%1324 (Mul %1323 bert.encoder.layer.7.output.LayerNorm.weight))
  (let (%1325 (Add %1324 bert.encoder.layer.7.output.LayerNorm.bias))
  (let (%1327 (MatMul %1325 %2990))
  (let (%1328 (Add %1327 bert.encoder.layer.8.attention.self.query.bias))
  (let (%1330 (MatMul %1325 %2991))
  (let (%1331 (Add %1330 bert.encoder.layer.8.attention.self.key.bias))
  (let (%1333 (MatMul %1325 %2992))
  (let (%1334 (Add %1333 bert.encoder.layer.8.attention.self.value.bias))
  (let (%1335 (Shape %1328))
  (let (%1336 (Constant 0))
  (let (%1337 (Gather %1335 %1336 0))
  (let (%1338 (Shape %1328))
  (let (%1339 (Constant 1))
  (let (%1340 (Gather %1338 %1339 0))
  (let (%1343 (Unsqueeze %1337 (vec 0)))
  (let (%1344 (Unsqueeze %1340 (vec 0)))
  (let (%1347 (Concat %1343 %1344 %2993 %2994 0))
  (let (%1348 (Reshape %1328 %1347))
  (let (%1349 (Transpose %1348 (vec 0 2 1 3)))
  (let (%1350 (Shape %1331))
  (let (%1351 (Constant 0))
  (let (%1352 (Gather %1350 %1351 0))
  (let (%1353 (Shape %1331))
  (let (%1354 (Constant 1))
  (let (%1355 (Gather %1353 %1354 0))
  (let (%1358 (Unsqueeze %1352 (vec 0)))
  (let (%1359 (Unsqueeze %1355 (vec 0)))
  (let (%1362 (Concat %1358 %1359 %2995 %2996 0))
  (let (%1363 (Reshape %1331 %1362))
  (let (%1364 (Shape %1334))
  (let (%1365 (Constant 0))
  (let (%1366 (Gather %1364 %1365 0))
  (let (%1367 (Shape %1334))
  (let (%1368 (Constant 1))
  (let (%1369 (Gather %1367 %1368 0))
  (let (%1372 (Unsqueeze %1366 (vec 0)))
  (let (%1373 (Unsqueeze %1369 (vec 0)))
  (let (%1376 (Concat %1372 %1373 %2997 %2998 0))
  (let (%1377 (Reshape %1334 %1376))
  (let (%1378 (Transpose %1377 (vec 0 2 1 3)))
  (let (%1379 (Transpose %1363 (vec 0 2 3 1)))
  (let (%1380 (MatMul %1349 %1379))
  (let (%1381 (Constant 8.0))
  (let (%1382 (Div %1380 %1381))
  (let (%1383 (Add %1382 %353))
  (let (%1384 (Softmax %1383 3))
  (let (%1385 (MatMul %1384 %1378))
  (let (%1386 (Transpose %1385 (vec 0 2 1 3)))
  (let (%1387 (Shape %1386))
  (let (%1388 (Constant 0))
  (let (%1389 (Gather %1387 %1388 0))
  (let (%1390 (Shape %1386))
  (let (%1391 (Constant 1))
  (let (%1392 (Gather %1390 %1391 0))
  (let (%1394 (Unsqueeze %1389 (vec 0)))
  (let (%1395 (Unsqueeze %1392 (vec 0)))
  (let (%1397 (Concat %1394 %1395 %2999 0))
  (let (%1398 (Reshape %1386 %1397))
  (let (%1400 (MatMul %1398 %3000))
  (let (%1401 (Add %1400 bert.encoder.layer.8.attention.output.dense.bias))
  (let (%1402 (Add %1401 %1325))
  (let (%1404 (ReduceMean %1402 (vec -1) 1))
  (let (%1405 (Sub %1402 %1404))
  (let (%1406 (Cast_FLOAT %1405))
  (let (%1408 (Pow %1406 %3001))
  (let (%1409 (ReduceMean %1408 (vec -1) 1))
  (let (%1410 (Constant 9.999999960041972e-13))
  (let (%1411 (Add %1409 %1410))
  (let (%1412 (Sqrt %1411))
  (let (%1413 (Div %1405 %1412))
  (let (%1414 (Mul %1413 bert.encoder.layer.8.attention.output.LayerNorm.weight))
  (let (%1415 (Add %1414 bert.encoder.layer.8.attention.output.LayerNorm.bias))
  (let (%1417 (MatMul %1415 %3002))
  (let (%1418 (Add %1417 bert.encoder.layer.8.intermediate.dense.bias))
  (let (%1419 (Constant 1.4142135381698608))
  (let (%1420 (Div %1418 %1419))
  (let (%1421 (Erf %1420))
  (let (%1422 (Constant 1.0))
  (let (%1423 (Add %1421 %1422))
  (let (%1424 (Mul %1418 %1423))
  (let (%1425 (Constant 0.5))
  (let (%1426 (Mul %1424 %1425))
  (let (%1428 (MatMul %1426 %3003))
  (let (%1429 (Add %1428 bert.encoder.layer.8.output.dense.bias))
  (let (%1430 (Add %1429 %1415))
  (let (%1432 (ReduceMean %1430 (vec -1) 1))
  (let (%1433 (Sub %1430 %1432))
  (let (%1434 (Cast_FLOAT %1433))
  (let (%1436 (Pow %1434 %3004))
  (let (%1437 (ReduceMean %1436 (vec -1) 1))
  (let (%1438 (Constant 9.999999960041972e-13))
  (let (%1439 (Add %1437 %1438))
  (let (%1440 (Sqrt %1439))
  (let (%1441 (Div %1433 %1440))
  (let (%1442 (Mul %1441 bert.encoder.layer.8.output.LayerNorm.weight))
  (let (%1443 (Add %1442 bert.encoder.layer.8.output.LayerNorm.bias))
  (let (%1445 (MatMul %1443 %3005))
  (let (%1446 (Add %1445 bert.encoder.layer.9.attention.self.query.bias))
  (let (%1448 (MatMul %1443 %3006))
  (let (%1449 (Add %1448 bert.encoder.layer.9.attention.self.key.bias))
  (let (%1451 (MatMul %1443 %3007))
  (let (%1452 (Add %1451 bert.encoder.layer.9.attention.self.value.bias))
  (let (%1453 (Shape %1446))
  (let (%1454 (Constant 0))
  (let (%1455 (Gather %1453 %1454 0))
  (let (%1456 (Shape %1446))
  (let (%1457 (Constant 1))
  (let (%1458 (Gather %1456 %1457 0))
  (let (%1461 (Unsqueeze %1455 (vec 0)))
  (let (%1462 (Unsqueeze %1458 (vec 0)))
  (let (%1465 (Concat %1461 %1462 %3008 %3009 0))
  (let (%1466 (Reshape %1446 %1465))
  (let (%1467 (Transpose %1466 (vec 0 2 1 3)))
  (let (%1468 (Shape %1449))
  (let (%1469 (Constant 0))
  (let (%1470 (Gather %1468 %1469 0))
  (let (%1471 (Shape %1449))
  (let (%1472 (Constant 1))
  (let (%1473 (Gather %1471 %1472 0))
  (let (%1476 (Unsqueeze %1470 (vec 0)))
  (let (%1477 (Unsqueeze %1473 (vec 0)))
  (let (%1480 (Concat %1476 %1477 %3010 %3011 0))
  (let (%1481 (Reshape %1449 %1480))
  (let (%1482 (Shape %1452))
  (let (%1483 (Constant 0))
  (let (%1484 (Gather %1482 %1483 0))
  (let (%1485 (Shape %1452))
  (let (%1486 (Constant 1))
  (let (%1487 (Gather %1485 %1486 0))
  (let (%1490 (Unsqueeze %1484 (vec 0)))
  (let (%1491 (Unsqueeze %1487 (vec 0)))
  (let (%1494 (Concat %1490 %1491 %3012 %3013 0))
  (let (%1495 (Reshape %1452 %1494))
  (let (%1496 (Transpose %1495 (vec 0 2 1 3)))
  (let (%1497 (Transpose %1481 (vec 0 2 3 1)))
  (let (%1498 (MatMul %1467 %1497))
  (let (%1499 (Constant 8.0))
  (let (%1500 (Div %1498 %1499))
  (let (%1501 (Add %1500 %353))
  (let (%1502 (Softmax %1501 3))
  (let (%1503 (MatMul %1502 %1496))
  (let (%1504 (Transpose %1503 (vec 0 2 1 3)))
  (let (%1505 (Shape %1504))
  (let (%1506 (Constant 0))
  (let (%1507 (Gather %1505 %1506 0))
  (let (%1508 (Shape %1504))
  (let (%1509 (Constant 1))
  (let (%1510 (Gather %1508 %1509 0))
  (let (%1512 (Unsqueeze %1507 (vec 0)))
  (let (%1513 (Unsqueeze %1510 (vec 0)))
  (let (%1515 (Concat %1512 %1513 %3014 0))
  (let (%1516 (Reshape %1504 %1515))
  (let (%1518 (MatMul %1516 %3015))
  (let (%1519 (Add %1518 bert.encoder.layer.9.attention.output.dense.bias))
  (let (%1520 (Add %1519 %1443))
  (let (%1522 (ReduceMean %1520 (vec -1) 1))
  (let (%1523 (Sub %1520 %1522))
  (let (%1524 (Cast_FLOAT %1523))
  (let (%1526 (Pow %1524 %3016))
  (let (%1527 (ReduceMean %1526 (vec -1) 1))
  (let (%1528 (Constant 9.999999960041972e-13))
  (let (%1529 (Add %1527 %1528))
  (let (%1530 (Sqrt %1529))
  (let (%1531 (Div %1523 %1530))
  (let (%1532 (Mul %1531 bert.encoder.layer.9.attention.output.LayerNorm.weight))
  (let (%1533 (Add %1532 bert.encoder.layer.9.attention.output.LayerNorm.bias))
  (let (%1535 (MatMul %1533 %3017))
  (let (%1536 (Add %1535 bert.encoder.layer.9.intermediate.dense.bias))
  (let (%1537 (Constant 1.4142135381698608))
  (let (%1538 (Div %1536 %1537))
  (let (%1539 (Erf %1538))
  (let (%1540 (Constant 1.0))
  (let (%1541 (Add %1539 %1540))
  (let (%1542 (Mul %1536 %1541))
  (let (%1543 (Constant 0.5))
  (let (%1544 (Mul %1542 %1543))
  (let (%1546 (MatMul %1544 %3018))
  (let (%1547 (Add %1546 bert.encoder.layer.9.output.dense.bias))
  (let (%1548 (Add %1547 %1533))
  (let (%1550 (ReduceMean %1548 (vec -1) 1))
  (let (%1551 (Sub %1548 %1550))
  (let (%1552 (Cast_FLOAT %1551))
  (let (%1554 (Pow %1552 %3019))
  (let (%1555 (ReduceMean %1554 (vec -1) 1))
  (let (%1556 (Constant 9.999999960041972e-13))
  (let (%1557 (Add %1555 %1556))
  (let (%1558 (Sqrt %1557))
  (let (%1559 (Div %1551 %1558))
  (let (%1560 (Mul %1559 bert.encoder.layer.9.output.LayerNorm.weight))
  (let (%1561 (Add %1560 bert.encoder.layer.9.output.LayerNorm.bias))
  (let (%1563 (MatMul %1561 %3020))
  (let (%1564 (Add %1563 bert.encoder.layer.10.attention.self.query.bias))
  (let (%1566 (MatMul %1561 %3021))
  (let (%1567 (Add %1566 bert.encoder.layer.10.attention.self.key.bias))
  (let (%1569 (MatMul %1561 %3022))
  (let (%1570 (Add %1569 bert.encoder.layer.10.attention.self.value.bias))
  (let (%1571 (Shape %1564))
  (let (%1572 (Constant 0))
  (let (%1573 (Gather %1571 %1572 0))
  (let (%1574 (Shape %1564))
  (let (%1575 (Constant 1))
  (let (%1576 (Gather %1574 %1575 0))
  (let (%1579 (Unsqueeze %1573 (vec 0)))
  (let (%1580 (Unsqueeze %1576 (vec 0)))
  (let (%1583 (Concat %1579 %1580 %3023 %3024 0))
  (let (%1584 (Reshape %1564 %1583))
  (let (%1585 (Transpose %1584 (vec 0 2 1 3)))
  (let (%1586 (Shape %1567))
  (let (%1587 (Constant 0))
  (let (%1588 (Gather %1586 %1587 0))
  (let (%1589 (Shape %1567))
  (let (%1590 (Constant 1))
  (let (%1591 (Gather %1589 %1590 0))
  (let (%1594 (Unsqueeze %1588 (vec 0)))
  (let (%1595 (Unsqueeze %1591 (vec 0)))
  (let (%1598 (Concat %1594 %1595 %3025 %3026 0))
  (let (%1599 (Reshape %1567 %1598))
  (let (%1600 (Shape %1570))
  (let (%1601 (Constant 0))
  (let (%1602 (Gather %1600 %1601 0))
  (let (%1603 (Shape %1570))
  (let (%1604 (Constant 1))
  (let (%1605 (Gather %1603 %1604 0))
  (let (%1608 (Unsqueeze %1602 (vec 0)))
  (let (%1609 (Unsqueeze %1605 (vec 0)))
  (let (%1612 (Concat %1608 %1609 %3027 %3028 0))
  (let (%1613 (Reshape %1570 %1612))
  (let (%1614 (Transpose %1613 (vec 0 2 1 3)))
  (let (%1615 (Transpose %1599 (vec 0 2 3 1)))
  (let (%1616 (MatMul %1585 %1615))
  (let (%1617 (Constant 8.0))
  (let (%1618 (Div %1616 %1617))
  (let (%1619 (Add %1618 %353))
  (let (%1620 (Softmax %1619 3))
  (let (%1621 (MatMul %1620 %1614))
  (let (%1622 (Transpose %1621 (vec 0 2 1 3)))
  (let (%1623 (Shape %1622))
  (let (%1624 (Constant 0))
  (let (%1625 (Gather %1623 %1624 0))
  (let (%1626 (Shape %1622))
  (let (%1627 (Constant 1))
  (let (%1628 (Gather %1626 %1627 0))
  (let (%1630 (Unsqueeze %1625 (vec 0)))
  (let (%1631 (Unsqueeze %1628 (vec 0)))
  (let (%1633 (Concat %1630 %1631 %3029 0))
  (let (%1634 (Reshape %1622 %1633))
  (let (%1636 (MatMul %1634 %3030))
  (let (%1637 (Add %1636 bert.encoder.layer.10.attention.output.dense.bias))
  (let (%1638 (Add %1637 %1561))
  (let (%1640 (ReduceMean %1638 (vec -1) 1))
  (let (%1641 (Sub %1638 %1640))
  (let (%1642 (Cast_FLOAT %1641))
  (let (%1644 (Pow %1642 %3031))
  (let (%1645 (ReduceMean %1644 (vec -1) 1))
  (let (%1646 (Constant 9.999999960041972e-13))
  (let (%1647 (Add %1645 %1646))
  (let (%1648 (Sqrt %1647))
  (let (%1649 (Div %1641 %1648))
  (let (%1650 (Mul %1649 bert.encoder.layer.10.attention.output.LayerNorm.weight))
  (let (%1651 (Add %1650 bert.encoder.layer.10.attention.output.LayerNorm.bias))
  (let (%1653 (MatMul %1651 %3032))
  (let (%1654 (Add %1653 bert.encoder.layer.10.intermediate.dense.bias))
  (let (%1655 (Constant 1.4142135381698608))
  (let (%1656 (Div %1654 %1655))
  (let (%1657 (Erf %1656))
  (let (%1658 (Constant 1.0))
  (let (%1659 (Add %1657 %1658))
  (let (%1660 (Mul %1654 %1659))
  (let (%1661 (Constant 0.5))
  (let (%1662 (Mul %1660 %1661))
  (let (%1664 (MatMul %1662 %3033))
  (let (%1665 (Add %1664 bert.encoder.layer.10.output.dense.bias))
  (let (%1666 (Add %1665 %1651))
  (let (%1668 (ReduceMean %1666 (vec -1) 1))
  (let (%1669 (Sub %1666 %1668))
  (let (%1670 (Cast_FLOAT %1669))
  (let (%1672 (Pow %1670 %3034))
  (let (%1673 (ReduceMean %1672 (vec -1) 1))
  (let (%1674 (Constant 9.999999960041972e-13))
  (let (%1675 (Add %1673 %1674))
  (let (%1676 (Sqrt %1675))
  (let (%1677 (Div %1669 %1676))
  (let (%1678 (Mul %1677 bert.encoder.layer.10.output.LayerNorm.weight))
  (let (%1679 (Add %1678 bert.encoder.layer.10.output.LayerNorm.bias))
  (let (%1681 (MatMul %1679 %3035))
  (let (%1682 (Add %1681 bert.encoder.layer.11.attention.self.query.bias))
  (let (%1684 (MatMul %1679 %3036))
  (let (%1685 (Add %1684 bert.encoder.layer.11.attention.self.key.bias))
  (let (%1687 (MatMul %1679 %3037))
  (let (%1688 (Add %1687 bert.encoder.layer.11.attention.self.value.bias))
  (let (%1689 (Shape %1682))
  (let (%1690 (Constant 0))
  (let (%1691 (Gather %1689 %1690 0))
  (let (%1692 (Shape %1682))
  (let (%1693 (Constant 1))
  (let (%1694 (Gather %1692 %1693 0))
  (let (%1697 (Unsqueeze %1691 (vec 0)))
  (let (%1698 (Unsqueeze %1694 (vec 0)))
  (let (%1701 (Concat %1697 %1698 %3038 %3039 0))
  (let (%1702 (Reshape %1682 %1701))
  (let (%1703 (Transpose %1702 (vec 0 2 1 3)))
  (let (%1704 (Shape %1685))
  (let (%1705 (Constant 0))
  (let (%1706 (Gather %1704 %1705 0))
  (let (%1707 (Shape %1685))
  (let (%1708 (Constant 1))
  (let (%1709 (Gather %1707 %1708 0))
  (let (%1712 (Unsqueeze %1706 (vec 0)))
  (let (%1713 (Unsqueeze %1709 (vec 0)))
  (let (%1716 (Concat %1712 %1713 %3040 %3041 0))
  (let (%1717 (Reshape %1685 %1716))
  (let (%1718 (Shape %1688))
  (let (%1719 (Constant 0))
  (let (%1720 (Gather %1718 %1719 0))
  (let (%1721 (Shape %1688))
  (let (%1722 (Constant 1))
  (let (%1723 (Gather %1721 %1722 0))
  (let (%1726 (Unsqueeze %1720 (vec 0)))
  (let (%1727 (Unsqueeze %1723 (vec 0)))
  (let (%1730 (Concat %1726 %1727 %3042 %3043 0))
  (let (%1731 (Reshape %1688 %1730))
  (let (%1732 (Transpose %1731 (vec 0 2 1 3)))
  (let (%1733 (Transpose %1717 (vec 0 2 3 1)))
  (let (%1734 (MatMul %1703 %1733))
  (let (%1735 (Constant 8.0))
  (let (%1736 (Div %1734 %1735))
  (let (%1737 (Add %1736 %353))
  (let (%1738 (Softmax %1737 3))
  (let (%1739 (MatMul %1738 %1732))
  (let (%1740 (Transpose %1739 (vec 0 2 1 3)))
  (let (%1741 (Shape %1740))
  (let (%1742 (Constant 0))
  (let (%1743 (Gather %1741 %1742 0))
  (let (%1744 (Shape %1740))
  (let (%1745 (Constant 1))
  (let (%1746 (Gather %1744 %1745 0))
  (let (%1748 (Unsqueeze %1743 (vec 0)))
  (let (%1749 (Unsqueeze %1746 (vec 0)))
  (let (%1751 (Concat %1748 %1749 %3044 0))
  (let (%1752 (Reshape %1740 %1751))
  (let (%1754 (MatMul %1752 %3045))
  (let (%1755 (Add %1754 bert.encoder.layer.11.attention.output.dense.bias))
  (let (%1756 (Add %1755 %1679))
  (let (%1758 (ReduceMean %1756 (vec -1) 1))
  (let (%1759 (Sub %1756 %1758))
  (let (%1760 (Cast_FLOAT %1759))
  (let (%1762 (Pow %1760 %3046))
  (let (%1763 (ReduceMean %1762 (vec -1) 1))
  (let (%1764 (Constant 9.999999960041972e-13))
  (let (%1765 (Add %1763 %1764))
  (let (%1766 (Sqrt %1765))
  (let (%1767 (Div %1759 %1766))
  (let (%1768 (Mul %1767 bert.encoder.layer.11.attention.output.LayerNorm.weight))
  (let (%1769 (Add %1768 bert.encoder.layer.11.attention.output.LayerNorm.bias))
  (let (%1771 (MatMul %1769 %3047))
  (let (%1772 (Add %1771 bert.encoder.layer.11.intermediate.dense.bias))
  (let (%1773 (Constant 1.4142135381698608))
  (let (%1774 (Div %1772 %1773))
  (let (%1775 (Erf %1774))
  (let (%1776 (Constant 1.0))
  (let (%1777 (Add %1775 %1776))
  (let (%1778 (Mul %1772 %1777))
  (let (%1779 (Constant 0.5))
  (let (%1780 (Mul %1778 %1779))
  (let (%1782 (MatMul %1780 %3048))
  (let (%1783 (Add %1782 bert.encoder.layer.11.output.dense.bias))
  (let (%1784 (Add %1783 %1769))
  (let (%1786 (ReduceMean %1784 (vec -1) 1))
  (let (%1787 (Sub %1784 %1786))
  (let (%1788 (Cast_FLOAT %1787))
  (let (%1790 (Pow %1788 %3049))
  (let (%1791 (ReduceMean %1790 (vec -1) 1))
  (let (%1792 (Constant 9.999999960041972e-13))
  (let (%1793 (Add %1791 %1792))
  (let (%1794 (Sqrt %1793))
  (let (%1795 (Div %1787 %1794))
  (let (%1796 (Mul %1795 bert.encoder.layer.11.output.LayerNorm.weight))
  (let (%1797 (Add %1796 bert.encoder.layer.11.output.LayerNorm.bias))
  (let (%1799 (MatMul %1797 %3050))
  (let (%1800 (Add %1799 bert.encoder.layer.12.attention.self.query.bias))
  (let (%1802 (MatMul %1797 %3051))
  (let (%1803 (Add %1802 bert.encoder.layer.12.attention.self.key.bias))
  (let (%1805 (MatMul %1797 %3052))
  (let (%1806 (Add %1805 bert.encoder.layer.12.attention.self.value.bias))
  (let (%1807 (Shape %1800))
  (let (%1808 (Constant 0))
  (let (%1809 (Gather %1807 %1808 0))
  (let (%1810 (Shape %1800))
  (let (%1811 (Constant 1))
  (let (%1812 (Gather %1810 %1811 0))
  (let (%1815 (Unsqueeze %1809 (vec 0)))
  (let (%1816 (Unsqueeze %1812 (vec 0)))
  (let (%1819 (Concat %1815 %1816 %3053 %3054 0))
  (let (%1820 (Reshape %1800 %1819))
  (let (%1821 (Transpose %1820 (vec 0 2 1 3)))
  (let (%1822 (Shape %1803))
  (let (%1823 (Constant 0))
  (let (%1824 (Gather %1822 %1823 0))
  (let (%1825 (Shape %1803))
  (let (%1826 (Constant 1))
  (let (%1827 (Gather %1825 %1826 0))
  (let (%1830 (Unsqueeze %1824 (vec 0)))
  (let (%1831 (Unsqueeze %1827 (vec 0)))
  (let (%1834 (Concat %1830 %1831 %3055 %3056 0))
  (let (%1835 (Reshape %1803 %1834))
  (let (%1836 (Shape %1806))
  (let (%1837 (Constant 0))
  (let (%1838 (Gather %1836 %1837 0))
  (let (%1839 (Shape %1806))
  (let (%1840 (Constant 1))
  (let (%1841 (Gather %1839 %1840 0))
  (let (%1844 (Unsqueeze %1838 (vec 0)))
  (let (%1845 (Unsqueeze %1841 (vec 0)))
  (let (%1848 (Concat %1844 %1845 %3057 %3058 0))
  (let (%1849 (Reshape %1806 %1848))
  (let (%1850 (Transpose %1849 (vec 0 2 1 3)))
  (let (%1851 (Transpose %1835 (vec 0 2 3 1)))
  (let (%1852 (MatMul %1821 %1851))
  (let (%1853 (Constant 8.0))
  (let (%1854 (Div %1852 %1853))
  (let (%1855 (Add %1854 %353))
  (let (%1856 (Softmax %1855 3))
  (let (%1857 (MatMul %1856 %1850))
  (let (%1858 (Transpose %1857 (vec 0 2 1 3)))
  (let (%1859 (Shape %1858))
  (let (%1860 (Constant 0))
  (let (%1861 (Gather %1859 %1860 0))
  (let (%1862 (Shape %1858))
  (let (%1863 (Constant 1))
  (let (%1864 (Gather %1862 %1863 0))
  (let (%1866 (Unsqueeze %1861 (vec 0)))
  (let (%1867 (Unsqueeze %1864 (vec 0)))
  (let (%1869 (Concat %1866 %1867 %3059 0))
  (let (%1870 (Reshape %1858 %1869))
  (let (%1872 (MatMul %1870 %3060))
  (let (%1873 (Add %1872 bert.encoder.layer.12.attention.output.dense.bias))
  (let (%1874 (Add %1873 %1797))
  (let (%1876 (ReduceMean %1874 (vec -1) 1))
  (let (%1877 (Sub %1874 %1876))
  (let (%1878 (Cast_FLOAT %1877))
  (let (%1880 (Pow %1878 %3061))
  (let (%1881 (ReduceMean %1880 (vec -1) 1))
  (let (%1882 (Constant 9.999999960041972e-13))
  (let (%1883 (Add %1881 %1882))
  (let (%1884 (Sqrt %1883))
  (let (%1885 (Div %1877 %1884))
  (let (%1886 (Mul %1885 bert.encoder.layer.12.attention.output.LayerNorm.weight))
  (let (%1887 (Add %1886 bert.encoder.layer.12.attention.output.LayerNorm.bias))
  (let (%1889 (MatMul %1887 %3062))
  (let (%1890 (Add %1889 bert.encoder.layer.12.intermediate.dense.bias))
  (let (%1891 (Constant 1.4142135381698608))
  (let (%1892 (Div %1890 %1891))
  (let (%1893 (Erf %1892))
  (let (%1894 (Constant 1.0))
  (let (%1895 (Add %1893 %1894))
  (let (%1896 (Mul %1890 %1895))
  (let (%1897 (Constant 0.5))
  (let (%1898 (Mul %1896 %1897))
  (let (%1900 (MatMul %1898 %3063))
  (let (%1901 (Add %1900 bert.encoder.layer.12.output.dense.bias))
  (let (%1902 (Add %1901 %1887))
  (let (%1904 (ReduceMean %1902 (vec -1) 1))
  (let (%1905 (Sub %1902 %1904))
  (let (%1906 (Cast_FLOAT %1905))
  (let (%1908 (Pow %1906 %3064))
  (let (%1909 (ReduceMean %1908 (vec -1) 1))
  (let (%1910 (Constant 9.999999960041972e-13))
  (let (%1911 (Add %1909 %1910))
  (let (%1912 (Sqrt %1911))
  (let (%1913 (Div %1905 %1912))
  (let (%1914 (Mul %1913 bert.encoder.layer.12.output.LayerNorm.weight))
  (let (%1915 (Add %1914 bert.encoder.layer.12.output.LayerNorm.bias))
  (let (%1917 (MatMul %1915 %3065))
  (let (%1918 (Add %1917 bert.encoder.layer.13.attention.self.query.bias))
  (let (%1920 (MatMul %1915 %3066))
  (let (%1921 (Add %1920 bert.encoder.layer.13.attention.self.key.bias))
  (let (%1923 (MatMul %1915 %3067))
  (let (%1924 (Add %1923 bert.encoder.layer.13.attention.self.value.bias))
  (let (%1925 (Shape %1918))
  (let (%1926 (Constant 0))
  (let (%1927 (Gather %1925 %1926 0))
  (let (%1928 (Shape %1918))
  (let (%1929 (Constant 1))
  (let (%1930 (Gather %1928 %1929 0))
  (let (%1933 (Unsqueeze %1927 (vec 0)))
  (let (%1934 (Unsqueeze %1930 (vec 0)))
  (let (%1937 (Concat %1933 %1934 %3068 %3069 0))
  (let (%1938 (Reshape %1918 %1937))
  (let (%1939 (Transpose %1938 (vec 0 2 1 3)))
  (let (%1940 (Shape %1921))
  (let (%1941 (Constant 0))
  (let (%1942 (Gather %1940 %1941 0))
  (let (%1943 (Shape %1921))
  (let (%1944 (Constant 1))
  (let (%1945 (Gather %1943 %1944 0))
  (let (%1948 (Unsqueeze %1942 (vec 0)))
  (let (%1949 (Unsqueeze %1945 (vec 0)))
  (let (%1952 (Concat %1948 %1949 %3070 %3071 0))
  (let (%1953 (Reshape %1921 %1952))
  (let (%1954 (Shape %1924))
  (let (%1955 (Constant 0))
  (let (%1956 (Gather %1954 %1955 0))
  (let (%1957 (Shape %1924))
  (let (%1958 (Constant 1))
  (let (%1959 (Gather %1957 %1958 0))
  (let (%1962 (Unsqueeze %1956 (vec 0)))
  (let (%1963 (Unsqueeze %1959 (vec 0)))
  (let (%1966 (Concat %1962 %1963 %3072 %3073 0))
  (let (%1967 (Reshape %1924 %1966))
  (let (%1968 (Transpose %1967 (vec 0 2 1 3)))
  (let (%1969 (Transpose %1953 (vec 0 2 3 1)))
  (let (%1970 (MatMul %1939 %1969))
  (let (%1971 (Constant 8.0))
  (let (%1972 (Div %1970 %1971))
  (let (%1973 (Add %1972 %353))
  (let (%1974 (Softmax %1973 3))
  (let (%1975 (MatMul %1974 %1968))
  (let (%1976 (Transpose %1975 (vec 0 2 1 3)))
  (let (%1977 (Shape %1976))
  (let (%1978 (Constant 0))
  (let (%1979 (Gather %1977 %1978 0))
  (let (%1980 (Shape %1976))
  (let (%1981 (Constant 1))
  (let (%1982 (Gather %1980 %1981 0))
  (let (%1984 (Unsqueeze %1979 (vec 0)))
  (let (%1985 (Unsqueeze %1982 (vec 0)))
  (let (%1987 (Concat %1984 %1985 %3074 0))
  (let (%1988 (Reshape %1976 %1987))
  (let (%1990 (MatMul %1988 %3075))
  (let (%1991 (Add %1990 bert.encoder.layer.13.attention.output.dense.bias))
  (let (%1992 (Add %1991 %1915))
  (let (%1994 (ReduceMean %1992 (vec -1) 1))
  (let (%1995 (Sub %1992 %1994))
  (let (%1996 (Cast_FLOAT %1995))
  (let (%1998 (Pow %1996 %3076))
  (let (%1999 (ReduceMean %1998 (vec -1) 1))
  (let (%2000 (Constant 9.999999960041972e-13))
  (let (%2001 (Add %1999 %2000))
  (let (%2002 (Sqrt %2001))
  (let (%2003 (Div %1995 %2002))
  (let (%2004 (Mul %2003 bert.encoder.layer.13.attention.output.LayerNorm.weight))
  (let (%2005 (Add %2004 bert.encoder.layer.13.attention.output.LayerNorm.bias))
  (let (%2007 (MatMul %2005 %3077))
  (let (%2008 (Add %2007 bert.encoder.layer.13.intermediate.dense.bias))
  (let (%2009 (Constant 1.4142135381698608))
  (let (%2010 (Div %2008 %2009))
  (let (%2011 (Erf %2010))
  (let (%2012 (Constant 1.0))
  (let (%2013 (Add %2011 %2012))
  (let (%2014 (Mul %2008 %2013))
  (let (%2015 (Constant 0.5))
  (let (%2016 (Mul %2014 %2015))
  (let (%2018 (MatMul %2016 %3078))
  (let (%2019 (Add %2018 bert.encoder.layer.13.output.dense.bias))
  (let (%2020 (Add %2019 %2005))
  (let (%2022 (ReduceMean %2020 (vec -1) 1))
  (let (%2023 (Sub %2020 %2022))
  (let (%2024 (Cast_FLOAT %2023))
  (let (%2026 (Pow %2024 %3079))
  (let (%2027 (ReduceMean %2026 (vec -1) 1))
  (let (%2028 (Constant 9.999999960041972e-13))
  (let (%2029 (Add %2027 %2028))
  (let (%2030 (Sqrt %2029))
  (let (%2031 (Div %2023 %2030))
  (let (%2032 (Mul %2031 bert.encoder.layer.13.output.LayerNorm.weight))
  (let (%2033 (Add %2032 bert.encoder.layer.13.output.LayerNorm.bias))
  (let (%2035 (MatMul %2033 %3080))
  (let (%2036 (Add %2035 bert.encoder.layer.14.attention.self.query.bias))
  (let (%2038 (MatMul %2033 %3081))
  (let (%2039 (Add %2038 bert.encoder.layer.14.attention.self.key.bias))
  (let (%2041 (MatMul %2033 %3082))
  (let (%2042 (Add %2041 bert.encoder.layer.14.attention.self.value.bias))
  (let (%2043 (Shape %2036))
  (let (%2044 (Constant 0))
  (let (%2045 (Gather %2043 %2044 0))
  (let (%2046 (Shape %2036))
  (let (%2047 (Constant 1))
  (let (%2048 (Gather %2046 %2047 0))
  (let (%2051 (Unsqueeze %2045 (vec 0)))
  (let (%2052 (Unsqueeze %2048 (vec 0)))
  (let (%2055 (Concat %2051 %2052 %3083 %3084 0))
  (let (%2056 (Reshape %2036 %2055))
  (let (%2057 (Transpose %2056 (vec 0 2 1 3)))
  (let (%2058 (Shape %2039))
  (let (%2059 (Constant 0))
  (let (%2060 (Gather %2058 %2059 0))
  (let (%2061 (Shape %2039))
  (let (%2062 (Constant 1))
  (let (%2063 (Gather %2061 %2062 0))
  (let (%2066 (Unsqueeze %2060 (vec 0)))
  (let (%2067 (Unsqueeze %2063 (vec 0)))
  (let (%2070 (Concat %2066 %2067 %3085 %3086 0))
  (let (%2071 (Reshape %2039 %2070))
  (let (%2072 (Shape %2042))
  (let (%2073 (Constant 0))
  (let (%2074 (Gather %2072 %2073 0))
  (let (%2075 (Shape %2042))
  (let (%2076 (Constant 1))
  (let (%2077 (Gather %2075 %2076 0))
  (let (%2080 (Unsqueeze %2074 (vec 0)))
  (let (%2081 (Unsqueeze %2077 (vec 0)))
  (let (%2084 (Concat %2080 %2081 %3087 %3088 0))
  (let (%2085 (Reshape %2042 %2084))
  (let (%2086 (Transpose %2085 (vec 0 2 1 3)))
  (let (%2087 (Transpose %2071 (vec 0 2 3 1)))
  (let (%2088 (MatMul %2057 %2087))
  (let (%2089 (Constant 8.0))
  (let (%2090 (Div %2088 %2089))
  (let (%2091 (Add %2090 %353))
  (let (%2092 (Softmax %2091 3))
  (let (%2093 (MatMul %2092 %2086))
  (let (%2094 (Transpose %2093 (vec 0 2 1 3)))
  (let (%2095 (Shape %2094))
  (let (%2096 (Constant 0))
  (let (%2097 (Gather %2095 %2096 0))
  (let (%2098 (Shape %2094))
  (let (%2099 (Constant 1))
  (let (%2100 (Gather %2098 %2099 0))
  (let (%2102 (Unsqueeze %2097 (vec 0)))
  (let (%2103 (Unsqueeze %2100 (vec 0)))
  (let (%2105 (Concat %2102 %2103 %3089 0))
  (let (%2106 (Reshape %2094 %2105))
  (let (%2108 (MatMul %2106 %3090))
  (let (%2109 (Add %2108 bert.encoder.layer.14.attention.output.dense.bias))
  (let (%2110 (Add %2109 %2033))
  (let (%2112 (ReduceMean %2110 (vec -1) 1))
  (let (%2113 (Sub %2110 %2112))
  (let (%2114 (Cast_FLOAT %2113))
  (let (%2116 (Pow %2114 %3091))
  (let (%2117 (ReduceMean %2116 (vec -1) 1))
  (let (%2118 (Constant 9.999999960041972e-13))
  (let (%2119 (Add %2117 %2118))
  (let (%2120 (Sqrt %2119))
  (let (%2121 (Div %2113 %2120))
  (let (%2122 (Mul %2121 bert.encoder.layer.14.attention.output.LayerNorm.weight))
  (let (%2123 (Add %2122 bert.encoder.layer.14.attention.output.LayerNorm.bias))
  (let (%2125 (MatMul %2123 %3092))
  (let (%2126 (Add %2125 bert.encoder.layer.14.intermediate.dense.bias))
  (let (%2127 (Constant 1.4142135381698608))
  (let (%2128 (Div %2126 %2127))
  (let (%2129 (Erf %2128))
  (let (%2130 (Constant 1.0))
  (let (%2131 (Add %2129 %2130))
  (let (%2132 (Mul %2126 %2131))
  (let (%2133 (Constant 0.5))
  (let (%2134 (Mul %2132 %2133))
  (let (%2136 (MatMul %2134 %3093))
  (let (%2137 (Add %2136 bert.encoder.layer.14.output.dense.bias))
  (let (%2138 (Add %2137 %2123))
  (let (%2140 (ReduceMean %2138 (vec -1) 1))
  (let (%2141 (Sub %2138 %2140))
  (let (%2142 (Cast_FLOAT %2141))
  (let (%2144 (Pow %2142 %3094))
  (let (%2145 (ReduceMean %2144 (vec -1) 1))
  (let (%2146 (Constant 9.999999960041972e-13))
  (let (%2147 (Add %2145 %2146))
  (let (%2148 (Sqrt %2147))
  (let (%2149 (Div %2141 %2148))
  (let (%2150 (Mul %2149 bert.encoder.layer.14.output.LayerNorm.weight))
  (let (%2151 (Add %2150 bert.encoder.layer.14.output.LayerNorm.bias))
  (let (%2153 (MatMul %2151 %3095))
  (let (%2154 (Add %2153 bert.encoder.layer.15.attention.self.query.bias))
  (let (%2156 (MatMul %2151 %3096))
  (let (%2157 (Add %2156 bert.encoder.layer.15.attention.self.key.bias))
  (let (%2159 (MatMul %2151 %3097))
  (let (%2160 (Add %2159 bert.encoder.layer.15.attention.self.value.bias))
  (let (%2161 (Shape %2154))
  (let (%2162 (Constant 0))
  (let (%2163 (Gather %2161 %2162 0))
  (let (%2164 (Shape %2154))
  (let (%2165 (Constant 1))
  (let (%2166 (Gather %2164 %2165 0))
  (let (%2169 (Unsqueeze %2163 (vec 0)))
  (let (%2170 (Unsqueeze %2166 (vec 0)))
  (let (%2173 (Concat %2169 %2170 %3098 %3099 0))
  (let (%2174 (Reshape %2154 %2173))
  (let (%2175 (Transpose %2174 (vec 0 2 1 3)))
  (let (%2176 (Shape %2157))
  (let (%2177 (Constant 0))
  (let (%2178 (Gather %2176 %2177 0))
  (let (%2179 (Shape %2157))
  (let (%2180 (Constant 1))
  (let (%2181 (Gather %2179 %2180 0))
  (let (%2184 (Unsqueeze %2178 (vec 0)))
  (let (%2185 (Unsqueeze %2181 (vec 0)))
  (let (%2188 (Concat %2184 %2185 %3100 %3101 0))
  (let (%2189 (Reshape %2157 %2188))
  (let (%2190 (Shape %2160))
  (let (%2191 (Constant 0))
  (let (%2192 (Gather %2190 %2191 0))
  (let (%2193 (Shape %2160))
  (let (%2194 (Constant 1))
  (let (%2195 (Gather %2193 %2194 0))
  (let (%2198 (Unsqueeze %2192 (vec 0)))
  (let (%2199 (Unsqueeze %2195 (vec 0)))
  (let (%2202 (Concat %2198 %2199 %3102 %3103 0))
  (let (%2203 (Reshape %2160 %2202))
  (let (%2204 (Transpose %2203 (vec 0 2 1 3)))
  (let (%2205 (Transpose %2189 (vec 0 2 3 1)))
  (let (%2206 (MatMul %2175 %2205))
  (let (%2207 (Constant 8.0))
  (let (%2208 (Div %2206 %2207))
  (let (%2209 (Add %2208 %353))
  (let (%2210 (Softmax %2209 3))
  (let (%2211 (MatMul %2210 %2204))
  (let (%2212 (Transpose %2211 (vec 0 2 1 3)))
  (let (%2213 (Shape %2212))
  (let (%2214 (Constant 0))
  (let (%2215 (Gather %2213 %2214 0))
  (let (%2216 (Shape %2212))
  (let (%2217 (Constant 1))
  (let (%2218 (Gather %2216 %2217 0))
  (let (%2220 (Unsqueeze %2215 (vec 0)))
  (let (%2221 (Unsqueeze %2218 (vec 0)))
  (let (%2223 (Concat %2220 %2221 %3104 0))
  (let (%2224 (Reshape %2212 %2223))
  (let (%2226 (MatMul %2224 %3105))
  (let (%2227 (Add %2226 bert.encoder.layer.15.attention.output.dense.bias))
  (let (%2228 (Add %2227 %2151))
  (let (%2230 (ReduceMean %2228 (vec -1) 1))
  (let (%2231 (Sub %2228 %2230))
  (let (%2232 (Cast_FLOAT %2231))
  (let (%2234 (Pow %2232 %3106))
  (let (%2235 (ReduceMean %2234 (vec -1) 1))
  (let (%2236 (Constant 9.999999960041972e-13))
  (let (%2237 (Add %2235 %2236))
  (let (%2238 (Sqrt %2237))
  (let (%2239 (Div %2231 %2238))
  (let (%2240 (Mul %2239 bert.encoder.layer.15.attention.output.LayerNorm.weight))
  (let (%2241 (Add %2240 bert.encoder.layer.15.attention.output.LayerNorm.bias))
  (let (%2243 (MatMul %2241 %3107))
  (let (%2244 (Add %2243 bert.encoder.layer.15.intermediate.dense.bias))
  (let (%2245 (Constant 1.4142135381698608))
  (let (%2246 (Div %2244 %2245))
  (let (%2247 (Erf %2246))
  (let (%2248 (Constant 1.0))
  (let (%2249 (Add %2247 %2248))
  (let (%2250 (Mul %2244 %2249))
  (let (%2251 (Constant 0.5))
  (let (%2252 (Mul %2250 %2251))
  (let (%2254 (MatMul %2252 %3108))
  (let (%2255 (Add %2254 bert.encoder.layer.15.output.dense.bias))
  (let (%2256 (Add %2255 %2241))
  (let (%2258 (ReduceMean %2256 (vec -1) 1))
  (let (%2259 (Sub %2256 %2258))
  (let (%2260 (Cast_FLOAT %2259))
  (let (%2262 (Pow %2260 %3109))
  (let (%2263 (ReduceMean %2262 (vec -1) 1))
  (let (%2264 (Constant 9.999999960041972e-13))
  (let (%2265 (Add %2263 %2264))
  (let (%2266 (Sqrt %2265))
  (let (%2267 (Div %2259 %2266))
  (let (%2268 (Mul %2267 bert.encoder.layer.15.output.LayerNorm.weight))
  (let (%2269 (Add %2268 bert.encoder.layer.15.output.LayerNorm.bias))
  (let (%2271 (MatMul %2269 %3110))
  (let (%2272 (Add %2271 bert.encoder.layer.16.attention.self.query.bias))
  (let (%2274 (MatMul %2269 %3111))
  (let (%2275 (Add %2274 bert.encoder.layer.16.attention.self.key.bias))
  (let (%2277 (MatMul %2269 %3112))
  (let (%2278 (Add %2277 bert.encoder.layer.16.attention.self.value.bias))
  (let (%2279 (Shape %2272))
  (let (%2280 (Constant 0))
  (let (%2281 (Gather %2279 %2280 0))
  (let (%2282 (Shape %2272))
  (let (%2283 (Constant 1))
  (let (%2284 (Gather %2282 %2283 0))
  (let (%2287 (Unsqueeze %2281 (vec 0)))
  (let (%2288 (Unsqueeze %2284 (vec 0)))
  (let (%2291 (Concat %2287 %2288 %3113 %3114 0))
  (let (%2292 (Reshape %2272 %2291))
  (let (%2293 (Transpose %2292 (vec 0 2 1 3)))
  (let (%2294 (Shape %2275))
  (let (%2295 (Constant 0))
  (let (%2296 (Gather %2294 %2295 0))
  (let (%2297 (Shape %2275))
  (let (%2298 (Constant 1))
  (let (%2299 (Gather %2297 %2298 0))
  (let (%2302 (Unsqueeze %2296 (vec 0)))
  (let (%2303 (Unsqueeze %2299 (vec 0)))
  (let (%2306 (Concat %2302 %2303 %3115 %3116 0))
  (let (%2307 (Reshape %2275 %2306))
  (let (%2308 (Shape %2278))
  (let (%2309 (Constant 0))
  (let (%2310 (Gather %2308 %2309 0))
  (let (%2311 (Shape %2278))
  (let (%2312 (Constant 1))
  (let (%2313 (Gather %2311 %2312 0))
  (let (%2316 (Unsqueeze %2310 (vec 0)))
  (let (%2317 (Unsqueeze %2313 (vec 0)))
  (let (%2320 (Concat %2316 %2317 %3117 %3118 0))
  (let (%2321 (Reshape %2278 %2320))
  (let (%2322 (Transpose %2321 (vec 0 2 1 3)))
  (let (%2323 (Transpose %2307 (vec 0 2 3 1)))
  (let (%2324 (MatMul %2293 %2323))
  (let (%2325 (Constant 8.0))
  (let (%2326 (Div %2324 %2325))
  (let (%2327 (Add %2326 %353))
  (let (%2328 (Softmax %2327 3))
  (let (%2329 (MatMul %2328 %2322))
  (let (%2330 (Transpose %2329 (vec 0 2 1 3)))
  (let (%2331 (Shape %2330))
  (let (%2332 (Constant 0))
  (let (%2333 (Gather %2331 %2332 0))
  (let (%2334 (Shape %2330))
  (let (%2335 (Constant 1))
  (let (%2336 (Gather %2334 %2335 0))
  (let (%2338 (Unsqueeze %2333 (vec 0)))
  (let (%2339 (Unsqueeze %2336 (vec 0)))
  (let (%2341 (Concat %2338 %2339 %3119 0))
  (let (%2342 (Reshape %2330 %2341))
  (let (%2344 (MatMul %2342 %3120))
  (let (%2345 (Add %2344 bert.encoder.layer.16.attention.output.dense.bias))
  (let (%2346 (Add %2345 %2269))
  (let (%2348 (ReduceMean %2346 (vec -1) 1))
  (let (%2349 (Sub %2346 %2348))
  (let (%2350 (Cast_FLOAT %2349))
  (let (%2352 (Pow %2350 %3121))
  (let (%2353 (ReduceMean %2352 (vec -1) 1))
  (let (%2354 (Constant 9.999999960041972e-13))
  (let (%2355 (Add %2353 %2354))
  (let (%2356 (Sqrt %2355))
  (let (%2357 (Div %2349 %2356))
  (let (%2358 (Mul %2357 bert.encoder.layer.16.attention.output.LayerNorm.weight))
  (let (%2359 (Add %2358 bert.encoder.layer.16.attention.output.LayerNorm.bias))
  (let (%2361 (MatMul %2359 %3122))
  (let (%2362 (Add %2361 bert.encoder.layer.16.intermediate.dense.bias))
  (let (%2363 (Constant 1.4142135381698608))
  (let (%2364 (Div %2362 %2363))
  (let (%2365 (Erf %2364))
  (let (%2366 (Constant 1.0))
  (let (%2367 (Add %2365 %2366))
  (let (%2368 (Mul %2362 %2367))
  (let (%2369 (Constant 0.5))
  (let (%2370 (Mul %2368 %2369))
  (let (%2372 (MatMul %2370 %3123))
  (let (%2373 (Add %2372 bert.encoder.layer.16.output.dense.bias))
  (let (%2374 (Add %2373 %2359))
  (let (%2376 (ReduceMean %2374 (vec -1) 1))
  (let (%2377 (Sub %2374 %2376))
  (let (%2378 (Cast_FLOAT %2377))
  (let (%2380 (Pow %2378 %3124))
  (let (%2381 (ReduceMean %2380 (vec -1) 1))
  (let (%2382 (Constant 9.999999960041972e-13))
  (let (%2383 (Add %2381 %2382))
  (let (%2384 (Sqrt %2383))
  (let (%2385 (Div %2377 %2384))
  (let (%2386 (Mul %2385 bert.encoder.layer.16.output.LayerNorm.weight))
  (let (%2387 (Add %2386 bert.encoder.layer.16.output.LayerNorm.bias))
  (let (%2389 (MatMul %2387 %3125))
  (let (%2390 (Add %2389 bert.encoder.layer.17.attention.self.query.bias))
  (let (%2392 (MatMul %2387 %3126))
  (let (%2393 (Add %2392 bert.encoder.layer.17.attention.self.key.bias))
  (let (%2395 (MatMul %2387 %3127))
  (let (%2396 (Add %2395 bert.encoder.layer.17.attention.self.value.bias))
  (let (%2397 (Shape %2390))
  (let (%2398 (Constant 0))
  (let (%2399 (Gather %2397 %2398 0))
  (let (%2400 (Shape %2390))
  (let (%2401 (Constant 1))
  (let (%2402 (Gather %2400 %2401 0))
  (let (%2405 (Unsqueeze %2399 (vec 0)))
  (let (%2406 (Unsqueeze %2402 (vec 0)))
  (let (%2409 (Concat %2405 %2406 %3128 %3129 0))
  (let (%2410 (Reshape %2390 %2409))
  (let (%2411 (Transpose %2410 (vec 0 2 1 3)))
  (let (%2412 (Shape %2393))
  (let (%2413 (Constant 0))
  (let (%2414 (Gather %2412 %2413 0))
  (let (%2415 (Shape %2393))
  (let (%2416 (Constant 1))
  (let (%2417 (Gather %2415 %2416 0))
  (let (%2420 (Unsqueeze %2414 (vec 0)))
  (let (%2421 (Unsqueeze %2417 (vec 0)))
  (let (%2424 (Concat %2420 %2421 %3130 %3131 0))
  (let (%2425 (Reshape %2393 %2424))
  (let (%2426 (Shape %2396))
  (let (%2427 (Constant 0))
  (let (%2428 (Gather %2426 %2427 0))
  (let (%2429 (Shape %2396))
  (let (%2430 (Constant 1))
  (let (%2431 (Gather %2429 %2430 0))
  (let (%2434 (Unsqueeze %2428 (vec 0)))
  (let (%2435 (Unsqueeze %2431 (vec 0)))
  (let (%2438 (Concat %2434 %2435 %3132 %3133 0))
  (let (%2439 (Reshape %2396 %2438))
  (let (%2440 (Transpose %2439 (vec 0 2 1 3)))
  (let (%2441 (Transpose %2425 (vec 0 2 3 1)))
  (let (%2442 (MatMul %2411 %2441))
  (let (%2443 (Constant 8.0))
  (let (%2444 (Div %2442 %2443))
  (let (%2445 (Add %2444 %353))
  (let (%2446 (Softmax %2445 3))
  (let (%2447 (MatMul %2446 %2440))
  (let (%2448 (Transpose %2447 (vec 0 2 1 3)))
  (let (%2449 (Shape %2448))
  (let (%2450 (Constant 0))
  (let (%2451 (Gather %2449 %2450 0))
  (let (%2452 (Shape %2448))
  (let (%2453 (Constant 1))
  (let (%2454 (Gather %2452 %2453 0))
  (let (%2456 (Unsqueeze %2451 (vec 0)))
  (let (%2457 (Unsqueeze %2454 (vec 0)))
  (let (%2459 (Concat %2456 %2457 %3134 0))
  (let (%2460 (Reshape %2448 %2459))
  (let (%2462 (MatMul %2460 %3135))
  (let (%2463 (Add %2462 bert.encoder.layer.17.attention.output.dense.bias))
  (let (%2464 (Add %2463 %2387))
  (let (%2466 (ReduceMean %2464 (vec -1) 1))
  (let (%2467 (Sub %2464 %2466))
  (let (%2468 (Cast_FLOAT %2467))
  (let (%2470 (Pow %2468 %3136))
  (let (%2471 (ReduceMean %2470 (vec -1) 1))
  (let (%2472 (Constant 9.999999960041972e-13))
  (let (%2473 (Add %2471 %2472))
  (let (%2474 (Sqrt %2473))
  (let (%2475 (Div %2467 %2474))
  (let (%2476 (Mul %2475 bert.encoder.layer.17.attention.output.LayerNorm.weight))
  (let (%2477 (Add %2476 bert.encoder.layer.17.attention.output.LayerNorm.bias))
  (let (%2479 (MatMul %2477 %3137))
  (let (%2480 (Add %2479 bert.encoder.layer.17.intermediate.dense.bias))
  (let (%2481 (Constant 1.4142135381698608))
  (let (%2482 (Div %2480 %2481))
  (let (%2483 (Erf %2482))
  (let (%2484 (Constant 1.0))
  (let (%2485 (Add %2483 %2484))
  (let (%2486 (Mul %2480 %2485))
  (let (%2487 (Constant 0.5))
  (let (%2488 (Mul %2486 %2487))
  (let (%2490 (MatMul %2488 %3138))
  (let (%2491 (Add %2490 bert.encoder.layer.17.output.dense.bias))
  (let (%2492 (Add %2491 %2477))
  (let (%2494 (ReduceMean %2492 (vec -1) 1))
  (let (%2495 (Sub %2492 %2494))
  (let (%2496 (Cast_FLOAT %2495))
  (let (%2498 (Pow %2496 %3139))
  (let (%2499 (ReduceMean %2498 (vec -1) 1))
  (let (%2500 (Constant 9.999999960041972e-13))
  (let (%2501 (Add %2499 %2500))
  (let (%2502 (Sqrt %2501))
  (let (%2503 (Div %2495 %2502))
  (let (%2504 (Mul %2503 bert.encoder.layer.17.output.LayerNorm.weight))
  (let (%2505 (Add %2504 bert.encoder.layer.17.output.LayerNorm.bias))
  (let (%2507 (MatMul %2505 %3140))
  (let (%2508 (Add %2507 bert.encoder.layer.18.attention.self.query.bias))
  (let (%2510 (MatMul %2505 %3141))
  (let (%2511 (Add %2510 bert.encoder.layer.18.attention.self.key.bias))
  (let (%2513 (MatMul %2505 %3142))
  (let (%2514 (Add %2513 bert.encoder.layer.18.attention.self.value.bias))
  (let (%2515 (Shape %2508))
  (let (%2516 (Constant 0))
  (let (%2517 (Gather %2515 %2516 0))
  (let (%2518 (Shape %2508))
  (let (%2519 (Constant 1))
  (let (%2520 (Gather %2518 %2519 0))
  (let (%2523 (Unsqueeze %2517 (vec 0)))
  (let (%2524 (Unsqueeze %2520 (vec 0)))
  (let (%2527 (Concat %2523 %2524 %3143 %3144 0))
  (let (%2528 (Reshape %2508 %2527))
  (let (%2529 (Transpose %2528 (vec 0 2 1 3)))
  (let (%2530 (Shape %2511))
  (let (%2531 (Constant 0))
  (let (%2532 (Gather %2530 %2531 0))
  (let (%2533 (Shape %2511))
  (let (%2534 (Constant 1))
  (let (%2535 (Gather %2533 %2534 0))
  (let (%2538 (Unsqueeze %2532 (vec 0)))
  (let (%2539 (Unsqueeze %2535 (vec 0)))
  (let (%2542 (Concat %2538 %2539 %3145 %3146 0))
  (let (%2543 (Reshape %2511 %2542))
  (let (%2544 (Shape %2514))
  (let (%2545 (Constant 0))
  (let (%2546 (Gather %2544 %2545 0))
  (let (%2547 (Shape %2514))
  (let (%2548 (Constant 1))
  (let (%2549 (Gather %2547 %2548 0))
  (let (%2552 (Unsqueeze %2546 (vec 0)))
  (let (%2553 (Unsqueeze %2549 (vec 0)))
  (let (%2556 (Concat %2552 %2553 %3147 %3148 0))
  (let (%2557 (Reshape %2514 %2556))
  (let (%2558 (Transpose %2557 (vec 0 2 1 3)))
  (let (%2559 (Transpose %2543 (vec 0 2 3 1)))
  (let (%2560 (MatMul %2529 %2559))
  (let (%2561 (Constant 8.0))
  (let (%2562 (Div %2560 %2561))
  (let (%2563 (Add %2562 %353))
  (let (%2564 (Softmax %2563 3))
  (let (%2565 (MatMul %2564 %2558))
  (let (%2566 (Transpose %2565 (vec 0 2 1 3)))
  (let (%2567 (Shape %2566))
  (let (%2568 (Constant 0))
  (let (%2569 (Gather %2567 %2568 0))
  (let (%2570 (Shape %2566))
  (let (%2571 (Constant 1))
  (let (%2572 (Gather %2570 %2571 0))
  (let (%2574 (Unsqueeze %2569 (vec 0)))
  (let (%2575 (Unsqueeze %2572 (vec 0)))
  (let (%2577 (Concat %2574 %2575 %3149 0))
  (let (%2578 (Reshape %2566 %2577))
  (let (%2580 (MatMul %2578 %3150))
  (let (%2581 (Add %2580 bert.encoder.layer.18.attention.output.dense.bias))
  (let (%2582 (Add %2581 %2505))
  (let (%2584 (ReduceMean %2582 (vec -1) 1))
  (let (%2585 (Sub %2582 %2584))
  (let (%2586 (Cast_FLOAT %2585))
  (let (%2588 (Pow %2586 %3151))
  (let (%2589 (ReduceMean %2588 (vec -1) 1))
  (let (%2590 (Constant 9.999999960041972e-13))
  (let (%2591 (Add %2589 %2590))
  (let (%2592 (Sqrt %2591))
  (let (%2593 (Div %2585 %2592))
  (let (%2594 (Mul %2593 bert.encoder.layer.18.attention.output.LayerNorm.weight))
  (let (%2595 (Add %2594 bert.encoder.layer.18.attention.output.LayerNorm.bias))
  (let (%2597 (MatMul %2595 %3152))
  (let (%2598 (Add %2597 bert.encoder.layer.18.intermediate.dense.bias))
  (let (%2599 (Constant 1.4142135381698608))
  (let (%2600 (Div %2598 %2599))
  (let (%2601 (Erf %2600))
  (let (%2602 (Constant 1.0))
  (let (%2603 (Add %2601 %2602))
  (let (%2604 (Mul %2598 %2603))
  (let (%2605 (Constant 0.5))
  (let (%2606 (Mul %2604 %2605))
  (let (%2608 (MatMul %2606 %3153))
  (let (%2609 (Add %2608 bert.encoder.layer.18.output.dense.bias))
  (let (%2610 (Add %2609 %2595))
  (let (%2612 (ReduceMean %2610 (vec -1) 1))
  (let (%2613 (Sub %2610 %2612))
  (let (%2614 (Cast_FLOAT %2613))
  (let (%2616 (Pow %2614 %3154))
  (let (%2617 (ReduceMean %2616 (vec -1) 1))
  (let (%2618 (Constant 9.999999960041972e-13))
  (let (%2619 (Add %2617 %2618))
  (let (%2620 (Sqrt %2619))
  (let (%2621 (Div %2613 %2620))
  (let (%2622 (Mul %2621 bert.encoder.layer.18.output.LayerNorm.weight))
  (let (%2623 (Add %2622 bert.encoder.layer.18.output.LayerNorm.bias))
  (let (%2625 (MatMul %2623 %3155))
  (let (%2626 (Add %2625 bert.encoder.layer.19.attention.self.query.bias))
  (let (%2628 (MatMul %2623 %3156))
  (let (%2629 (Add %2628 bert.encoder.layer.19.attention.self.key.bias))
  (let (%2631 (MatMul %2623 %3157))
  (let (%2632 (Add %2631 bert.encoder.layer.19.attention.self.value.bias))
  (let (%2633 (Shape %2626))
  (let (%2634 (Constant 0))
  (let (%2635 (Gather %2633 %2634 0))
  (let (%2636 (Shape %2626))
  (let (%2637 (Constant 1))
  (let (%2638 (Gather %2636 %2637 0))
  (let (%2641 (Unsqueeze %2635 (vec 0)))
  (let (%2642 (Unsqueeze %2638 (vec 0)))
  (let (%2645 (Concat %2641 %2642 %3158 %3159 0))
  (let (%2646 (Reshape %2626 %2645))
  (let (%2647 (Transpose %2646 (vec 0 2 1 3)))
  (let (%2648 (Shape %2629))
  (let (%2649 (Constant 0))
  (let (%2650 (Gather %2648 %2649 0))
  (let (%2651 (Shape %2629))
  (let (%2652 (Constant 1))
  (let (%2653 (Gather %2651 %2652 0))
  (let (%2656 (Unsqueeze %2650 (vec 0)))
  (let (%2657 (Unsqueeze %2653 (vec 0)))
  (let (%2660 (Concat %2656 %2657 %3160 %3161 0))
  (let (%2661 (Reshape %2629 %2660))
  (let (%2662 (Shape %2632))
  (let (%2663 (Constant 0))
  (let (%2664 (Gather %2662 %2663 0))
  (let (%2665 (Shape %2632))
  (let (%2666 (Constant 1))
  (let (%2667 (Gather %2665 %2666 0))
  (let (%2670 (Unsqueeze %2664 (vec 0)))
  (let (%2671 (Unsqueeze %2667 (vec 0)))
  (let (%2674 (Concat %2670 %2671 %3162 %3163 0))
  (let (%2675 (Reshape %2632 %2674))
  (let (%2676 (Transpose %2675 (vec 0 2 1 3)))
  (let (%2677 (Transpose %2661 (vec 0 2 3 1)))
  (let (%2678 (MatMul %2647 %2677))
  (let (%2679 (Constant 8.0))
  (let (%2680 (Div %2678 %2679))
  (let (%2681 (Add %2680 %353))
  (let (%2682 (Softmax %2681 3))
  (let (%2683 (MatMul %2682 %2676))
  (let (%2684 (Transpose %2683 (vec 0 2 1 3)))
  (let (%2685 (Shape %2684))
  (let (%2686 (Constant 0))
  (let (%2687 (Gather %2685 %2686 0))
  (let (%2688 (Shape %2684))
  (let (%2689 (Constant 1))
  (let (%2690 (Gather %2688 %2689 0))
  (let (%2692 (Unsqueeze %2687 (vec 0)))
  (let (%2693 (Unsqueeze %2690 (vec 0)))
  (let (%2695 (Concat %2692 %2693 %3164 0))
  (let (%2696 (Reshape %2684 %2695))
  (let (%2698 (MatMul %2696 %3165))
  (let (%2699 (Add %2698 bert.encoder.layer.19.attention.output.dense.bias))
  (let (%2700 (Add %2699 %2623))
  (let (%2702 (ReduceMean %2700 (vec -1) 1))
  (let (%2703 (Sub %2700 %2702))
  (let (%2704 (Cast_FLOAT %2703))
  (let (%2706 (Pow %2704 %3166))
  (let (%2707 (ReduceMean %2706 (vec -1) 1))
  (let (%2708 (Constant 9.999999960041972e-13))
  (let (%2709 (Add %2707 %2708))
  (let (%2710 (Sqrt %2709))
  (let (%2711 (Div %2703 %2710))
  (let (%2712 (Mul %2711 bert.encoder.layer.19.attention.output.LayerNorm.weight))
  (let (%2713 (Add %2712 bert.encoder.layer.19.attention.output.LayerNorm.bias))
  (let (%2715 (MatMul %2713 %3167))
  (let (%2716 (Add %2715 bert.encoder.layer.19.intermediate.dense.bias))
  (let (%2717 (Constant 1.4142135381698608))
  (let (%2718 (Div %2716 %2717))
  (let (%2719 (Erf %2718))
  (let (%2720 (Constant 1.0))
  (let (%2721 (Add %2719 %2720))
  (let (%2722 (Mul %2716 %2721))
  (let (%2723 (Constant 0.5))
  (let (%2724 (Mul %2722 %2723))
  (let (%2726 (MatMul %2724 %3168))
  (let (%2727 (Add %2726 bert.encoder.layer.19.output.dense.bias))
  (let (%2728 (Add %2727 %2713))
  (let (%2730 (ReduceMean %2728 (vec -1) 1))
  (let (%2731 (Sub %2728 %2730))
  (let (%2732 (Cast_FLOAT %2731))
  (let (%2734 (Pow %2732 %3169))
  (let (%2735 (ReduceMean %2734 (vec -1) 1))
  (let (%2736 (Constant 9.999999960041972e-13))
  (let (%2737 (Add %2735 %2736))
  (let (%2738 (Sqrt %2737))
  (let (%2739 (Div %2731 %2738))
  (let (%2740 (Mul %2739 bert.encoder.layer.19.output.LayerNorm.weight))
  (let (%2741 (Add %2740 bert.encoder.layer.19.output.LayerNorm.bias))
  (let (%2743 (MatMul %2741 %3170))
  (let (%2744 (Add %2743 bert.encoder.layer.20.attention.self.query.bias))
  (let (%2746 (MatMul %2741 %3171))
  (let (%2747 (Add %2746 bert.encoder.layer.20.attention.self.key.bias))
  (let (%2749 (MatMul %2741 %3172))
  (let (%2750 (Add %2749 bert.encoder.layer.20.attention.self.value.bias))
  (let (%2751 (Shape %2744))
  (let (%2752 (Constant 0))
  (let (%2753 (Gather %2751 %2752 0))
  (let (%2754 (Shape %2744))
  (let (%2755 (Constant 1))
  (let (%2756 (Gather %2754 %2755 0))
  (let (%2759 (Unsqueeze %2753 (vec 0)))
  (let (%2760 (Unsqueeze %2756 (vec 0)))
  (let (%2763 (Concat %2759 %2760 %3173 %3174 0))
  (let (%2764 (Reshape %2744 %2763))
  (let (%2765 (Transpose %2764 (vec 0 2 1 3)))
  (let (%2766 (Shape %2747))
  (let (%2767 (Constant 0))
  (let (%2768 (Gather %2766 %2767 0))
  (let (%2769 (Shape %2747))
  (let (%2770 (Constant 1))
  (let (%2771 (Gather %2769 %2770 0))
  (let (%2774 (Unsqueeze %2768 (vec 0)))
  (let (%2775 (Unsqueeze %2771 (vec 0)))
  (let (%2778 (Concat %2774 %2775 %3175 %3176 0))
  (let (%2779 (Reshape %2747 %2778))
  (let (%2780 (Shape %2750))
  (let (%2781 (Constant 0))
  (let (%2782 (Gather %2780 %2781 0))
  (let (%2783 (Shape %2750))
  (let (%2784 (Constant 1))
  (let (%2785 (Gather %2783 %2784 0))
  (let (%2788 (Unsqueeze %2782 (vec 0)))
  (let (%2789 (Unsqueeze %2785 (vec 0)))
  (let (%2792 (Concat %2788 %2789 %3177 %3178 0))
  (let (%2793 (Reshape %2750 %2792))
  (let (%2794 (Transpose %2793 (vec 0 2 1 3)))
  (let (%2795 (Transpose %2779 (vec 0 2 3 1)))
  (let (%2796 (MatMul %2765 %2795))
  (let (%2797 (Constant 8.0))
  (let (%2798 (Div %2796 %2797))
  (let (%2799 (Add %2798 %353))
  (let (%2800 (Softmax %2799 3))
  (let (%2801 (MatMul %2800 %2794))
  (let (%2802 (Transpose %2801 (vec 0 2 1 3)))
  (let (%2803 (Shape %2802))
  (let (%2804 (Constant 0))
  (let (%2805 (Gather %2803 %2804 0))
  (let (%2806 (Shape %2802))
  (let (%2807 (Constant 1))
  (let (%2808 (Gather %2806 %2807 0))
  (let (%2810 (Unsqueeze %2805 (vec 0)))
  (let (%2811 (Unsqueeze %2808 (vec 0)))
  (let (%2813 (Concat %2810 %2811 %3179 0))
  (let (%2814 (Reshape %2802 %2813))
  (let (%2816 (MatMul %2814 %3180))
  (let (%2817 (Add %2816 bert.encoder.layer.20.attention.output.dense.bias))
  (let (%2818 (Add %2817 %2741))
  (let (%2820 (ReduceMean %2818 (vec -1) 1))
  (let (%2821 (Sub %2818 %2820))
  (let (%2822 (Cast_FLOAT %2821))
  (let (%2824 (Pow %2822 %3181))
  (let (%2825 (ReduceMean %2824 (vec -1) 1))
  (let (%2826 (Constant 9.999999960041972e-13))
  (let (%2827 (Add %2825 %2826))
  (let (%2828 (Sqrt %2827))
  (let (%2829 (Div %2821 %2828))
  (let (%2830 (Mul %2829 bert.encoder.layer.20.attention.output.LayerNorm.weight))
  (let (%2831 (Add %2830 bert.encoder.layer.20.attention.output.LayerNorm.bias))
  (let (%2833 (MatMul %2831 %3182))
  (let (%2834 (Add %2833 bert.encoder.layer.20.intermediate.dense.bias))
  (let (%2835 (Constant 1.4142135381698608))
  (let (%2836 (Div %2834 %2835))
  (let (%2837 (Erf %2836))
  (let (%2838 (Constant 1.0))
  (let (%2839 (Add %2837 %2838))
  (let (%2840 (Mul %2834 %2839))
  (let (%2841 (Constant 0.5))
  (let (%2842 (Mul %2840 %2841))
  (let (%2844 (MatMul %2842 %3183))
  (let (%2845 (Add %2844 bert.encoder.layer.20.output.dense.bias))
  (let (%2846 (Add %2845 %2831))
  (let (%2848 (ReduceMean %2846 (vec -1) 1))
  (let (%2849 (Sub %2846 %2848))
  (let (%2850 (Cast_FLOAT %2849))
  (let (%2852 (Pow %2850 %3184))
  (let (%2853 (ReduceMean %2852 (vec -1) 1))
  (let (%2854 (Constant 9.999999960041972e-13))
  (let (%2855 (Add %2853 %2854))
  (let (%2856 (Sqrt %2855))
  (let (%2857 (Div %2849 %2856))
  (let (%2858 (Mul %2857 bert.encoder.layer.20.output.LayerNorm.weight))
  (let (%2859 (Add %2858 bert.encoder.layer.20.output.LayerNorm.bias))
  (let (%2861 (MatMul %2859 %3185))
  (let (%2862 (Add %2861 qa_outputs.bias))
  (let ((%2863 %2864) (Split %2862 (vec 1 1) -1))
  (let (output_0 (Squeeze %2863 (vec -1)))
  (let (output_1 (Squeeze %2864 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

