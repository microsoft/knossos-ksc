;; AUTOGENERATED FROM obj/hf-bert-to-onnx/bert7.onnx
(def torch-jit-export
     None
     ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (let (%1000 (vec 64))
  (let (%1001 (vec 12))
  (let (%1002 (vec 64))
  (let (%1003 (vec 768))
  (let (%1004 (load-from-onnx-float32 768 768 "%1004"))
  (let (%1005 2.0)
  (let (%1006 (load-from-onnx-float32 768 3072 "%1006"))
  (let (%1007 (load-from-onnx-float32 3072 768 "%1007"))
  (let (%1008 2.0)
  (let (%1009 (load-from-onnx-float32 768 768 "%1009"))
  (let (%1010 (load-from-onnx-float32 768 768 "%1010"))
  (let (%1011 (load-from-onnx-float32 768 768 "%1011"))
  (let (%1012 (vec 12))
  (let (%1013 (vec 64))
  (let (%1014 (vec 12))
  (let (%1015 (vec 64))
  (let (%1016 (vec 12))
  (let (%1017 (vec 64))
  (let (%1018 (vec 768))
  (let (%1019 (load-from-onnx-float32 768 768 "%1019"))
  (let (%1020 2.0)
  (let (%1021 (load-from-onnx-float32 768 3072 "%1021"))
  (let (%1022 (load-from-onnx-float32 3072 768 "%1022"))
  (let (%1023 2.0)
  (let (%1024 (load-from-onnx-float32 768 768 "%1024"))
  (let (%1025 (load-from-onnx-float32 768 768 "%1025"))
  (let (%1026 (load-from-onnx-float32 768 768 "%1026"))
  (let (%1027 (vec 12))
  (let (%1028 (vec 64))
  (let (%1029 (vec 12))
  (let (%1030 (vec 64))
  (let (%1031 (vec 12))
  (let (%1032 (vec 64))
  (let (%1033 (vec 768))
  (let (%1034 (load-from-onnx-float32 768 768 "%1034"))
  (let (%1035 2.0)
  (let (%1036 (load-from-onnx-float32 768 3072 "%1036"))
  (let (%1037 (load-from-onnx-float32 3072 768 "%1037"))
  (let (%1038 2.0)
  (let (%1039 (load-from-onnx-float32 768 768 "%1039"))
  (let (%1040 (load-from-onnx-float32 768 768 "%1040"))
  (let (%1041 (load-from-onnx-float32 768 768 "%1041"))
  (let (%1042 (vec 12))
  (let (%1043 (vec 64))
  (let (%1044 (vec 12))
  (let (%1045 (vec 64))
  (let (%1046 (vec 12))
  (let (%1047 (vec 64))
  (let (%1048 (vec 768))
  (let (%1049 (load-from-onnx-float32 768 768 "%1049"))
  (let (%1050 2.0)
  (let (%1051 (load-from-onnx-float32 768 3072 "%1051"))
  (let (%1052 (load-from-onnx-float32 3072 768 "%1052"))
  (let (%1053 2.0)
  (let (%1054 (load-from-onnx-float32 768 768 "%1054"))
  (let (%1055 (load-from-onnx-float32 768 768 "%1055"))
  (let (%1056 (load-from-onnx-float32 768 768 "%1056"))
  (let (%1057 (vec 12))
  (let (%1058 (vec 64))
  (let (%1059 (vec 12))
  (let (%1060 (vec 64))
  (let (%1061 (vec 12))
  (let (%1062 (vec 64))
  (let (%1063 (vec 768))
  (let (%1064 (load-from-onnx-float32 768 768 "%1064"))
  (let (%1065 2.0)
  (let (%1066 (load-from-onnx-float32 768 3072 "%1066"))
  (let (%1067 (load-from-onnx-float32 3072 768 "%1067"))
  (let (%1068 2.0)
  (let (%1069 (load-from-onnx-float32 768 768 "%1069"))
  (let (%1070 (load-from-onnx-float32 768 768 "%1070"))
  (let (%1071 (load-from-onnx-float32 768 768 "%1071"))
  (let (%1072 (vec 12))
  (let (%1073 (vec 64))
  (let (%1074 (vec 12))
  (let (%1075 (vec 64))
  (let (%1076 (vec 12))
  (let (%1077 (vec 64))
  (let (%1078 (vec 768))
  (let (%1079 (load-from-onnx-float32 768 768 "%1079"))
  (let (%1080 2.0)
  (let (%1081 (load-from-onnx-float32 768 3072 "%1081"))
  (let (%1082 (load-from-onnx-float32 3072 768 "%1082"))
  (let (%1083 2.0)
  (let (%1084 (load-from-onnx-float32 768 768 "%1084"))
  (let (%1085 (load-from-onnx-float32 768 768 "%1085"))
  (let (%1086 (load-from-onnx-float32 768 768 "%1086"))
  (let (%1087 (vec 12))
  (let (%1088 (vec 64))
  (let (%1089 (vec 12))
  (let (%1090 (vec 64))
  (let (%1091 (vec 12))
  (let (%1092 (vec 64))
  (let (%1093 (vec 768))
  (let (%1094 (load-from-onnx-float32 768 768 "%1094"))
  (let (%1095 2.0)
  (let (%1096 (load-from-onnx-float32 768 3072 "%1096"))
  (let (%1097 (load-from-onnx-float32 3072 768 "%1097"))
  (let (%1098 2.0)
  (let (%1099 (load-from-onnx-float32 768 2 "%1099"))
  (let (%991 (vec 0))
  (let (%992 (vec 1))
  (let (%993 2.0)
  (let (%994 (load-from-onnx-float32 768 768 "%994"))
  (let (%995 (load-from-onnx-float32 768 768 "%995"))
  (let (%996 (load-from-onnx-float32 768 768 "%996"))
  (let (%997 (vec 12))
  (let (%998 (vec 64))
  (let (%999 (vec 12))
  (let (bert.embeddings.LayerNorm.bias (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.bias"))
  (let (bert.embeddings.LayerNorm.weight (load-from-onnx-float32 768 "bert.embeddings.LayerNorm.weight"))
  (let (bert.embeddings.position_embeddings.weight (load-from-onnx-float32 512 768 "bert.embeddings.position_embeddings.weight"))
  (let (bert.embeddings.position_ids (load-from-onnx-int64 1 512 "bert.embeddings.position_ids"))
  (let (bert.embeddings.token_type_embeddings.weight (load-from-onnx-float32 2 768 "bert.embeddings.token_type_embeddings.weight"))
  (let (bert.embeddings.word_embeddings.weight (load-from-onnx-float32 30522 768 "bert.embeddings.word_embeddings.weight"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.output.dense.bias"))
  (let (bert.encoder.layer.0.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.key.bias"))
  (let (bert.encoder.layer.0.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.query.bias"))
  (let (bert.encoder.layer.0.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.attention.self.value.bias"))
  (let (bert.encoder.layer.0.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.0.intermediate.dense.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.bias"))
  (let (bert.encoder.layer.0.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.0.output.LayerNorm.weight"))
  (let (bert.encoder.layer.0.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.0.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.output.dense.bias"))
  (let (bert.encoder.layer.1.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.key.bias"))
  (let (bert.encoder.layer.1.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.query.bias"))
  (let (bert.encoder.layer.1.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.attention.self.value.bias"))
  (let (bert.encoder.layer.1.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.1.intermediate.dense.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.bias"))
  (let (bert.encoder.layer.1.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.1.output.LayerNorm.weight"))
  (let (bert.encoder.layer.1.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.1.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.output.dense.bias"))
  (let (bert.encoder.layer.2.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.key.bias"))
  (let (bert.encoder.layer.2.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.query.bias"))
  (let (bert.encoder.layer.2.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.attention.self.value.bias"))
  (let (bert.encoder.layer.2.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.2.intermediate.dense.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.bias"))
  (let (bert.encoder.layer.2.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.2.output.LayerNorm.weight"))
  (let (bert.encoder.layer.2.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.2.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.output.dense.bias"))
  (let (bert.encoder.layer.3.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.key.bias"))
  (let (bert.encoder.layer.3.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.query.bias"))
  (let (bert.encoder.layer.3.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.attention.self.value.bias"))
  (let (bert.encoder.layer.3.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.3.intermediate.dense.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.bias"))
  (let (bert.encoder.layer.3.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.3.output.LayerNorm.weight"))
  (let (bert.encoder.layer.3.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.3.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.output.dense.bias"))
  (let (bert.encoder.layer.4.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.key.bias"))
  (let (bert.encoder.layer.4.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.query.bias"))
  (let (bert.encoder.layer.4.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.attention.self.value.bias"))
  (let (bert.encoder.layer.4.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.4.intermediate.dense.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.bias"))
  (let (bert.encoder.layer.4.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.4.output.LayerNorm.weight"))
  (let (bert.encoder.layer.4.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.4.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.output.dense.bias"))
  (let (bert.encoder.layer.5.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.key.bias"))
  (let (bert.encoder.layer.5.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.query.bias"))
  (let (bert.encoder.layer.5.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.attention.self.value.bias"))
  (let (bert.encoder.layer.5.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.5.intermediate.dense.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.bias"))
  (let (bert.encoder.layer.5.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.5.output.LayerNorm.weight"))
  (let (bert.encoder.layer.5.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.5.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.attention.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.attention.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.output.dense.bias"))
  (let (bert.encoder.layer.6.attention.self.key.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.key.bias"))
  (let (bert.encoder.layer.6.attention.self.query.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.query.bias"))
  (let (bert.encoder.layer.6.attention.self.value.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.attention.self.value.bias"))
  (let (bert.encoder.layer.6.intermediate.dense.bias (load-from-onnx-float32 3072 "bert.encoder.layer.6.intermediate.dense.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.bias"))
  (let (bert.encoder.layer.6.output.LayerNorm.weight (load-from-onnx-float32 768 "bert.encoder.layer.6.output.LayerNorm.weight"))
  (let (bert.encoder.layer.6.output.dense.bias (load-from-onnx-float32 768 "bert.encoder.layer.6.output.dense.bias"))
  (let (qa_outputs.bias (vec 0.0 0.0))
  (let ($beg_of_internal_inits #|Begin of internal initializers|#  99999)
  (let ($end_of_inits #|End of initializers|#  99999)
  (let (%123 (Unsqueeze attention_mask (vec 1)))
  (let (%124 (Unsqueeze %123 (vec 2)))
  (let (%125 (Cast_FLOAT %124))
  (let (%126 (Constant 1.0))
  (let (%127 (Sub %126 %125))
  (let (%128 (Constant -10000.0))
  (let (%129 (Mul %127 %128))
  (let (%130 (Shape input_ids))
  (let (%131 (Constant 1))
  (let (%132 (Gather %130 %131 0))
  (let (%136 (Unsqueeze %132 (vec 0)))
  (let (%138 (Constant (vec 1)))
  (let (%139 (Slice bert.embeddings.position_ids %991 %136 %992 %138))
  (let (%140 (Gather bert.embeddings.word_embeddings.weight input_ids 0))
  (let (%141 (Gather bert.embeddings.position_embeddings.weight %139 0))
  (let (%142 (Gather bert.embeddings.token_type_embeddings.weight token_type_ids 0))
  (let (%143 (Add %140 %141))
  (let (%144 (Add %143 %142))
  (let (%146 (ReduceMean %144 (vec -1) 1))
  (let (%147 (Sub %144 %146))
  (let (%148 (Cast_FLOAT %147))
  (let (%150 (Pow %148 %993))
  (let (%151 (ReduceMean %150 (vec -1) 1))
  (let (%152 (Constant 9.999999960041972e-13))
  (let (%153 (Add %151 %152))
  (let (%154 (Sqrt %153))
  (let (%155 (Div %147 %154))
  (let (%156 (Mul %155 bert.embeddings.LayerNorm.weight))
  (let (%157 (Add %156 bert.embeddings.LayerNorm.bias))
  (let (%159 (MatMul %157 %994))
  (let (%160 (Add %159 bert.encoder.layer.0.attention.self.query.bias))
  (let (%162 (MatMul %157 %995))
  (let (%163 (Add %162 bert.encoder.layer.0.attention.self.key.bias))
  (let (%165 (MatMul %157 %996))
  (let (%166 (Add %165 bert.encoder.layer.0.attention.self.value.bias))
  (let (%167 (Shape %160))
  (let (%168 (Constant 0))
  (let (%169 (Gather %167 %168 0))
  (let (%170 (Shape %160))
  (let (%171 (Constant 1))
  (let (%172 (Gather %170 %171 0))
  (let (%175 (Unsqueeze %169 (vec 0)))
  (let (%176 (Unsqueeze %172 (vec 0)))
  (let (%179 (Concat %175 %176 %997 %998 0))
  (let (%180 (Reshape %160 %179))
  (let (%181 (Transpose %180 (vec 0 2 1 3)))
  (let (%182 (Shape %163))
  (let (%183 (Constant 0))
  (let (%184 (Gather %182 %183 0))
  (let (%185 (Shape %163))
  (let (%186 (Constant 1))
  (let (%187 (Gather %185 %186 0))
  (let (%190 (Unsqueeze %184 (vec 0)))
  (let (%191 (Unsqueeze %187 (vec 0)))
  (let (%194 (Concat %190 %191 %999 %1000 0))
  (let (%195 (Reshape %163 %194))
  (let (%196 (Shape %166))
  (let (%197 (Constant 0))
  (let (%198 (Gather %196 %197 0))
  (let (%199 (Shape %166))
  (let (%200 (Constant 1))
  (let (%201 (Gather %199 %200 0))
  (let (%204 (Unsqueeze %198 (vec 0)))
  (let (%205 (Unsqueeze %201 (vec 0)))
  (let (%208 (Concat %204 %205 %1001 %1002 0))
  (let (%209 (Reshape %166 %208))
  (let (%210 (Transpose %209 (vec 0 2 1 3)))
  (let (%211 (Transpose %195 (vec 0 2 3 1)))
  (let (%212 (MatMul %181 %211))
  (let (%213 (Constant 8.0))
  (let (%214 (Div %212 %213))
  (let (%215 (Add %214 %129))
  (let (%216 (Softmax %215 3))
  (let (%217 (MatMul %216 %210))
  (let (%218 (Transpose %217 (vec 0 2 1 3)))
  (let (%219 (Shape %218))
  (let (%220 (Constant 0))
  (let (%221 (Gather %219 %220 0))
  (let (%222 (Shape %218))
  (let (%223 (Constant 1))
  (let (%224 (Gather %222 %223 0))
  (let (%226 (Unsqueeze %221 (vec 0)))
  (let (%227 (Unsqueeze %224 (vec 0)))
  (let (%229 (Concat %226 %227 %1003 0))
  (let (%230 (Reshape %218 %229))
  (let (%232 (MatMul %230 %1004))
  (let (%233 (Add %232 bert.encoder.layer.0.attention.output.dense.bias))
  (let (%234 (Add %233 %157))
  (let (%236 (ReduceMean %234 (vec -1) 1))
  (let (%237 (Sub %234 %236))
  (let (%238 (Cast_FLOAT %237))
  (let (%240 (Pow %238 %1005))
  (let (%241 (ReduceMean %240 (vec -1) 1))
  (let (%242 (Constant 9.999999960041972e-13))
  (let (%243 (Add %241 %242))
  (let (%244 (Sqrt %243))
  (let (%245 (Div %237 %244))
  (let (%246 (Mul %245 bert.encoder.layer.0.attention.output.LayerNorm.weight))
  (let (%247 (Add %246 bert.encoder.layer.0.attention.output.LayerNorm.bias))
  (let (%249 (MatMul %247 %1006))
  (let (%250 (Add %249 bert.encoder.layer.0.intermediate.dense.bias))
  (let (%251 (Constant 1.4142135381698608))
  (let (%252 (Div %250 %251))
  (let (%253 (Erf %252))
  (let (%254 (Constant 1.0))
  (let (%255 (Add %253 %254))
  (let (%256 (Mul %250 %255))
  (let (%257 (Constant 0.5))
  (let (%258 (Mul %256 %257))
  (let (%260 (MatMul %258 %1007))
  (let (%261 (Add %260 bert.encoder.layer.0.output.dense.bias))
  (let (%262 (Add %261 %247))
  (let (%264 (ReduceMean %262 (vec -1) 1))
  (let (%265 (Sub %262 %264))
  (let (%266 (Cast_FLOAT %265))
  (let (%268 (Pow %266 %1008))
  (let (%269 (ReduceMean %268 (vec -1) 1))
  (let (%270 (Constant 9.999999960041972e-13))
  (let (%271 (Add %269 %270))
  (let (%272 (Sqrt %271))
  (let (%273 (Div %265 %272))
  (let (%274 (Mul %273 bert.encoder.layer.0.output.LayerNorm.weight))
  (let (%275 (Add %274 bert.encoder.layer.0.output.LayerNorm.bias))
  (let (%277 (MatMul %275 %1009))
  (let (%278 (Add %277 bert.encoder.layer.1.attention.self.query.bias))
  (let (%280 (MatMul %275 %1010))
  (let (%281 (Add %280 bert.encoder.layer.1.attention.self.key.bias))
  (let (%283 (MatMul %275 %1011))
  (let (%284 (Add %283 bert.encoder.layer.1.attention.self.value.bias))
  (let (%285 (Shape %278))
  (let (%286 (Constant 0))
  (let (%287 (Gather %285 %286 0))
  (let (%288 (Shape %278))
  (let (%289 (Constant 1))
  (let (%290 (Gather %288 %289 0))
  (let (%293 (Unsqueeze %287 (vec 0)))
  (let (%294 (Unsqueeze %290 (vec 0)))
  (let (%297 (Concat %293 %294 %1012 %1013 0))
  (let (%298 (Reshape %278 %297))
  (let (%299 (Transpose %298 (vec 0 2 1 3)))
  (let (%300 (Shape %281))
  (let (%301 (Constant 0))
  (let (%302 (Gather %300 %301 0))
  (let (%303 (Shape %281))
  (let (%304 (Constant 1))
  (let (%305 (Gather %303 %304 0))
  (let (%308 (Unsqueeze %302 (vec 0)))
  (let (%309 (Unsqueeze %305 (vec 0)))
  (let (%312 (Concat %308 %309 %1014 %1015 0))
  (let (%313 (Reshape %281 %312))
  (let (%314 (Shape %284))
  (let (%315 (Constant 0))
  (let (%316 (Gather %314 %315 0))
  (let (%317 (Shape %284))
  (let (%318 (Constant 1))
  (let (%319 (Gather %317 %318 0))
  (let (%322 (Unsqueeze %316 (vec 0)))
  (let (%323 (Unsqueeze %319 (vec 0)))
  (let (%326 (Concat %322 %323 %1016 %1017 0))
  (let (%327 (Reshape %284 %326))
  (let (%328 (Transpose %327 (vec 0 2 1 3)))
  (let (%329 (Transpose %313 (vec 0 2 3 1)))
  (let (%330 (MatMul %299 %329))
  (let (%331 (Constant 8.0))
  (let (%332 (Div %330 %331))
  (let (%333 (Add %332 %129))
  (let (%334 (Softmax %333 3))
  (let (%335 (MatMul %334 %328))
  (let (%336 (Transpose %335 (vec 0 2 1 3)))
  (let (%337 (Shape %336))
  (let (%338 (Constant 0))
  (let (%339 (Gather %337 %338 0))
  (let (%340 (Shape %336))
  (let (%341 (Constant 1))
  (let (%342 (Gather %340 %341 0))
  (let (%344 (Unsqueeze %339 (vec 0)))
  (let (%345 (Unsqueeze %342 (vec 0)))
  (let (%347 (Concat %344 %345 %1018 0))
  (let (%348 (Reshape %336 %347))
  (let (%350 (MatMul %348 %1019))
  (let (%351 (Add %350 bert.encoder.layer.1.attention.output.dense.bias))
  (let (%352 (Add %351 %275))
  (let (%354 (ReduceMean %352 (vec -1) 1))
  (let (%355 (Sub %352 %354))
  (let (%356 (Cast_FLOAT %355))
  (let (%358 (Pow %356 %1020))
  (let (%359 (ReduceMean %358 (vec -1) 1))
  (let (%360 (Constant 9.999999960041972e-13))
  (let (%361 (Add %359 %360))
  (let (%362 (Sqrt %361))
  (let (%363 (Div %355 %362))
  (let (%364 (Mul %363 bert.encoder.layer.1.attention.output.LayerNorm.weight))
  (let (%365 (Add %364 bert.encoder.layer.1.attention.output.LayerNorm.bias))
  (let (%367 (MatMul %365 %1021))
  (let (%368 (Add %367 bert.encoder.layer.1.intermediate.dense.bias))
  (let (%369 (Constant 1.4142135381698608))
  (let (%370 (Div %368 %369))
  (let (%371 (Erf %370))
  (let (%372 (Constant 1.0))
  (let (%373 (Add %371 %372))
  (let (%374 (Mul %368 %373))
  (let (%375 (Constant 0.5))
  (let (%376 (Mul %374 %375))
  (let (%378 (MatMul %376 %1022))
  (let (%379 (Add %378 bert.encoder.layer.1.output.dense.bias))
  (let (%380 (Add %379 %365))
  (let (%382 (ReduceMean %380 (vec -1) 1))
  (let (%383 (Sub %380 %382))
  (let (%384 (Cast_FLOAT %383))
  (let (%386 (Pow %384 %1023))
  (let (%387 (ReduceMean %386 (vec -1) 1))
  (let (%388 (Constant 9.999999960041972e-13))
  (let (%389 (Add %387 %388))
  (let (%390 (Sqrt %389))
  (let (%391 (Div %383 %390))
  (let (%392 (Mul %391 bert.encoder.layer.1.output.LayerNorm.weight))
  (let (%393 (Add %392 bert.encoder.layer.1.output.LayerNorm.bias))
  (let (%395 (MatMul %393 %1024))
  (let (%396 (Add %395 bert.encoder.layer.2.attention.self.query.bias))
  (let (%398 (MatMul %393 %1025))
  (let (%399 (Add %398 bert.encoder.layer.2.attention.self.key.bias))
  (let (%401 (MatMul %393 %1026))
  (let (%402 (Add %401 bert.encoder.layer.2.attention.self.value.bias))
  (let (%403 (Shape %396))
  (let (%404 (Constant 0))
  (let (%405 (Gather %403 %404 0))
  (let (%406 (Shape %396))
  (let (%407 (Constant 1))
  (let (%408 (Gather %406 %407 0))
  (let (%411 (Unsqueeze %405 (vec 0)))
  (let (%412 (Unsqueeze %408 (vec 0)))
  (let (%415 (Concat %411 %412 %1027 %1028 0))
  (let (%416 (Reshape %396 %415))
  (let (%417 (Transpose %416 (vec 0 2 1 3)))
  (let (%418 (Shape %399))
  (let (%419 (Constant 0))
  (let (%420 (Gather %418 %419 0))
  (let (%421 (Shape %399))
  (let (%422 (Constant 1))
  (let (%423 (Gather %421 %422 0))
  (let (%426 (Unsqueeze %420 (vec 0)))
  (let (%427 (Unsqueeze %423 (vec 0)))
  (let (%430 (Concat %426 %427 %1029 %1030 0))
  (let (%431 (Reshape %399 %430))
  (let (%432 (Shape %402))
  (let (%433 (Constant 0))
  (let (%434 (Gather %432 %433 0))
  (let (%435 (Shape %402))
  (let (%436 (Constant 1))
  (let (%437 (Gather %435 %436 0))
  (let (%440 (Unsqueeze %434 (vec 0)))
  (let (%441 (Unsqueeze %437 (vec 0)))
  (let (%444 (Concat %440 %441 %1031 %1032 0))
  (let (%445 (Reshape %402 %444))
  (let (%446 (Transpose %445 (vec 0 2 1 3)))
  (let (%447 (Transpose %431 (vec 0 2 3 1)))
  (let (%448 (MatMul %417 %447))
  (let (%449 (Constant 8.0))
  (let (%450 (Div %448 %449))
  (let (%451 (Add %450 %129))
  (let (%452 (Softmax %451 3))
  (let (%453 (MatMul %452 %446))
  (let (%454 (Transpose %453 (vec 0 2 1 3)))
  (let (%455 (Shape %454))
  (let (%456 (Constant 0))
  (let (%457 (Gather %455 %456 0))
  (let (%458 (Shape %454))
  (let (%459 (Constant 1))
  (let (%460 (Gather %458 %459 0))
  (let (%462 (Unsqueeze %457 (vec 0)))
  (let (%463 (Unsqueeze %460 (vec 0)))
  (let (%465 (Concat %462 %463 %1033 0))
  (let (%466 (Reshape %454 %465))
  (let (%468 (MatMul %466 %1034))
  (let (%469 (Add %468 bert.encoder.layer.2.attention.output.dense.bias))
  (let (%470 (Add %469 %393))
  (let (%472 (ReduceMean %470 (vec -1) 1))
  (let (%473 (Sub %470 %472))
  (let (%474 (Cast_FLOAT %473))
  (let (%476 (Pow %474 %1035))
  (let (%477 (ReduceMean %476 (vec -1) 1))
  (let (%478 (Constant 9.999999960041972e-13))
  (let (%479 (Add %477 %478))
  (let (%480 (Sqrt %479))
  (let (%481 (Div %473 %480))
  (let (%482 (Mul %481 bert.encoder.layer.2.attention.output.LayerNorm.weight))
  (let (%483 (Add %482 bert.encoder.layer.2.attention.output.LayerNorm.bias))
  (let (%485 (MatMul %483 %1036))
  (let (%486 (Add %485 bert.encoder.layer.2.intermediate.dense.bias))
  (let (%487 (Constant 1.4142135381698608))
  (let (%488 (Div %486 %487))
  (let (%489 (Erf %488))
  (let (%490 (Constant 1.0))
  (let (%491 (Add %489 %490))
  (let (%492 (Mul %486 %491))
  (let (%493 (Constant 0.5))
  (let (%494 (Mul %492 %493))
  (let (%496 (MatMul %494 %1037))
  (let (%497 (Add %496 bert.encoder.layer.2.output.dense.bias))
  (let (%498 (Add %497 %483))
  (let (%500 (ReduceMean %498 (vec -1) 1))
  (let (%501 (Sub %498 %500))
  (let (%502 (Cast_FLOAT %501))
  (let (%504 (Pow %502 %1038))
  (let (%505 (ReduceMean %504 (vec -1) 1))
  (let (%506 (Constant 9.999999960041972e-13))
  (let (%507 (Add %505 %506))
  (let (%508 (Sqrt %507))
  (let (%509 (Div %501 %508))
  (let (%510 (Mul %509 bert.encoder.layer.2.output.LayerNorm.weight))
  (let (%511 (Add %510 bert.encoder.layer.2.output.LayerNorm.bias))
  (let (%513 (MatMul %511 %1039))
  (let (%514 (Add %513 bert.encoder.layer.3.attention.self.query.bias))
  (let (%516 (MatMul %511 %1040))
  (let (%517 (Add %516 bert.encoder.layer.3.attention.self.key.bias))
  (let (%519 (MatMul %511 %1041))
  (let (%520 (Add %519 bert.encoder.layer.3.attention.self.value.bias))
  (let (%521 (Shape %514))
  (let (%522 (Constant 0))
  (let (%523 (Gather %521 %522 0))
  (let (%524 (Shape %514))
  (let (%525 (Constant 1))
  (let (%526 (Gather %524 %525 0))
  (let (%529 (Unsqueeze %523 (vec 0)))
  (let (%530 (Unsqueeze %526 (vec 0)))
  (let (%533 (Concat %529 %530 %1042 %1043 0))
  (let (%534 (Reshape %514 %533))
  (let (%535 (Transpose %534 (vec 0 2 1 3)))
  (let (%536 (Shape %517))
  (let (%537 (Constant 0))
  (let (%538 (Gather %536 %537 0))
  (let (%539 (Shape %517))
  (let (%540 (Constant 1))
  (let (%541 (Gather %539 %540 0))
  (let (%544 (Unsqueeze %538 (vec 0)))
  (let (%545 (Unsqueeze %541 (vec 0)))
  (let (%548 (Concat %544 %545 %1044 %1045 0))
  (let (%549 (Reshape %517 %548))
  (let (%550 (Shape %520))
  (let (%551 (Constant 0))
  (let (%552 (Gather %550 %551 0))
  (let (%553 (Shape %520))
  (let (%554 (Constant 1))
  (let (%555 (Gather %553 %554 0))
  (let (%558 (Unsqueeze %552 (vec 0)))
  (let (%559 (Unsqueeze %555 (vec 0)))
  (let (%562 (Concat %558 %559 %1046 %1047 0))
  (let (%563 (Reshape %520 %562))
  (let (%564 (Transpose %563 (vec 0 2 1 3)))
  (let (%565 (Transpose %549 (vec 0 2 3 1)))
  (let (%566 (MatMul %535 %565))
  (let (%567 (Constant 8.0))
  (let (%568 (Div %566 %567))
  (let (%569 (Add %568 %129))
  (let (%570 (Softmax %569 3))
  (let (%571 (MatMul %570 %564))
  (let (%572 (Transpose %571 (vec 0 2 1 3)))
  (let (%573 (Shape %572))
  (let (%574 (Constant 0))
  (let (%575 (Gather %573 %574 0))
  (let (%576 (Shape %572))
  (let (%577 (Constant 1))
  (let (%578 (Gather %576 %577 0))
  (let (%580 (Unsqueeze %575 (vec 0)))
  (let (%581 (Unsqueeze %578 (vec 0)))
  (let (%583 (Concat %580 %581 %1048 0))
  (let (%584 (Reshape %572 %583))
  (let (%586 (MatMul %584 %1049))
  (let (%587 (Add %586 bert.encoder.layer.3.attention.output.dense.bias))
  (let (%588 (Add %587 %511))
  (let (%590 (ReduceMean %588 (vec -1) 1))
  (let (%591 (Sub %588 %590))
  (let (%592 (Cast_FLOAT %591))
  (let (%594 (Pow %592 %1050))
  (let (%595 (ReduceMean %594 (vec -1) 1))
  (let (%596 (Constant 9.999999960041972e-13))
  (let (%597 (Add %595 %596))
  (let (%598 (Sqrt %597))
  (let (%599 (Div %591 %598))
  (let (%600 (Mul %599 bert.encoder.layer.3.attention.output.LayerNorm.weight))
  (let (%601 (Add %600 bert.encoder.layer.3.attention.output.LayerNorm.bias))
  (let (%603 (MatMul %601 %1051))
  (let (%604 (Add %603 bert.encoder.layer.3.intermediate.dense.bias))
  (let (%605 (Constant 1.4142135381698608))
  (let (%606 (Div %604 %605))
  (let (%607 (Erf %606))
  (let (%608 (Constant 1.0))
  (let (%609 (Add %607 %608))
  (let (%610 (Mul %604 %609))
  (let (%611 (Constant 0.5))
  (let (%612 (Mul %610 %611))
  (let (%614 (MatMul %612 %1052))
  (let (%615 (Add %614 bert.encoder.layer.3.output.dense.bias))
  (let (%616 (Add %615 %601))
  (let (%618 (ReduceMean %616 (vec -1) 1))
  (let (%619 (Sub %616 %618))
  (let (%620 (Cast_FLOAT %619))
  (let (%622 (Pow %620 %1053))
  (let (%623 (ReduceMean %622 (vec -1) 1))
  (let (%624 (Constant 9.999999960041972e-13))
  (let (%625 (Add %623 %624))
  (let (%626 (Sqrt %625))
  (let (%627 (Div %619 %626))
  (let (%628 (Mul %627 bert.encoder.layer.3.output.LayerNorm.weight))
  (let (%629 (Add %628 bert.encoder.layer.3.output.LayerNorm.bias))
  (let (%631 (MatMul %629 %1054))
  (let (%632 (Add %631 bert.encoder.layer.4.attention.self.query.bias))
  (let (%634 (MatMul %629 %1055))
  (let (%635 (Add %634 bert.encoder.layer.4.attention.self.key.bias))
  (let (%637 (MatMul %629 %1056))
  (let (%638 (Add %637 bert.encoder.layer.4.attention.self.value.bias))
  (let (%639 (Shape %632))
  (let (%640 (Constant 0))
  (let (%641 (Gather %639 %640 0))
  (let (%642 (Shape %632))
  (let (%643 (Constant 1))
  (let (%644 (Gather %642 %643 0))
  (let (%647 (Unsqueeze %641 (vec 0)))
  (let (%648 (Unsqueeze %644 (vec 0)))
  (let (%651 (Concat %647 %648 %1057 %1058 0))
  (let (%652 (Reshape %632 %651))
  (let (%653 (Transpose %652 (vec 0 2 1 3)))
  (let (%654 (Shape %635))
  (let (%655 (Constant 0))
  (let (%656 (Gather %654 %655 0))
  (let (%657 (Shape %635))
  (let (%658 (Constant 1))
  (let (%659 (Gather %657 %658 0))
  (let (%662 (Unsqueeze %656 (vec 0)))
  (let (%663 (Unsqueeze %659 (vec 0)))
  (let (%666 (Concat %662 %663 %1059 %1060 0))
  (let (%667 (Reshape %635 %666))
  (let (%668 (Shape %638))
  (let (%669 (Constant 0))
  (let (%670 (Gather %668 %669 0))
  (let (%671 (Shape %638))
  (let (%672 (Constant 1))
  (let (%673 (Gather %671 %672 0))
  (let (%676 (Unsqueeze %670 (vec 0)))
  (let (%677 (Unsqueeze %673 (vec 0)))
  (let (%680 (Concat %676 %677 %1061 %1062 0))
  (let (%681 (Reshape %638 %680))
  (let (%682 (Transpose %681 (vec 0 2 1 3)))
  (let (%683 (Transpose %667 (vec 0 2 3 1)))
  (let (%684 (MatMul %653 %683))
  (let (%685 (Constant 8.0))
  (let (%686 (Div %684 %685))
  (let (%687 (Add %686 %129))
  (let (%688 (Softmax %687 3))
  (let (%689 (MatMul %688 %682))
  (let (%690 (Transpose %689 (vec 0 2 1 3)))
  (let (%691 (Shape %690))
  (let (%692 (Constant 0))
  (let (%693 (Gather %691 %692 0))
  (let (%694 (Shape %690))
  (let (%695 (Constant 1))
  (let (%696 (Gather %694 %695 0))
  (let (%698 (Unsqueeze %693 (vec 0)))
  (let (%699 (Unsqueeze %696 (vec 0)))
  (let (%701 (Concat %698 %699 %1063 0))
  (let (%702 (Reshape %690 %701))
  (let (%704 (MatMul %702 %1064))
  (let (%705 (Add %704 bert.encoder.layer.4.attention.output.dense.bias))
  (let (%706 (Add %705 %629))
  (let (%708 (ReduceMean %706 (vec -1) 1))
  (let (%709 (Sub %706 %708))
  (let (%710 (Cast_FLOAT %709))
  (let (%712 (Pow %710 %1065))
  (let (%713 (ReduceMean %712 (vec -1) 1))
  (let (%714 (Constant 9.999999960041972e-13))
  (let (%715 (Add %713 %714))
  (let (%716 (Sqrt %715))
  (let (%717 (Div %709 %716))
  (let (%718 (Mul %717 bert.encoder.layer.4.attention.output.LayerNorm.weight))
  (let (%719 (Add %718 bert.encoder.layer.4.attention.output.LayerNorm.bias))
  (let (%721 (MatMul %719 %1066))
  (let (%722 (Add %721 bert.encoder.layer.4.intermediate.dense.bias))
  (let (%723 (Constant 1.4142135381698608))
  (let (%724 (Div %722 %723))
  (let (%725 (Erf %724))
  (let (%726 (Constant 1.0))
  (let (%727 (Add %725 %726))
  (let (%728 (Mul %722 %727))
  (let (%729 (Constant 0.5))
  (let (%730 (Mul %728 %729))
  (let (%732 (MatMul %730 %1067))
  (let (%733 (Add %732 bert.encoder.layer.4.output.dense.bias))
  (let (%734 (Add %733 %719))
  (let (%736 (ReduceMean %734 (vec -1) 1))
  (let (%737 (Sub %734 %736))
  (let (%738 (Cast_FLOAT %737))
  (let (%740 (Pow %738 %1068))
  (let (%741 (ReduceMean %740 (vec -1) 1))
  (let (%742 (Constant 9.999999960041972e-13))
  (let (%743 (Add %741 %742))
  (let (%744 (Sqrt %743))
  (let (%745 (Div %737 %744))
  (let (%746 (Mul %745 bert.encoder.layer.4.output.LayerNorm.weight))
  (let (%747 (Add %746 bert.encoder.layer.4.output.LayerNorm.bias))
  (let (%749 (MatMul %747 %1069))
  (let (%750 (Add %749 bert.encoder.layer.5.attention.self.query.bias))
  (let (%752 (MatMul %747 %1070))
  (let (%753 (Add %752 bert.encoder.layer.5.attention.self.key.bias))
  (let (%755 (MatMul %747 %1071))
  (let (%756 (Add %755 bert.encoder.layer.5.attention.self.value.bias))
  (let (%757 (Shape %750))
  (let (%758 (Constant 0))
  (let (%759 (Gather %757 %758 0))
  (let (%760 (Shape %750))
  (let (%761 (Constant 1))
  (let (%762 (Gather %760 %761 0))
  (let (%765 (Unsqueeze %759 (vec 0)))
  (let (%766 (Unsqueeze %762 (vec 0)))
  (let (%769 (Concat %765 %766 %1072 %1073 0))
  (let (%770 (Reshape %750 %769))
  (let (%771 (Transpose %770 (vec 0 2 1 3)))
  (let (%772 (Shape %753))
  (let (%773 (Constant 0))
  (let (%774 (Gather %772 %773 0))
  (let (%775 (Shape %753))
  (let (%776 (Constant 1))
  (let (%777 (Gather %775 %776 0))
  (let (%780 (Unsqueeze %774 (vec 0)))
  (let (%781 (Unsqueeze %777 (vec 0)))
  (let (%784 (Concat %780 %781 %1074 %1075 0))
  (let (%785 (Reshape %753 %784))
  (let (%786 (Shape %756))
  (let (%787 (Constant 0))
  (let (%788 (Gather %786 %787 0))
  (let (%789 (Shape %756))
  (let (%790 (Constant 1))
  (let (%791 (Gather %789 %790 0))
  (let (%794 (Unsqueeze %788 (vec 0)))
  (let (%795 (Unsqueeze %791 (vec 0)))
  (let (%798 (Concat %794 %795 %1076 %1077 0))
  (let (%799 (Reshape %756 %798))
  (let (%800 (Transpose %799 (vec 0 2 1 3)))
  (let (%801 (Transpose %785 (vec 0 2 3 1)))
  (let (%802 (MatMul %771 %801))
  (let (%803 (Constant 8.0))
  (let (%804 (Div %802 %803))
  (let (%805 (Add %804 %129))
  (let (%806 (Softmax %805 3))
  (let (%807 (MatMul %806 %800))
  (let (%808 (Transpose %807 (vec 0 2 1 3)))
  (let (%809 (Shape %808))
  (let (%810 (Constant 0))
  (let (%811 (Gather %809 %810 0))
  (let (%812 (Shape %808))
  (let (%813 (Constant 1))
  (let (%814 (Gather %812 %813 0))
  (let (%816 (Unsqueeze %811 (vec 0)))
  (let (%817 (Unsqueeze %814 (vec 0)))
  (let (%819 (Concat %816 %817 %1078 0))
  (let (%820 (Reshape %808 %819))
  (let (%822 (MatMul %820 %1079))
  (let (%823 (Add %822 bert.encoder.layer.5.attention.output.dense.bias))
  (let (%824 (Add %823 %747))
  (let (%826 (ReduceMean %824 (vec -1) 1))
  (let (%827 (Sub %824 %826))
  (let (%828 (Cast_FLOAT %827))
  (let (%830 (Pow %828 %1080))
  (let (%831 (ReduceMean %830 (vec -1) 1))
  (let (%832 (Constant 9.999999960041972e-13))
  (let (%833 (Add %831 %832))
  (let (%834 (Sqrt %833))
  (let (%835 (Div %827 %834))
  (let (%836 (Mul %835 bert.encoder.layer.5.attention.output.LayerNorm.weight))
  (let (%837 (Add %836 bert.encoder.layer.5.attention.output.LayerNorm.bias))
  (let (%839 (MatMul %837 %1081))
  (let (%840 (Add %839 bert.encoder.layer.5.intermediate.dense.bias))
  (let (%841 (Constant 1.4142135381698608))
  (let (%842 (Div %840 %841))
  (let (%843 (Erf %842))
  (let (%844 (Constant 1.0))
  (let (%845 (Add %843 %844))
  (let (%846 (Mul %840 %845))
  (let (%847 (Constant 0.5))
  (let (%848 (Mul %846 %847))
  (let (%850 (MatMul %848 %1082))
  (let (%851 (Add %850 bert.encoder.layer.5.output.dense.bias))
  (let (%852 (Add %851 %837))
  (let (%854 (ReduceMean %852 (vec -1) 1))
  (let (%855 (Sub %852 %854))
  (let (%856 (Cast_FLOAT %855))
  (let (%858 (Pow %856 %1083))
  (let (%859 (ReduceMean %858 (vec -1) 1))
  (let (%860 (Constant 9.999999960041972e-13))
  (let (%861 (Add %859 %860))
  (let (%862 (Sqrt %861))
  (let (%863 (Div %855 %862))
  (let (%864 (Mul %863 bert.encoder.layer.5.output.LayerNorm.weight))
  (let (%865 (Add %864 bert.encoder.layer.5.output.LayerNorm.bias))
  (let (%867 (MatMul %865 %1084))
  (let (%868 (Add %867 bert.encoder.layer.6.attention.self.query.bias))
  (let (%870 (MatMul %865 %1085))
  (let (%871 (Add %870 bert.encoder.layer.6.attention.self.key.bias))
  (let (%873 (MatMul %865 %1086))
  (let (%874 (Add %873 bert.encoder.layer.6.attention.self.value.bias))
  (let (%875 (Shape %868))
  (let (%876 (Constant 0))
  (let (%877 (Gather %875 %876 0))
  (let (%878 (Shape %868))
  (let (%879 (Constant 1))
  (let (%880 (Gather %878 %879 0))
  (let (%883 (Unsqueeze %877 (vec 0)))
  (let (%884 (Unsqueeze %880 (vec 0)))
  (let (%887 (Concat %883 %884 %1087 %1088 0))
  (let (%888 (Reshape %868 %887))
  (let (%889 (Transpose %888 (vec 0 2 1 3)))
  (let (%890 (Shape %871))
  (let (%891 (Constant 0))
  (let (%892 (Gather %890 %891 0))
  (let (%893 (Shape %871))
  (let (%894 (Constant 1))
  (let (%895 (Gather %893 %894 0))
  (let (%898 (Unsqueeze %892 (vec 0)))
  (let (%899 (Unsqueeze %895 (vec 0)))
  (let (%902 (Concat %898 %899 %1089 %1090 0))
  (let (%903 (Reshape %871 %902))
  (let (%904 (Shape %874))
  (let (%905 (Constant 0))
  (let (%906 (Gather %904 %905 0))
  (let (%907 (Shape %874))
  (let (%908 (Constant 1))
  (let (%909 (Gather %907 %908 0))
  (let (%912 (Unsqueeze %906 (vec 0)))
  (let (%913 (Unsqueeze %909 (vec 0)))
  (let (%916 (Concat %912 %913 %1091 %1092 0))
  (let (%917 (Reshape %874 %916))
  (let (%918 (Transpose %917 (vec 0 2 1 3)))
  (let (%919 (Transpose %903 (vec 0 2 3 1)))
  (let (%920 (MatMul %889 %919))
  (let (%921 (Constant 8.0))
  (let (%922 (Div %920 %921))
  (let (%923 (Add %922 %129))
  (let (%924 (Softmax %923 3))
  (let (%925 (MatMul %924 %918))
  (let (%926 (Transpose %925 (vec 0 2 1 3)))
  (let (%927 (Shape %926))
  (let (%928 (Constant 0))
  (let (%929 (Gather %927 %928 0))
  (let (%930 (Shape %926))
  (let (%931 (Constant 1))
  (let (%932 (Gather %930 %931 0))
  (let (%934 (Unsqueeze %929 (vec 0)))
  (let (%935 (Unsqueeze %932 (vec 0)))
  (let (%937 (Concat %934 %935 %1093 0))
  (let (%938 (Reshape %926 %937))
  (let (%940 (MatMul %938 %1094))
  (let (%941 (Add %940 bert.encoder.layer.6.attention.output.dense.bias))
  (let (%942 (Add %941 %865))
  (let (%944 (ReduceMean %942 (vec -1) 1))
  (let (%945 (Sub %942 %944))
  (let (%946 (Cast_FLOAT %945))
  (let (%948 (Pow %946 %1095))
  (let (%949 (ReduceMean %948 (vec -1) 1))
  (let (%950 (Constant 9.999999960041972e-13))
  (let (%951 (Add %949 %950))
  (let (%952 (Sqrt %951))
  (let (%953 (Div %945 %952))
  (let (%954 (Mul %953 bert.encoder.layer.6.attention.output.LayerNorm.weight))
  (let (%955 (Add %954 bert.encoder.layer.6.attention.output.LayerNorm.bias))
  (let (%957 (MatMul %955 %1096))
  (let (%958 (Add %957 bert.encoder.layer.6.intermediate.dense.bias))
  (let (%959 (Constant 1.4142135381698608))
  (let (%960 (Div %958 %959))
  (let (%961 (Erf %960))
  (let (%962 (Constant 1.0))
  (let (%963 (Add %961 %962))
  (let (%964 (Mul %958 %963))
  (let (%965 (Constant 0.5))
  (let (%966 (Mul %964 %965))
  (let (%968 (MatMul %966 %1097))
  (let (%969 (Add %968 bert.encoder.layer.6.output.dense.bias))
  (let (%970 (Add %969 %955))
  (let (%972 (ReduceMean %970 (vec -1) 1))
  (let (%973 (Sub %970 %972))
  (let (%974 (Cast_FLOAT %973))
  (let (%976 (Pow %974 %1098))
  (let (%977 (ReduceMean %976 (vec -1) 1))
  (let (%978 (Constant 9.999999960041972e-13))
  (let (%979 (Add %977 %978))
  (let (%980 (Sqrt %979))
  (let (%981 (Div %973 %980))
  (let (%982 (Mul %981 bert.encoder.layer.6.output.LayerNorm.weight))
  (let (%983 (Add %982 bert.encoder.layer.6.output.LayerNorm.bias))
  (let (%985 (MatMul %983 %1099))
  (let (%986 (Add %985 qa_outputs.bias))
  (let ((%987 %988) (Split %986 (vec 1 1) -1))
  (let (output_0 (Squeeze %987 (vec -1)))
  (let (output_1 (Squeeze %988 (vec -1)))
  output

(def main None ((input_ids : (Vec Integer)) (attention_mask : (Vec Integer)) (token_type_ids : (Vec Integer)))
  (torch-jit-export input_ids attention_mask token_type_ids))

