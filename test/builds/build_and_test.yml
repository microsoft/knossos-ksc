trigger: none

jobs:

- job: 'Ubuntu'
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-16.04'

  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'

  - task: DotNetCoreInstaller@0
    inputs:
      version: 2.2.300

  - script: dotnet run --project src/f2k/f2k.fsproj SKIPPED out.ks test/f2k/test0.fs
    env:
      # v Otherwise it wastes a bunch of time caching
      # See http://www.donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

  - script: sh ./test/builds/install_linux.sh || (sleep 30 && sh ./test/builds/install_linux.sh) || (sleep 30 && sh ./test/builds/install_linux.sh)
    displayName: 'Install dependencies'

  - script: /opt/cabal/2.4/bin/cabal v1-install --with-ghc /opt/ghc/8.6.3/bin/ghc-8.6.3 --dependencies-only && /opt/cabal/2.4/bin/cabal v1-configure --with-ghc /opt/ghc/8.6.3/bin/ghc-8.6.3 && /opt/cabal/2.4/bin/cabal v1-build --with-ghc /opt/ghc/8.6.3/bin/ghc-8.6.3
    displayName: 'Can build with cabal'

  - script: sh ./test/builds/build_linux.sh /opt/ghc/8.6.3/bin/ghc-8.6.3
    displayName: 'GHC compile src/ksc/Main.hs'

  - script: src/ksc/Main out.ks
    displayName: 'ksc test'

  - script: git clone https://github.com/pybind/pybind11.git && cd pybind11 && git checkout c9d32a81f40ad540015814edf13b29980c63e39c
    displayName: Cloning pybind11

  - script: sh ./test/builds/build_and_test_mnistcnn.sh . pybind11
    displayName: Testing MNIST CNN

  - script: ./profile test/ksc/gmm-obj prof-obj.out prof-obj-functions.txt prof-obj-lines.txt && ./profile test/ksc/gmm-rev prof-rev.out prof-rev-functions.txt prof-rev-lines.txt
    displayName: gperftools

  - script: sh test/builds/publish_artifact.sh

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: Artifact
      artifactName: Artifact
      targetPath: Artifact

  - script: rm -rf *
    displayName: 'Clean'


- job: 'Windows'
  workspace:
    clean: all
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: 2.2.300

  - script: dotnet run --project .\src\f2k\f2k.fsproj SKIPPED out.ks .\test\f2k\test0.fs
    env:
      # v Otherwise it wastes a bunch of time caching
      # See http://www.donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

  - script: call test\builds\install_windows.bat || sleep 30 && call test\builds\install_windows.bat || sleep 30 && call test\builds\install_windows.bat
    displayName: 'Install dependencies'

  - script: refreshenv && ghc -main-is testWindows -isrc/ksc -Werror -Wunused-imports -Wunused-top-binds -Wmissing-signatures src/ksc/Main.hs
    displayName: 'GHC compile src/ksc/Main.hs'

  - script: src\ksc\Main.exe out.ks
    displayName: 'ksc test'

  - script: rm -rf *
    displayName: 'Clean'
